"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileSystemBase = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const core_1 = require("../../core");
/**
 * A new or imported FSx file system.
 */
class FileSystemBase extends core_1.Resource {
}
_a = JSII_RTTI_SYMBOL_1;
FileSystemBase[_a] = { fqn: "aws-cdk-lib.aws_fsx.FileSystemBase", version: "2.75.1" };
exports.FileSystemBase = FileSystemBase;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1zeXN0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJmaWxlLXN5c3RlbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLHFDQUFxRDtBQTZEckQ7O0dBRUc7QUFDSCxNQUFzQixjQUFlLFNBQVEsZUFBUTs7OztBQUEvQix3Q0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbm5lY3Rpb25zLCBJQ29ubmVjdGFibGUsIElTZWN1cml0eUdyb3VwLCBJVnBjIH0gZnJvbSAnLi4vLi4vYXdzLWVjMic7XG5pbXBvcnQgeyBJS2V5IH0gZnJvbSAnLi4vLi4vYXdzLWttcyc7XG5pbXBvcnQgeyBSZW1vdmFsUG9saWN5LCBSZXNvdXJjZSB9IGZyb20gJy4uLy4uL2NvcmUnO1xuXG4vKipcbiAqIEludGVyZmFjZSB0byBpbXBsZW1lbnQgRlN4IEZpbGUgU3lzdGVtcy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJRmlsZVN5c3RlbSBleHRlbmRzIElDb25uZWN0YWJsZSB7XG4gIC8qKlxuICAgKiBUaGUgSUQgb2YgdGhlIGZpbGUgc3lzdGVtLCBhc3NpZ25lZCBieSBBbWF6b24gRlN4LlxuICAgKiBAYXR0cmlidXRlXG4gICAqL1xuICByZWFkb25seSBmaWxlU3lzdGVtSWQ6IHN0cmluZztcbn1cblxuLyoqXG4gKiBQcm9wZXJ0aWVzIGZvciB0aGUgRlN4IGZpbGUgc3lzdGVtXG4gKlxuICogQHNlZSBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vQVdTQ2xvdWRGb3JtYXRpb24vbGF0ZXN0L1VzZXJHdWlkZS9hd3MtcmVzb3VyY2UtZnN4LWZpbGVzeXN0ZW0uaHRtbFxuICovXG5leHBvcnQgaW50ZXJmYWNlIEZpbGVTeXN0ZW1Qcm9wcyB7XG4gIC8qKlxuICAgKiBUaGUgVlBDIHRvIGxhdW5jaCB0aGUgZmlsZSBzeXN0ZW0gaW4uXG4gICAqL1xuICByZWFkb25seSB2cGM6IElWcGM7XG5cbiAgLyoqXG4gICAqIFRoZSBJRCBvZiB0aGUgYmFja3VwLiBTcGVjaWZpZXMgdGhlIGJhY2t1cCB0byB1c2UgaWYgeW91J3JlIGNyZWF0aW5nIGEgZmlsZSBzeXN0ZW0gZnJvbSBhbiBleGlzdGluZyBiYWNrdXAuXG4gICAqXG4gICAqIEBkZWZhdWx0IC0gbm8gYmFja3VwIHdpbGwgYmUgdXNlZC5cbiAgICovXG4gIHJlYWRvbmx5IGJhY2t1cElkPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgS01TIGtleSB1c2VkIGZvciBlbmNyeXB0aW9uIHRvIHByb3RlY3QgeW91ciBkYXRhIGF0IHJlc3QuXG4gICAqXG4gICAqIEBkZWZhdWx0IC0gdGhlIGF3cy9mc3ggZGVmYXVsdCBLTVMga2V5IGZvciB0aGUgQVdTIGFjY291bnQgYmVpbmcgZGVwbG95ZWQgaW50by5cbiAgICovXG4gIHJlYWRvbmx5IGttc0tleT86IElLZXk7XG5cbiAgLyoqXG4gICAqIFNlY3VyaXR5IEdyb3VwIHRvIGFzc2lnbiB0byB0aGlzIGZpbGUgc3lzdGVtLlxuICAgKlxuICAgKiBAZGVmYXVsdCAtIGNyZWF0ZXMgbmV3IHNlY3VyaXR5IGdyb3VwIHdoaWNoIGFsbG93cyBhbGwgb3V0Ym91bmQgdHJhZmZpYy5cbiAgICovXG4gIHJlYWRvbmx5IHNlY3VyaXR5R3JvdXA/OiBJU2VjdXJpdHlHcm91cDtcblxuICAvKipcbiAgICogVGhlIHN0b3JhZ2UgY2FwYWNpdHkgb2YgdGhlIGZpbGUgc3lzdGVtIGJlaW5nIGNyZWF0ZWQuXG4gICAqIEZvciBXaW5kb3dzIGZpbGUgc3lzdGVtcywgdmFsaWQgdmFsdWVzIGFyZSAzMiBHaUIgdG8gNjUsNTM2IEdpQi5cbiAgICogRm9yIFNDUkFUQ0hfMSBkZXBsb3ltZW50IHR5cGVzLCB2YWxpZCB2YWx1ZXMgYXJlIDEsMjAwLCAyLDQwMCwgMyw2MDAsIHRoZW4gY29udGludWluZyBpbiBpbmNyZW1lbnRzIG9mIDMsNjAwIEdpQi5cbiAgICogRm9yIFNDUkFUQ0hfMiBhbmQgUEVSU0lTVEVOVF8xIHR5cGVzLCB2YWxpZCB2YWx1ZXMgYXJlIDEsMjAwLCAyLDQwMCwgdGhlbiBjb250aW51aW5nIGluIGluY3JlbWVudHMgb2YgMiw0MDAgR2lCLlxuICAgKi9cbiAgcmVhZG9ubHkgc3RvcmFnZUNhcGFjaXR5R2lCOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFBvbGljeSB0byBhcHBseSB3aGVuIHRoZSBmaWxlIHN5c3RlbSBpcyByZW1vdmVkIGZyb20gdGhlIHN0YWNrXG4gICAqXG4gICAqIEBkZWZhdWx0IFJlbW92YWxQb2xpY3kuUkVUQUlOXG4gICAqL1xuICByZWFkb25seSByZW1vdmFsUG9saWN5PzogUmVtb3ZhbFBvbGljeTtcbn1cblxuLyoqXG4gKiBBIG5ldyBvciBpbXBvcnRlZCBGU3ggZmlsZSBzeXN0ZW0uXG4gKi9cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBGaWxlU3lzdGVtQmFzZSBleHRlbmRzIFJlc291cmNlIGltcGxlbWVudHMgSUZpbGVTeXN0ZW0ge1xuICAvKipcbiAgICogVGhlIHNlY3VyaXR5IGdyb3Vwcy9ydWxlcyB1c2VkIHRvIGFsbG93IG5ldHdvcmsgY29ubmVjdGlvbnMgdG8gdGhlIGZpbGUgc3lzdGVtLlxuICAgKiBAYXR0cmlidXRlXG4gICAqL1xuICBwdWJsaWMgYWJzdHJhY3QgcmVhZG9ubHkgY29ubmVjdGlvbnM6IENvbm5lY3Rpb25zO1xuXG4gIC8qKlxuICAgKiBUaGUgRE5TIG5hbWUgYXNzaWduZWQgdG8gdGhpcyBmaWxlIHN5c3RlbS5cbiAgICogQGF0dHJpYnV0ZVxuICAgKi9cbiAgcHVibGljIGFic3RyYWN0IHJlYWRvbmx5IGRuc05hbWU6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIElEIG9mIHRoZSBmaWxlIHN5c3RlbSwgYXNzaWduZWQgYnkgQW1hem9uIEZTeC5cbiAgICogQGF0dHJpYnV0ZVxuICAgKi9cbiAgcHVibGljIGFic3RyYWN0IHJlYWRvbmx5IGZpbGVTeXN0ZW1JZDogc3RyaW5nO1xufVxuXG4vKipcbiAqIFByb3BlcnRpZXMgdGhhdCBkZXNjcmliZSBhbiBleGlzdGluZyBGU3ggZmlsZSBzeXN0ZW0uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRmlsZVN5c3RlbUF0dHJpYnV0ZXMge1xuICAvKipcbiAgICogVGhlIEROUyBuYW1lIGFzc2lnbmVkIHRvIHRoaXMgZmlsZSBzeXN0ZW0uXG4gICAqL1xuICByZWFkb25seSBkbnNOYW1lOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBJRCBvZiB0aGUgZmlsZSBzeXN0ZW0sIGFzc2lnbmVkIGJ5IEFtYXpvbiBGU3guXG4gICAqL1xuICByZWFkb25seSBmaWxlU3lzdGVtSWQ6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHNlY3VyaXR5IGdyb3VwIG9mIHRoZSBmaWxlIHN5c3RlbS5cbiAgICovXG4gIHJlYWRvbmx5IHNlY3VyaXR5R3JvdXA6IElTZWN1cml0eUdyb3VwO1xufSJdfQ==