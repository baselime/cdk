export declare class FSxMetrics {
    static dataReadBytesSum(dimensions: {
        FileSystemId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FileSystemId: string;
        };
        statistic: string;
    };
    static dataWriteBytesSum(dimensions: {
        FileSystemId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FileSystemId: string;
        };
        statistic: string;
    };
    static freeStorageCapacityAverage(dimensions: {
        FileSystemId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FileSystemId: string;
        };
        statistic: string;
    };
    static freeDataStorageCapacitySum(dimensions: {
        FileSystemId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FileSystemId: string;
        };
        statistic: string;
    };
    static dataReadOperationsSum(dimensions: {
        FileSystemId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FileSystemId: string;
        };
        statistic: string;
    };
    static dataWriteOperationsSum(dimensions: {
        FileSystemId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FileSystemId: string;
        };
        statistic: string;
    };
    static metadataOperationsSum(dimensions: {
        FileSystemId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FileSystemId: string;
        };
        statistic: string;
    };
}
