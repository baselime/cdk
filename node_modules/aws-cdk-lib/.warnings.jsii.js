function aws_cdk_lib_alexa_ask_CfnSkillProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticationConfiguration))
            aws_cdk_lib_IResolvable(p.authenticationConfiguration);
        if (!visitedObjects.has(p.skillPackage))
            aws_cdk_lib_IResolvable(p.skillPackage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_alexa_ask_CfnSkill(p) {
}
function aws_cdk_lib_alexa_ask_CfnSkill_AuthenticationConfigurationProperty(p) {
}
function aws_cdk_lib_alexa_ask_CfnSkill_OverridesProperty(p) {
}
function aws_cdk_lib_alexa_ask_CfnSkill_SkillPackageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.overrides))
            aws_cdk_lib_IResolvable(p.overrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_assertions_Capture(p) {
}
function aws_cdk_lib_assertions_Template(p) {
}
function aws_cdk_lib_assertions_TemplateParsingOptions(p) {
}
function aws_cdk_lib_assertions_Match(p) {
}
function aws_cdk_lib_assertions_Matcher(p) {
}
function aws_cdk_lib_assertions_MatchFailure(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matcher))
            aws_cdk_lib_assertions_Matcher(p.matcher);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_assertions_MatchCapture(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capture))
            aws_cdk_lib_assertions_Capture(p.capture);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_assertions_MatchResult(p) {
}
function aws_cdk_lib_assertions_Annotations(p) {
}
function aws_cdk_lib_aws_accessanalyzer_CfnAnalyzerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.archiveRules))
            aws_cdk_lib_IResolvable(p.archiveRules);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_accessanalyzer_CfnAnalyzer(p) {
}
function aws_cdk_lib_aws_accessanalyzer_CfnAnalyzer_ArchiveRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filter))
            aws_cdk_lib_IResolvable(p.filter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_accessanalyzer_CfnAnalyzer_FilterProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.validity))
            aws_cdk_lib_IResolvable(p.validity);
        if (!visitedObjects.has(p.apiPassthrough))
            aws_cdk_lib_IResolvable(p.apiPassthrough);
        if (!visitedObjects.has(p.validityNotBefore))
            aws_cdk_lib_IResolvable(p.validityNotBefore);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificate(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_ApiPassthroughProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.extensions))
            aws_cdk_lib_IResolvable(p.extensions);
        if (!visitedObjects.has(p.subject))
            aws_cdk_lib_IResolvable(p.subject);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_CustomAttributeProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_CustomExtensionProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_EdiPartyNameProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_ExtendedKeyUsageProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_ExtensionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.certificatePolicies))
            aws_cdk_lib_IResolvable(p.certificatePolicies);
        if (!visitedObjects.has(p.customExtensions))
            aws_cdk_lib_IResolvable(p.customExtensions);
        if (!visitedObjects.has(p.extendedKeyUsage))
            aws_cdk_lib_IResolvable(p.extendedKeyUsage);
        if (!visitedObjects.has(p.keyUsage))
            aws_cdk_lib_IResolvable(p.keyUsage);
        if (!visitedObjects.has(p.subjectAlternativeNames))
            aws_cdk_lib_IResolvable(p.subjectAlternativeNames);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_GeneralNameProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.directoryName))
            aws_cdk_lib_IResolvable(p.directoryName);
        if (!visitedObjects.has(p.ediPartyName))
            aws_cdk_lib_IResolvable(p.ediPartyName);
        if (!visitedObjects.has(p.otherName))
            aws_cdk_lib_IResolvable(p.otherName);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_KeyUsageProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_OtherNameProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_PolicyInformationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.policyQualifiers))
            aws_cdk_lib_IResolvable(p.policyQualifiers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_PolicyQualifierInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.qualifier))
            aws_cdk_lib_IResolvable(p.qualifier);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_QualifierProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_SubjectProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customAttributes))
            aws_cdk_lib_IResolvable(p.customAttributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificate_ValidityProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthorityProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.subject))
            aws_cdk_lib_IResolvable(p.subject);
        if (!visitedObjects.has(p.csrExtensions))
            aws_cdk_lib_IResolvable(p.csrExtensions);
        if (!visitedObjects.has(p.revocationConfiguration))
            aws_cdk_lib_IResolvable(p.revocationConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_AccessDescriptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessLocation))
            aws_cdk_lib_IResolvable(p.accessLocation);
        if (!visitedObjects.has(p.accessMethod))
            aws_cdk_lib_IResolvable(p.accessMethod);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_AccessMethodProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_CrlConfigurationProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_CsrExtensionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.keyUsage))
            aws_cdk_lib_IResolvable(p.keyUsage);
        if (!visitedObjects.has(p.subjectInformationAccess))
            aws_cdk_lib_IResolvable(p.subjectInformationAccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_CustomAttributeProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_EdiPartyNameProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_GeneralNameProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.directoryName))
            aws_cdk_lib_IResolvable(p.directoryName);
        if (!visitedObjects.has(p.ediPartyName))
            aws_cdk_lib_IResolvable(p.ediPartyName);
        if (!visitedObjects.has(p.otherName))
            aws_cdk_lib_IResolvable(p.otherName);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_KeyUsageProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_OcspConfigurationProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_OtherNameProperty(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_RevocationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.crlConfiguration))
            aws_cdk_lib_IResolvable(p.crlConfiguration);
        if (!visitedObjects.has(p.ocspConfiguration))
            aws_cdk_lib_IResolvable(p.ocspConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_SubjectProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customAttributes))
            aws_cdk_lib_IResolvable(p.customAttributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthorityActivationProps(p) {
}
function aws_cdk_lib_aws_acmpca_CfnCertificateAuthorityActivation(p) {
}
function aws_cdk_lib_aws_acmpca_CfnPermissionProps(p) {
}
function aws_cdk_lib_aws_acmpca_CfnPermission(p) {
}
function aws_cdk_lib_aws_acmpca_ICertificateAuthority(p) {
}
function aws_cdk_lib_aws_acmpca_CertificateAuthority(p) {
}
function aws_cdk_lib_aws_amazonmq_CfnBrokerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.users))
            aws_cdk_lib_IResolvable(p.users);
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
        if (!visitedObjects.has(p.encryptionOptions))
            aws_cdk_lib_IResolvable(p.encryptionOptions);
        if (!visitedObjects.has(p.ldapServerMetadata))
            aws_cdk_lib_IResolvable(p.ldapServerMetadata);
        if (!visitedObjects.has(p.logs))
            aws_cdk_lib_IResolvable(p.logs);
        if (!visitedObjects.has(p.maintenanceWindowStartTime))
            aws_cdk_lib_IResolvable(p.maintenanceWindowStartTime);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_amazonmq_CfnBroker_TagsEntryProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amazonmq_CfnBroker(p) {
}
function aws_cdk_lib_aws_amazonmq_CfnBroker_ConfigurationIdProperty(p) {
}
function aws_cdk_lib_aws_amazonmq_CfnBroker_EncryptionOptionsProperty(p) {
}
function aws_cdk_lib_aws_amazonmq_CfnBroker_LdapServerMetadataProperty(p) {
}
function aws_cdk_lib_aws_amazonmq_CfnBroker_LogListProperty(p) {
}
function aws_cdk_lib_aws_amazonmq_CfnBroker_MaintenanceWindowProperty(p) {
}
function aws_cdk_lib_aws_amazonmq_CfnBroker_TagsEntryProperty(p) {
}
function aws_cdk_lib_aws_amazonmq_CfnBroker_UserProperty(p) {
}
function aws_cdk_lib_aws_amazonmq_CfnConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_amazonmq_CfnConfiguration_TagsEntryProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amazonmq_CfnConfiguration(p) {
}
function aws_cdk_lib_aws_amazonmq_CfnConfiguration_TagsEntryProperty(p) {
}
function aws_cdk_lib_aws_amazonmq_CfnConfigurationAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amazonmq_CfnConfigurationAssociation(p) {
}
function aws_cdk_lib_aws_amazonmq_CfnConfigurationAssociation_ConfigurationIdProperty(p) {
}
function aws_cdk_lib_aws_amplify_CfnAppProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoBranchCreationConfig))
            aws_cdk_lib_IResolvable(p.autoBranchCreationConfig);
        if (!visitedObjects.has(p.basicAuthConfig))
            aws_cdk_lib_IResolvable(p.basicAuthConfig);
        if (!visitedObjects.has(p.customRules))
            aws_cdk_lib_IResolvable(p.customRules);
        if (!visitedObjects.has(p.environmentVariables))
            aws_cdk_lib_IResolvable(p.environmentVariables);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplify_CfnApp(p) {
}
function aws_cdk_lib_aws_amplify_CfnApp_AutoBranchCreationConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.basicAuthConfig))
            aws_cdk_lib_IResolvable(p.basicAuthConfig);
        if (!visitedObjects.has(p.environmentVariables))
            aws_cdk_lib_IResolvable(p.environmentVariables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplify_CfnApp_BasicAuthConfigProperty(p) {
}
function aws_cdk_lib_aws_amplify_CfnApp_CustomRuleProperty(p) {
}
function aws_cdk_lib_aws_amplify_CfnApp_EnvironmentVariableProperty(p) {
}
function aws_cdk_lib_aws_amplify_CfnBranchProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.basicAuthConfig))
            aws_cdk_lib_IResolvable(p.basicAuthConfig);
        if (!visitedObjects.has(p.environmentVariables))
            aws_cdk_lib_IResolvable(p.environmentVariables);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplify_CfnBranch(p) {
}
function aws_cdk_lib_aws_amplify_CfnBranch_BasicAuthConfigProperty(p) {
}
function aws_cdk_lib_aws_amplify_CfnBranch_EnvironmentVariableProperty(p) {
}
function aws_cdk_lib_aws_amplify_CfnDomainProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.subDomainSettings))
            aws_cdk_lib_IResolvable(p.subDomainSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplify_CfnDomain(p) {
}
function aws_cdk_lib_aws_amplify_CfnDomain_SubDomainSettingProperty(p) {
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bindingProperties))
            aws_cdk_lib_IResolvable(p.bindingProperties);
        if (!visitedObjects.has(p.properties))
            aws_cdk_lib_IResolvable(p.properties);
        if (!visitedObjects.has(p.variants))
            aws_cdk_lib_IResolvable(p.variants);
        if (!visitedObjects.has(p.children))
            aws_cdk_lib_IResolvable(p.children);
        if (!visitedObjects.has(p.collectionProperties))
            aws_cdk_lib_IResolvable(p.collectionProperties);
        if (!visitedObjects.has(p.events))
            aws_cdk_lib_IResolvable(p.events);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent(p) {
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ActionParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.anchor))
            aws_cdk_lib_IResolvable(p.anchor);
        if (!visitedObjects.has(p.fields))
            aws_cdk_lib_IResolvable(p.fields);
        if (!visitedObjects.has(p.global))
            aws_cdk_lib_IResolvable(p.global);
        if (!visitedObjects.has(p.id))
            aws_cdk_lib_IResolvable(p.id);
        if (!visitedObjects.has(p.state))
            aws_cdk_lib_IResolvable(p.state);
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_IResolvable(p.target);
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_IResolvable(p.type);
        if (!visitedObjects.has(p.url))
            aws_cdk_lib_IResolvable(p.url);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentBindingPropertiesValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bindingProperties))
            aws_cdk_lib_IResolvable(p.bindingProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentBindingPropertiesValuePropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.predicates))
            aws_cdk_lib_IResolvable(p.predicates);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentChildProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.properties))
            aws_cdk_lib_IResolvable(p.properties);
        if (!visitedObjects.has(p.children))
            aws_cdk_lib_IResolvable(p.children);
        if (!visitedObjects.has(p.events))
            aws_cdk_lib_IResolvable(p.events);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentConditionPropertyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.else))
            aws_cdk_lib_IResolvable(p.else);
        if (!visitedObjects.has(p.then))
            aws_cdk_lib_IResolvable(p.then);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentDataConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.predicate))
            aws_cdk_lib_IResolvable(p.predicate);
        if (!visitedObjects.has(p.sort))
            aws_cdk_lib_IResolvable(p.sort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentEventProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentPropertyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bindingProperties))
            aws_cdk_lib_IResolvable(p.bindingProperties);
        if (!visitedObjects.has(p.bindings))
            aws_cdk_lib_IResolvable(p.bindings);
        if (!visitedObjects.has(p.collectionBindingProperties))
            aws_cdk_lib_IResolvable(p.collectionBindingProperties);
        if (!visitedObjects.has(p.concat))
            aws_cdk_lib_IResolvable(p.concat);
        if (!visitedObjects.has(p.condition))
            aws_cdk_lib_IResolvable(p.condition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentPropertyBindingPropertiesProperty(p) {
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentVariantProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.variantValues))
            aws_cdk_lib_IResolvable(p.variantValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_FormBindingElementProperty(p) {
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_MutationActionSetStateParameterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.set))
            aws_cdk_lib_IResolvable(p.set);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_PredicateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.and))
            aws_cdk_lib_IResolvable(p.and);
        if (!visitedObjects.has(p.or))
            aws_cdk_lib_IResolvable(p.or);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_SortPropertyProperty(p) {
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnFormProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataType))
            aws_cdk_lib_IResolvable(p.dataType);
        if (!visitedObjects.has(p.fields))
            aws_cdk_lib_IResolvable(p.fields);
        if (!visitedObjects.has(p.sectionalElements))
            aws_cdk_lib_IResolvable(p.sectionalElements);
        if (!visitedObjects.has(p.style))
            aws_cdk_lib_IResolvable(p.style);
        if (!visitedObjects.has(p.cta))
            aws_cdk_lib_IResolvable(p.cta);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm(p) {
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FieldConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputType))
            aws_cdk_lib_IResolvable(p.inputType);
        if (!visitedObjects.has(p.position))
            aws_cdk_lib_IResolvable(p.position);
        if (!visitedObjects.has(p.validations))
            aws_cdk_lib_IResolvable(p.validations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FieldInputConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.valueMappings))
            aws_cdk_lib_IResolvable(p.valueMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FieldPositionProperty(p) {
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FieldValidationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FormButtonProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.position))
            aws_cdk_lib_IResolvable(p.position);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FormCTAProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cancel))
            aws_cdk_lib_IResolvable(p.cancel);
        if (!visitedObjects.has(p.clear))
            aws_cdk_lib_IResolvable(p.clear);
        if (!visitedObjects.has(p.submit))
            aws_cdk_lib_IResolvable(p.submit);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FormDataTypeConfigProperty(p) {
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FormInputValuePropertyProperty(p) {
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FormStyleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.horizontalGap))
            aws_cdk_lib_IResolvable(p.horizontalGap);
        if (!visitedObjects.has(p.outerPadding))
            aws_cdk_lib_IResolvable(p.outerPadding);
        if (!visitedObjects.has(p.verticalGap))
            aws_cdk_lib_IResolvable(p.verticalGap);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FormStyleConfigProperty(p) {
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_SectionalElementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.position))
            aws_cdk_lib_IResolvable(p.position);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_ValueMappingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
        if (!visitedObjects.has(p.displayValue))
            aws_cdk_lib_IResolvable(p.displayValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnForm_ValueMappingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnThemeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
        if (!visitedObjects.has(p.overrides))
            aws_cdk_lib_IResolvable(p.overrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnTheme(p) {
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnTheme_ThemeValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.children))
            aws_cdk_lib_IResolvable(p.children);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_amplifyuibuilder_CfnTheme_ThemeValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_IRestApi(p) {
}
function aws_cdk_lib_aws_apigateway_RestApiBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deployOptions))
            aws_cdk_lib_aws_apigateway_StageOptions(p.deployOptions);
        if (!visitedObjects.has(p.domainName))
            aws_cdk_lib_aws_apigateway_DomainNameOptions(p.domainName);
        if (p.endpointTypes != null)
            for (const o of p.endpointTypes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_EndpointType(o);
        if (!visitedObjects.has(p.policy))
            aws_cdk_lib_aws_iam_PolicyDocument(p.policy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_RestApiProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.apiKeySourceType))
            aws_cdk_lib_aws_apigateway_ApiKeySourceType(p.apiKeySourceType);
        if (!visitedObjects.has(p.cloneFrom))
            aws_cdk_lib_aws_apigateway_IRestApi(p.cloneFrom);
        if (!visitedObjects.has(p.endpointConfiguration))
            aws_cdk_lib_aws_apigateway_EndpointConfiguration(p.endpointConfiguration);
        if (!visitedObjects.has(p.minCompressionSize))
            aws_cdk_lib_Size(p.minCompressionSize);
        if ("minimumCompressionSize" in p)
            print("aws-cdk-lib.aws_apigateway.RestApiProps#minimumCompressionSize", "- superseded by `minCompressionSize`");
        if (!visitedObjects.has(p.defaultCorsPreflightOptions))
            aws_cdk_lib_aws_apigateway_CorsOptions(p.defaultCorsPreflightOptions);
        if (!visitedObjects.has(p.defaultIntegration))
            aws_cdk_lib_aws_apigateway_Integration(p.defaultIntegration);
        if (!visitedObjects.has(p.defaultMethodOptions))
            aws_cdk_lib_aws_apigateway_MethodOptions(p.defaultMethodOptions);
        if (!visitedObjects.has(p.deployOptions))
            aws_cdk_lib_aws_apigateway_StageOptions(p.deployOptions);
        if (!visitedObjects.has(p.domainName))
            aws_cdk_lib_aws_apigateway_DomainNameOptions(p.domainName);
        if (p.endpointTypes != null)
            for (const o of p.endpointTypes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_EndpointType(o);
        if (!visitedObjects.has(p.policy))
            aws_cdk_lib_aws_iam_PolicyDocument(p.policy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_SpecRestApiProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.apiDefinition))
            aws_cdk_lib_aws_apigateway_ApiDefinition(p.apiDefinition);
        if (!visitedObjects.has(p.minCompressionSize))
            aws_cdk_lib_Size(p.minCompressionSize);
        if (!visitedObjects.has(p.deployOptions))
            aws_cdk_lib_aws_apigateway_StageOptions(p.deployOptions);
        if (!visitedObjects.has(p.domainName))
            aws_cdk_lib_aws_apigateway_DomainNameOptions(p.domainName);
        if (p.endpointTypes != null)
            for (const o of p.endpointTypes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_EndpointType(o);
        if (!visitedObjects.has(p.policy))
            aws_cdk_lib_aws_iam_PolicyDocument(p.policy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_RestApiBase(p) {
}
function aws_cdk_lib_aws_apigateway_SpecRestApi(p) {
}
function aws_cdk_lib_aws_apigateway_RestApiAttributes(p) {
}
function aws_cdk_lib_aws_apigateway_RestApi(p) {
}
function aws_cdk_lib_aws_apigateway_EndpointConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.types != null)
            for (const o of p.types)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_EndpointType(o);
        if (p.vpcEndpoints != null)
            for (const o of p.vpcEndpoints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_IVpcEndpoint(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_ApiKeySourceType(p) {
}
function aws_cdk_lib_aws_apigateway_EndpointType(p) {
}
function aws_cdk_lib_aws_apigateway_IResource(p) {
}
function aws_cdk_lib_aws_apigateway_ResourceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultCorsPreflightOptions))
            aws_cdk_lib_aws_apigateway_CorsOptions(p.defaultCorsPreflightOptions);
        if (!visitedObjects.has(p.defaultIntegration))
            aws_cdk_lib_aws_apigateway_Integration(p.defaultIntegration);
        if (!visitedObjects.has(p.defaultMethodOptions))
            aws_cdk_lib_aws_apigateway_MethodOptions(p.defaultMethodOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_ResourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parent))
            aws_cdk_lib_aws_apigateway_IResource(p.parent);
        if (!visitedObjects.has(p.defaultCorsPreflightOptions))
            aws_cdk_lib_aws_apigateway_CorsOptions(p.defaultCorsPreflightOptions);
        if (!visitedObjects.has(p.defaultIntegration))
            aws_cdk_lib_aws_apigateway_Integration(p.defaultIntegration);
        if (!visitedObjects.has(p.defaultMethodOptions))
            aws_cdk_lib_aws_apigateway_MethodOptions(p.defaultMethodOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_ResourceBase(p) {
}
function aws_cdk_lib_aws_apigateway_ResourceAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.restApi))
            aws_cdk_lib_aws_apigateway_IRestApi(p.restApi);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_Resource(p) {
}
function aws_cdk_lib_aws_apigateway_ProxyResourceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultCorsPreflightOptions))
            aws_cdk_lib_aws_apigateway_CorsOptions(p.defaultCorsPreflightOptions);
        if (!visitedObjects.has(p.defaultIntegration))
            aws_cdk_lib_aws_apigateway_Integration(p.defaultIntegration);
        if (!visitedObjects.has(p.defaultMethodOptions))
            aws_cdk_lib_aws_apigateway_MethodOptions(p.defaultMethodOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_ProxyResourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parent))
            aws_cdk_lib_aws_apigateway_IResource(p.parent);
        if (!visitedObjects.has(p.defaultCorsPreflightOptions))
            aws_cdk_lib_aws_apigateway_CorsOptions(p.defaultCorsPreflightOptions);
        if (!visitedObjects.has(p.defaultIntegration))
            aws_cdk_lib_aws_apigateway_Integration(p.defaultIntegration);
        if (!visitedObjects.has(p.defaultMethodOptions))
            aws_cdk_lib_aws_apigateway_MethodOptions(p.defaultMethodOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_ProxyResource(p) {
}
function aws_cdk_lib_aws_apigateway_MethodOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authorizationType))
            aws_cdk_lib_aws_apigateway_AuthorizationType(p.authorizationType);
        if (!visitedObjects.has(p.authorizer))
            aws_cdk_lib_aws_apigateway_IAuthorizer(p.authorizer);
        if (p.methodResponses != null)
            for (const o of p.methodResponses)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_MethodResponse(o);
        if (p.requestModels != null)
            for (const o of Object.values(p.requestModels))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_IModel(o);
        if (!visitedObjects.has(p.requestValidator))
            aws_cdk_lib_aws_apigateway_IRequestValidator(p.requestValidator);
        if (!visitedObjects.has(p.requestValidatorOptions))
            aws_cdk_lib_aws_apigateway_RequestValidatorOptions(p.requestValidatorOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_MethodProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resource))
            aws_cdk_lib_aws_apigateway_IResource(p.resource);
        if (!visitedObjects.has(p.integration))
            aws_cdk_lib_aws_apigateway_Integration(p.integration);
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_aws_apigateway_MethodOptions(p.options);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_Method(p) {
}
function aws_cdk_lib_aws_apigateway_AuthorizationType(p) {
}
function aws_cdk_lib_aws_apigateway_IntegrationOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionType))
            aws_cdk_lib_aws_apigateway_ConnectionType(p.connectionType);
        if (!visitedObjects.has(p.contentHandling))
            aws_cdk_lib_aws_apigateway_ContentHandling(p.contentHandling);
        if (!visitedObjects.has(p.credentialsRole))
            aws_cdk_lib_aws_iam_IRole(p.credentialsRole);
        if (p.integrationResponses != null)
            for (const o of p.integrationResponses)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_IntegrationResponse(o);
        if (!visitedObjects.has(p.passthroughBehavior))
            aws_cdk_lib_aws_apigateway_PassthroughBehavior(p.passthroughBehavior);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.vpcLink))
            aws_cdk_lib_aws_apigateway_IVpcLink(p.vpcLink);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_IntegrationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_apigateway_IntegrationType(p.type);
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_aws_apigateway_IntegrationOptions(p.options);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_IntegrationConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_apigateway_IntegrationType(p.type);
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_aws_apigateway_IntegrationOptions(p.options);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_Integration(p) {
}
function aws_cdk_lib_aws_apigateway_ContentHandling(p) {
}
function aws_cdk_lib_aws_apigateway_IntegrationType(p) {
}
function aws_cdk_lib_aws_apigateway_PassthroughBehavior(p) {
}
function aws_cdk_lib_aws_apigateway_ConnectionType(p) {
}
function aws_cdk_lib_aws_apigateway_IntegrationResponse(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.contentHandling))
            aws_cdk_lib_aws_apigateway_ContentHandling(p.contentHandling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_DeploymentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_apigateway_IRestApi(p.api);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_Deployment(p) {
}
function aws_cdk_lib_aws_apigateway_IStage(p) {
}
function aws_cdk_lib_aws_apigateway_StageOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessLogDestination))
            aws_cdk_lib_aws_apigateway_IAccessLogDestination(p.accessLogDestination);
        if (!visitedObjects.has(p.accessLogFormat))
            aws_cdk_lib_aws_apigateway_AccessLogFormat(p.accessLogFormat);
        if (p.methodOptions != null)
            for (const o of Object.values(p.methodOptions))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_MethodDeploymentOptions(o);
        if (!visitedObjects.has(p.cacheTtl))
            aws_cdk_lib_Duration(p.cacheTtl);
        if (!visitedObjects.has(p.loggingLevel))
            aws_cdk_lib_aws_apigateway_MethodLoggingLevel(p.loggingLevel);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_StageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deployment))
            aws_cdk_lib_aws_apigateway_Deployment(p.deployment);
        if (!visitedObjects.has(p.accessLogDestination))
            aws_cdk_lib_aws_apigateway_IAccessLogDestination(p.accessLogDestination);
        if (!visitedObjects.has(p.accessLogFormat))
            aws_cdk_lib_aws_apigateway_AccessLogFormat(p.accessLogFormat);
        if (p.methodOptions != null)
            for (const o of Object.values(p.methodOptions))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_MethodDeploymentOptions(o);
        if (!visitedObjects.has(p.cacheTtl))
            aws_cdk_lib_Duration(p.cacheTtl);
        if (!visitedObjects.has(p.loggingLevel))
            aws_cdk_lib_aws_apigateway_MethodLoggingLevel(p.loggingLevel);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_MethodLoggingLevel(p) {
}
function aws_cdk_lib_aws_apigateway_MethodDeploymentOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cacheTtl))
            aws_cdk_lib_Duration(p.cacheTtl);
        if (!visitedObjects.has(p.loggingLevel))
            aws_cdk_lib_aws_apigateway_MethodLoggingLevel(p.loggingLevel);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_StageAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.restApi))
            aws_cdk_lib_aws_apigateway_IRestApi(p.restApi);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_StageBase(p) {
}
function aws_cdk_lib_aws_apigateway_Stage(p) {
}
function aws_cdk_lib_aws_apigateway_AwsIntegrationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_aws_apigateway_IntegrationOptions(p.options);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_AwsIntegration(p) {
}
function aws_cdk_lib_aws_apigateway_LambdaIntegrationOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionType))
            aws_cdk_lib_aws_apigateway_ConnectionType(p.connectionType);
        if (!visitedObjects.has(p.contentHandling))
            aws_cdk_lib_aws_apigateway_ContentHandling(p.contentHandling);
        if (!visitedObjects.has(p.credentialsRole))
            aws_cdk_lib_aws_iam_IRole(p.credentialsRole);
        if (p.integrationResponses != null)
            for (const o of p.integrationResponses)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_IntegrationResponse(o);
        if (!visitedObjects.has(p.passthroughBehavior))
            aws_cdk_lib_aws_apigateway_PassthroughBehavior(p.passthroughBehavior);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.vpcLink))
            aws_cdk_lib_aws_apigateway_IVpcLink(p.vpcLink);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_LambdaIntegration(p) {
}
function aws_cdk_lib_aws_apigateway_HttpIntegrationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_aws_apigateway_IntegrationOptions(p.options);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_HttpIntegration(p) {
}
function aws_cdk_lib_aws_apigateway_MockIntegration(p) {
}
function aws_cdk_lib_aws_apigateway_StepFunctionsExecutionIntegrationOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.requestContext))
            aws_cdk_lib_aws_apigateway_RequestContext(p.requestContext);
        if (!visitedObjects.has(p.connectionType))
            aws_cdk_lib_aws_apigateway_ConnectionType(p.connectionType);
        if (!visitedObjects.has(p.contentHandling))
            aws_cdk_lib_aws_apigateway_ContentHandling(p.contentHandling);
        if (!visitedObjects.has(p.credentialsRole))
            aws_cdk_lib_aws_iam_IRole(p.credentialsRole);
        if (p.integrationResponses != null)
            for (const o of p.integrationResponses)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_IntegrationResponse(o);
        if (!visitedObjects.has(p.passthroughBehavior))
            aws_cdk_lib_aws_apigateway_PassthroughBehavior(p.passthroughBehavior);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.vpcLink))
            aws_cdk_lib_aws_apigateway_IVpcLink(p.vpcLink);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_StepFunctionsIntegration(p) {
}
function aws_cdk_lib_aws_apigateway_RequestContext(p) {
}
function aws_cdk_lib_aws_apigateway_LambdaRestApiProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.handler))
            aws_cdk_lib_aws_lambda_IFunction(p.handler);
        if (!visitedObjects.has(p.integrationOptions))
            aws_cdk_lib_aws_apigateway_LambdaIntegrationOptions(p.integrationOptions);
        if (!visitedObjects.has(p.apiKeySourceType))
            aws_cdk_lib_aws_apigateway_ApiKeySourceType(p.apiKeySourceType);
        if (!visitedObjects.has(p.cloneFrom))
            aws_cdk_lib_aws_apigateway_IRestApi(p.cloneFrom);
        if (!visitedObjects.has(p.endpointConfiguration))
            aws_cdk_lib_aws_apigateway_EndpointConfiguration(p.endpointConfiguration);
        if (!visitedObjects.has(p.minCompressionSize))
            aws_cdk_lib_Size(p.minCompressionSize);
        if ("minimumCompressionSize" in p)
            print("aws-cdk-lib.aws_apigateway.RestApiProps#minimumCompressionSize", "- superseded by `minCompressionSize`");
        if (!visitedObjects.has(p.defaultCorsPreflightOptions))
            aws_cdk_lib_aws_apigateway_CorsOptions(p.defaultCorsPreflightOptions);
        if (!visitedObjects.has(p.defaultIntegration))
            aws_cdk_lib_aws_apigateway_Integration(p.defaultIntegration);
        if (!visitedObjects.has(p.defaultMethodOptions))
            aws_cdk_lib_aws_apigateway_MethodOptions(p.defaultMethodOptions);
        if (!visitedObjects.has(p.deployOptions))
            aws_cdk_lib_aws_apigateway_StageOptions(p.deployOptions);
        if (!visitedObjects.has(p.domainName))
            aws_cdk_lib_aws_apigateway_DomainNameOptions(p.domainName);
        if (p.endpointTypes != null)
            for (const o of p.endpointTypes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_EndpointType(o);
        if (!visitedObjects.has(p.policy))
            aws_cdk_lib_aws_iam_PolicyDocument(p.policy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_LambdaRestApi(p) {
}
function aws_cdk_lib_aws_apigateway_IApiKey(p) {
}
function aws_cdk_lib_aws_apigateway_ApiKeyOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultCorsPreflightOptions))
            aws_cdk_lib_aws_apigateway_CorsOptions(p.defaultCorsPreflightOptions);
        if (!visitedObjects.has(p.defaultIntegration))
            aws_cdk_lib_aws_apigateway_Integration(p.defaultIntegration);
        if (!visitedObjects.has(p.defaultMethodOptions))
            aws_cdk_lib_aws_apigateway_MethodOptions(p.defaultMethodOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_ApiKeyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("resources" in p)
            print("aws-cdk-lib.aws_apigateway.ApiKeyProps#resources", "- use `stages` instead");
        if (p.resources != null)
            for (const o of p.resources)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_IRestApi(o);
        if (p.stages != null)
            for (const o of p.stages)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_IStage(o);
        if (!visitedObjects.has(p.defaultCorsPreflightOptions))
            aws_cdk_lib_aws_apigateway_CorsOptions(p.defaultCorsPreflightOptions);
        if (!visitedObjects.has(p.defaultIntegration))
            aws_cdk_lib_aws_apigateway_Integration(p.defaultIntegration);
        if (!visitedObjects.has(p.defaultMethodOptions))
            aws_cdk_lib_aws_apigateway_MethodOptions(p.defaultMethodOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_ApiKey(p) {
}
function aws_cdk_lib_aws_apigateway_RateLimitedApiKeyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.apiStages != null)
            for (const o of p.apiStages)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_UsagePlanPerApiStage(o);
        if (!visitedObjects.has(p.quota))
            aws_cdk_lib_aws_apigateway_QuotaSettings(p.quota);
        if (!visitedObjects.has(p.throttle))
            aws_cdk_lib_aws_apigateway_ThrottleSettings(p.throttle);
        if ("resources" in p)
            print("aws-cdk-lib.aws_apigateway.ApiKeyProps#resources", "- use `stages` instead");
        if (p.resources != null)
            for (const o of p.resources)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_IRestApi(o);
        if (p.stages != null)
            for (const o of p.stages)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_IStage(o);
        if (!visitedObjects.has(p.defaultCorsPreflightOptions))
            aws_cdk_lib_aws_apigateway_CorsOptions(p.defaultCorsPreflightOptions);
        if (!visitedObjects.has(p.defaultIntegration))
            aws_cdk_lib_aws_apigateway_Integration(p.defaultIntegration);
        if (!visitedObjects.has(p.defaultMethodOptions))
            aws_cdk_lib_aws_apigateway_MethodOptions(p.defaultMethodOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_RateLimitedApiKey(p) {
}
function aws_cdk_lib_aws_apigateway_ThrottleSettings(p) {
}
function aws_cdk_lib_aws_apigateway_Period(p) {
}
function aws_cdk_lib_aws_apigateway_QuotaSettings(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.period))
            aws_cdk_lib_aws_apigateway_Period(p.period);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_ThrottlingPerMethod(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.method))
            aws_cdk_lib_aws_apigateway_Method(p.method);
        if (!visitedObjects.has(p.throttle))
            aws_cdk_lib_aws_apigateway_ThrottleSettings(p.throttle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_UsagePlanPerApiStage(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_apigateway_IRestApi(p.api);
        if (!visitedObjects.has(p.stage))
            aws_cdk_lib_aws_apigateway_Stage(p.stage);
        if (p.throttle != null)
            for (const o of p.throttle)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_ThrottlingPerMethod(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_UsagePlanProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.apiStages != null)
            for (const o of p.apiStages)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_UsagePlanPerApiStage(o);
        if (!visitedObjects.has(p.quota))
            aws_cdk_lib_aws_apigateway_QuotaSettings(p.quota);
        if (!visitedObjects.has(p.throttle))
            aws_cdk_lib_aws_apigateway_ThrottleSettings(p.throttle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_AddApiKeyOptions(p) {
}
function aws_cdk_lib_aws_apigateway_IUsagePlan(p) {
}
function aws_cdk_lib_aws_apigateway_UsagePlan(p) {
}
function aws_cdk_lib_aws_apigateway_IVpcLink(p) {
}
function aws_cdk_lib_aws_apigateway_VpcLinkProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.targets != null)
            for (const o of p.targets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancer(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_VpcLink(p) {
}
function aws_cdk_lib_aws_apigateway_MethodResponse(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.responseModels != null)
            for (const o of Object.values(p.responseModels))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_IModel(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_IModel(p) {
}
function aws_cdk_lib_aws_apigateway_ModelOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.schema))
            aws_cdk_lib_aws_apigateway_JsonSchema(p.schema);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_ModelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.restApi))
            aws_cdk_lib_aws_apigateway_IRestApi(p.restApi);
        if (!visitedObjects.has(p.schema))
            aws_cdk_lib_aws_apigateway_JsonSchema(p.schema);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_Model(p) {
}
function aws_cdk_lib_aws_apigateway_IRequestValidator(p) {
}
function aws_cdk_lib_aws_apigateway_RequestValidatorOptions(p) {
}
function aws_cdk_lib_aws_apigateway_RequestValidatorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.restApi))
            aws_cdk_lib_aws_apigateway_IRestApi(p.restApi);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_RequestValidator(p) {
}
function aws_cdk_lib_aws_apigateway_Authorizer(p) {
}
function aws_cdk_lib_aws_apigateway_IAuthorizer(p) {
}
function aws_cdk_lib_aws_apigateway_JsonSchemaVersion(p) {
}
function aws_cdk_lib_aws_apigateway_JsonSchemaType(p) {
}
function aws_cdk_lib_aws_apigateway_JsonSchema(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.additionalItems != null)
            for (const o of p.additionalItems)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_JsonSchema(o);
        if (p.allOf != null)
            for (const o of p.allOf)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_JsonSchema(o);
        if (p.anyOf != null)
            for (const o of p.anyOf)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_JsonSchema(o);
        if (!visitedObjects.has(p.contains))
            aws_cdk_lib_aws_apigateway_JsonSchema(p.contains);
        if (p.definitions != null)
            for (const o of Object.values(p.definitions))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_JsonSchema(o);
        if (!visitedObjects.has(p.items))
            aws_cdk_lib_aws_apigateway_JsonSchema(p.items);
        if (!visitedObjects.has(p.not))
            aws_cdk_lib_aws_apigateway_JsonSchema(p.not);
        if (p.oneOf != null)
            for (const o of p.oneOf)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_JsonSchema(o);
        if (p.patternProperties != null)
            for (const o of Object.values(p.patternProperties))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_JsonSchema(o);
        if (p.properties != null)
            for (const o of Object.values(p.properties))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_JsonSchema(o);
        if (!visitedObjects.has(p.propertyNames))
            aws_cdk_lib_aws_apigateway_JsonSchema(p.propertyNames);
        if (!visitedObjects.has(p.schema))
            aws_cdk_lib_aws_apigateway_JsonSchemaVersion(p.schema);
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_apigateway_JsonSchemaType(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_ApiMappingOptions(p) {
}
function aws_cdk_lib_aws_apigateway_SecurityPolicy(p) {
}
function aws_cdk_lib_aws_apigateway_DomainNameOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_certificatemanager_ICertificate(p.certificate);
        if (!visitedObjects.has(p.endpointType))
            aws_cdk_lib_aws_apigateway_EndpointType(p.endpointType);
        if (!visitedObjects.has(p.mtls))
            aws_cdk_lib_aws_apigateway_MTLSConfig(p.mtls);
        if (!visitedObjects.has(p.securityPolicy))
            aws_cdk_lib_aws_apigateway_SecurityPolicy(p.securityPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_DomainNameProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mapping))
            aws_cdk_lib_aws_apigateway_IRestApi(p.mapping);
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_certificatemanager_ICertificate(p.certificate);
        if (!visitedObjects.has(p.endpointType))
            aws_cdk_lib_aws_apigateway_EndpointType(p.endpointType);
        if (!visitedObjects.has(p.mtls))
            aws_cdk_lib_aws_apigateway_MTLSConfig(p.mtls);
        if (!visitedObjects.has(p.securityPolicy))
            aws_cdk_lib_aws_apigateway_SecurityPolicy(p.securityPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_IDomainName(p) {
}
function aws_cdk_lib_aws_apigateway_DomainName(p) {
}
function aws_cdk_lib_aws_apigateway_DomainNameAttributes(p) {
}
function aws_cdk_lib_aws_apigateway_MTLSConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_BasePathMappingOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stage))
            aws_cdk_lib_aws_apigateway_Stage(p.stage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_BasePathMappingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.domainName))
            aws_cdk_lib_aws_apigateway_IDomainName(p.domainName);
        if (!visitedObjects.has(p.restApi))
            aws_cdk_lib_aws_apigateway_IRestApi(p.restApi);
        if (!visitedObjects.has(p.stage))
            aws_cdk_lib_aws_apigateway_Stage(p.stage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_BasePathMapping(p) {
}
function aws_cdk_lib_aws_apigateway_CorsOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxAge))
            aws_cdk_lib_Duration(p.maxAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_Cors(p) {
}
function aws_cdk_lib_aws_apigateway_LambdaAuthorizerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.handler))
            aws_cdk_lib_aws_lambda_IFunction(p.handler);
        if (!visitedObjects.has(p.assumeRole))
            aws_cdk_lib_aws_iam_IRole(p.assumeRole);
        if (!visitedObjects.has(p.resultsCacheTtl))
            aws_cdk_lib_Duration(p.resultsCacheTtl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_TokenAuthorizerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.handler))
            aws_cdk_lib_aws_lambda_IFunction(p.handler);
        if (!visitedObjects.has(p.assumeRole))
            aws_cdk_lib_aws_iam_IRole(p.assumeRole);
        if (!visitedObjects.has(p.resultsCacheTtl))
            aws_cdk_lib_Duration(p.resultsCacheTtl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_TokenAuthorizer(p) {
}
function aws_cdk_lib_aws_apigateway_RequestAuthorizerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.handler))
            aws_cdk_lib_aws_lambda_IFunction(p.handler);
        if (!visitedObjects.has(p.assumeRole))
            aws_cdk_lib_aws_iam_IRole(p.assumeRole);
        if (!visitedObjects.has(p.resultsCacheTtl))
            aws_cdk_lib_Duration(p.resultsCacheTtl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_RequestAuthorizer(p) {
}
function aws_cdk_lib_aws_apigateway_IdentitySource(p) {
}
function aws_cdk_lib_aws_apigateway_CognitoUserPoolsAuthorizerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.cognitoUserPools != null)
            for (const o of p.cognitoUserPools)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cognito_IUserPool(o);
        if (!visitedObjects.has(p.resultsCacheTtl))
            aws_cdk_lib_Duration(p.resultsCacheTtl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CognitoUserPoolsAuthorizer(p) {
}
function aws_cdk_lib_aws_apigateway_IAccessLogDestination(p) {
}
function aws_cdk_lib_aws_apigateway_AccessLogDestinationConfig(p) {
}
function aws_cdk_lib_aws_apigateway_LogGroupLogDestination(p) {
}
function aws_cdk_lib_aws_apigateway_AccessLogField(p) {
}
function aws_cdk_lib_aws_apigateway_JsonWithStandardFieldProps(p) {
}
function aws_cdk_lib_aws_apigateway_AccessLogFormat(p) {
}
function aws_cdk_lib_aws_apigateway_ApiDefinition(p) {
}
function aws_cdk_lib_aws_apigateway_ApiDefinitionS3Location(p) {
}
function aws_cdk_lib_aws_apigateway_ApiDefinitionConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Location))
            aws_cdk_lib_aws_apigateway_ApiDefinitionS3Location(p.s3Location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_S3ApiDefinition(p) {
}
function aws_cdk_lib_aws_apigateway_InlineApiDefinition(p) {
}
function aws_cdk_lib_aws_apigateway_AssetApiDefinition(p) {
}
function aws_cdk_lib_aws_apigateway_IGatewayResponse(p) {
}
function aws_cdk_lib_aws_apigateway_GatewayResponseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.restApi))
            aws_cdk_lib_aws_apigateway_IRestApi(p.restApi);
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_apigateway_ResponseType(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_GatewayResponseOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_apigateway_ResponseType(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_GatewayResponse(p) {
}
function aws_cdk_lib_aws_apigateway_ResponseType(p) {
}
function aws_cdk_lib_aws_apigateway_StepFunctionsRestApiProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stateMachine))
            aws_cdk_lib_aws_stepfunctions_IStateMachine(p.stateMachine);
        if (!visitedObjects.has(p.requestContext))
            aws_cdk_lib_aws_apigateway_RequestContext(p.requestContext);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.apiKeySourceType))
            aws_cdk_lib_aws_apigateway_ApiKeySourceType(p.apiKeySourceType);
        if (!visitedObjects.has(p.cloneFrom))
            aws_cdk_lib_aws_apigateway_IRestApi(p.cloneFrom);
        if (!visitedObjects.has(p.endpointConfiguration))
            aws_cdk_lib_aws_apigateway_EndpointConfiguration(p.endpointConfiguration);
        if (!visitedObjects.has(p.minCompressionSize))
            aws_cdk_lib_Size(p.minCompressionSize);
        if ("minimumCompressionSize" in p)
            print("aws-cdk-lib.aws_apigateway.RestApiProps#minimumCompressionSize", "- superseded by `minCompressionSize`");
        if (!visitedObjects.has(p.defaultCorsPreflightOptions))
            aws_cdk_lib_aws_apigateway_CorsOptions(p.defaultCorsPreflightOptions);
        if (!visitedObjects.has(p.defaultIntegration))
            aws_cdk_lib_aws_apigateway_Integration(p.defaultIntegration);
        if (!visitedObjects.has(p.defaultMethodOptions))
            aws_cdk_lib_aws_apigateway_MethodOptions(p.defaultMethodOptions);
        if (!visitedObjects.has(p.deployOptions))
            aws_cdk_lib_aws_apigateway_StageOptions(p.deployOptions);
        if (!visitedObjects.has(p.domainName))
            aws_cdk_lib_aws_apigateway_DomainNameOptions(p.domainName);
        if (p.endpointTypes != null)
            for (const o of p.endpointTypes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_apigateway_EndpointType(o);
        if (!visitedObjects.has(p.policy))
            aws_cdk_lib_aws_iam_PolicyDocument(p.policy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_StepFunctionsRestApi(p) {
}
function aws_cdk_lib_aws_apigateway_CfnAccountProps(p) {
}
function aws_cdk_lib_aws_apigateway_CfnAccount(p) {
}
function aws_cdk_lib_aws_apigateway_CfnApiKeyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stageKeys))
            aws_cdk_lib_IResolvable(p.stageKeys);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnApiKey(p) {
}
function aws_cdk_lib_aws_apigateway_CfnApiKey_StageKeyProperty(p) {
}
function aws_cdk_lib_aws_apigateway_CfnAuthorizerProps(p) {
}
function aws_cdk_lib_aws_apigateway_CfnAuthorizer(p) {
}
function aws_cdk_lib_aws_apigateway_CfnBasePathMappingProps(p) {
}
function aws_cdk_lib_aws_apigateway_CfnBasePathMapping(p) {
}
function aws_cdk_lib_aws_apigateway_CfnClientCertificateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnClientCertificate(p) {
}
function aws_cdk_lib_aws_apigateway_CfnDeploymentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deploymentCanarySettings))
            aws_cdk_lib_IResolvable(p.deploymentCanarySettings);
        if (!visitedObjects.has(p.stageDescription))
            aws_cdk_lib_IResolvable(p.stageDescription);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnDeployment(p) {
}
function aws_cdk_lib_aws_apigateway_CfnDeployment_AccessLogSettingProperty(p) {
}
function aws_cdk_lib_aws_apigateway_CfnDeployment_CanarySettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stageVariableOverrides))
            aws_cdk_lib_IResolvable(p.stageVariableOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnDeployment_DeploymentCanarySettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stageVariableOverrides))
            aws_cdk_lib_IResolvable(p.stageVariableOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnDeployment_MethodSettingProperty(p) {
}
function aws_cdk_lib_aws_apigateway_CfnDeployment_StageDescriptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessLogSetting))
            aws_cdk_lib_IResolvable(p.accessLogSetting);
        if (!visitedObjects.has(p.canarySetting))
            aws_cdk_lib_IResolvable(p.canarySetting);
        if (!visitedObjects.has(p.methodSettings))
            aws_cdk_lib_IResolvable(p.methodSettings);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.variables))
            aws_cdk_lib_IResolvable(p.variables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnDocumentationPartProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.location))
            aws_cdk_lib_IResolvable(p.location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnDocumentationPart(p) {
}
function aws_cdk_lib_aws_apigateway_CfnDocumentationPart_LocationProperty(p) {
}
function aws_cdk_lib_aws_apigateway_CfnDocumentationVersionProps(p) {
}
function aws_cdk_lib_aws_apigateway_CfnDocumentationVersion(p) {
}
function aws_cdk_lib_aws_apigateway_CfnDomainNameProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.endpointConfiguration))
            aws_cdk_lib_IResolvable(p.endpointConfiguration);
        if (!visitedObjects.has(p.mutualTlsAuthentication))
            aws_cdk_lib_IResolvable(p.mutualTlsAuthentication);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnDomainName(p) {
}
function aws_cdk_lib_aws_apigateway_CfnDomainName_EndpointConfigurationProperty(p) {
}
function aws_cdk_lib_aws_apigateway_CfnDomainName_MutualTlsAuthenticationProperty(p) {
}
function aws_cdk_lib_aws_apigateway_CfnGatewayResponseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.responseParameters))
            aws_cdk_lib_IResolvable(p.responseParameters);
        if (!visitedObjects.has(p.responseTemplates))
            aws_cdk_lib_IResolvable(p.responseTemplates);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnGatewayResponse(p) {
}
function aws_cdk_lib_aws_apigateway_CfnMethodProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.integration))
            aws_cdk_lib_IResolvable(p.integration);
        if (!visitedObjects.has(p.methodResponses))
            aws_cdk_lib_IResolvable(p.methodResponses);
        if (!visitedObjects.has(p.requestModels))
            aws_cdk_lib_IResolvable(p.requestModels);
        if (!visitedObjects.has(p.requestParameters))
            aws_cdk_lib_IResolvable(p.requestParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnMethod(p) {
}
function aws_cdk_lib_aws_apigateway_CfnMethod_IntegrationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.integrationResponses))
            aws_cdk_lib_IResolvable(p.integrationResponses);
        if (!visitedObjects.has(p.requestParameters))
            aws_cdk_lib_IResolvable(p.requestParameters);
        if (!visitedObjects.has(p.requestTemplates))
            aws_cdk_lib_IResolvable(p.requestTemplates);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnMethod_IntegrationResponseProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.responseParameters))
            aws_cdk_lib_IResolvable(p.responseParameters);
        if (!visitedObjects.has(p.responseTemplates))
            aws_cdk_lib_IResolvable(p.responseTemplates);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnMethod_MethodResponseProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.responseModels))
            aws_cdk_lib_IResolvable(p.responseModels);
        if (!visitedObjects.has(p.responseParameters))
            aws_cdk_lib_IResolvable(p.responseParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnModelProps(p) {
}
function aws_cdk_lib_aws_apigateway_CfnModel(p) {
}
function aws_cdk_lib_aws_apigateway_CfnRequestValidatorProps(p) {
}
function aws_cdk_lib_aws_apigateway_CfnRequestValidator(p) {
}
function aws_cdk_lib_aws_apigateway_CfnResourceProps(p) {
}
function aws_cdk_lib_aws_apigateway_CfnResource(p) {
}
function aws_cdk_lib_aws_apigateway_CfnRestApiProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bodyS3Location))
            aws_cdk_lib_IResolvable(p.bodyS3Location);
        if (!visitedObjects.has(p.endpointConfiguration))
            aws_cdk_lib_IResolvable(p.endpointConfiguration);
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnRestApi(p) {
}
function aws_cdk_lib_aws_apigateway_CfnRestApi_EndpointConfigurationProperty(p) {
}
function aws_cdk_lib_aws_apigateway_CfnRestApi_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_apigateway_CfnStageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessLogSetting))
            aws_cdk_lib_IResolvable(p.accessLogSetting);
        if (!visitedObjects.has(p.canarySetting))
            aws_cdk_lib_IResolvable(p.canarySetting);
        if (!visitedObjects.has(p.methodSettings))
            aws_cdk_lib_IResolvable(p.methodSettings);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.variables))
            aws_cdk_lib_IResolvable(p.variables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnStage(p) {
}
function aws_cdk_lib_aws_apigateway_CfnStage_AccessLogSettingProperty(p) {
}
function aws_cdk_lib_aws_apigateway_CfnStage_CanarySettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stageVariableOverrides))
            aws_cdk_lib_IResolvable(p.stageVariableOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnStage_MethodSettingProperty(p) {
}
function aws_cdk_lib_aws_apigateway_CfnUsagePlanProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.apiStages))
            aws_cdk_lib_IResolvable(p.apiStages);
        if (!visitedObjects.has(p.quota))
            aws_cdk_lib_IResolvable(p.quota);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.throttle))
            aws_cdk_lib_IResolvable(p.throttle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnUsagePlan(p) {
}
function aws_cdk_lib_aws_apigateway_CfnUsagePlan_ApiStageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.throttle))
            aws_cdk_lib_IResolvable(p.throttle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnUsagePlan_QuotaSettingsProperty(p) {
}
function aws_cdk_lib_aws_apigateway_CfnUsagePlan_ThrottleSettingsProperty(p) {
}
function aws_cdk_lib_aws_apigateway_CfnUsagePlanKeyProps(p) {
}
function aws_cdk_lib_aws_apigateway_CfnUsagePlanKey(p) {
}
function aws_cdk_lib_aws_apigateway_CfnVpcLinkProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigateway_CfnVpcLink(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnApiProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bodyS3Location))
            aws_cdk_lib_IResolvable(p.bodyS3Location);
        if (!visitedObjects.has(p.corsConfiguration))
            aws_cdk_lib_IResolvable(p.corsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigatewayv2_CfnApi(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnApi_BodyS3LocationProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnApi_CorsProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverridesProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.integration))
            aws_cdk_lib_IResolvable(p.integration);
        if (!visitedObjects.has(p.route))
            aws_cdk_lib_IResolvable(p.route);
        if (!visitedObjects.has(p.stage))
            aws_cdk_lib_IResolvable(p.stage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverrides(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverrides_AccessLogSettingsProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverrides_IntegrationOverridesProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverrides_RouteOverridesProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverrides_RouteSettingsProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverrides_StageOverridesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessLogSettings))
            aws_cdk_lib_IResolvable(p.accessLogSettings);
        if (!visitedObjects.has(p.defaultRouteSettings))
            aws_cdk_lib_IResolvable(p.defaultRouteSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigatewayv2_CfnApiMappingProps(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnApiMapping(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnAuthorizerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jwtConfiguration))
            aws_cdk_lib_IResolvable(p.jwtConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigatewayv2_CfnAuthorizer(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnAuthorizer_JWTConfigurationProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnDeploymentProps(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnDeployment(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnDomainNameProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.domainNameConfigurations))
            aws_cdk_lib_IResolvable(p.domainNameConfigurations);
        if (!visitedObjects.has(p.mutualTlsAuthentication))
            aws_cdk_lib_IResolvable(p.mutualTlsAuthentication);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigatewayv2_CfnDomainName(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnDomainName_DomainNameConfigurationProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnDomainName_MutualTlsAuthenticationProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnIntegrationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tlsConfig))
            aws_cdk_lib_IResolvable(p.tlsConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigatewayv2_CfnIntegration(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnIntegration_ResponseParameterProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnIntegration_ResponseParameterListProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.responseParameters))
            aws_cdk_lib_IResolvable(p.responseParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigatewayv2_CfnIntegration_TlsConfigProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnIntegrationResponseProps(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnIntegrationResponse(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnModelProps(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnModel(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnRouteProps(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnRoute(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnRoute_ParameterConstraintsProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnRouteResponseProps(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnRouteResponse(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnRouteResponse_ParameterConstraintsProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnStageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessLogSettings))
            aws_cdk_lib_IResolvable(p.accessLogSettings);
        if (!visitedObjects.has(p.defaultRouteSettings))
            aws_cdk_lib_IResolvable(p.defaultRouteSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apigatewayv2_CfnStage(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnStage_AccessLogSettingsProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnStage_RouteSettingsProperty(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnVpcLinkProps(p) {
}
function aws_cdk_lib_aws_apigatewayv2_CfnVpcLink(p) {
}
function aws_cdk_lib_aws_appconfig_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appconfig_CfnApplication_TagsProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appconfig_CfnApplication(p) {
}
function aws_cdk_lib_aws_appconfig_CfnApplication_TagsProperty(p) {
}
function aws_cdk_lib_aws_appconfig_CfnConfigurationProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appconfig_CfnConfigurationProfile_TagsProperty(o);
        if (!visitedObjects.has(p.validators))
            aws_cdk_lib_IResolvable(p.validators);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appconfig_CfnConfigurationProfile(p) {
}
function aws_cdk_lib_aws_appconfig_CfnConfigurationProfile_TagsProperty(p) {
}
function aws_cdk_lib_aws_appconfig_CfnConfigurationProfile_ValidatorsProperty(p) {
}
function aws_cdk_lib_aws_appconfig_CfnDeploymentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appconfig_CfnDeployment_TagsProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appconfig_CfnDeployment(p) {
}
function aws_cdk_lib_aws_appconfig_CfnDeployment_TagsProperty(p) {
}
function aws_cdk_lib_aws_appconfig_CfnDeploymentStrategyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appconfig_CfnDeploymentStrategy_TagsProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appconfig_CfnDeploymentStrategy(p) {
}
function aws_cdk_lib_aws_appconfig_CfnDeploymentStrategy_TagsProperty(p) {
}
function aws_cdk_lib_aws_appconfig_CfnEnvironmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.monitors))
            aws_cdk_lib_IResolvable(p.monitors);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appconfig_CfnEnvironment_TagsProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appconfig_CfnEnvironment(p) {
}
function aws_cdk_lib_aws_appconfig_CfnEnvironment_MonitorsProperty(p) {
}
function aws_cdk_lib_aws_appconfig_CfnEnvironment_TagsProperty(p) {
}
function aws_cdk_lib_aws_appconfig_CfnHostedConfigurationVersionProps(p) {
}
function aws_cdk_lib_aws_appconfig_CfnHostedConfigurationVersion(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectorProvisioningConfig))
            aws_cdk_lib_IResolvable(p.connectorProvisioningConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnector(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnector_ConnectorProvisioningConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambda))
            aws_cdk_lib_IResolvable(p.lambda);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnector_LambdaConnectorProvisioningConfigProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectorProfileConfig))
            aws_cdk_lib_IResolvable(p.connectorProfileConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_AmplitudeConnectorProfileCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_ApiKeyCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_BasicAuthCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_ConnectorOAuthRequestProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_ConnectorProfileConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectorProfileCredentials))
            aws_cdk_lib_IResolvable(p.connectorProfileCredentials);
        if (!visitedObjects.has(p.connectorProfileProperties))
            aws_cdk_lib_IResolvable(p.connectorProfileProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_ConnectorProfileCredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.amplitude))
            aws_cdk_lib_IResolvable(p.amplitude);
        if (!visitedObjects.has(p.customConnector))
            aws_cdk_lib_IResolvable(p.customConnector);
        if (!visitedObjects.has(p.datadog))
            aws_cdk_lib_IResolvable(p.datadog);
        if (!visitedObjects.has(p.dynatrace))
            aws_cdk_lib_IResolvable(p.dynatrace);
        if (!visitedObjects.has(p.googleAnalytics))
            aws_cdk_lib_IResolvable(p.googleAnalytics);
        if (!visitedObjects.has(p.inforNexus))
            aws_cdk_lib_IResolvable(p.inforNexus);
        if (!visitedObjects.has(p.marketo))
            aws_cdk_lib_IResolvable(p.marketo);
        if (!visitedObjects.has(p.pardot))
            aws_cdk_lib_IResolvable(p.pardot);
        if (!visitedObjects.has(p.redshift))
            aws_cdk_lib_IResolvable(p.redshift);
        if (!visitedObjects.has(p.salesforce))
            aws_cdk_lib_IResolvable(p.salesforce);
        if (!visitedObjects.has(p.sapoData))
            aws_cdk_lib_IResolvable(p.sapoData);
        if (!visitedObjects.has(p.serviceNow))
            aws_cdk_lib_IResolvable(p.serviceNow);
        if (!visitedObjects.has(p.singular))
            aws_cdk_lib_IResolvable(p.singular);
        if (!visitedObjects.has(p.slack))
            aws_cdk_lib_IResolvable(p.slack);
        if (!visitedObjects.has(p.snowflake))
            aws_cdk_lib_IResolvable(p.snowflake);
        if (!visitedObjects.has(p.trendmicro))
            aws_cdk_lib_IResolvable(p.trendmicro);
        if (!visitedObjects.has(p.veeva))
            aws_cdk_lib_IResolvable(p.veeva);
        if (!visitedObjects.has(p.zendesk))
            aws_cdk_lib_IResolvable(p.zendesk);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_ConnectorProfilePropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customConnector))
            aws_cdk_lib_IResolvable(p.customConnector);
        if (!visitedObjects.has(p.datadog))
            aws_cdk_lib_IResolvable(p.datadog);
        if (!visitedObjects.has(p.dynatrace))
            aws_cdk_lib_IResolvable(p.dynatrace);
        if (!visitedObjects.has(p.inforNexus))
            aws_cdk_lib_IResolvable(p.inforNexus);
        if (!visitedObjects.has(p.marketo))
            aws_cdk_lib_IResolvable(p.marketo);
        if (!visitedObjects.has(p.pardot))
            aws_cdk_lib_IResolvable(p.pardot);
        if (!visitedObjects.has(p.redshift))
            aws_cdk_lib_IResolvable(p.redshift);
        if (!visitedObjects.has(p.salesforce))
            aws_cdk_lib_IResolvable(p.salesforce);
        if (!visitedObjects.has(p.sapoData))
            aws_cdk_lib_IResolvable(p.sapoData);
        if (!visitedObjects.has(p.serviceNow))
            aws_cdk_lib_IResolvable(p.serviceNow);
        if (!visitedObjects.has(p.slack))
            aws_cdk_lib_IResolvable(p.slack);
        if (!visitedObjects.has(p.snowflake))
            aws_cdk_lib_IResolvable(p.snowflake);
        if (!visitedObjects.has(p.veeva))
            aws_cdk_lib_IResolvable(p.veeva);
        if (!visitedObjects.has(p.zendesk))
            aws_cdk_lib_IResolvable(p.zendesk);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_CustomAuthCredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentialsMap))
            aws_cdk_lib_IResolvable(p.credentialsMap);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_CustomConnectorProfileCredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.apiKey))
            aws_cdk_lib_IResolvable(p.apiKey);
        if (!visitedObjects.has(p.basic))
            aws_cdk_lib_IResolvable(p.basic);
        if (!visitedObjects.has(p.custom))
            aws_cdk_lib_IResolvable(p.custom);
        if (!visitedObjects.has(p.oauth2))
            aws_cdk_lib_IResolvable(p.oauth2);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_CustomConnectorProfilePropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.oAuth2Properties))
            aws_cdk_lib_IResolvable(p.oAuth2Properties);
        if (!visitedObjects.has(p.profileProperties))
            aws_cdk_lib_IResolvable(p.profileProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_DatadogConnectorProfileCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_DatadogConnectorProfilePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_DynatraceConnectorProfileCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_DynatraceConnectorProfilePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_GoogleAnalyticsConnectorProfileCredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectorOAuthRequest))
            aws_cdk_lib_IResolvable(p.connectorOAuthRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_InforNexusConnectorProfileCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_InforNexusConnectorProfilePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_MarketoConnectorProfileCredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectorOAuthRequest))
            aws_cdk_lib_IResolvable(p.connectorOAuthRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_MarketoConnectorProfilePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_OAuth2CredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.oAuthRequest))
            aws_cdk_lib_IResolvable(p.oAuthRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_OAuth2PropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tokenUrlCustomProperties))
            aws_cdk_lib_IResolvable(p.tokenUrlCustomProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_OAuthCredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectorOAuthRequest))
            aws_cdk_lib_IResolvable(p.connectorOAuthRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_OAuthPropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_PardotConnectorProfileCredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectorOAuthRequest))
            aws_cdk_lib_IResolvable(p.connectorOAuthRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_PardotConnectorProfilePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_RedshiftConnectorProfileCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_RedshiftConnectorProfilePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_SAPODataConnectorProfileCredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.basicAuthCredentials))
            aws_cdk_lib_IResolvable(p.basicAuthCredentials);
        if (!visitedObjects.has(p.oAuthCredentials))
            aws_cdk_lib_IResolvable(p.oAuthCredentials);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_SAPODataConnectorProfilePropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.oAuthProperties))
            aws_cdk_lib_IResolvable(p.oAuthProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_SalesforceConnectorProfileCredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectorOAuthRequest))
            aws_cdk_lib_IResolvable(p.connectorOAuthRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_SalesforceConnectorProfilePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_ServiceNowConnectorProfileCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_ServiceNowConnectorProfilePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_SingularConnectorProfileCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_SlackConnectorProfileCredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectorOAuthRequest))
            aws_cdk_lib_IResolvable(p.connectorOAuthRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_SlackConnectorProfilePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_SnowflakeConnectorProfileCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_SnowflakeConnectorProfilePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_TrendmicroConnectorProfileCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_VeevaConnectorProfileCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_VeevaConnectorProfilePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_ZendeskConnectorProfileCredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectorOAuthRequest))
            aws_cdk_lib_IResolvable(p.connectorOAuthRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnConnectorProfile_ZendeskConnectorProfilePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlowProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationFlowConfigList))
            aws_cdk_lib_IResolvable(p.destinationFlowConfigList);
        if (!visitedObjects.has(p.sourceFlowConfig))
            aws_cdk_lib_IResolvable(p.sourceFlowConfig);
        if (!visitedObjects.has(p.tasks))
            aws_cdk_lib_IResolvable(p.tasks);
        if (!visitedObjects.has(p.triggerConfig))
            aws_cdk_lib_IResolvable(p.triggerConfig);
        if (!visitedObjects.has(p.metadataCatalogConfig))
            aws_cdk_lib_IResolvable(p.metadataCatalogConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_AggregationConfigProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_AmplitudeSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_ConnectorOperatorProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_CustomConnectorDestinationPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customProperties))
            aws_cdk_lib_IResolvable(p.customProperties);
        if (!visitedObjects.has(p.errorHandlingConfig))
            aws_cdk_lib_IResolvable(p.errorHandlingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_CustomConnectorSourcePropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customProperties))
            aws_cdk_lib_IResolvable(p.customProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_DatadogSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_DestinationConnectorPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customConnector))
            aws_cdk_lib_IResolvable(p.customConnector);
        if (!visitedObjects.has(p.eventBridge))
            aws_cdk_lib_IResolvable(p.eventBridge);
        if (!visitedObjects.has(p.lookoutMetrics))
            aws_cdk_lib_IResolvable(p.lookoutMetrics);
        if (!visitedObjects.has(p.marketo))
            aws_cdk_lib_IResolvable(p.marketo);
        if (!visitedObjects.has(p.redshift))
            aws_cdk_lib_IResolvable(p.redshift);
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_IResolvable(p.s3);
        if (!visitedObjects.has(p.salesforce))
            aws_cdk_lib_IResolvable(p.salesforce);
        if (!visitedObjects.has(p.sapoData))
            aws_cdk_lib_IResolvable(p.sapoData);
        if (!visitedObjects.has(p.snowflake))
            aws_cdk_lib_IResolvable(p.snowflake);
        if (!visitedObjects.has(p.upsolver))
            aws_cdk_lib_IResolvable(p.upsolver);
        if (!visitedObjects.has(p.zendesk))
            aws_cdk_lib_IResolvable(p.zendesk);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_DestinationFlowConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationConnectorProperties))
            aws_cdk_lib_IResolvable(p.destinationConnectorProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_DynatraceSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_ErrorHandlingConfigProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_EventBridgeDestinationPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.errorHandlingConfig))
            aws_cdk_lib_IResolvable(p.errorHandlingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_GlueDataCatalogProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_GoogleAnalyticsSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_IncrementalPullConfigProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_InforNexusSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_LookoutMetricsDestinationPropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_MarketoDestinationPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.errorHandlingConfig))
            aws_cdk_lib_IResolvable(p.errorHandlingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_MarketoSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_MetadataCatalogConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.glueDataCatalog))
            aws_cdk_lib_IResolvable(p.glueDataCatalog);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_PardotSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_PrefixConfigProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_RedshiftDestinationPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.errorHandlingConfig))
            aws_cdk_lib_IResolvable(p.errorHandlingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_S3DestinationPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3OutputFormatConfig))
            aws_cdk_lib_IResolvable(p.s3OutputFormatConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_S3InputFormatConfigProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_S3OutputFormatConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aggregationConfig))
            aws_cdk_lib_IResolvable(p.aggregationConfig);
        if (!visitedObjects.has(p.prefixConfig))
            aws_cdk_lib_IResolvable(p.prefixConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_S3SourcePropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3InputFormatConfig))
            aws_cdk_lib_IResolvable(p.s3InputFormatConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_SAPODataDestinationPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.errorHandlingConfig))
            aws_cdk_lib_IResolvable(p.errorHandlingConfig);
        if (!visitedObjects.has(p.successResponseHandlingConfig))
            aws_cdk_lib_IResolvable(p.successResponseHandlingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_SAPODataSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_SalesforceDestinationPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.errorHandlingConfig))
            aws_cdk_lib_IResolvable(p.errorHandlingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_SalesforceSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_ScheduledTriggerPropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_ServiceNowSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_SingularSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_SlackSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_SnowflakeDestinationPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.errorHandlingConfig))
            aws_cdk_lib_IResolvable(p.errorHandlingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_SourceConnectorPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.amplitude))
            aws_cdk_lib_IResolvable(p.amplitude);
        if (!visitedObjects.has(p.customConnector))
            aws_cdk_lib_IResolvable(p.customConnector);
        if (!visitedObjects.has(p.datadog))
            aws_cdk_lib_IResolvable(p.datadog);
        if (!visitedObjects.has(p.dynatrace))
            aws_cdk_lib_IResolvable(p.dynatrace);
        if (!visitedObjects.has(p.googleAnalytics))
            aws_cdk_lib_IResolvable(p.googleAnalytics);
        if (!visitedObjects.has(p.inforNexus))
            aws_cdk_lib_IResolvable(p.inforNexus);
        if (!visitedObjects.has(p.marketo))
            aws_cdk_lib_IResolvable(p.marketo);
        if (!visitedObjects.has(p.pardot))
            aws_cdk_lib_IResolvable(p.pardot);
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_IResolvable(p.s3);
        if (!visitedObjects.has(p.salesforce))
            aws_cdk_lib_IResolvable(p.salesforce);
        if (!visitedObjects.has(p.sapoData))
            aws_cdk_lib_IResolvable(p.sapoData);
        if (!visitedObjects.has(p.serviceNow))
            aws_cdk_lib_IResolvable(p.serviceNow);
        if (!visitedObjects.has(p.singular))
            aws_cdk_lib_IResolvable(p.singular);
        if (!visitedObjects.has(p.slack))
            aws_cdk_lib_IResolvable(p.slack);
        if (!visitedObjects.has(p.trendmicro))
            aws_cdk_lib_IResolvable(p.trendmicro);
        if (!visitedObjects.has(p.veeva))
            aws_cdk_lib_IResolvable(p.veeva);
        if (!visitedObjects.has(p.zendesk))
            aws_cdk_lib_IResolvable(p.zendesk);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_SourceFlowConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceConnectorProperties))
            aws_cdk_lib_IResolvable(p.sourceConnectorProperties);
        if (!visitedObjects.has(p.incrementalPullConfig))
            aws_cdk_lib_IResolvable(p.incrementalPullConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_SuccessResponseHandlingConfigProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_TaskProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectorOperator))
            aws_cdk_lib_IResolvable(p.connectorOperator);
        if (!visitedObjects.has(p.taskProperties))
            aws_cdk_lib_IResolvable(p.taskProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_TaskPropertiesObjectProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_TrendmicroSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_TriggerConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.triggerProperties))
            aws_cdk_lib_IResolvable(p.triggerProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_UpsolverDestinationPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3OutputFormatConfig))
            aws_cdk_lib_IResolvable(p.s3OutputFormatConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_UpsolverS3OutputFormatConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.prefixConfig))
            aws_cdk_lib_IResolvable(p.prefixConfig);
        if (!visitedObjects.has(p.aggregationConfig))
            aws_cdk_lib_IResolvable(p.aggregationConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_VeevaSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appflow_CfnFlow_ZendeskDestinationPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.errorHandlingConfig))
            aws_cdk_lib_IResolvable(p.errorHandlingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appflow_CfnFlow_ZendeskSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_appintegrations_CfnDataIntegrationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scheduleConfig))
            aws_cdk_lib_IResolvable(p.scheduleConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appintegrations_CfnDataIntegration(p) {
}
function aws_cdk_lib_aws_appintegrations_CfnDataIntegration_ScheduleConfigProperty(p) {
}
function aws_cdk_lib_aws_appintegrations_CfnEventIntegrationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventFilter))
            aws_cdk_lib_IResolvable(p.eventFilter);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appintegrations_CfnEventIntegration(p) {
}
function aws_cdk_lib_aws_appintegrations_CfnEventIntegration_EventFilterProperty(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalableTargetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scheduledActions))
            aws_cdk_lib_IResolvable(p.scheduledActions);
        if (!visitedObjects.has(p.suspendedState))
            aws_cdk_lib_IResolvable(p.suspendedState);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalableTarget(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalableTarget_ScalableTargetActionProperty(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalableTarget_ScheduledActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.endTime))
            aws_cdk_lib_IResolvable(p.endTime);
        if (!visitedObjects.has(p.scalableTargetAction))
            aws_cdk_lib_IResolvable(p.scalableTargetAction);
        if (!visitedObjects.has(p.startTime))
            aws_cdk_lib_IResolvable(p.startTime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalableTarget_SuspendedStateProperty(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stepScalingPolicyConfiguration))
            aws_cdk_lib_IResolvable(p.stepScalingPolicyConfiguration);
        if (!visitedObjects.has(p.targetTrackingScalingPolicyConfiguration))
            aws_cdk_lib_IResolvable(p.targetTrackingScalingPolicyConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy_CustomizedMetricSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy_MetricDimensionProperty(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy_PredefinedMetricSpecificationProperty(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy_StepAdjustmentProperty(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy_StepScalingPolicyConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stepAdjustments))
            aws_cdk_lib_IResolvable(p.stepAdjustments);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy_TargetTrackingScalingPolicyConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customizedMetricSpecification))
            aws_cdk_lib_IResolvable(p.customizedMetricSpecification);
        if (!visitedObjects.has(p.predefinedMetricSpecification))
            aws_cdk_lib_IResolvable(p.predefinedMetricSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_BaseScalableAttributeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.serviceNamespace))
            aws_cdk_lib_aws_applicationautoscaling_ServiceNamespace(p.serviceNamespace);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_BaseScalableAttribute(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_EnableScalingProps(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_Schedule(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_CronOptions(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_IScalableTarget(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_ScalableTargetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.serviceNamespace))
            aws_cdk_lib_aws_applicationautoscaling_ServiceNamespace(p.serviceNamespace);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_ScalableTarget(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_ScalingSchedule(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_aws_applicationautoscaling_Schedule(p.schedule);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_ServiceNamespace(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_BasicStepScalingPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metric))
            aws_cdk_lib_aws_cloudwatch_IMetric(p.metric);
        if (p.scalingSteps != null)
            for (const o of p.scalingSteps)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_applicationautoscaling_ScalingInterval(o);
        if (!visitedObjects.has(p.adjustmentType))
            aws_cdk_lib_aws_applicationautoscaling_AdjustmentType(p.adjustmentType);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.metricAggregationType))
            aws_cdk_lib_aws_applicationautoscaling_MetricAggregationType(p.metricAggregationType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_StepScalingPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scalingTarget))
            aws_cdk_lib_aws_applicationautoscaling_IScalableTarget(p.scalingTarget);
        if (!visitedObjects.has(p.metric))
            aws_cdk_lib_aws_cloudwatch_IMetric(p.metric);
        if (p.scalingSteps != null)
            for (const o of p.scalingSteps)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_applicationautoscaling_ScalingInterval(o);
        if (!visitedObjects.has(p.adjustmentType))
            aws_cdk_lib_aws_applicationautoscaling_AdjustmentType(p.adjustmentType);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.metricAggregationType))
            aws_cdk_lib_aws_applicationautoscaling_MetricAggregationType(p.metricAggregationType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_StepScalingPolicy(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_ScalingInterval(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_StepScalingActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scalingTarget))
            aws_cdk_lib_aws_applicationautoscaling_IScalableTarget(p.scalingTarget);
        if (!visitedObjects.has(p.adjustmentType))
            aws_cdk_lib_aws_applicationautoscaling_AdjustmentType(p.adjustmentType);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.metricAggregationType))
            aws_cdk_lib_aws_applicationautoscaling_MetricAggregationType(p.metricAggregationType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_StepScalingAction(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_AdjustmentType(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_MetricAggregationType(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_AdjustmentTier(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_BaseTargetTrackingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scaleInCooldown))
            aws_cdk_lib_Duration(p.scaleInCooldown);
        if (!visitedObjects.has(p.scaleOutCooldown))
            aws_cdk_lib_Duration(p.scaleOutCooldown);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_BasicTargetTrackingScalingPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customMetric))
            aws_cdk_lib_aws_cloudwatch_IMetric(p.customMetric);
        if (!visitedObjects.has(p.predefinedMetric))
            aws_cdk_lib_aws_applicationautoscaling_PredefinedMetric(p.predefinedMetric);
        if (!visitedObjects.has(p.scaleInCooldown))
            aws_cdk_lib_Duration(p.scaleInCooldown);
        if (!visitedObjects.has(p.scaleOutCooldown))
            aws_cdk_lib_Duration(p.scaleOutCooldown);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_TargetTrackingScalingPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scalingTarget))
            aws_cdk_lib_aws_applicationautoscaling_IScalableTarget(p.scalingTarget);
        if (!visitedObjects.has(p.customMetric))
            aws_cdk_lib_aws_cloudwatch_IMetric(p.customMetric);
        if (!visitedObjects.has(p.predefinedMetric))
            aws_cdk_lib_aws_applicationautoscaling_PredefinedMetric(p.predefinedMetric);
        if (!visitedObjects.has(p.scaleInCooldown))
            aws_cdk_lib_Duration(p.scaleInCooldown);
        if (!visitedObjects.has(p.scaleOutCooldown))
            aws_cdk_lib_Duration(p.scaleOutCooldown);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationautoscaling_TargetTrackingScalingPolicy(p) {
}
function aws_cdk_lib_aws_applicationautoscaling_PredefinedMetric(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        const ns = require("./aws-applicationautoscaling/lib/target-tracking-scaling-policy.js");
        if (Object.values(ns.PredefinedMetric).filter(x => x === p).length > 1)
            return;
        if (p === ns.PredefinedMetric.DYANMODB_WRITE_CAPACITY_UTILIZATION)
            print("aws-cdk-lib.aws_applicationautoscaling.PredefinedMetric#DYANMODB_WRITE_CAPACITY_UTILIZATION", "use `PredefinedMetric.DYNAMODB_WRITE_CAPACITY_UTILIZATION`");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationinsights_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.componentMonitoringSettings))
            aws_cdk_lib_IResolvable(p.componentMonitoringSettings);
        if (!visitedObjects.has(p.customComponents))
            aws_cdk_lib_IResolvable(p.customComponents);
        if (!visitedObjects.has(p.logPatternSets))
            aws_cdk_lib_IResolvable(p.logPatternSets);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication(p) {
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_AlarmProperty(p) {
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_AlarmMetricProperty(p) {
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_ComponentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurationDetails))
            aws_cdk_lib_IResolvable(p.configurationDetails);
        if (!visitedObjects.has(p.subComponentTypeConfigurations))
            aws_cdk_lib_IResolvable(p.subComponentTypeConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_ComponentMonitoringSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customComponentConfiguration))
            aws_cdk_lib_IResolvable(p.customComponentConfiguration);
        if (!visitedObjects.has(p.defaultOverwriteComponentConfiguration))
            aws_cdk_lib_IResolvable(p.defaultOverwriteComponentConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_ConfigurationDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alarmMetrics))
            aws_cdk_lib_IResolvable(p.alarmMetrics);
        if (!visitedObjects.has(p.alarms))
            aws_cdk_lib_IResolvable(p.alarms);
        if (!visitedObjects.has(p.haClusterPrometheusExporter))
            aws_cdk_lib_IResolvable(p.haClusterPrometheusExporter);
        if (!visitedObjects.has(p.hanaPrometheusExporter))
            aws_cdk_lib_IResolvable(p.hanaPrometheusExporter);
        if (!visitedObjects.has(p.jmxPrometheusExporter))
            aws_cdk_lib_IResolvable(p.jmxPrometheusExporter);
        if (!visitedObjects.has(p.logs))
            aws_cdk_lib_IResolvable(p.logs);
        if (!visitedObjects.has(p.windowsEvents))
            aws_cdk_lib_IResolvable(p.windowsEvents);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_CustomComponentProperty(p) {
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_HAClusterPrometheusExporterProperty(p) {
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_HANAPrometheusExporterProperty(p) {
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_JMXPrometheusExporterProperty(p) {
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_LogProperty(p) {
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_LogPatternProperty(p) {
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_LogPatternSetProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logPatterns))
            aws_cdk_lib_IResolvable(p.logPatterns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_SubComponentConfigurationDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alarmMetrics))
            aws_cdk_lib_IResolvable(p.alarmMetrics);
        if (!visitedObjects.has(p.logs))
            aws_cdk_lib_IResolvable(p.logs);
        if (!visitedObjects.has(p.windowsEvents))
            aws_cdk_lib_IResolvable(p.windowsEvents);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_SubComponentTypeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.subComponentConfigurationDetails))
            aws_cdk_lib_IResolvable(p.subComponentConfigurationDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_applicationinsights_CfnApplication_WindowsEventProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRouteProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spec))
            aws_cdk_lib_IResolvable(p.spec);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute(p) {
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteHostnameMatchProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteHostnameRewriteProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteMetadataMatchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.range))
            aws_cdk_lib_IResolvable(p.range);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteRangeMatchProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteSpecProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.grpcRoute))
            aws_cdk_lib_IResolvable(p.grpcRoute);
        if (!visitedObjects.has(p.http2Route))
            aws_cdk_lib_IResolvable(p.http2Route);
        if (!visitedObjects.has(p.httpRoute))
            aws_cdk_lib_IResolvable(p.httpRoute);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteTargetProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.virtualService))
            aws_cdk_lib_IResolvable(p.virtualService);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteVirtualServiceProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GrpcGatewayRouteProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GrpcGatewayRouteActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_IResolvable(p.target);
        if (!visitedObjects.has(p.rewrite))
            aws_cdk_lib_IResolvable(p.rewrite);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GrpcGatewayRouteMatchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hostname))
            aws_cdk_lib_IResolvable(p.hostname);
        if (!visitedObjects.has(p.metadata))
            aws_cdk_lib_IResolvable(p.metadata);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GrpcGatewayRouteMetadataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GrpcGatewayRouteRewriteProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hostname))
            aws_cdk_lib_IResolvable(p.hostname);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_IResolvable(p.target);
        if (!visitedObjects.has(p.rewrite))
            aws_cdk_lib_IResolvable(p.rewrite);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteHeaderProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteHeaderMatchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.range))
            aws_cdk_lib_IResolvable(p.range);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteMatchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.headers))
            aws_cdk_lib_IResolvable(p.headers);
        if (!visitedObjects.has(p.hostname))
            aws_cdk_lib_IResolvable(p.hostname);
        if (!visitedObjects.has(p.path))
            aws_cdk_lib_IResolvable(p.path);
        if (!visitedObjects.has(p.queryParameters))
            aws_cdk_lib_IResolvable(p.queryParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRoutePathRewriteProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRoutePrefixRewriteProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteRewriteProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hostname))
            aws_cdk_lib_IResolvable(p.hostname);
        if (!visitedObjects.has(p.path))
            aws_cdk_lib_IResolvable(p.path);
        if (!visitedObjects.has(p.prefix))
            aws_cdk_lib_IResolvable(p.prefix);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpPathMatchProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpQueryParameterMatchProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnGatewayRoute_QueryParameterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnMeshProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spec))
            aws_cdk_lib_IResolvable(p.spec);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnMesh(p) {
}
function aws_cdk_lib_aws_appmesh_CfnMesh_EgressFilterProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnMesh_MeshServiceDiscoveryProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnMesh_MeshSpecProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.egressFilter))
            aws_cdk_lib_IResolvable(p.egressFilter);
        if (!visitedObjects.has(p.serviceDiscovery))
            aws_cdk_lib_IResolvable(p.serviceDiscovery);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRouteProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spec))
            aws_cdk_lib_IResolvable(p.spec);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute(p) {
}
function aws_cdk_lib_aws_appmesh_CfnRoute_DurationProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRetryPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.perRetryTimeout))
            aws_cdk_lib_IResolvable(p.perRetryTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRouteProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
        if (!visitedObjects.has(p.retryPolicy))
            aws_cdk_lib_IResolvable(p.retryPolicy);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_IResolvable(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRouteActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.weightedTargets))
            aws_cdk_lib_IResolvable(p.weightedTargets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRouteMatchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metadata))
            aws_cdk_lib_IResolvable(p.metadata);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRouteMetadataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRouteMetadataMatchMethodProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.range))
            aws_cdk_lib_IResolvable(p.range);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_GrpcTimeoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.idle))
            aws_cdk_lib_IResolvable(p.idle);
        if (!visitedObjects.has(p.perRequest))
            aws_cdk_lib_IResolvable(p.perRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_HeaderMatchMethodProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.range))
            aws_cdk_lib_IResolvable(p.range);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_HttpPathMatchProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnRoute_HttpQueryParameterMatchProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnRoute_HttpRetryPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.perRetryTimeout))
            aws_cdk_lib_IResolvable(p.perRetryTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_HttpRouteProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
        if (!visitedObjects.has(p.retryPolicy))
            aws_cdk_lib_IResolvable(p.retryPolicy);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_IResolvable(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_HttpRouteActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.weightedTargets))
            aws_cdk_lib_IResolvable(p.weightedTargets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_HttpRouteHeaderProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_HttpRouteMatchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.headers))
            aws_cdk_lib_IResolvable(p.headers);
        if (!visitedObjects.has(p.path))
            aws_cdk_lib_IResolvable(p.path);
        if (!visitedObjects.has(p.queryParameters))
            aws_cdk_lib_IResolvable(p.queryParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_HttpTimeoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.idle))
            aws_cdk_lib_IResolvable(p.idle);
        if (!visitedObjects.has(p.perRequest))
            aws_cdk_lib_IResolvable(p.perRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_MatchRangeProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnRoute_QueryParameterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_RouteSpecProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.grpcRoute))
            aws_cdk_lib_IResolvable(p.grpcRoute);
        if (!visitedObjects.has(p.http2Route))
            aws_cdk_lib_IResolvable(p.http2Route);
        if (!visitedObjects.has(p.httpRoute))
            aws_cdk_lib_IResolvable(p.httpRoute);
        if (!visitedObjects.has(p.tcpRoute))
            aws_cdk_lib_IResolvable(p.tcpRoute);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_TcpRouteProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_IResolvable(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_TcpRouteActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.weightedTargets))
            aws_cdk_lib_IResolvable(p.weightedTargets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_TcpRouteMatchProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnRoute_TcpTimeoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.idle))
            aws_cdk_lib_IResolvable(p.idle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnRoute_WeightedTargetProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGatewayProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spec))
            aws_cdk_lib_IResolvable(p.spec);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_JsonFormatRefProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_LoggingFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.json))
            aws_cdk_lib_IResolvable(p.json);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_SubjectAlternativeNameMatchersProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_SubjectAlternativeNamesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayAccessLogProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.file))
            aws_cdk_lib_IResolvable(p.file);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayBackendDefaultsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientPolicy))
            aws_cdk_lib_IResolvable(p.clientPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayClientPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_IResolvable(p.tls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayClientPolicyTlsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.validation))
            aws_cdk_lib_IResolvable(p.validation);
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_IResolvable(p.certificate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayClientTlsCertificateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.file))
            aws_cdk_lib_IResolvable(p.file);
        if (!visitedObjects.has(p.sds))
            aws_cdk_lib_IResolvable(p.sds);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayConnectionPoolProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.grpc))
            aws_cdk_lib_IResolvable(p.grpc);
        if (!visitedObjects.has(p.http))
            aws_cdk_lib_IResolvable(p.http);
        if (!visitedObjects.has(p.http2))
            aws_cdk_lib_IResolvable(p.http2);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayFileAccessLogProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.format))
            aws_cdk_lib_IResolvable(p.format);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayGrpcConnectionPoolProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayHealthCheckPolicyProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayHttp2ConnectionPoolProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayHttpConnectionPoolProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.portMapping))
            aws_cdk_lib_IResolvable(p.portMapping);
        if (!visitedObjects.has(p.connectionPool))
            aws_cdk_lib_IResolvable(p.connectionPool);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_IResolvable(p.healthCheck);
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_IResolvable(p.tls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_IResolvable(p.certificate);
        if (!visitedObjects.has(p.validation))
            aws_cdk_lib_IResolvable(p.validation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsAcmCertificateProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsCertificateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.acm))
            aws_cdk_lib_IResolvable(p.acm);
        if (!visitedObjects.has(p.file))
            aws_cdk_lib_IResolvable(p.file);
        if (!visitedObjects.has(p.sds))
            aws_cdk_lib_IResolvable(p.sds);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsFileCertificateProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsSdsCertificateProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsValidationContextProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trust))
            aws_cdk_lib_IResolvable(p.trust);
        if (!visitedObjects.has(p.subjectAlternativeNames))
            aws_cdk_lib_IResolvable(p.subjectAlternativeNames);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsValidationContextTrustProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.file))
            aws_cdk_lib_IResolvable(p.file);
        if (!visitedObjects.has(p.sds))
            aws_cdk_lib_IResolvable(p.sds);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayLoggingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessLog))
            aws_cdk_lib_IResolvable(p.accessLog);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayPortMappingProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewaySpecProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listeners))
            aws_cdk_lib_IResolvable(p.listeners);
        if (!visitedObjects.has(p.backendDefaults))
            aws_cdk_lib_IResolvable(p.backendDefaults);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_IResolvable(p.logging);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayTlsValidationContextProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trust))
            aws_cdk_lib_IResolvable(p.trust);
        if (!visitedObjects.has(p.subjectAlternativeNames))
            aws_cdk_lib_IResolvable(p.subjectAlternativeNames);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayTlsValidationContextAcmTrustProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayTlsValidationContextFileTrustProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayTlsValidationContextSdsTrustProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayTlsValidationContextTrustProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.acm))
            aws_cdk_lib_IResolvable(p.acm);
        if (!visitedObjects.has(p.file))
            aws_cdk_lib_IResolvable(p.file);
        if (!visitedObjects.has(p.sds))
            aws_cdk_lib_IResolvable(p.sds);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNodeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spec))
            aws_cdk_lib_IResolvable(p.spec);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_AccessLogProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.file))
            aws_cdk_lib_IResolvable(p.file);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_AwsCloudMapInstanceAttributeProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_AwsCloudMapServiceDiscoveryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_BackendProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.virtualService))
            aws_cdk_lib_IResolvable(p.virtualService);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_BackendDefaultsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientPolicy))
            aws_cdk_lib_IResolvable(p.clientPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ClientPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_IResolvable(p.tls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ClientPolicyTlsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.validation))
            aws_cdk_lib_IResolvable(p.validation);
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_IResolvable(p.certificate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ClientTlsCertificateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.file))
            aws_cdk_lib_IResolvable(p.file);
        if (!visitedObjects.has(p.sds))
            aws_cdk_lib_IResolvable(p.sds);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_DnsServiceDiscoveryProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_DurationProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_FileAccessLogProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.format))
            aws_cdk_lib_IResolvable(p.format);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_GrpcTimeoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.idle))
            aws_cdk_lib_IResolvable(p.idle);
        if (!visitedObjects.has(p.perRequest))
            aws_cdk_lib_IResolvable(p.perRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_HealthCheckProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_HttpTimeoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.idle))
            aws_cdk_lib_IResolvable(p.idle);
        if (!visitedObjects.has(p.perRequest))
            aws_cdk_lib_IResolvable(p.perRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_JsonFormatRefProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.portMapping))
            aws_cdk_lib_IResolvable(p.portMapping);
        if (!visitedObjects.has(p.connectionPool))
            aws_cdk_lib_IResolvable(p.connectionPool);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_IResolvable(p.healthCheck);
        if (!visitedObjects.has(p.outlierDetection))
            aws_cdk_lib_IResolvable(p.outlierDetection);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_IResolvable(p.timeout);
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_IResolvable(p.tls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTimeoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.grpc))
            aws_cdk_lib_IResolvable(p.grpc);
        if (!visitedObjects.has(p.http))
            aws_cdk_lib_IResolvable(p.http);
        if (!visitedObjects.has(p.http2))
            aws_cdk_lib_IResolvable(p.http2);
        if (!visitedObjects.has(p.tcp))
            aws_cdk_lib_IResolvable(p.tcp);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_IResolvable(p.certificate);
        if (!visitedObjects.has(p.validation))
            aws_cdk_lib_IResolvable(p.validation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsAcmCertificateProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsCertificateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.acm))
            aws_cdk_lib_IResolvable(p.acm);
        if (!visitedObjects.has(p.file))
            aws_cdk_lib_IResolvable(p.file);
        if (!visitedObjects.has(p.sds))
            aws_cdk_lib_IResolvable(p.sds);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsFileCertificateProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsSdsCertificateProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsValidationContextProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trust))
            aws_cdk_lib_IResolvable(p.trust);
        if (!visitedObjects.has(p.subjectAlternativeNames))
            aws_cdk_lib_IResolvable(p.subjectAlternativeNames);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsValidationContextTrustProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.file))
            aws_cdk_lib_IResolvable(p.file);
        if (!visitedObjects.has(p.sds))
            aws_cdk_lib_IResolvable(p.sds);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_LoggingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessLog))
            aws_cdk_lib_IResolvable(p.accessLog);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_LoggingFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.json))
            aws_cdk_lib_IResolvable(p.json);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_OutlierDetectionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.baseEjectionDuration))
            aws_cdk_lib_IResolvable(p.baseEjectionDuration);
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_IResolvable(p.interval);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_PortMappingProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_ServiceDiscoveryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awsCloudMap))
            aws_cdk_lib_IResolvable(p.awsCloudMap);
        if (!visitedObjects.has(p.dns))
            aws_cdk_lib_IResolvable(p.dns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_SubjectAlternativeNameMatchersProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_SubjectAlternativeNamesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_TcpTimeoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.idle))
            aws_cdk_lib_IResolvable(p.idle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_TlsValidationContextProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trust))
            aws_cdk_lib_IResolvable(p.trust);
        if (!visitedObjects.has(p.subjectAlternativeNames))
            aws_cdk_lib_IResolvable(p.subjectAlternativeNames);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_TlsValidationContextAcmTrustProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_TlsValidationContextFileTrustProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_TlsValidationContextSdsTrustProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_TlsValidationContextTrustProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.acm))
            aws_cdk_lib_IResolvable(p.acm);
        if (!visitedObjects.has(p.file))
            aws_cdk_lib_IResolvable(p.file);
        if (!visitedObjects.has(p.sds))
            aws_cdk_lib_IResolvable(p.sds);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualNodeConnectionPoolProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.grpc))
            aws_cdk_lib_IResolvable(p.grpc);
        if (!visitedObjects.has(p.http))
            aws_cdk_lib_IResolvable(p.http);
        if (!visitedObjects.has(p.http2))
            aws_cdk_lib_IResolvable(p.http2);
        if (!visitedObjects.has(p.tcp))
            aws_cdk_lib_IResolvable(p.tcp);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualNodeGrpcConnectionPoolProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualNodeHttp2ConnectionPoolProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualNodeHttpConnectionPoolProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualNodeSpecProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backendDefaults))
            aws_cdk_lib_IResolvable(p.backendDefaults);
        if (!visitedObjects.has(p.backends))
            aws_cdk_lib_IResolvable(p.backends);
        if (!visitedObjects.has(p.listeners))
            aws_cdk_lib_IResolvable(p.listeners);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_IResolvable(p.logging);
        if (!visitedObjects.has(p.serviceDiscovery))
            aws_cdk_lib_IResolvable(p.serviceDiscovery);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualNodeTcpConnectionPoolProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualServiceBackendProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientPolicy))
            aws_cdk_lib_IResolvable(p.clientPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualRouterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spec))
            aws_cdk_lib_IResolvable(p.spec);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualRouter(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualRouter_PortMappingProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualRouter_VirtualRouterListenerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.portMapping))
            aws_cdk_lib_IResolvable(p.portMapping);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualRouter_VirtualRouterSpecProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listeners))
            aws_cdk_lib_IResolvable(p.listeners);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spec))
            aws_cdk_lib_IResolvable(p.spec);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualService(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualService_VirtualNodeServiceProviderProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualService_VirtualRouterServiceProviderProperty(p) {
}
function aws_cdk_lib_aws_appmesh_CfnVirtualService_VirtualServiceProviderProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.virtualNode))
            aws_cdk_lib_IResolvable(p.virtualNode);
        if (!visitedObjects.has(p.virtualRouter))
            aws_cdk_lib_IResolvable(p.virtualRouter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CfnVirtualService_VirtualServiceSpecProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.provider))
            aws_cdk_lib_IResolvable(p.provider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_MeshFilterType(p) {
}
function aws_cdk_lib_aws_appmesh_IMesh(p) {
}
function aws_cdk_lib_aws_appmesh_MeshProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.egressFilter))
            aws_cdk_lib_aws_appmesh_MeshFilterType(p.egressFilter);
        if (!visitedObjects.has(p.serviceDiscovery))
            aws_cdk_lib_aws_appmesh_MeshServiceDiscovery(p.serviceDiscovery);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_Mesh(p) {
}
function aws_cdk_lib_aws_appmesh_IRoute(p) {
}
function aws_cdk_lib_aws_appmesh_RouteBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.routeSpec))
            aws_cdk_lib_aws_appmesh_RouteSpec(p.routeSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_RouteProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mesh))
            aws_cdk_lib_aws_appmesh_IMesh(p.mesh);
        if (!visitedObjects.has(p.virtualRouter))
            aws_cdk_lib_aws_appmesh_IVirtualRouter(p.virtualRouter);
        if (!visitedObjects.has(p.routeSpec))
            aws_cdk_lib_aws_appmesh_RouteSpec(p.routeSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_Route(p) {
}
function aws_cdk_lib_aws_appmesh_RouteAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.virtualRouter))
            aws_cdk_lib_aws_appmesh_IVirtualRouter(p.virtualRouter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_IpPreference(p) {
}
function aws_cdk_lib_aws_appmesh_MeshServiceDiscovery(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipPreference))
            aws_cdk_lib_aws_appmesh_IpPreference(p.ipPreference);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_ServiceDiscoveryConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudmap))
            aws_cdk_lib_aws_appmesh_CfnVirtualNode_AwsCloudMapServiceDiscoveryProperty(p.cloudmap);
        if (!visitedObjects.has(p.dns))
            aws_cdk_lib_aws_appmesh_CfnVirtualNode_DnsServiceDiscoveryProperty(p.dns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_DnsResponseType(p) {
}
function aws_cdk_lib_aws_appmesh_ServiceDiscovery(p) {
}
function aws_cdk_lib_aws_appmesh_WeightedTarget(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.virtualNode))
            aws_cdk_lib_aws_appmesh_IVirtualNode(p.virtualNode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_HttpRouteMatch(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.headers != null)
            for (const o of p.headers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_HeaderMatch(o);
        if (!visitedObjects.has(p.method))
            aws_cdk_lib_aws_appmesh_HttpRouteMethod(p.method);
        if (!visitedObjects.has(p.path))
            aws_cdk_lib_aws_appmesh_HttpRoutePathMatch(p.path);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_appmesh_HttpRouteProtocol(p.protocol);
        if (p.queryParameters != null)
            for (const o of p.queryParameters)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_QueryParameterMatch(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_HttpRouteProtocol(p) {
}
function aws_cdk_lib_aws_appmesh_GrpcRouteMatch(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.metadata != null)
            for (const o of p.metadata)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_HeaderMatch(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_RouteSpecOptionsBase(p) {
}
function aws_cdk_lib_aws_appmesh_HttpRouteSpecOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.weightedTargets != null)
            for (const o of p.weightedTargets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_WeightedTarget(o);
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_aws_appmesh_HttpRouteMatch(p.match);
        if (!visitedObjects.has(p.retryPolicy))
            aws_cdk_lib_aws_appmesh_HttpRetryPolicy(p.retryPolicy);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_aws_appmesh_HttpTimeout(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_HttpRetryPolicy(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.retryTimeout))
            aws_cdk_lib_Duration(p.retryTimeout);
        if (p.httpRetryEvents != null)
            for (const o of p.httpRetryEvents)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_HttpRetryEvent(o);
        if (p.tcpRetryEvents != null)
            for (const o of p.tcpRetryEvents)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_TcpRetryEvent(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_HttpRetryEvent(p) {
}
function aws_cdk_lib_aws_appmesh_TcpRetryEvent(p) {
}
function aws_cdk_lib_aws_appmesh_TcpRouteSpecOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.weightedTargets != null)
            for (const o of p.weightedTargets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_WeightedTarget(o);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_aws_appmesh_TcpTimeout(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GrpcRouteSpecOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_aws_appmesh_GrpcRouteMatch(p.match);
        if (p.weightedTargets != null)
            for (const o of p.weightedTargets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_WeightedTarget(o);
        if (!visitedObjects.has(p.retryPolicy))
            aws_cdk_lib_aws_appmesh_GrpcRetryPolicy(p.retryPolicy);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_aws_appmesh_GrpcTimeout(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GrpcRetryPolicy(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.grpcRetryEvents != null)
            for (const o of p.grpcRetryEvents)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_GrpcRetryEvent(o);
        if (!visitedObjects.has(p.retryTimeout))
            aws_cdk_lib_Duration(p.retryTimeout);
        if (p.httpRetryEvents != null)
            for (const o of p.httpRetryEvents)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_HttpRetryEvent(o);
        if (p.tcpRetryEvents != null)
            for (const o of p.tcpRetryEvents)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_TcpRetryEvent(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GrpcRetryEvent(p) {
}
function aws_cdk_lib_aws_appmesh_RouteSpecConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.grpcRouteSpec))
            aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRouteProperty(p.grpcRouteSpec);
        if (!visitedObjects.has(p.http2RouteSpec))
            aws_cdk_lib_aws_appmesh_CfnRoute_HttpRouteProperty(p.http2RouteSpec);
        if (!visitedObjects.has(p.httpRouteSpec))
            aws_cdk_lib_aws_appmesh_CfnRoute_HttpRouteProperty(p.httpRouteSpec);
        if (!visitedObjects.has(p.tcpRouteSpec))
            aws_cdk_lib_aws_appmesh_CfnRoute_TcpRouteProperty(p.tcpRouteSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_RouteSpec(p) {
}
function aws_cdk_lib_aws_appmesh_HttpTimeout(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.idle))
            aws_cdk_lib_Duration(p.idle);
        if (!visitedObjects.has(p.perRequest))
            aws_cdk_lib_Duration(p.perRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GrpcTimeout(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.idle))
            aws_cdk_lib_Duration(p.idle);
        if (!visitedObjects.has(p.perRequest))
            aws_cdk_lib_Duration(p.perRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_TcpTimeout(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.idle))
            aws_cdk_lib_Duration(p.idle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_OutlierDetection(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.baseEjectionDuration))
            aws_cdk_lib_Duration(p.baseEjectionDuration);
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_Duration(p.interval);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_AccessLogConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.virtualGatewayAccessLog))
            aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayAccessLogProperty(p.virtualGatewayAccessLog);
        if (!visitedObjects.has(p.virtualNodeAccessLog))
            aws_cdk_lib_aws_appmesh_CfnVirtualNode_AccessLogProperty(p.virtualNodeAccessLog);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_AccessLog(p) {
}
function aws_cdk_lib_aws_appmesh_BackendDefaults(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tlsClientPolicy))
            aws_cdk_lib_aws_appmesh_TlsClientPolicy(p.tlsClientPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualServiceBackendOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tlsClientPolicy))
            aws_cdk_lib_aws_appmesh_TlsClientPolicy(p.tlsClientPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_BackendConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.virtualServiceBackend))
            aws_cdk_lib_aws_appmesh_CfnVirtualNode_BackendProperty(p.virtualServiceBackend);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_Backend(p) {
}
function aws_cdk_lib_aws_appmesh_HttpConnectionPool(p) {
}
function aws_cdk_lib_aws_appmesh_TcpConnectionPool(p) {
}
function aws_cdk_lib_aws_appmesh_GrpcConnectionPool(p) {
}
function aws_cdk_lib_aws_appmesh_Http2ConnectionPool(p) {
}
function aws_cdk_lib_aws_appmesh_TlsCertificateConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tlsCertificate))
            aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsCertificateProperty(p.tlsCertificate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_TlsCertificate(p) {
}
function aws_cdk_lib_aws_appmesh_MutualTlsCertificate(p) {
}
function aws_cdk_lib_aws_appmesh_IVirtualNode(p) {
}
function aws_cdk_lib_aws_appmesh_VirtualNodeBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessLog))
            aws_cdk_lib_aws_appmesh_AccessLog(p.accessLog);
        if (!visitedObjects.has(p.backendDefaults))
            aws_cdk_lib_aws_appmesh_BackendDefaults(p.backendDefaults);
        if (p.backends != null)
            for (const o of p.backends)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_Backend(o);
        if (p.listeners != null)
            for (const o of p.listeners)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_VirtualNodeListener(o);
        if (!visitedObjects.has(p.serviceDiscovery))
            aws_cdk_lib_aws_appmesh_ServiceDiscovery(p.serviceDiscovery);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualNodeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mesh))
            aws_cdk_lib_aws_appmesh_IMesh(p.mesh);
        if (!visitedObjects.has(p.accessLog))
            aws_cdk_lib_aws_appmesh_AccessLog(p.accessLog);
        if (!visitedObjects.has(p.backendDefaults))
            aws_cdk_lib_aws_appmesh_BackendDefaults(p.backendDefaults);
        if (p.backends != null)
            for (const o of p.backends)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_Backend(o);
        if (p.listeners != null)
            for (const o of p.listeners)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_VirtualNodeListener(o);
        if (!visitedObjects.has(p.serviceDiscovery))
            aws_cdk_lib_aws_appmesh_ServiceDiscovery(p.serviceDiscovery);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualNode(p) {
}
function aws_cdk_lib_aws_appmesh_VirtualNodeAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mesh))
            aws_cdk_lib_aws_appmesh_IMesh(p.mesh);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_IVirtualRouter(p) {
}
function aws_cdk_lib_aws_appmesh_VirtualRouterBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.listeners != null)
            for (const o of p.listeners)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_VirtualRouterListener(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualRouterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mesh))
            aws_cdk_lib_aws_appmesh_IMesh(p.mesh);
        if (p.listeners != null)
            for (const o of p.listeners)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_VirtualRouterListener(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualRouter(p) {
}
function aws_cdk_lib_aws_appmesh_VirtualRouterAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mesh))
            aws_cdk_lib_aws_appmesh_IMesh(p.mesh);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualRouterListenerConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listener))
            aws_cdk_lib_aws_appmesh_CfnVirtualRouter_VirtualRouterListenerProperty(p.listener);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualRouterListener(p) {
}
function aws_cdk_lib_aws_appmesh_IVirtualService(p) {
}
function aws_cdk_lib_aws_appmesh_VirtualServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.virtualServiceProvider))
            aws_cdk_lib_aws_appmesh_VirtualServiceProvider(p.virtualServiceProvider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualService(p) {
}
function aws_cdk_lib_aws_appmesh_VirtualServiceAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mesh))
            aws_cdk_lib_aws_appmesh_IMesh(p.mesh);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualServiceProviderConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mesh))
            aws_cdk_lib_aws_appmesh_IMesh(p.mesh);
        if (!visitedObjects.has(p.virtualNodeProvider))
            aws_cdk_lib_aws_appmesh_CfnVirtualService_VirtualNodeServiceProviderProperty(p.virtualNodeProvider);
        if (!visitedObjects.has(p.virtualRouterProvider))
            aws_cdk_lib_aws_appmesh_CfnVirtualService_VirtualRouterServiceProviderProperty(p.virtualRouterProvider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualServiceProvider(p) {
}
function aws_cdk_lib_aws_appmesh_VirtualNodeListenerConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listener))
            aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerProperty(p.listener);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_HttpVirtualNodeListenerOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionPool))
            aws_cdk_lib_aws_appmesh_HttpConnectionPool(p.connectionPool);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_appmesh_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.outlierDetection))
            aws_cdk_lib_aws_appmesh_OutlierDetection(p.outlierDetection);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_aws_appmesh_HttpTimeout(p.timeout);
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_aws_appmesh_ListenerTlsOptions(p.tls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_Http2VirtualNodeListenerOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionPool))
            aws_cdk_lib_aws_appmesh_Http2ConnectionPool(p.connectionPool);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_appmesh_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.outlierDetection))
            aws_cdk_lib_aws_appmesh_OutlierDetection(p.outlierDetection);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_aws_appmesh_HttpTimeout(p.timeout);
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_aws_appmesh_ListenerTlsOptions(p.tls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GrpcVirtualNodeListenerOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionPool))
            aws_cdk_lib_aws_appmesh_GrpcConnectionPool(p.connectionPool);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_appmesh_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.outlierDetection))
            aws_cdk_lib_aws_appmesh_OutlierDetection(p.outlierDetection);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_aws_appmesh_GrpcTimeout(p.timeout);
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_aws_appmesh_ListenerTlsOptions(p.tls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_TcpVirtualNodeListenerOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionPool))
            aws_cdk_lib_aws_appmesh_TcpConnectionPool(p.connectionPool);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_appmesh_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.outlierDetection))
            aws_cdk_lib_aws_appmesh_OutlierDetection(p.outlierDetection);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_aws_appmesh_TcpTimeout(p.timeout);
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_aws_appmesh_ListenerTlsOptions(p.tls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualNodeListener(p) {
}
function aws_cdk_lib_aws_appmesh_IVirtualGateway(p) {
}
function aws_cdk_lib_aws_appmesh_VirtualGatewayBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessLog))
            aws_cdk_lib_aws_appmesh_AccessLog(p.accessLog);
        if (!visitedObjects.has(p.backendDefaults))
            aws_cdk_lib_aws_appmesh_BackendDefaults(p.backendDefaults);
        if (p.listeners != null)
            for (const o of p.listeners)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_VirtualGatewayListener(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualGatewayProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mesh))
            aws_cdk_lib_aws_appmesh_IMesh(p.mesh);
        if (!visitedObjects.has(p.accessLog))
            aws_cdk_lib_aws_appmesh_AccessLog(p.accessLog);
        if (!visitedObjects.has(p.backendDefaults))
            aws_cdk_lib_aws_appmesh_BackendDefaults(p.backendDefaults);
        if (p.listeners != null)
            for (const o of p.listeners)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_VirtualGatewayListener(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualGateway(p) {
}
function aws_cdk_lib_aws_appmesh_VirtualGatewayAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mesh))
            aws_cdk_lib_aws_appmesh_IMesh(p.mesh);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_HttpGatewayListenerOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionPool))
            aws_cdk_lib_aws_appmesh_HttpConnectionPool(p.connectionPool);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_appmesh_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_aws_appmesh_ListenerTlsOptions(p.tls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_Http2GatewayListenerOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionPool))
            aws_cdk_lib_aws_appmesh_Http2ConnectionPool(p.connectionPool);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_appmesh_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_aws_appmesh_ListenerTlsOptions(p.tls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GrpcGatewayListenerOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionPool))
            aws_cdk_lib_aws_appmesh_GrpcConnectionPool(p.connectionPool);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_appmesh_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_aws_appmesh_ListenerTlsOptions(p.tls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualGatewayListenerConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listener))
            aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerProperty(p.listener);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_VirtualGatewayListener(p) {
}
function aws_cdk_lib_aws_appmesh_IGatewayRoute(p) {
}
function aws_cdk_lib_aws_appmesh_GatewayRouteBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.routeSpec))
            aws_cdk_lib_aws_appmesh_GatewayRouteSpec(p.routeSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GatewayRouteProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.virtualGateway))
            aws_cdk_lib_aws_appmesh_IVirtualGateway(p.virtualGateway);
        if (!visitedObjects.has(p.routeSpec))
            aws_cdk_lib_aws_appmesh_GatewayRouteSpec(p.routeSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GatewayRoute(p) {
}
function aws_cdk_lib_aws_appmesh_GatewayRouteAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.virtualGateway))
            aws_cdk_lib_aws_appmesh_IVirtualGateway(p.virtualGateway);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GatewayRouteHostnameMatchConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hostnameMatch))
            aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteHostnameMatchProperty(p.hostnameMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GatewayRouteHostnameMatch(p) {
}
function aws_cdk_lib_aws_appmesh_HttpGatewayRouteMatch(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.headers != null)
            for (const o of p.headers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_HeaderMatch(o);
        if (!visitedObjects.has(p.hostname))
            aws_cdk_lib_aws_appmesh_GatewayRouteHostnameMatch(p.hostname);
        if (!visitedObjects.has(p.method))
            aws_cdk_lib_aws_appmesh_HttpRouteMethod(p.method);
        if (!visitedObjects.has(p.path))
            aws_cdk_lib_aws_appmesh_HttpGatewayRoutePathMatch(p.path);
        if (p.queryParameters != null)
            for (const o of p.queryParameters)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_QueryParameterMatch(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GrpcGatewayRouteMatch(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hostname))
            aws_cdk_lib_aws_appmesh_GatewayRouteHostnameMatch(p.hostname);
        if (p.metadata != null)
            for (const o of p.metadata)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appmesh_HeaderMatch(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_CommonGatewayRouteSpecOptions(p) {
}
function aws_cdk_lib_aws_appmesh_HttpGatewayRouteSpecOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.routeTarget))
            aws_cdk_lib_aws_appmesh_IVirtualService(p.routeTarget);
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_aws_appmesh_HttpGatewayRouteMatch(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GrpcGatewayRouteSpecOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_aws_appmesh_GrpcGatewayRouteMatch(p.match);
        if (!visitedObjects.has(p.routeTarget))
            aws_cdk_lib_aws_appmesh_IVirtualService(p.routeTarget);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GatewayRouteSpecConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.grpcSpecConfig))
            aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GrpcGatewayRouteProperty(p.grpcSpecConfig);
        if (!visitedObjects.has(p.http2SpecConfig))
            aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteProperty(p.http2SpecConfig);
        if (!visitedObjects.has(p.httpSpecConfig))
            aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteProperty(p.httpSpecConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GatewayRouteSpec(p) {
}
function aws_cdk_lib_aws_appmesh_HttpHealthCheckOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_Duration(p.interval);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_GrpcHealthCheckOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_Duration(p.interval);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_TcpHealthCheckOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_Duration(p.interval);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_HealthCheckConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.virtualGatewayHealthCheck))
            aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayHealthCheckPolicyProperty(p.virtualGatewayHealthCheck);
        if (!visitedObjects.has(p.virtualNodeHealthCheck))
            aws_cdk_lib_aws_appmesh_CfnVirtualNode_HealthCheckProperty(p.virtualNodeHealthCheck);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_HealthCheckBindOptions(p) {
}
function aws_cdk_lib_aws_appmesh_HealthCheck(p) {
}
function aws_cdk_lib_aws_appmesh_TlsMode(p) {
}
function aws_cdk_lib_aws_appmesh_ListenerTlsOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_appmesh_TlsCertificate(p.certificate);
        if (!visitedObjects.has(p.mode))
            aws_cdk_lib_aws_appmesh_TlsMode(p.mode);
        if (!visitedObjects.has(p.mutualTlsValidation))
            aws_cdk_lib_aws_appmesh_MutualTlsValidation(p.mutualTlsValidation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_TlsValidation(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trust))
            aws_cdk_lib_aws_appmesh_TlsValidationTrust(p.trust);
        if (!visitedObjects.has(p.subjectAlternativeNames))
            aws_cdk_lib_aws_appmesh_SubjectAlternativeNames(p.subjectAlternativeNames);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_MutualTlsValidation(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trust))
            aws_cdk_lib_aws_appmesh_MutualTlsValidationTrust(p.trust);
        if (!visitedObjects.has(p.subjectAlternativeNames))
            aws_cdk_lib_aws_appmesh_SubjectAlternativeNames(p.subjectAlternativeNames);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_TlsValidationTrustConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tlsValidationTrust))
            aws_cdk_lib_aws_appmesh_CfnVirtualNode_TlsValidationContextTrustProperty(p.tlsValidationTrust);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_TlsValidationTrust(p) {
}
function aws_cdk_lib_aws_appmesh_MutualTlsValidationTrust(p) {
}
function aws_cdk_lib_aws_appmesh_SubjectAlternativeNamesMatcherConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.subjectAlternativeNamesMatch))
            aws_cdk_lib_aws_appmesh_CfnVirtualNode_SubjectAlternativeNameMatchersProperty(p.subjectAlternativeNamesMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_SubjectAlternativeNames(p) {
}
function aws_cdk_lib_aws_appmesh_TlsClientPolicy(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.validation))
            aws_cdk_lib_aws_appmesh_TlsValidation(p.validation);
        if (!visitedObjects.has(p.mutualTlsCertificate))
            aws_cdk_lib_aws_appmesh_MutualTlsCertificate(p.mutualTlsCertificate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_HttpRouteMethod(p) {
}
function aws_cdk_lib_aws_appmesh_HeaderMatchConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.headerMatch))
            aws_cdk_lib_aws_appmesh_CfnRoute_HttpRouteHeaderProperty(p.headerMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_HeaderMatch(p) {
}
function aws_cdk_lib_aws_appmesh_QueryParameterMatchConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.queryParameterMatch))
            aws_cdk_lib_aws_appmesh_CfnRoute_QueryParameterProperty(p.queryParameterMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_QueryParameterMatch(p) {
}
function aws_cdk_lib_aws_appmesh_HttpRoutePathMatchConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.wholePathMatch))
            aws_cdk_lib_aws_appmesh_CfnRoute_HttpPathMatchProperty(p.wholePathMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_HttpRoutePathMatch(p) {
}
function aws_cdk_lib_aws_appmesh_HttpGatewayRoutePathMatchConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.prefixPathRewrite))
            aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRoutePrefixRewriteProperty(p.prefixPathRewrite);
        if (!visitedObjects.has(p.wholePathMatch))
            aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpPathMatchProperty(p.wholePathMatch);
        if (!visitedObjects.has(p.wholePathRewrite))
            aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRoutePathRewriteProperty(p.wholePathRewrite);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appmesh_HttpGatewayRoutePathMatch(p) {
}
function aws_cdk_lib_aws_apprunner_CfnObservabilityConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.traceConfiguration))
            aws_cdk_lib_IResolvable(p.traceConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apprunner_CfnObservabilityConfiguration(p) {
}
function aws_cdk_lib_aws_apprunner_CfnObservabilityConfiguration_TraceConfigurationProperty(p) {
}
function aws_cdk_lib_aws_apprunner_CfnServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceConfiguration))
            aws_cdk_lib_IResolvable(p.sourceConfiguration);
        if (!visitedObjects.has(p.encryptionConfiguration))
            aws_cdk_lib_IResolvable(p.encryptionConfiguration);
        if (!visitedObjects.has(p.healthCheckConfiguration))
            aws_cdk_lib_IResolvable(p.healthCheckConfiguration);
        if (!visitedObjects.has(p.instanceConfiguration))
            aws_cdk_lib_IResolvable(p.instanceConfiguration);
        if (!visitedObjects.has(p.networkConfiguration))
            aws_cdk_lib_IResolvable(p.networkConfiguration);
        if (!visitedObjects.has(p.observabilityConfiguration))
            aws_cdk_lib_IResolvable(p.observabilityConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apprunner_CfnService(p) {
}
function aws_cdk_lib_aws_apprunner_CfnService_AuthenticationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_apprunner_CfnService_CodeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.codeConfigurationValues))
            aws_cdk_lib_IResolvable(p.codeConfigurationValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apprunner_CfnService_CodeConfigurationValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.runtimeEnvironmentSecrets))
            aws_cdk_lib_IResolvable(p.runtimeEnvironmentSecrets);
        if (!visitedObjects.has(p.runtimeEnvironmentVariables))
            aws_cdk_lib_IResolvable(p.runtimeEnvironmentVariables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apprunner_CfnService_CodeRepositoryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceCodeVersion))
            aws_cdk_lib_IResolvable(p.sourceCodeVersion);
        if (!visitedObjects.has(p.codeConfiguration))
            aws_cdk_lib_IResolvable(p.codeConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apprunner_CfnService_EgressConfigurationProperty(p) {
}
function aws_cdk_lib_aws_apprunner_CfnService_EncryptionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_apprunner_CfnService_HealthCheckConfigurationProperty(p) {
}
function aws_cdk_lib_aws_apprunner_CfnService_ImageConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.runtimeEnvironmentSecrets))
            aws_cdk_lib_IResolvable(p.runtimeEnvironmentSecrets);
        if (!visitedObjects.has(p.runtimeEnvironmentVariables))
            aws_cdk_lib_IResolvable(p.runtimeEnvironmentVariables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apprunner_CfnService_ImageRepositoryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.imageConfiguration))
            aws_cdk_lib_IResolvable(p.imageConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apprunner_CfnService_IngressConfigurationProperty(p) {
}
function aws_cdk_lib_aws_apprunner_CfnService_InstanceConfigurationProperty(p) {
}
function aws_cdk_lib_aws_apprunner_CfnService_KeyValuePairProperty(p) {
}
function aws_cdk_lib_aws_apprunner_CfnService_NetworkConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.egressConfiguration))
            aws_cdk_lib_IResolvable(p.egressConfiguration);
        if (!visitedObjects.has(p.ingressConfiguration))
            aws_cdk_lib_IResolvable(p.ingressConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apprunner_CfnService_ServiceObservabilityConfigurationProperty(p) {
}
function aws_cdk_lib_aws_apprunner_CfnService_SourceCodeVersionProperty(p) {
}
function aws_cdk_lib_aws_apprunner_CfnService_SourceConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticationConfiguration))
            aws_cdk_lib_IResolvable(p.authenticationConfiguration);
        if (!visitedObjects.has(p.codeRepository))
            aws_cdk_lib_IResolvable(p.codeRepository);
        if (!visitedObjects.has(p.imageRepository))
            aws_cdk_lib_IResolvable(p.imageRepository);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apprunner_CfnVpcConnectorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apprunner_CfnVpcConnector(p) {
}
function aws_cdk_lib_aws_apprunner_CfnVpcIngressConnectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ingressVpcConfiguration))
            aws_cdk_lib_IResolvable(p.ingressVpcConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_apprunner_CfnVpcIngressConnection(p) {
}
function aws_cdk_lib_aws_apprunner_CfnVpcIngressConnection_IngressVpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnAppBlockProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.setupScriptDetails))
            aws_cdk_lib_IResolvable(p.setupScriptDetails);
        if (!visitedObjects.has(p.sourceS3Location))
            aws_cdk_lib_IResolvable(p.sourceS3Location);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appstream_CfnAppBlock(p) {
}
function aws_cdk_lib_aws_appstream_CfnAppBlock_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnAppBlock_ScriptDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scriptS3Location))
            aws_cdk_lib_IResolvable(p.scriptS3Location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appstream_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.iconS3Location))
            aws_cdk_lib_IResolvable(p.iconS3Location);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appstream_CfnApplication(p) {
}
function aws_cdk_lib_aws_appstream_CfnApplication_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnApplicationEntitlementAssociationProps(p) {
}
function aws_cdk_lib_aws_appstream_CfnApplicationEntitlementAssociation(p) {
}
function aws_cdk_lib_aws_appstream_CfnApplicationFleetAssociationProps(p) {
}
function aws_cdk_lib_aws_appstream_CfnApplicationFleetAssociation(p) {
}
function aws_cdk_lib_aws_appstream_CfnDirectoryConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.serviceAccountCredentials))
            aws_cdk_lib_IResolvable(p.serviceAccountCredentials);
        if (!visitedObjects.has(p.certificateBasedAuthProperties))
            aws_cdk_lib_IResolvable(p.certificateBasedAuthProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appstream_CfnDirectoryConfig(p) {
}
function aws_cdk_lib_aws_appstream_CfnDirectoryConfig_CertificateBasedAuthPropertiesProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnDirectoryConfig_ServiceAccountCredentialsProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnEntitlementProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appstream_CfnEntitlement(p) {
}
function aws_cdk_lib_aws_appstream_CfnEntitlement_AttributeProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnFleetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.computeCapacity))
            aws_cdk_lib_IResolvable(p.computeCapacity);
        if (!visitedObjects.has(p.domainJoinInfo))
            aws_cdk_lib_IResolvable(p.domainJoinInfo);
        if (!visitedObjects.has(p.sessionScriptS3Location))
            aws_cdk_lib_IResolvable(p.sessionScriptS3Location);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appstream_CfnFleet(p) {
}
function aws_cdk_lib_aws_appstream_CfnFleet_ComputeCapacityProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnFleet_DomainJoinInfoProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnFleet_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnFleet_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnImageBuilderProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessEndpoints))
            aws_cdk_lib_IResolvable(p.accessEndpoints);
        if (!visitedObjects.has(p.domainJoinInfo))
            aws_cdk_lib_IResolvable(p.domainJoinInfo);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appstream_CfnImageBuilder(p) {
}
function aws_cdk_lib_aws_appstream_CfnImageBuilder_AccessEndpointProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnImageBuilder_DomainJoinInfoProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnImageBuilder_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnStackProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessEndpoints))
            aws_cdk_lib_IResolvable(p.accessEndpoints);
        if (!visitedObjects.has(p.applicationSettings))
            aws_cdk_lib_IResolvable(p.applicationSettings);
        if (!visitedObjects.has(p.storageConnectors))
            aws_cdk_lib_IResolvable(p.storageConnectors);
        if (!visitedObjects.has(p.streamingExperienceSettings))
            aws_cdk_lib_IResolvable(p.streamingExperienceSettings);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.userSettings))
            aws_cdk_lib_IResolvable(p.userSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appstream_CfnStack(p) {
}
function aws_cdk_lib_aws_appstream_CfnStack_AccessEndpointProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnStack_ApplicationSettingsProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnStack_StorageConnectorProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnStack_StreamingExperienceSettingsProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnStack_UserSettingProperty(p) {
}
function aws_cdk_lib_aws_appstream_CfnStackFleetAssociationProps(p) {
}
function aws_cdk_lib_aws_appstream_CfnStackFleetAssociation(p) {
}
function aws_cdk_lib_aws_appstream_CfnStackUserAssociationProps(p) {
}
function aws_cdk_lib_aws_appstream_CfnStackUserAssociation(p) {
}
function aws_cdk_lib_aws_appstream_CfnUserProps(p) {
}
function aws_cdk_lib_aws_appstream_CfnUser(p) {
}
function aws_cdk_lib_aws_appsync_BaseAppsyncFunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_appsync_Code(p.code);
        if (!visitedObjects.has(p.requestMappingTemplate))
            aws_cdk_lib_aws_appsync_MappingTemplate(p.requestMappingTemplate);
        if (!visitedObjects.has(p.responseMappingTemplate))
            aws_cdk_lib_aws_appsync_MappingTemplate(p.responseMappingTemplate);
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_aws_appsync_FunctionRuntime(p.runtime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_AppsyncFunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_appsync_IGraphqlApi(p.api);
        if (!visitedObjects.has(p.dataSource))
            aws_cdk_lib_aws_appsync_BaseDataSource(p.dataSource);
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_appsync_Code(p.code);
        if (!visitedObjects.has(p.requestMappingTemplate))
            aws_cdk_lib_aws_appsync_MappingTemplate(p.requestMappingTemplate);
        if (!visitedObjects.has(p.responseMappingTemplate))
            aws_cdk_lib_aws_appsync_MappingTemplate(p.responseMappingTemplate);
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_aws_appsync_FunctionRuntime(p.runtime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_AppsyncFunctionAttributes(p) {
}
function aws_cdk_lib_aws_appsync_IAppsyncFunction(p) {
}
function aws_cdk_lib_aws_appsync_AppsyncFunction(p) {
}
function aws_cdk_lib_aws_appsync_CfnApiCacheProps(p) {
}
function aws_cdk_lib_aws_appsync_CfnApiCache(p) {
}
function aws_cdk_lib_aws_appsync_CfnApiKeyProps(p) {
}
function aws_cdk_lib_aws_appsync_CfnApiKey(p) {
}
function aws_cdk_lib_aws_appsync_CfnDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamoDbConfig))
            aws_cdk_lib_IResolvable(p.dynamoDbConfig);
        if (!visitedObjects.has(p.elasticsearchConfig))
            aws_cdk_lib_IResolvable(p.elasticsearchConfig);
        if (!visitedObjects.has(p.eventBridgeConfig))
            aws_cdk_lib_IResolvable(p.eventBridgeConfig);
        if (!visitedObjects.has(p.httpConfig))
            aws_cdk_lib_IResolvable(p.httpConfig);
        if (!visitedObjects.has(p.lambdaConfig))
            aws_cdk_lib_IResolvable(p.lambdaConfig);
        if (!visitedObjects.has(p.openSearchServiceConfig))
            aws_cdk_lib_IResolvable(p.openSearchServiceConfig);
        if (!visitedObjects.has(p.relationalDatabaseConfig))
            aws_cdk_lib_IResolvable(p.relationalDatabaseConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_CfnDataSource(p) {
}
function aws_cdk_lib_aws_appsync_CfnDataSource_AuthorizationConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awsIamConfig))
            aws_cdk_lib_IResolvable(p.awsIamConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_CfnDataSource_AwsIamConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnDataSource_DeltaSyncConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnDataSource_DynamoDBConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deltaSyncConfig))
            aws_cdk_lib_IResolvable(p.deltaSyncConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_CfnDataSource_ElasticsearchConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnDataSource_EventBridgeConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnDataSource_HttpConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authorizationConfig))
            aws_cdk_lib_IResolvable(p.authorizationConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_CfnDataSource_LambdaConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnDataSource_OpenSearchServiceConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnDataSource_RdsHttpEndpointConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnDataSource_RelationalDatabaseConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rdsHttpEndpointConfig))
            aws_cdk_lib_IResolvable(p.rdsHttpEndpointConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_CfnDomainNameProps(p) {
}
function aws_cdk_lib_aws_appsync_CfnDomainName(p) {
}
function aws_cdk_lib_aws_appsync_CfnDomainNameApiAssociationProps(p) {
}
function aws_cdk_lib_aws_appsync_CfnDomainNameApiAssociation(p) {
}
function aws_cdk_lib_aws_appsync_CfnFunctionConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_IResolvable(p.runtime);
        if (!visitedObjects.has(p.syncConfig))
            aws_cdk_lib_IResolvable(p.syncConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_CfnFunctionConfiguration(p) {
}
function aws_cdk_lib_aws_appsync_CfnFunctionConfiguration_AppSyncRuntimeProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnFunctionConfiguration_LambdaConflictHandlerConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnFunctionConfiguration_SyncConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambdaConflictHandlerConfig))
            aws_cdk_lib_IResolvable(p.lambdaConflictHandlerConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_CfnGraphQLApiProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.additionalAuthenticationProviders))
            aws_cdk_lib_IResolvable(p.additionalAuthenticationProviders);
        if (!visitedObjects.has(p.lambdaAuthorizerConfig))
            aws_cdk_lib_IResolvable(p.lambdaAuthorizerConfig);
        if (!visitedObjects.has(p.logConfig))
            aws_cdk_lib_IResolvable(p.logConfig);
        if (!visitedObjects.has(p.openIdConnectConfig))
            aws_cdk_lib_IResolvable(p.openIdConnectConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.userPoolConfig))
            aws_cdk_lib_IResolvable(p.userPoolConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_CfnGraphQLApi(p) {
}
function aws_cdk_lib_aws_appsync_CfnGraphQLApi_AdditionalAuthenticationProviderProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambdaAuthorizerConfig))
            aws_cdk_lib_IResolvable(p.lambdaAuthorizerConfig);
        if (!visitedObjects.has(p.openIdConnectConfig))
            aws_cdk_lib_IResolvable(p.openIdConnectConfig);
        if (!visitedObjects.has(p.userPoolConfig))
            aws_cdk_lib_IResolvable(p.userPoolConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_CfnGraphQLApi_CognitoUserPoolConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnGraphQLApi_LambdaAuthorizerConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnGraphQLApi_LogConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnGraphQLApi_OpenIDConnectConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnGraphQLApi_UserPoolConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnGraphQLSchemaProps(p) {
}
function aws_cdk_lib_aws_appsync_CfnGraphQLSchema(p) {
}
function aws_cdk_lib_aws_appsync_CfnResolverProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cachingConfig))
            aws_cdk_lib_IResolvable(p.cachingConfig);
        if (!visitedObjects.has(p.pipelineConfig))
            aws_cdk_lib_IResolvable(p.pipelineConfig);
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_IResolvable(p.runtime);
        if (!visitedObjects.has(p.syncConfig))
            aws_cdk_lib_IResolvable(p.syncConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_CfnResolver(p) {
}
function aws_cdk_lib_aws_appsync_CfnResolver_AppSyncRuntimeProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnResolver_CachingConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnResolver_LambdaConflictHandlerConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnResolver_PipelineConfigProperty(p) {
}
function aws_cdk_lib_aws_appsync_CfnResolver_SyncConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambdaConflictHandlerConfig))
            aws_cdk_lib_IResolvable(p.lambdaConflictHandlerConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_CachingConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_KeyCondition(p) {
}
function aws_cdk_lib_aws_appsync_Assign(p) {
}
function aws_cdk_lib_aws_appsync_PartitionKeyStep(p) {
}
function aws_cdk_lib_aws_appsync_SortKeyStep(p) {
}
function aws_cdk_lib_aws_appsync_PrimaryKey(p) {
}
function aws_cdk_lib_aws_appsync_PartitionKey(p) {
}
function aws_cdk_lib_aws_appsync_AttributeValues(p) {
}
function aws_cdk_lib_aws_appsync_AttributeValuesStep(p) {
}
function aws_cdk_lib_aws_appsync_Values(p) {
}
function aws_cdk_lib_aws_appsync_BaseDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_appsync_IGraphqlApi(p.api);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_BackedDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.serviceRole))
            aws_cdk_lib_aws_iam_IRole(p.serviceRole);
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_appsync_IGraphqlApi(p.api);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_ExtendedDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamoDbConfig))
            aws_cdk_lib_IResolvable(p.dynamoDbConfig);
        if ("elasticsearchConfig" in p)
            print("aws-cdk-lib.aws_appsync.ExtendedDataSourceProps#elasticsearchConfig", "- use `openSearchConfig`");
        if (!visitedObjects.has(p.elasticsearchConfig))
            aws_cdk_lib_IResolvable(p.elasticsearchConfig);
        if (!visitedObjects.has(p.httpConfig))
            aws_cdk_lib_IResolvable(p.httpConfig);
        if (!visitedObjects.has(p.lambdaConfig))
            aws_cdk_lib_IResolvable(p.lambdaConfig);
        if (!visitedObjects.has(p.openSearchServiceConfig))
            aws_cdk_lib_IResolvable(p.openSearchServiceConfig);
        if (!visitedObjects.has(p.relationalDatabaseConfig))
            aws_cdk_lib_IResolvable(p.relationalDatabaseConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_BaseDataSource(p) {
}
function aws_cdk_lib_aws_appsync_BackedDataSource(p) {
}
function aws_cdk_lib_aws_appsync_NoneDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_appsync_IGraphqlApi(p.api);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_NoneDataSource(p) {
}
function aws_cdk_lib_aws_appsync_DynamoDbDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.table))
            aws_cdk_lib_aws_dynamodb_ITable(p.table);
        if (!visitedObjects.has(p.serviceRole))
            aws_cdk_lib_aws_iam_IRole(p.serviceRole);
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_appsync_IGraphqlApi(p.api);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_DynamoDbDataSource(p) {
}
function aws_cdk_lib_aws_appsync_AwsIamConfig(p) {
}
function aws_cdk_lib_aws_appsync_HttpDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authorizationConfig))
            aws_cdk_lib_aws_appsync_AwsIamConfig(p.authorizationConfig);
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_appsync_IGraphqlApi(p.api);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_HttpDataSource(p) {
}
function aws_cdk_lib_aws_appsync_LambdaDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambdaFunction))
            aws_cdk_lib_aws_lambda_IFunction(p.lambdaFunction);
        if (!visitedObjects.has(p.serviceRole))
            aws_cdk_lib_aws_iam_IRole(p.serviceRole);
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_appsync_IGraphqlApi(p.api);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_LambdaDataSource(p) {
}
function aws_cdk_lib_aws_appsync_RdsDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secretStore))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.secretStore);
        if (!visitedObjects.has(p.serverlessCluster))
            aws_cdk_lib_aws_rds_IServerlessCluster(p.serverlessCluster);
        if (!visitedObjects.has(p.serviceRole))
            aws_cdk_lib_aws_iam_IRole(p.serviceRole);
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_appsync_IGraphqlApi(p.api);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_RdsDataSource(p) {
}
function aws_cdk_lib_aws_appsync_ElasticsearchDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("domain" in p)
            print("aws-cdk-lib.aws_appsync.ElasticsearchDataSourceProps#domain", "- use `OpenSearchDataSourceProps` with `OpenSearchDataSource`");
        if (!visitedObjects.has(p.domain))
            aws_cdk_lib_aws_elasticsearch_IDomain(p.domain);
        if (!visitedObjects.has(p.serviceRole))
            aws_cdk_lib_aws_iam_IRole(p.serviceRole);
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_appsync_IGraphqlApi(p.api);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_ElasticsearchDataSource(p) {
}
function aws_cdk_lib_aws_appsync_OpenSearchDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.domain))
            aws_cdk_lib_aws_opensearchservice_IDomain(p.domain);
        if (!visitedObjects.has(p.serviceRole))
            aws_cdk_lib_aws_iam_IRole(p.serviceRole);
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_appsync_IGraphqlApi(p.api);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_OpenSearchDataSource(p) {
}
function aws_cdk_lib_aws_appsync_MappingTemplate(p) {
}
function aws_cdk_lib_aws_appsync_BaseResolverProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cachingConfig))
            aws_cdk_lib_aws_appsync_CachingConfig(p.cachingConfig);
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_appsync_Code(p.code);
        if (p.pipelineConfig != null)
            for (const o of p.pipelineConfig)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appsync_IAppsyncFunction(o);
        if (!visitedObjects.has(p.requestMappingTemplate))
            aws_cdk_lib_aws_appsync_MappingTemplate(p.requestMappingTemplate);
        if (!visitedObjects.has(p.responseMappingTemplate))
            aws_cdk_lib_aws_appsync_MappingTemplate(p.responseMappingTemplate);
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_aws_appsync_FunctionRuntime(p.runtime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_ExtendedResolverProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSource))
            aws_cdk_lib_aws_appsync_BaseDataSource(p.dataSource);
        if (!visitedObjects.has(p.cachingConfig))
            aws_cdk_lib_aws_appsync_CachingConfig(p.cachingConfig);
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_appsync_Code(p.code);
        if (p.pipelineConfig != null)
            for (const o of p.pipelineConfig)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appsync_IAppsyncFunction(o);
        if (!visitedObjects.has(p.requestMappingTemplate))
            aws_cdk_lib_aws_appsync_MappingTemplate(p.requestMappingTemplate);
        if (!visitedObjects.has(p.responseMappingTemplate))
            aws_cdk_lib_aws_appsync_MappingTemplate(p.responseMappingTemplate);
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_aws_appsync_FunctionRuntime(p.runtime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_ResolverProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_appsync_IGraphqlApi(p.api);
        if (!visitedObjects.has(p.dataSource))
            aws_cdk_lib_aws_appsync_BaseDataSource(p.dataSource);
        if (!visitedObjects.has(p.cachingConfig))
            aws_cdk_lib_aws_appsync_CachingConfig(p.cachingConfig);
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_appsync_Code(p.code);
        if (p.pipelineConfig != null)
            for (const o of p.pipelineConfig)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appsync_IAppsyncFunction(o);
        if (!visitedObjects.has(p.requestMappingTemplate))
            aws_cdk_lib_aws_appsync_MappingTemplate(p.requestMappingTemplate);
        if (!visitedObjects.has(p.responseMappingTemplate))
            aws_cdk_lib_aws_appsync_MappingTemplate(p.responseMappingTemplate);
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_aws_appsync_FunctionRuntime(p.runtime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_Resolver(p) {
}
function aws_cdk_lib_aws_appsync_ISchemaConfig(p) {
}
function aws_cdk_lib_aws_appsync_SchemaBindOptions(p) {
}
function aws_cdk_lib_aws_appsync_ISchema(p) {
}
function aws_cdk_lib_aws_appsync_SchemaProps(p) {
}
function aws_cdk_lib_aws_appsync_SchemaFile(p) {
}
function aws_cdk_lib_aws_appsync_AuthorizationType(p) {
}
function aws_cdk_lib_aws_appsync_AuthorizationMode(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authorizationType))
            aws_cdk_lib_aws_appsync_AuthorizationType(p.authorizationType);
        if (!visitedObjects.has(p.apiKeyConfig))
            aws_cdk_lib_aws_appsync_ApiKeyConfig(p.apiKeyConfig);
        if (!visitedObjects.has(p.lambdaAuthorizerConfig))
            aws_cdk_lib_aws_appsync_LambdaAuthorizerConfig(p.lambdaAuthorizerConfig);
        if (!visitedObjects.has(p.openIdConnectConfig))
            aws_cdk_lib_aws_appsync_OpenIdConnectConfig(p.openIdConnectConfig);
        if (!visitedObjects.has(p.userPoolConfig))
            aws_cdk_lib_aws_appsync_UserPoolConfig(p.userPoolConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_UserPoolDefaultAction(p) {
}
function aws_cdk_lib_aws_appsync_UserPoolConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userPool))
            aws_cdk_lib_aws_cognito_IUserPool(p.userPool);
        if (!visitedObjects.has(p.defaultAction))
            aws_cdk_lib_aws_appsync_UserPoolDefaultAction(p.defaultAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_ApiKeyConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.expires))
            aws_cdk_lib_Expiration(p.expires);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_OpenIdConnectConfig(p) {
}
function aws_cdk_lib_aws_appsync_LambdaAuthorizerConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.handler))
            aws_cdk_lib_aws_lambda_IFunction(p.handler);
        if (!visitedObjects.has(p.resultsCacheTtl))
            aws_cdk_lib_Duration(p.resultsCacheTtl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_AuthorizationConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.additionalAuthorizationModes != null)
            for (const o of p.additionalAuthorizationModes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_appsync_AuthorizationMode(o);
        if (!visitedObjects.has(p.defaultAuthorization))
            aws_cdk_lib_aws_appsync_AuthorizationMode(p.defaultAuthorization);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_FieldLogLevel(p) {
}
function aws_cdk_lib_aws_appsync_LogConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldLogLevel))
            aws_cdk_lib_aws_appsync_FieldLogLevel(p.fieldLogLevel);
        if (!visitedObjects.has(p.retention))
            aws_cdk_lib_aws_logs_RetentionDays(p.retention);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_DomainOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_certificatemanager_ICertificate(p.certificate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_GraphqlApiProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.schema))
            aws_cdk_lib_aws_appsync_ISchema(p.schema);
        if (!visitedObjects.has(p.authorizationConfig))
            aws_cdk_lib_aws_appsync_AuthorizationConfig(p.authorizationConfig);
        if (!visitedObjects.has(p.domainName))
            aws_cdk_lib_aws_appsync_DomainOptions(p.domainName);
        if (!visitedObjects.has(p.logConfig))
            aws_cdk_lib_aws_appsync_LogConfig(p.logConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_IamResource(p) {
}
function aws_cdk_lib_aws_appsync_GraphqlApiAttributes(p) {
}
function aws_cdk_lib_aws_appsync_GraphqlApi(p) {
}
function aws_cdk_lib_aws_appsync_DataSourceOptions(p) {
}
function aws_cdk_lib_aws_appsync_HttpDataSourceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authorizationConfig))
            aws_cdk_lib_aws_appsync_AwsIamConfig(p.authorizationConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_appsync_IGraphqlApi(p) {
}
function aws_cdk_lib_aws_appsync_GraphqlApiBase(p) {
}
function aws_cdk_lib_aws_appsync_CodeConfig(p) {
}
function aws_cdk_lib_aws_appsync_Code(p) {
}
function aws_cdk_lib_aws_appsync_AssetCode(p) {
}
function aws_cdk_lib_aws_appsync_InlineCode(p) {
}
function aws_cdk_lib_aws_appsync_RuntimeConfig(p) {
}
function aws_cdk_lib_aws_appsync_FunctionRuntimeFamily(p) {
}
function aws_cdk_lib_aws_appsync_FunctionRuntime(p) {
}
function aws_cdk_lib_aws_aps_CfnRuleGroupsNamespaceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_aps_CfnRuleGroupsNamespace(p) {
}
function aws_cdk_lib_aws_aps_CfnWorkspaceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loggingConfiguration))
            aws_cdk_lib_IResolvable(p.loggingConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_aps_CfnWorkspace(p) {
}
function aws_cdk_lib_aws_aps_CfnWorkspace_LoggingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_athena_CfnDataCatalogProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_athena_CfnDataCatalog(p) {
}
function aws_cdk_lib_aws_athena_CfnNamedQueryProps(p) {
}
function aws_cdk_lib_aws_athena_CfnNamedQuery(p) {
}
function aws_cdk_lib_aws_athena_CfnPreparedStatementProps(p) {
}
function aws_cdk_lib_aws_athena_CfnPreparedStatement(p) {
}
function aws_cdk_lib_aws_athena_CfnWorkGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.workGroupConfiguration))
            aws_cdk_lib_IResolvable(p.workGroupConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_athena_CfnWorkGroup(p) {
}
function aws_cdk_lib_aws_athena_CfnWorkGroup_AclConfigurationProperty(p) {
}
function aws_cdk_lib_aws_athena_CfnWorkGroup_CustomerContentEncryptionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_athena_CfnWorkGroup_EncryptionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_athena_CfnWorkGroup_EngineVersionProperty(p) {
}
function aws_cdk_lib_aws_athena_CfnWorkGroup_ResultConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aclConfiguration))
            aws_cdk_lib_IResolvable(p.aclConfiguration);
        if (!visitedObjects.has(p.encryptionConfiguration))
            aws_cdk_lib_IResolvable(p.encryptionConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_athena_CfnWorkGroup_WorkGroupConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customerContentEncryptionConfiguration))
            aws_cdk_lib_IResolvable(p.customerContentEncryptionConfiguration);
        if (!visitedObjects.has(p.engineVersion))
            aws_cdk_lib_IResolvable(p.engineVersion);
        if (!visitedObjects.has(p.resultConfiguration))
            aws_cdk_lib_IResolvable(p.resultConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_auditmanager_CfnAssessmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assessmentReportsDestination))
            aws_cdk_lib_IResolvable(p.assessmentReportsDestination);
        if (!visitedObjects.has(p.awsAccount))
            aws_cdk_lib_IResolvable(p.awsAccount);
        if (!visitedObjects.has(p.delegations))
            aws_cdk_lib_IResolvable(p.delegations);
        if (!visitedObjects.has(p.roles))
            aws_cdk_lib_IResolvable(p.roles);
        if (!visitedObjects.has(p.scope))
            aws_cdk_lib_IResolvable(p.scope);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_auditmanager_CfnAssessment(p) {
}
function aws_cdk_lib_aws_auditmanager_CfnAssessment_AWSAccountProperty(p) {
}
function aws_cdk_lib_aws_auditmanager_CfnAssessment_AWSServiceProperty(p) {
}
function aws_cdk_lib_aws_auditmanager_CfnAssessment_AssessmentReportsDestinationProperty(p) {
}
function aws_cdk_lib_aws_auditmanager_CfnAssessment_DelegationProperty(p) {
}
function aws_cdk_lib_aws_auditmanager_CfnAssessment_RoleProperty(p) {
}
function aws_cdk_lib_aws_auditmanager_CfnAssessment_ScopeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awsAccounts))
            aws_cdk_lib_IResolvable(p.awsAccounts);
        if (!visitedObjects.has(p.awsServices))
            aws_cdk_lib_IResolvable(p.awsServices);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_AutoScalingGroupRequireImdsv2Aspect(p) {
}
function aws_cdk_lib_aws_autoscaling_Monitoring(p) {
}
function aws_cdk_lib_aws_autoscaling_CommonAutoScalingGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.blockDevices != null)
            for (const o of p.blockDevices)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_BlockDevice(o);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.defaultInstanceWarmup))
            aws_cdk_lib_Duration(p.defaultInstanceWarmup);
        if (p.groupMetrics != null)
            for (const o of p.groupMetrics)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_GroupMetrics(o);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_autoscaling_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.instanceMonitoring))
            aws_cdk_lib_aws_autoscaling_Monitoring(p.instanceMonitoring);
        if (!visitedObjects.has(p.maxInstanceLifetime))
            aws_cdk_lib_Duration(p.maxInstanceLifetime);
        if (p.notifications != null)
            for (const o of p.notifications)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_NotificationConfiguration(o);
        if (!visitedObjects.has(p.signals))
            aws_cdk_lib_aws_autoscaling_Signals(p.signals);
        if (p.terminationPolicies != null)
            for (const o of p.terminationPolicies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_TerminationPolicy(o);
        if (!visitedObjects.has(p.updatePolicy))
            aws_cdk_lib_aws_autoscaling_UpdatePolicy(p.updatePolicy);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_MixedInstancesPolicy(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.launchTemplate))
            aws_cdk_lib_aws_ec2_ILaunchTemplate(p.launchTemplate);
        if (!visitedObjects.has(p.instancesDistribution))
            aws_cdk_lib_aws_autoscaling_InstancesDistribution(p.instancesDistribution);
        if (p.launchTemplateOverrides != null)
            for (const o of p.launchTemplateOverrides)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_LaunchTemplateOverrides(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_OnDemandAllocationStrategy(p) {
}
function aws_cdk_lib_aws_autoscaling_SpotAllocationStrategy(p) {
}
function aws_cdk_lib_aws_autoscaling_InstancesDistribution(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onDemandAllocationStrategy))
            aws_cdk_lib_aws_autoscaling_OnDemandAllocationStrategy(p.onDemandAllocationStrategy);
        if (!visitedObjects.has(p.spotAllocationStrategy))
            aws_cdk_lib_aws_autoscaling_SpotAllocationStrategy(p.spotAllocationStrategy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_LaunchTemplateOverrides(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.launchTemplate))
            aws_cdk_lib_aws_ec2_ILaunchTemplate(p.launchTemplate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_AutoScalingGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.init))
            aws_cdk_lib_aws_ec2_CloudFormationInit(p.init);
        if (!visitedObjects.has(p.initOptions))
            aws_cdk_lib_aws_autoscaling_ApplyCloudFormationInitOptions(p.initOptions);
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.launchTemplate))
            aws_cdk_lib_aws_ec2_ILaunchTemplate(p.launchTemplate);
        if (!visitedObjects.has(p.machineImage))
            aws_cdk_lib_aws_ec2_IMachineImage(p.machineImage);
        if (!visitedObjects.has(p.mixedInstancesPolicy))
            aws_cdk_lib_aws_autoscaling_MixedInstancesPolicy(p.mixedInstancesPolicy);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.userData))
            aws_cdk_lib_aws_ec2_UserData(p.userData);
        if (p.blockDevices != null)
            for (const o of p.blockDevices)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_BlockDevice(o);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.defaultInstanceWarmup))
            aws_cdk_lib_Duration(p.defaultInstanceWarmup);
        if (p.groupMetrics != null)
            for (const o of p.groupMetrics)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_GroupMetrics(o);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_autoscaling_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.instanceMonitoring))
            aws_cdk_lib_aws_autoscaling_Monitoring(p.instanceMonitoring);
        if (!visitedObjects.has(p.maxInstanceLifetime))
            aws_cdk_lib_Duration(p.maxInstanceLifetime);
        if (p.notifications != null)
            for (const o of p.notifications)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_NotificationConfiguration(o);
        if (!visitedObjects.has(p.signals))
            aws_cdk_lib_aws_autoscaling_Signals(p.signals);
        if (p.terminationPolicies != null)
            for (const o of p.terminationPolicies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_TerminationPolicy(o);
        if (!visitedObjects.has(p.updatePolicy))
            aws_cdk_lib_aws_autoscaling_UpdatePolicy(p.updatePolicy);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_Signals(p) {
}
function aws_cdk_lib_aws_autoscaling_RenderSignalsOptions(p) {
}
function aws_cdk_lib_aws_autoscaling_SignalsOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_UpdatePolicy(p) {
}
function aws_cdk_lib_aws_autoscaling_RollingUpdateOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pauseTime))
            aws_cdk_lib_Duration(p.pauseTime);
        if (p.suspendProcesses != null)
            for (const o of p.suspendProcesses)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_ScalingProcess(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_GroupMetrics(p) {
}
function aws_cdk_lib_aws_autoscaling_GroupMetric(p) {
}
function aws_cdk_lib_aws_autoscaling_AutoScalingGroup(p) {
}
function aws_cdk_lib_aws_autoscaling_NotificationConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.topic))
            aws_cdk_lib_aws_sns_ITopic(p.topic);
        if (!visitedObjects.has(p.scalingEvents))
            aws_cdk_lib_aws_autoscaling_ScalingEvents(p.scalingEvents);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_ScalingEvent(p) {
}
function aws_cdk_lib_aws_autoscaling_ScalingEvents(p) {
}
function aws_cdk_lib_aws_autoscaling_ScalingProcess(p) {
}
function aws_cdk_lib_aws_autoscaling_Ec2HealthCheckOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.grace))
            aws_cdk_lib_Duration(p.grace);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_ElbHealthCheckOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.grace))
            aws_cdk_lib_Duration(p.grace);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_HealthCheck(p) {
}
function aws_cdk_lib_aws_autoscaling_IAutoScalingGroup(p) {
}
function aws_cdk_lib_aws_autoscaling_CpuUtilizationScalingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.estimatedInstanceWarmup))
            aws_cdk_lib_Duration(p.estimatedInstanceWarmup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_NetworkUtilizationScalingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.estimatedInstanceWarmup))
            aws_cdk_lib_Duration(p.estimatedInstanceWarmup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_RequestCountScalingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.estimatedInstanceWarmup))
            aws_cdk_lib_Duration(p.estimatedInstanceWarmup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_MetricTargetTrackingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metric))
            aws_cdk_lib_aws_cloudwatch_IMetric(p.metric);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.estimatedInstanceWarmup))
            aws_cdk_lib_Duration(p.estimatedInstanceWarmup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_ApplyCloudFormationInitOptions(p) {
}
function aws_cdk_lib_aws_autoscaling_Schedule(p) {
}
function aws_cdk_lib_aws_autoscaling_CronOptions(p) {
}
function aws_cdk_lib_aws_autoscaling_BasicLifecycleHookProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lifecycleTransition))
            aws_cdk_lib_aws_autoscaling_LifecycleTransition(p.lifecycleTransition);
        if (!visitedObjects.has(p.defaultResult))
            aws_cdk_lib_aws_autoscaling_DefaultResult(p.defaultResult);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_Duration(p.heartbeatTimeout);
        if (!visitedObjects.has(p.notificationTarget))
            aws_cdk_lib_aws_autoscaling_ILifecycleHookTarget(p.notificationTarget);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_LifecycleHookProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScalingGroup))
            aws_cdk_lib_aws_autoscaling_IAutoScalingGroup(p.autoScalingGroup);
        if (!visitedObjects.has(p.lifecycleTransition))
            aws_cdk_lib_aws_autoscaling_LifecycleTransition(p.lifecycleTransition);
        if (!visitedObjects.has(p.defaultResult))
            aws_cdk_lib_aws_autoscaling_DefaultResult(p.defaultResult);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_Duration(p.heartbeatTimeout);
        if (!visitedObjects.has(p.notificationTarget))
            aws_cdk_lib_aws_autoscaling_ILifecycleHookTarget(p.notificationTarget);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_ILifecycleHook(p) {
}
function aws_cdk_lib_aws_autoscaling_LifecycleHook(p) {
}
function aws_cdk_lib_aws_autoscaling_DefaultResult(p) {
}
function aws_cdk_lib_aws_autoscaling_LifecycleTransition(p) {
}
function aws_cdk_lib_aws_autoscaling_BindHookTargetOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lifecycleHook))
            aws_cdk_lib_aws_autoscaling_LifecycleHook(p.lifecycleHook);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_LifecycleHookTargetConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.createdRole))
            aws_cdk_lib_aws_iam_IRole(p.createdRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_ILifecycleHookTarget(p) {
}
function aws_cdk_lib_aws_autoscaling_BasicScheduledActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_aws_autoscaling_Schedule(p.schedule);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_ScheduledActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScalingGroup))
            aws_cdk_lib_aws_autoscaling_IAutoScalingGroup(p.autoScalingGroup);
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_aws_autoscaling_Schedule(p.schedule);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_ScheduledAction(p) {
}
function aws_cdk_lib_aws_autoscaling_StepScalingActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScalingGroup))
            aws_cdk_lib_aws_autoscaling_IAutoScalingGroup(p.autoScalingGroup);
        if (!visitedObjects.has(p.adjustmentType))
            aws_cdk_lib_aws_autoscaling_AdjustmentType(p.adjustmentType);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.estimatedInstanceWarmup))
            aws_cdk_lib_Duration(p.estimatedInstanceWarmup);
        if (!visitedObjects.has(p.metricAggregationType))
            aws_cdk_lib_aws_autoscaling_MetricAggregationType(p.metricAggregationType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_StepScalingAction(p) {
}
function aws_cdk_lib_aws_autoscaling_AdjustmentType(p) {
}
function aws_cdk_lib_aws_autoscaling_MetricAggregationType(p) {
}
function aws_cdk_lib_aws_autoscaling_AdjustmentTier(p) {
}
function aws_cdk_lib_aws_autoscaling_BasicStepScalingPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metric))
            aws_cdk_lib_aws_cloudwatch_IMetric(p.metric);
        if (p.scalingSteps != null)
            for (const o of p.scalingSteps)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_ScalingInterval(o);
        if (!visitedObjects.has(p.adjustmentType))
            aws_cdk_lib_aws_autoscaling_AdjustmentType(p.adjustmentType);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.estimatedInstanceWarmup))
            aws_cdk_lib_Duration(p.estimatedInstanceWarmup);
        if (!visitedObjects.has(p.metricAggregationType))
            aws_cdk_lib_aws_autoscaling_MetricAggregationType(p.metricAggregationType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_StepScalingPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScalingGroup))
            aws_cdk_lib_aws_autoscaling_IAutoScalingGroup(p.autoScalingGroup);
        if (!visitedObjects.has(p.metric))
            aws_cdk_lib_aws_cloudwatch_IMetric(p.metric);
        if (p.scalingSteps != null)
            for (const o of p.scalingSteps)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_ScalingInterval(o);
        if (!visitedObjects.has(p.adjustmentType))
            aws_cdk_lib_aws_autoscaling_AdjustmentType(p.adjustmentType);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.estimatedInstanceWarmup))
            aws_cdk_lib_Duration(p.estimatedInstanceWarmup);
        if (!visitedObjects.has(p.metricAggregationType))
            aws_cdk_lib_aws_autoscaling_MetricAggregationType(p.metricAggregationType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_StepScalingPolicy(p) {
}
function aws_cdk_lib_aws_autoscaling_ScalingInterval(p) {
}
function aws_cdk_lib_aws_autoscaling_BaseTargetTrackingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.estimatedInstanceWarmup))
            aws_cdk_lib_Duration(p.estimatedInstanceWarmup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_BasicTargetTrackingScalingPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customMetric))
            aws_cdk_lib_aws_cloudwatch_IMetric(p.customMetric);
        if (!visitedObjects.has(p.predefinedMetric))
            aws_cdk_lib_aws_autoscaling_PredefinedMetric(p.predefinedMetric);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.estimatedInstanceWarmup))
            aws_cdk_lib_Duration(p.estimatedInstanceWarmup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_TargetTrackingScalingPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScalingGroup))
            aws_cdk_lib_aws_autoscaling_IAutoScalingGroup(p.autoScalingGroup);
        if (!visitedObjects.has(p.customMetric))
            aws_cdk_lib_aws_cloudwatch_IMetric(p.customMetric);
        if (!visitedObjects.has(p.predefinedMetric))
            aws_cdk_lib_aws_autoscaling_PredefinedMetric(p.predefinedMetric);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.estimatedInstanceWarmup))
            aws_cdk_lib_Duration(p.estimatedInstanceWarmup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_TargetTrackingScalingPolicy(p) {
}
function aws_cdk_lib_aws_autoscaling_PredefinedMetric(p) {
}
function aws_cdk_lib_aws_autoscaling_TerminationPolicy(p) {
}
function aws_cdk_lib_aws_autoscaling_BlockDevice(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volume))
            aws_cdk_lib_aws_autoscaling_BlockDeviceVolume(p.volume);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_EbsDeviceOptionsBase(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeType))
            aws_cdk_lib_aws_autoscaling_EbsDeviceVolumeType(p.volumeType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_EbsDeviceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeType))
            aws_cdk_lib_aws_autoscaling_EbsDeviceVolumeType(p.volumeType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_EbsDeviceSnapshotOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeType))
            aws_cdk_lib_aws_autoscaling_EbsDeviceVolumeType(p.volumeType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_EbsDeviceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeType))
            aws_cdk_lib_aws_autoscaling_EbsDeviceVolumeType(p.volumeType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_BlockDeviceVolume(p) {
}
function aws_cdk_lib_aws_autoscaling_EbsDeviceVolumeType(p) {
}
function aws_cdk_lib_aws_autoscaling_WarmPoolOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.poolState))
            aws_cdk_lib_aws_autoscaling_PoolState(p.poolState);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_WarmPoolProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScalingGroup))
            aws_cdk_lib_aws_autoscaling_IAutoScalingGroup(p.autoScalingGroup);
        if (!visitedObjects.has(p.poolState))
            aws_cdk_lib_aws_autoscaling_PoolState(p.poolState);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_WarmPool(p) {
}
function aws_cdk_lib_aws_autoscaling_PoolState(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.launchTemplate))
            aws_cdk_lib_IResolvable(p.launchTemplate);
        if (!visitedObjects.has(p.lifecycleHookSpecificationList))
            aws_cdk_lib_IResolvable(p.lifecycleHookSpecificationList);
        if (!visitedObjects.has(p.metricsCollection))
            aws_cdk_lib_IResolvable(p.metricsCollection);
        if (!visitedObjects.has(p.mixedInstancesPolicy))
            aws_cdk_lib_IResolvable(p.mixedInstancesPolicy);
        if (!visitedObjects.has(p.notificationConfigurations))
            aws_cdk_lib_IResolvable(p.notificationConfigurations);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_TagPropertyProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_AcceleratorCountRequestProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_AcceleratorTotalMemoryMiBRequestProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_BaselineEbsBandwidthMbpsRequestProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_InstanceRequirementsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.acceleratorCount))
            aws_cdk_lib_IResolvable(p.acceleratorCount);
        if (!visitedObjects.has(p.acceleratorTotalMemoryMiB))
            aws_cdk_lib_IResolvable(p.acceleratorTotalMemoryMiB);
        if (!visitedObjects.has(p.baselineEbsBandwidthMbps))
            aws_cdk_lib_IResolvable(p.baselineEbsBandwidthMbps);
        if (!visitedObjects.has(p.memoryGiBPerVCpu))
            aws_cdk_lib_IResolvable(p.memoryGiBPerVCpu);
        if (!visitedObjects.has(p.memoryMiB))
            aws_cdk_lib_IResolvable(p.memoryMiB);
        if (!visitedObjects.has(p.networkBandwidthGbps))
            aws_cdk_lib_IResolvable(p.networkBandwidthGbps);
        if (!visitedObjects.has(p.networkInterfaceCount))
            aws_cdk_lib_IResolvable(p.networkInterfaceCount);
        if (!visitedObjects.has(p.totalLocalStorageGb))
            aws_cdk_lib_IResolvable(p.totalLocalStorageGb);
        if (!visitedObjects.has(p.vCpuCount))
            aws_cdk_lib_IResolvable(p.vCpuCount);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_InstancesDistributionProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_LaunchTemplateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.launchTemplateSpecification))
            aws_cdk_lib_IResolvable(p.launchTemplateSpecification);
        if (!visitedObjects.has(p.overrides))
            aws_cdk_lib_IResolvable(p.overrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_LaunchTemplateOverridesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceRequirements))
            aws_cdk_lib_IResolvable(p.instanceRequirements);
        if (!visitedObjects.has(p.launchTemplateSpecification))
            aws_cdk_lib_IResolvable(p.launchTemplateSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_LaunchTemplateSpecificationProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_LifecycleHookSpecificationProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_MemoryGiBPerVCpuRequestProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_MemoryMiBRequestProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_MetricsCollectionProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_MixedInstancesPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.launchTemplate))
            aws_cdk_lib_IResolvable(p.launchTemplate);
        if (!visitedObjects.has(p.instancesDistribution))
            aws_cdk_lib_IResolvable(p.instancesDistribution);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_NetworkBandwidthGbpsRequestProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_NetworkInterfaceCountRequestProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_NotificationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_TagPropertyProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_TotalLocalStorageGBRequestProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_VCpuCountRequestProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnLaunchConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blockDeviceMappings))
            aws_cdk_lib_IResolvable(p.blockDeviceMappings);
        if (!visitedObjects.has(p.metadataOptions))
            aws_cdk_lib_IResolvable(p.metadataOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnLaunchConfiguration(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnLaunchConfiguration_BlockDeviceProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnLaunchConfiguration_BlockDeviceMappingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ebs))
            aws_cdk_lib_IResolvable(p.ebs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnLaunchConfiguration_MetadataOptionsProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnLifecycleHookProps(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnLifecycleHook(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.predictiveScalingConfiguration))
            aws_cdk_lib_IResolvable(p.predictiveScalingConfiguration);
        if (!visitedObjects.has(p.stepAdjustments))
            aws_cdk_lib_IResolvable(p.stepAdjustments);
        if (!visitedObjects.has(p.targetTrackingConfiguration))
            aws_cdk_lib_IResolvable(p.targetTrackingConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_CustomizedMetricSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_MetricProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_MetricDataQueryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricStat))
            aws_cdk_lib_IResolvable(p.metricStat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_MetricDimensionProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_MetricStatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metric))
            aws_cdk_lib_IResolvable(p.metric);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredefinedMetricSpecificationProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricSpecifications))
            aws_cdk_lib_IResolvable(p.metricSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingCustomizedCapacityMetricProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricDataQueries))
            aws_cdk_lib_IResolvable(p.metricDataQueries);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingCustomizedLoadMetricProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricDataQueries))
            aws_cdk_lib_IResolvable(p.metricDataQueries);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingCustomizedScalingMetricProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricDataQueries))
            aws_cdk_lib_IResolvable(p.metricDataQueries);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingMetricSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customizedCapacityMetricSpecification))
            aws_cdk_lib_IResolvable(p.customizedCapacityMetricSpecification);
        if (!visitedObjects.has(p.customizedLoadMetricSpecification))
            aws_cdk_lib_IResolvable(p.customizedLoadMetricSpecification);
        if (!visitedObjects.has(p.customizedScalingMetricSpecification))
            aws_cdk_lib_IResolvable(p.customizedScalingMetricSpecification);
        if (!visitedObjects.has(p.predefinedLoadMetricSpecification))
            aws_cdk_lib_IResolvable(p.predefinedLoadMetricSpecification);
        if (!visitedObjects.has(p.predefinedMetricPairSpecification))
            aws_cdk_lib_IResolvable(p.predefinedMetricPairSpecification);
        if (!visitedObjects.has(p.predefinedScalingMetricSpecification))
            aws_cdk_lib_IResolvable(p.predefinedScalingMetricSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingPredefinedLoadMetricProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingPredefinedMetricPairProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingPredefinedScalingMetricProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_StepAdjustmentProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_TargetTrackingConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customizedMetricSpecification))
            aws_cdk_lib_IResolvable(p.customizedMetricSpecification);
        if (!visitedObjects.has(p.predefinedMetricSpecification))
            aws_cdk_lib_IResolvable(p.predefinedMetricSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnScheduledActionProps(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnScheduledAction(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnWarmPoolProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceReusePolicy))
            aws_cdk_lib_IResolvable(p.instanceReusePolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_CfnWarmPool(p) {
}
function aws_cdk_lib_aws_autoscaling_CfnWarmPool_InstanceReusePolicyProperty(p) {
}
function aws_cdk_lib_aws_autoscaling_common_ScalingInterval(p) {
}
function aws_cdk_lib_aws_autoscaling_common_CompleteScalingInterval(p) {
}
function aws_cdk_lib_aws_autoscaling_common_Alarms(p) {
}
function aws_cdk_lib_aws_autoscaling_common_IRandomGenerator(p) {
}
function aws_cdk_lib_aws_autoscaling_common_ArbitraryIntervals(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.intervals != null)
            for (const o of p.intervals)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_common_ScalingInterval(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscaling_hooktargets_QueueHook(p) {
}
function aws_cdk_lib_aws_autoscaling_hooktargets_TopicHook(p) {
}
function aws_cdk_lib_aws_autoscaling_hooktargets_FunctionHook(p) {
}
function aws_cdk_lib_aws_autoscalingplans_CfnScalingPlanProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.applicationSource))
            aws_cdk_lib_IResolvable(p.applicationSource);
        if (!visitedObjects.has(p.scalingInstructions))
            aws_cdk_lib_IResolvable(p.scalingInstructions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan(p) {
}
function aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_ApplicationSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tagFilters))
            aws_cdk_lib_IResolvable(p.tagFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_CustomizedLoadMetricSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_CustomizedScalingMetricSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_MetricDimensionProperty(p) {
}
function aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_PredefinedLoadMetricSpecificationProperty(p) {
}
function aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_PredefinedScalingMetricSpecificationProperty(p) {
}
function aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_ScalingInstructionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetTrackingConfigurations))
            aws_cdk_lib_IResolvable(p.targetTrackingConfigurations);
        if (!visitedObjects.has(p.customizedLoadMetricSpecification))
            aws_cdk_lib_IResolvable(p.customizedLoadMetricSpecification);
        if (!visitedObjects.has(p.predefinedLoadMetricSpecification))
            aws_cdk_lib_IResolvable(p.predefinedLoadMetricSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_TagFilterProperty(p) {
}
function aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_TargetTrackingConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customizedScalingMetricSpecification))
            aws_cdk_lib_IResolvable(p.customizedScalingMetricSpecification);
        if (!visitedObjects.has(p.predefinedScalingMetricSpecification))
            aws_cdk_lib_IResolvable(p.predefinedScalingMetricSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_IBackupVault(p) {
}
function aws_cdk_lib_aws_backup_BackupVaultProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessPolicy))
            aws_cdk_lib_aws_iam_PolicyDocument(p.accessPolicy);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.lockConfiguration))
            aws_cdk_lib_aws_backup_LockConfiguration(p.lockConfiguration);
        if (p.notificationEvents != null)
            for (const o of p.notificationEvents)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_backup_BackupVaultEvents(o);
        if (!visitedObjects.has(p.notificationTopic))
            aws_cdk_lib_aws_sns_ITopic(p.notificationTopic);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_BackupVaultEvents(p) {
}
function aws_cdk_lib_aws_backup_LockConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.minRetention))
            aws_cdk_lib_Duration(p.minRetention);
        if (!visitedObjects.has(p.changeableFor))
            aws_cdk_lib_Duration(p.changeableFor);
        if (!visitedObjects.has(p.maxRetention))
            aws_cdk_lib_Duration(p.maxRetention);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_BackupVault(p) {
}
function aws_cdk_lib_aws_backup_IBackupPlan(p) {
}
function aws_cdk_lib_aws_backup_BackupPlanProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.backupPlanRules != null)
            for (const o of p.backupPlanRules)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_backup_BackupPlanRule(o);
        if (!visitedObjects.has(p.backupVault))
            aws_cdk_lib_aws_backup_IBackupVault(p.backupVault);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_BackupPlan(p) {
}
function aws_cdk_lib_aws_backup_BackupPlanRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backupVault))
            aws_cdk_lib_aws_backup_IBackupVault(p.backupVault);
        if (!visitedObjects.has(p.completionWindow))
            aws_cdk_lib_Duration(p.completionWindow);
        if (p.copyActions != null)
            for (const o of p.copyActions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_backup_BackupPlanCopyActionProps(o);
        if (!visitedObjects.has(p.deleteAfter))
            aws_cdk_lib_Duration(p.deleteAfter);
        if (!visitedObjects.has(p.moveToColdStorageAfter))
            aws_cdk_lib_Duration(p.moveToColdStorageAfter);
        if (!visitedObjects.has(p.scheduleExpression))
            aws_cdk_lib_aws_events_Schedule(p.scheduleExpression);
        if (!visitedObjects.has(p.startWindow))
            aws_cdk_lib_Duration(p.startWindow);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_BackupPlanCopyActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationBackupVault))
            aws_cdk_lib_aws_backup_IBackupVault(p.destinationBackupVault);
        if (!visitedObjects.has(p.deleteAfter))
            aws_cdk_lib_Duration(p.deleteAfter);
        if (!visitedObjects.has(p.moveToColdStorageAfter))
            aws_cdk_lib_Duration(p.moveToColdStorageAfter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_BackupPlanRule(p) {
}
function aws_cdk_lib_aws_backup_BackupSelectionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.resources != null)
            for (const o of p.resources)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_backup_BackupResource(o);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_BackupSelectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backupPlan))
            aws_cdk_lib_aws_backup_IBackupPlan(p.backupPlan);
        if (p.resources != null)
            for (const o of p.resources)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_backup_BackupResource(o);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_BackupSelection(p) {
}
function aws_cdk_lib_aws_backup_TagOperation(p) {
}
function aws_cdk_lib_aws_backup_TagCondition(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.operation))
            aws_cdk_lib_aws_backup_TagOperation(p.operation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_BackupResource(p) {
}
function aws_cdk_lib_aws_backup_CfnBackupPlanProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backupPlan))
            aws_cdk_lib_IResolvable(p.backupPlan);
        if (!visitedObjects.has(p.backupPlanTags))
            aws_cdk_lib_IResolvable(p.backupPlanTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_CfnBackupPlan(p) {
}
function aws_cdk_lib_aws_backup_CfnBackupPlan_AdvancedBackupSettingResourceTypeProperty(p) {
}
function aws_cdk_lib_aws_backup_CfnBackupPlan_BackupPlanResourceTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backupPlanRule))
            aws_cdk_lib_IResolvable(p.backupPlanRule);
        if (!visitedObjects.has(p.advancedBackupSettings))
            aws_cdk_lib_IResolvable(p.advancedBackupSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_CfnBackupPlan_BackupRuleResourceTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.copyActions))
            aws_cdk_lib_IResolvable(p.copyActions);
        if (!visitedObjects.has(p.lifecycle))
            aws_cdk_lib_IResolvable(p.lifecycle);
        if (!visitedObjects.has(p.recoveryPointTags))
            aws_cdk_lib_IResolvable(p.recoveryPointTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_CfnBackupPlan_CopyActionResourceTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lifecycle))
            aws_cdk_lib_IResolvable(p.lifecycle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_CfnBackupPlan_LifecycleResourceTypeProperty(p) {
}
function aws_cdk_lib_aws_backup_CfnBackupSelectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backupSelection))
            aws_cdk_lib_IResolvable(p.backupSelection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_CfnBackupSelection(p) {
}
function aws_cdk_lib_aws_backup_CfnBackupSelection_BackupSelectionResourceTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listOfTags))
            aws_cdk_lib_IResolvable(p.listOfTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_CfnBackupSelection_ConditionParameterProperty(p) {
}
function aws_cdk_lib_aws_backup_CfnBackupSelection_ConditionResourceTypeProperty(p) {
}
function aws_cdk_lib_aws_backup_CfnBackupSelection_ConditionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stringEquals))
            aws_cdk_lib_IResolvable(p.stringEquals);
        if (!visitedObjects.has(p.stringLike))
            aws_cdk_lib_IResolvable(p.stringLike);
        if (!visitedObjects.has(p.stringNotEquals))
            aws_cdk_lib_IResolvable(p.stringNotEquals);
        if (!visitedObjects.has(p.stringNotLike))
            aws_cdk_lib_IResolvable(p.stringNotLike);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_CfnBackupVaultProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backupVaultTags))
            aws_cdk_lib_IResolvable(p.backupVaultTags);
        if (!visitedObjects.has(p.lockConfiguration))
            aws_cdk_lib_IResolvable(p.lockConfiguration);
        if (!visitedObjects.has(p.notifications))
            aws_cdk_lib_IResolvable(p.notifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_CfnBackupVault(p) {
}
function aws_cdk_lib_aws_backup_CfnBackupVault_LockConfigurationTypeProperty(p) {
}
function aws_cdk_lib_aws_backup_CfnBackupVault_NotificationObjectTypeProperty(p) {
}
function aws_cdk_lib_aws_backup_CfnFrameworkProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.frameworkControls))
            aws_cdk_lib_IResolvable(p.frameworkControls);
        if (!visitedObjects.has(p.frameworkTags))
            aws_cdk_lib_IResolvable(p.frameworkTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_CfnFramework(p) {
}
function aws_cdk_lib_aws_backup_CfnFramework_ControlInputParameterProperty(p) {
}
function aws_cdk_lib_aws_backup_CfnFramework_ControlScopeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_CfnFramework_FrameworkControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.controlInputParameters))
            aws_cdk_lib_IResolvable(p.controlInputParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_CfnReportPlanProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.reportPlanTags))
            aws_cdk_lib_IResolvable(p.reportPlanTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_backup_CfnReportPlan(p) {
}
function aws_cdk_lib_aws_backup_CfnReportPlan_ReportDeliveryChannelProperty(p) {
}
function aws_cdk_lib_aws_backup_CfnReportPlan_ReportSettingProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnComputeEnvironmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.computeResources))
            aws_cdk_lib_IResolvable(p.computeResources);
        if (!visitedObjects.has(p.eksConfiguration))
            aws_cdk_lib_IResolvable(p.eksConfiguration);
        if (!visitedObjects.has(p.updatePolicy))
            aws_cdk_lib_IResolvable(p.updatePolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnComputeEnvironment(p) {
}
function aws_cdk_lib_aws_batch_CfnComputeEnvironment_ComputeResourcesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ec2Configuration))
            aws_cdk_lib_IResolvable(p.ec2Configuration);
        if (!visitedObjects.has(p.launchTemplate))
            aws_cdk_lib_IResolvable(p.launchTemplate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnComputeEnvironment_Ec2ConfigurationObjectProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnComputeEnvironment_EksConfigurationProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnComputeEnvironment_LaunchTemplateSpecificationProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnComputeEnvironment_UpdatePolicyProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containerProperties))
            aws_cdk_lib_IResolvable(p.containerProperties);
        if (!visitedObjects.has(p.eksProperties))
            aws_cdk_lib_IResolvable(p.eksProperties);
        if (!visitedObjects.has(p.nodeProperties))
            aws_cdk_lib_IResolvable(p.nodeProperties);
        if (!visitedObjects.has(p.retryStrategy))
            aws_cdk_lib_IResolvable(p.retryStrategy);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_IResolvable(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_AuthorizationConfigProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_ContainerPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
        if (!visitedObjects.has(p.fargatePlatformConfiguration))
            aws_cdk_lib_IResolvable(p.fargatePlatformConfiguration);
        if (!visitedObjects.has(p.linuxParameters))
            aws_cdk_lib_IResolvable(p.linuxParameters);
        if (!visitedObjects.has(p.logConfiguration))
            aws_cdk_lib_IResolvable(p.logConfiguration);
        if (!visitedObjects.has(p.mountPoints))
            aws_cdk_lib_IResolvable(p.mountPoints);
        if (!visitedObjects.has(p.networkConfiguration))
            aws_cdk_lib_IResolvable(p.networkConfiguration);
        if (!visitedObjects.has(p.resourceRequirements))
            aws_cdk_lib_IResolvable(p.resourceRequirements);
        if (!visitedObjects.has(p.secrets))
            aws_cdk_lib_IResolvable(p.secrets);
        if (!visitedObjects.has(p.ulimits))
            aws_cdk_lib_IResolvable(p.ulimits);
        if (!visitedObjects.has(p.volumes))
            aws_cdk_lib_IResolvable(p.volumes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_DeviceProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_EfsVolumeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authorizationConfig))
            aws_cdk_lib_IResolvable(p.authorizationConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_EksContainerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.env))
            aws_cdk_lib_IResolvable(p.env);
        if (!visitedObjects.has(p.resources))
            aws_cdk_lib_IResolvable(p.resources);
        if (!visitedObjects.has(p.securityContext))
            aws_cdk_lib_IResolvable(p.securityContext);
        if (!visitedObjects.has(p.volumeMounts))
            aws_cdk_lib_IResolvable(p.volumeMounts);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_EksContainerEnvironmentVariableProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_EksContainerVolumeMountProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_EksPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.podProperties))
            aws_cdk_lib_IResolvable(p.podProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_EksVolumeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.emptyDir))
            aws_cdk_lib_IResolvable(p.emptyDir);
        if (!visitedObjects.has(p.hostPath))
            aws_cdk_lib_IResolvable(p.hostPath);
        if (!visitedObjects.has(p.secret))
            aws_cdk_lib_IResolvable(p.secret);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_EmptyDirProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_EnvironmentProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_EvaluateOnExitProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_FargatePlatformConfigurationProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_HostPathProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_LinuxParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.devices))
            aws_cdk_lib_IResolvable(p.devices);
        if (!visitedObjects.has(p.tmpfs))
            aws_cdk_lib_IResolvable(p.tmpfs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_LogConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secretOptions))
            aws_cdk_lib_IResolvable(p.secretOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_MountPointsProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_NetworkConfigurationProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_NodePropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nodeRangeProperties))
            aws_cdk_lib_IResolvable(p.nodeRangeProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_NodeRangePropertyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.container))
            aws_cdk_lib_IResolvable(p.container);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_PodPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containers))
            aws_cdk_lib_IResolvable(p.containers);
        if (!visitedObjects.has(p.volumes))
            aws_cdk_lib_IResolvable(p.volumes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_ResourceRequirementProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_ResourcesProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_RetryStrategyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.evaluateOnExit))
            aws_cdk_lib_IResolvable(p.evaluateOnExit);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_SecretProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_SecurityContextProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_TimeoutProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_TmpfsProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_UlimitProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_VolumesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.efsVolumeConfiguration))
            aws_cdk_lib_IResolvable(p.efsVolumeConfiguration);
        if (!visitedObjects.has(p.host))
            aws_cdk_lib_IResolvable(p.host);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobDefinition_VolumesHostProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnJobQueueProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.computeEnvironmentOrder))
            aws_cdk_lib_IResolvable(p.computeEnvironmentOrder);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnJobQueue(p) {
}
function aws_cdk_lib_aws_batch_CfnJobQueue_ComputeEnvironmentOrderProperty(p) {
}
function aws_cdk_lib_aws_batch_CfnSchedulingPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fairsharePolicy))
            aws_cdk_lib_IResolvable(p.fairsharePolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnSchedulingPolicy(p) {
}
function aws_cdk_lib_aws_batch_CfnSchedulingPolicy_FairsharePolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.shareDistribution))
            aws_cdk_lib_IResolvable(p.shareDistribution);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_batch_CfnSchedulingPolicy_ShareAttributesProperty(p) {
}
function aws_cdk_lib_aws_billingconductor_CfnBillingGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accountGrouping))
            aws_cdk_lib_IResolvable(p.accountGrouping);
        if (!visitedObjects.has(p.computationPreference))
            aws_cdk_lib_IResolvable(p.computationPreference);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_billingconductor_CfnBillingGroup(p) {
}
function aws_cdk_lib_aws_billingconductor_CfnBillingGroup_AccountGroupingProperty(p) {
}
function aws_cdk_lib_aws_billingconductor_CfnBillingGroup_ComputationPreferenceProperty(p) {
}
function aws_cdk_lib_aws_billingconductor_CfnCustomLineItemProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.billingPeriodRange))
            aws_cdk_lib_IResolvable(p.billingPeriodRange);
        if (!visitedObjects.has(p.customLineItemChargeDetails))
            aws_cdk_lib_IResolvable(p.customLineItemChargeDetails);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_billingconductor_CfnCustomLineItem(p) {
}
function aws_cdk_lib_aws_billingconductor_CfnCustomLineItem_BillingPeriodRangeProperty(p) {
}
function aws_cdk_lib_aws_billingconductor_CfnCustomLineItem_CustomLineItemChargeDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.flat))
            aws_cdk_lib_IResolvable(p.flat);
        if (!visitedObjects.has(p.percentage))
            aws_cdk_lib_IResolvable(p.percentage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_billingconductor_CfnCustomLineItem_CustomLineItemFlatChargeDetailsProperty(p) {
}
function aws_cdk_lib_aws_billingconductor_CfnCustomLineItem_CustomLineItemPercentageChargeDetailsProperty(p) {
}
function aws_cdk_lib_aws_billingconductor_CfnPricingPlanProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_billingconductor_CfnPricingPlan(p) {
}
function aws_cdk_lib_aws_billingconductor_CfnPricingRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.tiering))
            aws_cdk_lib_IResolvable(p.tiering);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_billingconductor_CfnPricingRule(p) {
}
function aws_cdk_lib_aws_billingconductor_CfnPricingRule_FreeTierProperty(p) {
}
function aws_cdk_lib_aws_billingconductor_CfnPricingRule_TieringProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.freeTier))
            aws_cdk_lib_IResolvable(p.freeTier);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_budgets_CfnBudgetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.budget))
            aws_cdk_lib_IResolvable(p.budget);
        if (!visitedObjects.has(p.notificationsWithSubscribers))
            aws_cdk_lib_IResolvable(p.notificationsWithSubscribers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_budgets_CfnBudget(p) {
}
function aws_cdk_lib_aws_budgets_CfnBudget_AutoAdjustDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.historicalOptions))
            aws_cdk_lib_IResolvable(p.historicalOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_budgets_CfnBudget_BudgetDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoAdjustData))
            aws_cdk_lib_IResolvable(p.autoAdjustData);
        if (!visitedObjects.has(p.budgetLimit))
            aws_cdk_lib_IResolvable(p.budgetLimit);
        if (!visitedObjects.has(p.costTypes))
            aws_cdk_lib_IResolvable(p.costTypes);
        if (!visitedObjects.has(p.timePeriod))
            aws_cdk_lib_IResolvable(p.timePeriod);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_budgets_CfnBudget_CostTypesProperty(p) {
}
function aws_cdk_lib_aws_budgets_CfnBudget_HistoricalOptionsProperty(p) {
}
function aws_cdk_lib_aws_budgets_CfnBudget_NotificationProperty(p) {
}
function aws_cdk_lib_aws_budgets_CfnBudget_NotificationWithSubscribersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.notification))
            aws_cdk_lib_IResolvable(p.notification);
        if (!visitedObjects.has(p.subscribers))
            aws_cdk_lib_IResolvable(p.subscribers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_budgets_CfnBudget_SpendProperty(p) {
}
function aws_cdk_lib_aws_budgets_CfnBudget_SubscriberProperty(p) {
}
function aws_cdk_lib_aws_budgets_CfnBudget_TimePeriodProperty(p) {
}
function aws_cdk_lib_aws_budgets_CfnBudgetsActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actionThreshold))
            aws_cdk_lib_IResolvable(p.actionThreshold);
        if (!visitedObjects.has(p.definition))
            aws_cdk_lib_IResolvable(p.definition);
        if (!visitedObjects.has(p.subscribers))
            aws_cdk_lib_IResolvable(p.subscribers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_budgets_CfnBudgetsAction(p) {
}
function aws_cdk_lib_aws_budgets_CfnBudgetsAction_ActionThresholdProperty(p) {
}
function aws_cdk_lib_aws_budgets_CfnBudgetsAction_DefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.iamActionDefinition))
            aws_cdk_lib_IResolvable(p.iamActionDefinition);
        if (!visitedObjects.has(p.scpActionDefinition))
            aws_cdk_lib_IResolvable(p.scpActionDefinition);
        if (!visitedObjects.has(p.ssmActionDefinition))
            aws_cdk_lib_IResolvable(p.ssmActionDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_budgets_CfnBudgetsAction_IamActionDefinitionProperty(p) {
}
function aws_cdk_lib_aws_budgets_CfnBudgetsAction_ScpActionDefinitionProperty(p) {
}
function aws_cdk_lib_aws_budgets_CfnBudgetsAction_SsmActionDefinitionProperty(p) {
}
function aws_cdk_lib_aws_budgets_CfnBudgetsAction_SubscriberProperty(p) {
}
function aws_cdk_lib_aws_cassandra_CfnKeyspaceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cassandra_CfnKeyspace(p) {
}
function aws_cdk_lib_aws_cassandra_CfnTableProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.partitionKeyColumns))
            aws_cdk_lib_IResolvable(p.partitionKeyColumns);
        if (!visitedObjects.has(p.billingMode))
            aws_cdk_lib_IResolvable(p.billingMode);
        if (!visitedObjects.has(p.clusteringKeyColumns))
            aws_cdk_lib_IResolvable(p.clusteringKeyColumns);
        if (!visitedObjects.has(p.encryptionSpecification))
            aws_cdk_lib_IResolvable(p.encryptionSpecification);
        if (!visitedObjects.has(p.regularColumns))
            aws_cdk_lib_IResolvable(p.regularColumns);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cassandra_CfnTable(p) {
}
function aws_cdk_lib_aws_cassandra_CfnTable_BillingModeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.provisionedThroughput))
            aws_cdk_lib_IResolvable(p.provisionedThroughput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cassandra_CfnTable_ClusteringKeyColumnProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cassandra_CfnTable_ColumnProperty(p) {
}
function aws_cdk_lib_aws_cassandra_CfnTable_EncryptionSpecificationProperty(p) {
}
function aws_cdk_lib_aws_cassandra_CfnTable_ProvisionedThroughputProperty(p) {
}
function aws_cdk_lib_aws_ce_CfnAnomalyMonitorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourceTags))
            aws_cdk_lib_IResolvable(p.resourceTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ce_CfnAnomalyMonitor(p) {
}
function aws_cdk_lib_aws_ce_CfnAnomalyMonitor_ResourceTagProperty(p) {
}
function aws_cdk_lib_aws_ce_CfnAnomalySubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.subscribers))
            aws_cdk_lib_IResolvable(p.subscribers);
        if (!visitedObjects.has(p.resourceTags))
            aws_cdk_lib_IResolvable(p.resourceTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ce_CfnAnomalySubscription(p) {
}
function aws_cdk_lib_aws_ce_CfnAnomalySubscription_ResourceTagProperty(p) {
}
function aws_cdk_lib_aws_ce_CfnAnomalySubscription_SubscriberProperty(p) {
}
function aws_cdk_lib_aws_ce_CfnCostCategoryProps(p) {
}
function aws_cdk_lib_aws_ce_CfnCostCategory(p) {
}
function aws_cdk_lib_aws_certificatemanager_ICertificate(p) {
}
function aws_cdk_lib_aws_certificatemanager_CertificateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.validation))
            aws_cdk_lib_aws_certificatemanager_CertificateValidation(p.validation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_certificatemanager_CertificationValidationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hostedZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.hostedZone);
        if (p.hostedZones != null)
            for (const o of Object.values(p.hostedZones))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_route53_IHostedZone(o);
        if (!visitedObjects.has(p.method))
            aws_cdk_lib_aws_certificatemanager_ValidationMethod(p.method);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_certificatemanager_CertificateValidation(p) {
}
function aws_cdk_lib_aws_certificatemanager_Certificate(p) {
}
function aws_cdk_lib_aws_certificatemanager_ValidationMethod(p) {
}
function aws_cdk_lib_aws_certificatemanager_DnsValidatedCertificateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hostedZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.hostedZone);
        if (!visitedObjects.has(p.customResourceRole))
            aws_cdk_lib_aws_iam_IRole(p.customResourceRole);
        if (!visitedObjects.has(p.validation))
            aws_cdk_lib_aws_certificatemanager_CertificateValidation(p.validation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_certificatemanager_DnsValidatedCertificate(p) {
}
function aws_cdk_lib_aws_certificatemanager_PrivateCertificateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.certificateAuthority))
            aws_cdk_lib_aws_acmpca_ICertificateAuthority(p.certificateAuthority);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_certificatemanager_PrivateCertificate(p) {
}
function aws_cdk_lib_aws_certificatemanager_CfnAccountProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.expiryEventsConfiguration))
            aws_cdk_lib_IResolvable(p.expiryEventsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_certificatemanager_CfnAccount(p) {
}
function aws_cdk_lib_aws_certificatemanager_CfnAccount_ExpiryEventsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_certificatemanager_CfnCertificateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.domainValidationOptions))
            aws_cdk_lib_IResolvable(p.domainValidationOptions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_certificatemanager_CfnCertificate(p) {
}
function aws_cdk_lib_aws_certificatemanager_CfnCertificate_DomainValidationOptionProperty(p) {
}
function aws_cdk_lib_aws_chatbot_CfnMicrosoftTeamsChannelConfigurationProps(p) {
}
function aws_cdk_lib_aws_chatbot_CfnMicrosoftTeamsChannelConfiguration(p) {
}
function aws_cdk_lib_aws_chatbot_CfnSlackChannelConfigurationProps(p) {
}
function aws_cdk_lib_aws_chatbot_CfnSlackChannelConfiguration(p) {
}
function aws_cdk_lib_aws_chatbot_SlackChannelConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.guardrailPolicies != null)
            for (const o of p.guardrailPolicies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IManagedPolicy(o);
        if (!visitedObjects.has(p.loggingLevel))
            aws_cdk_lib_aws_chatbot_LoggingLevel(p.loggingLevel);
        if (!visitedObjects.has(p.logRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.logRetention);
        if (!visitedObjects.has(p.logRetentionRetryOptions))
            aws_cdk_lib_aws_logs_LogRetentionRetryOptions(p.logRetentionRetryOptions);
        if (!visitedObjects.has(p.logRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.logRetentionRole);
        if (p.notificationTopics != null)
            for (const o of p.notificationTopics)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_ITopic(o);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_chatbot_LoggingLevel(p) {
}
function aws_cdk_lib_aws_chatbot_ISlackChannelConfiguration(p) {
}
function aws_cdk_lib_aws_chatbot_SlackChannelConfiguration(p) {
}
function aws_cdk_lib_aws_cloud9_CfnEnvironmentEC2Props(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.repositories))
            aws_cdk_lib_IResolvable(p.repositories);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloud9_CfnEnvironmentEC2(p) {
}
function aws_cdk_lib_aws_cloud9_CfnEnvironmentEC2_RepositoryProperty(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnCustomResourceProps(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnCustomResource(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnHookDefaultVersionProps(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnHookDefaultVersion(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnHookTypeConfigProps(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnHookTypeConfig(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnHookVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loggingConfig))
            aws_cdk_lib_IResolvable(p.loggingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudformation_CfnHookVersion(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnHookVersion_LoggingConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnMacroProps(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnMacro(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnModuleDefaultVersionProps(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnModuleDefaultVersion(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnModuleVersionProps(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnModuleVersion(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnPublicTypeVersionProps(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnPublicTypeVersion(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnPublisherProps(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnPublisher(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnResourceDefaultVersionProps(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnResourceDefaultVersion(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnResourceVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loggingConfig))
            aws_cdk_lib_IResolvable(p.loggingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudformation_CfnResourceVersion(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnResourceVersion_LoggingConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnStackProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudformation_CfnStack(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnStackSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoDeployment))
            aws_cdk_lib_IResolvable(p.autoDeployment);
        if (!visitedObjects.has(p.operationPreferences))
            aws_cdk_lib_IResolvable(p.operationPreferences);
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (!visitedObjects.has(p.stackInstancesGroup))
            aws_cdk_lib_IResolvable(p.stackInstancesGroup);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudformation_CfnStackSet(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnStackSet_AutoDeploymentProperty(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnStackSet_DeploymentTargetsProperty(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnStackSet_ManagedExecutionProperty(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnStackSet_OperationPreferencesProperty(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnStackSet_ParameterProperty(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnStackSet_StackInstancesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deploymentTargets))
            aws_cdk_lib_IResolvable(p.deploymentTargets);
        if (!visitedObjects.has(p.parameterOverrides))
            aws_cdk_lib_IResolvable(p.parameterOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudformation_CfnTypeActivationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loggingConfig))
            aws_cdk_lib_IResolvable(p.loggingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudformation_CfnTypeActivation(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnTypeActivation_LoggingConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnWaitConditionProps(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnWaitCondition(p) {
}
function aws_cdk_lib_aws_cloudformation_CfnWaitConditionHandle(p) {
}
function aws_cdk_lib_aws_cloudfront_experimental_EdgeFunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_lambda_Code(p.code);
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_aws_lambda_Runtime(p.runtime);
        if (!visitedObjects.has(p.adotInstrumentation))
            aws_cdk_lib_aws_lambda_AdotInstrumentationConfig(p.adotInstrumentation);
        if (!visitedObjects.has(p.architecture))
            aws_cdk_lib_aws_lambda_Architecture(p.architecture);
        if (!visitedObjects.has(p.codeSigningConfig))
            aws_cdk_lib_aws_lambda_ICodeSigningConfig(p.codeSigningConfig);
        if (!visitedObjects.has(p.currentVersionOptions))
            aws_cdk_lib_aws_lambda_VersionOptions(p.currentVersionOptions);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.deadLetterTopic))
            aws_cdk_lib_aws_sns_ITopic(p.deadLetterTopic);
        if (!visitedObjects.has(p.environmentEncryption))
            aws_cdk_lib_aws_kms_IKey(p.environmentEncryption);
        if (!visitedObjects.has(p.ephemeralStorageSize))
            aws_cdk_lib_Size(p.ephemeralStorageSize);
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_IEventSource(o);
        if (!visitedObjects.has(p.filesystem))
            aws_cdk_lib_aws_lambda_FileSystem(p.filesystem);
        if (p.initialPolicy != null)
            for (const o of p.initialPolicy)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (!visitedObjects.has(p.insightsVersion))
            aws_cdk_lib_aws_lambda_LambdaInsightsVersion(p.insightsVersion);
        if (p.layers != null)
            for (const o of p.layers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_ILayerVersion(o);
        if (!visitedObjects.has(p.logRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.logRetention);
        if (!visitedObjects.has(p.logRetentionRetryOptions))
            aws_cdk_lib_aws_lambda_LogRetentionRetryOptions(p.logRetentionRetryOptions);
        if (!visitedObjects.has(p.logRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.logRetentionRole);
        if (!visitedObjects.has(p.profilingGroup))
            aws_cdk_lib_aws_codeguruprofiler_IProfilingGroup(p.profilingGroup);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.runtimeManagementMode))
            aws_cdk_lib_aws_lambda_RuntimeManagementMode(p.runtimeManagementMode);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.tracing))
            aws_cdk_lib_aws_lambda_Tracing(p.tracing);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_experimental_EdgeFunction(p) {
}
function aws_cdk_lib_aws_cloudfront_ICachePolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_CachePolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cookieBehavior))
            aws_cdk_lib_aws_cloudfront_CacheCookieBehavior(p.cookieBehavior);
        if (!visitedObjects.has(p.defaultTtl))
            aws_cdk_lib_Duration(p.defaultTtl);
        if (!visitedObjects.has(p.headerBehavior))
            aws_cdk_lib_aws_cloudfront_CacheHeaderBehavior(p.headerBehavior);
        if (!visitedObjects.has(p.maxTtl))
            aws_cdk_lib_Duration(p.maxTtl);
        if (!visitedObjects.has(p.minTtl))
            aws_cdk_lib_Duration(p.minTtl);
        if (!visitedObjects.has(p.queryStringBehavior))
            aws_cdk_lib_aws_cloudfront_CacheQueryStringBehavior(p.queryStringBehavior);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CachePolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_CacheCookieBehavior(p) {
}
function aws_cdk_lib_aws_cloudfront_CacheHeaderBehavior(p) {
}
function aws_cdk_lib_aws_cloudfront_CacheQueryStringBehavior(p) {
}
function aws_cdk_lib_aws_cloudfront_IDistribution(p) {
}
function aws_cdk_lib_aws_cloudfront_DistributionAttributes(p) {
}
function aws_cdk_lib_aws_cloudfront_DistributionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultBehavior))
            aws_cdk_lib_aws_cloudfront_BehaviorOptions(p.defaultBehavior);
        if (p.additionalBehaviors != null)
            for (const o of Object.values(p.additionalBehaviors))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_BehaviorOptions(o);
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_certificatemanager_ICertificate(p.certificate);
        if (p.errorResponses != null)
            for (const o of p.errorResponses)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_ErrorResponse(o);
        if (!visitedObjects.has(p.geoRestriction))
            aws_cdk_lib_aws_cloudfront_GeoRestriction(p.geoRestriction);
        if (!visitedObjects.has(p.httpVersion))
            aws_cdk_lib_aws_cloudfront_HttpVersion(p.httpVersion);
        if (!visitedObjects.has(p.logBucket))
            aws_cdk_lib_aws_s3_IBucket(p.logBucket);
        if (!visitedObjects.has(p.minimumProtocolVersion))
            aws_cdk_lib_aws_cloudfront_SecurityPolicyProtocol(p.minimumProtocolVersion);
        if (!visitedObjects.has(p.priceClass))
            aws_cdk_lib_aws_cloudfront_PriceClass(p.priceClass);
        if (!visitedObjects.has(p.sslSupportMethod))
            aws_cdk_lib_aws_cloudfront_SSLMethod(p.sslSupportMethod);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_Distribution(p) {
}
function aws_cdk_lib_aws_cloudfront_HttpVersion(p) {
}
function aws_cdk_lib_aws_cloudfront_PriceClass(p) {
}
function aws_cdk_lib_aws_cloudfront_ViewerProtocolPolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_OriginProtocolPolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_SSLMethod(p) {
}
function aws_cdk_lib_aws_cloudfront_SecurityPolicyProtocol(p) {
}
function aws_cdk_lib_aws_cloudfront_AllowedMethods(p) {
}
function aws_cdk_lib_aws_cloudfront_CachedMethods(p) {
}
function aws_cdk_lib_aws_cloudfront_ErrorResponse(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_LambdaEdgeEventType(p) {
}
function aws_cdk_lib_aws_cloudfront_EdgeLambda(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventType))
            aws_cdk_lib_aws_cloudfront_LambdaEdgeEventType(p.eventType);
        if (!visitedObjects.has(p.functionVersion))
            aws_cdk_lib_aws_lambda_IVersion(p.functionVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_AddBehaviorOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.allowedMethods))
            aws_cdk_lib_aws_cloudfront_AllowedMethods(p.allowedMethods);
        if (!visitedObjects.has(p.cachedMethods))
            aws_cdk_lib_aws_cloudfront_CachedMethods(p.cachedMethods);
        if (!visitedObjects.has(p.cachePolicy))
            aws_cdk_lib_aws_cloudfront_ICachePolicy(p.cachePolicy);
        if (p.edgeLambdas != null)
            for (const o of p.edgeLambdas)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_EdgeLambda(o);
        if (p.functionAssociations != null)
            for (const o of p.functionAssociations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_FunctionAssociation(o);
        if (!visitedObjects.has(p.originRequestPolicy))
            aws_cdk_lib_aws_cloudfront_IOriginRequestPolicy(p.originRequestPolicy);
        if (!visitedObjects.has(p.responseHeadersPolicy))
            aws_cdk_lib_aws_cloudfront_IResponseHeadersPolicy(p.responseHeadersPolicy);
        if (p.trustedKeyGroups != null)
            for (const o of p.trustedKeyGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_IKeyGroup(o);
        if (!visitedObjects.has(p.viewerProtocolPolicy))
            aws_cdk_lib_aws_cloudfront_ViewerProtocolPolicy(p.viewerProtocolPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_BehaviorOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.origin))
            aws_cdk_lib_aws_cloudfront_IOrigin(p.origin);
        if (!visitedObjects.has(p.allowedMethods))
            aws_cdk_lib_aws_cloudfront_AllowedMethods(p.allowedMethods);
        if (!visitedObjects.has(p.cachedMethods))
            aws_cdk_lib_aws_cloudfront_CachedMethods(p.cachedMethods);
        if (!visitedObjects.has(p.cachePolicy))
            aws_cdk_lib_aws_cloudfront_ICachePolicy(p.cachePolicy);
        if (p.edgeLambdas != null)
            for (const o of p.edgeLambdas)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_EdgeLambda(o);
        if (p.functionAssociations != null)
            for (const o of p.functionAssociations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_FunctionAssociation(o);
        if (!visitedObjects.has(p.originRequestPolicy))
            aws_cdk_lib_aws_cloudfront_IOriginRequestPolicy(p.originRequestPolicy);
        if (!visitedObjects.has(p.responseHeadersPolicy))
            aws_cdk_lib_aws_cloudfront_IResponseHeadersPolicy(p.responseHeadersPolicy);
        if (p.trustedKeyGroups != null)
            for (const o of p.trustedKeyGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_IKeyGroup(o);
        if (!visitedObjects.has(p.viewerProtocolPolicy))
            aws_cdk_lib_aws_cloudfront_ViewerProtocolPolicy(p.viewerProtocolPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_FunctionCode(p) {
}
function aws_cdk_lib_aws_cloudfront_FileCodeOptions(p) {
}
function aws_cdk_lib_aws_cloudfront_IFunction(p) {
}
function aws_cdk_lib_aws_cloudfront_FunctionAttributes(p) {
}
function aws_cdk_lib_aws_cloudfront_FunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_cloudfront_FunctionCode(p.code);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_Function(p) {
}
function aws_cdk_lib_aws_cloudfront_FunctionEventType(p) {
}
function aws_cdk_lib_aws_cloudfront_FunctionAssociation(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventType))
            aws_cdk_lib_aws_cloudfront_FunctionEventType(p.eventType);
        if (!visitedObjects.has(p.function))
            aws_cdk_lib_aws_cloudfront_IFunction(p.function);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_GeoRestriction(p) {
}
function aws_cdk_lib_aws_cloudfront_IKeyGroup(p) {
}
function aws_cdk_lib_aws_cloudfront_KeyGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.items != null)
            for (const o of p.items)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_IPublicKey(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_KeyGroup(p) {
}
function aws_cdk_lib_aws_cloudfront_OriginFailoverConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.failoverOrigin))
            aws_cdk_lib_aws_cloudfront_IOrigin(p.failoverOrigin);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_OriginBindConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.failoverConfig))
            aws_cdk_lib_aws_cloudfront_OriginFailoverConfig(p.failoverConfig);
        if (!visitedObjects.has(p.originProperty))
            aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginProperty(p.originProperty);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_IOrigin(p) {
}
function aws_cdk_lib_aws_cloudfront_OriginOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionTimeout))
            aws_cdk_lib_Duration(p.connectionTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_OriginProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionTimeout))
            aws_cdk_lib_Duration(p.connectionTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_OriginBindOptions(p) {
}
function aws_cdk_lib_aws_cloudfront_OriginBase(p) {
}
function aws_cdk_lib_aws_cloudfront_OriginAccessIdentityProps(p) {
}
function aws_cdk_lib_aws_cloudfront_IOriginAccessIdentity(p) {
}
function aws_cdk_lib_aws_cloudfront_OriginAccessIdentity(p) {
}
function aws_cdk_lib_aws_cloudfront_IOriginRequestPolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_OriginRequestPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cookieBehavior))
            aws_cdk_lib_aws_cloudfront_OriginRequestCookieBehavior(p.cookieBehavior);
        if (!visitedObjects.has(p.headerBehavior))
            aws_cdk_lib_aws_cloudfront_OriginRequestHeaderBehavior(p.headerBehavior);
        if (!visitedObjects.has(p.queryStringBehavior))
            aws_cdk_lib_aws_cloudfront_OriginRequestQueryStringBehavior(p.queryStringBehavior);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_OriginRequestPolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_OriginRequestCookieBehavior(p) {
}
function aws_cdk_lib_aws_cloudfront_OriginRequestHeaderBehavior(p) {
}
function aws_cdk_lib_aws_cloudfront_OriginRequestQueryStringBehavior(p) {
}
function aws_cdk_lib_aws_cloudfront_IPublicKey(p) {
}
function aws_cdk_lib_aws_cloudfront_PublicKeyProps(p) {
}
function aws_cdk_lib_aws_cloudfront_PublicKey(p) {
}
function aws_cdk_lib_aws_cloudfront_IResponseHeadersPolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_ResponseHeadersPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.corsBehavior))
            aws_cdk_lib_aws_cloudfront_ResponseHeadersCorsBehavior(p.corsBehavior);
        if (!visitedObjects.has(p.customHeadersBehavior))
            aws_cdk_lib_aws_cloudfront_ResponseCustomHeadersBehavior(p.customHeadersBehavior);
        if (!visitedObjects.has(p.securityHeadersBehavior))
            aws_cdk_lib_aws_cloudfront_ResponseSecurityHeadersBehavior(p.securityHeadersBehavior);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_ResponseHeadersPolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_ResponseHeadersCorsBehavior(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessControlMaxAge))
            aws_cdk_lib_Duration(p.accessControlMaxAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_ResponseCustomHeadersBehavior(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.customHeaders != null)
            for (const o of p.customHeaders)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_ResponseCustomHeader(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_ResponseCustomHeader(p) {
}
function aws_cdk_lib_aws_cloudfront_ResponseSecurityHeadersBehavior(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.contentSecurityPolicy))
            aws_cdk_lib_aws_cloudfront_ResponseHeadersContentSecurityPolicy(p.contentSecurityPolicy);
        if (!visitedObjects.has(p.contentTypeOptions))
            aws_cdk_lib_aws_cloudfront_ResponseHeadersContentTypeOptions(p.contentTypeOptions);
        if (!visitedObjects.has(p.frameOptions))
            aws_cdk_lib_aws_cloudfront_ResponseHeadersFrameOptions(p.frameOptions);
        if (!visitedObjects.has(p.referrerPolicy))
            aws_cdk_lib_aws_cloudfront_ResponseHeadersReferrerPolicy(p.referrerPolicy);
        if (!visitedObjects.has(p.strictTransportSecurity))
            aws_cdk_lib_aws_cloudfront_ResponseHeadersStrictTransportSecurity(p.strictTransportSecurity);
        if (!visitedObjects.has(p.xssProtection))
            aws_cdk_lib_aws_cloudfront_ResponseHeadersXSSProtection(p.xssProtection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_ResponseHeadersContentSecurityPolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_ResponseHeadersContentTypeOptions(p) {
}
function aws_cdk_lib_aws_cloudfront_ResponseHeadersFrameOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.frameOption))
            aws_cdk_lib_aws_cloudfront_HeadersFrameOption(p.frameOption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_ResponseHeadersReferrerPolicy(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.referrerPolicy))
            aws_cdk_lib_aws_cloudfront_HeadersReferrerPolicy(p.referrerPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_ResponseHeadersStrictTransportSecurity(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessControlMaxAge))
            aws_cdk_lib_Duration(p.accessControlMaxAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_ResponseHeadersXSSProtection(p) {
}
function aws_cdk_lib_aws_cloudfront_HeadersFrameOption(p) {
}
function aws_cdk_lib_aws_cloudfront_HeadersReferrerPolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_FailoverStatusCode(p) {
}
function aws_cdk_lib_aws_cloudfront_LoggingConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_SourceConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.behaviors != null)
            for (const o of p.behaviors)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_Behavior(o);
        if (!visitedObjects.has(p.connectionTimeout))
            aws_cdk_lib_Duration(p.connectionTimeout);
        if (!visitedObjects.has(p.customOriginSource))
            aws_cdk_lib_aws_cloudfront_CustomOriginConfig(p.customOriginSource);
        if (p.failoverCriteriaStatusCodes != null)
            for (const o of p.failoverCriteriaStatusCodes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_FailoverStatusCode(o);
        if (!visitedObjects.has(p.failoverCustomOriginSource))
            aws_cdk_lib_aws_cloudfront_CustomOriginConfig(p.failoverCustomOriginSource);
        if (!visitedObjects.has(p.failoverS3OriginSource))
            aws_cdk_lib_aws_cloudfront_S3OriginConfig(p.failoverS3OriginSource);
        if (!visitedObjects.has(p.s3OriginSource))
            aws_cdk_lib_aws_cloudfront_S3OriginConfig(p.s3OriginSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CustomOriginConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.allowedOriginSSLVersions != null)
            for (const o of p.allowedOriginSSLVersions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_OriginSslPolicy(o);
        if (!visitedObjects.has(p.originKeepaliveTimeout))
            aws_cdk_lib_Duration(p.originKeepaliveTimeout);
        if (!visitedObjects.has(p.originProtocolPolicy))
            aws_cdk_lib_aws_cloudfront_OriginProtocolPolicy(p.originProtocolPolicy);
        if (!visitedObjects.has(p.originReadTimeout))
            aws_cdk_lib_Duration(p.originReadTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_OriginSslPolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_S3OriginConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3BucketSource))
            aws_cdk_lib_aws_s3_IBucket(p.s3BucketSource);
        if (!visitedObjects.has(p.originAccessIdentity))
            aws_cdk_lib_aws_cloudfront_IOriginAccessIdentity(p.originAccessIdentity);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CloudFrontAllowedMethods(p) {
}
function aws_cdk_lib_aws_cloudfront_CloudFrontAllowedCachedMethods(p) {
}
function aws_cdk_lib_aws_cloudfront_Behavior(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.allowedMethods))
            aws_cdk_lib_aws_cloudfront_CloudFrontAllowedMethods(p.allowedMethods);
        if (!visitedObjects.has(p.cachedMethods))
            aws_cdk_lib_aws_cloudfront_CloudFrontAllowedCachedMethods(p.cachedMethods);
        if (!visitedObjects.has(p.defaultTtl))
            aws_cdk_lib_Duration(p.defaultTtl);
        if (!visitedObjects.has(p.forwardedValues))
            aws_cdk_lib_aws_cloudfront_CfnDistribution_ForwardedValuesProperty(p.forwardedValues);
        if (p.functionAssociations != null)
            for (const o of p.functionAssociations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_FunctionAssociation(o);
        if (p.lambdaFunctionAssociations != null)
            for (const o of p.lambdaFunctionAssociations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_LambdaFunctionAssociation(o);
        if (!visitedObjects.has(p.maxTtl))
            aws_cdk_lib_Duration(p.maxTtl);
        if (!visitedObjects.has(p.minTtl))
            aws_cdk_lib_Duration(p.minTtl);
        if (p.trustedKeyGroups != null)
            for (const o of p.trustedKeyGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_IKeyGroup(o);
        if ("trustedSigners" in p)
            print("aws-cdk-lib.aws_cloudfront.Behavior#trustedSigners", "- We recommend using trustedKeyGroups instead of trustedSigners.");
        if (!visitedObjects.has(p.viewerProtocolPolicy))
            aws_cdk_lib_aws_cloudfront_ViewerProtocolPolicy(p.viewerProtocolPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_LambdaFunctionAssociation(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventType))
            aws_cdk_lib_aws_cloudfront_LambdaEdgeEventType(p.eventType);
        if (!visitedObjects.has(p.lambdaFunction))
            aws_cdk_lib_aws_lambda_IVersion(p.lambdaFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_ViewerCertificateOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityPolicy))
            aws_cdk_lib_aws_cloudfront_SecurityPolicyProtocol(p.securityPolicy);
        if (!visitedObjects.has(p.sslMethod))
            aws_cdk_lib_aws_cloudfront_SSLMethod(p.sslMethod);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_ViewerCertificate(p) {
}
function aws_cdk_lib_aws_cloudfront_CloudFrontWebDistributionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.originConfigs != null)
            for (const o of p.originConfigs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_SourceConfiguration(o);
        if (p.errorConfigurations != null)
            for (const o of p.errorConfigurations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_CfnDistribution_CustomErrorResponseProperty(o);
        if (!visitedObjects.has(p.geoRestriction))
            aws_cdk_lib_aws_cloudfront_GeoRestriction(p.geoRestriction);
        if (!visitedObjects.has(p.httpVersion))
            aws_cdk_lib_aws_cloudfront_HttpVersion(p.httpVersion);
        if (!visitedObjects.has(p.loggingConfig))
            aws_cdk_lib_aws_cloudfront_LoggingConfiguration(p.loggingConfig);
        if (!visitedObjects.has(p.priceClass))
            aws_cdk_lib_aws_cloudfront_PriceClass(p.priceClass);
        if (!visitedObjects.has(p.viewerCertificate))
            aws_cdk_lib_aws_cloudfront_ViewerCertificate(p.viewerCertificate);
        if (!visitedObjects.has(p.viewerProtocolPolicy))
            aws_cdk_lib_aws_cloudfront_ViewerProtocolPolicy(p.viewerProtocolPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CloudFrontWebDistributionAttributes(p) {
}
function aws_cdk_lib_aws_cloudfront_CloudFrontWebDistribution(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnCachePolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cachePolicyConfig))
            aws_cdk_lib_IResolvable(p.cachePolicyConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnCachePolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnCachePolicy_CachePolicyConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parametersInCacheKeyAndForwardedToOrigin))
            aws_cdk_lib_IResolvable(p.parametersInCacheKeyAndForwardedToOrigin);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnCachePolicy_CookiesConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnCachePolicy_HeadersConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnCachePolicy_ParametersInCacheKeyAndForwardedToOriginProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cookiesConfig))
            aws_cdk_lib_IResolvable(p.cookiesConfig);
        if (!visitedObjects.has(p.headersConfig))
            aws_cdk_lib_IResolvable(p.headersConfig);
        if (!visitedObjects.has(p.queryStringsConfig))
            aws_cdk_lib_IResolvable(p.queryStringsConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnCachePolicy_QueryStringsConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnCloudFrontOriginAccessIdentityProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudFrontOriginAccessIdentityConfig))
            aws_cdk_lib_IResolvable(p.cloudFrontOriginAccessIdentityConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnCloudFrontOriginAccessIdentity(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnCloudFrontOriginAccessIdentity_CloudFrontOriginAccessIdentityConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.continuousDeploymentPolicyConfig))
            aws_cdk_lib_IResolvable(p.continuousDeploymentPolicyConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicy_ContinuousDeploymentPolicyConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trafficConfig))
            aws_cdk_lib_IResolvable(p.trafficConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicy_SessionStickinessConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicy_SingleHeaderConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicy_SingleWeightConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sessionStickinessConfig))
            aws_cdk_lib_IResolvable(p.sessionStickinessConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicy_TrafficConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.singleHeaderConfig))
            aws_cdk_lib_IResolvable(p.singleHeaderConfig);
        if (!visitedObjects.has(p.singleWeightConfig))
            aws_cdk_lib_IResolvable(p.singleWeightConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnDistributionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.distributionConfig))
            aws_cdk_lib_IResolvable(p.distributionConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_CacheBehaviorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forwardedValues))
            aws_cdk_lib_IResolvable(p.forwardedValues);
        if (!visitedObjects.has(p.functionAssociations))
            aws_cdk_lib_IResolvable(p.functionAssociations);
        if (!visitedObjects.has(p.lambdaFunctionAssociations))
            aws_cdk_lib_IResolvable(p.lambdaFunctionAssociations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_CookiesProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_CustomErrorResponseProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_CustomOriginConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_DefaultCacheBehaviorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forwardedValues))
            aws_cdk_lib_IResolvable(p.forwardedValues);
        if (!visitedObjects.has(p.functionAssociations))
            aws_cdk_lib_IResolvable(p.functionAssociations);
        if (!visitedObjects.has(p.lambdaFunctionAssociations))
            aws_cdk_lib_IResolvable(p.lambdaFunctionAssociations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_DistributionConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultCacheBehavior))
            aws_cdk_lib_IResolvable(p.defaultCacheBehavior);
        if (!visitedObjects.has(p.cacheBehaviors))
            aws_cdk_lib_IResolvable(p.cacheBehaviors);
        if (!visitedObjects.has(p.customErrorResponses))
            aws_cdk_lib_IResolvable(p.customErrorResponses);
        if (!visitedObjects.has(p.customOrigin))
            aws_cdk_lib_IResolvable(p.customOrigin);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_IResolvable(p.logging);
        if (!visitedObjects.has(p.originGroups))
            aws_cdk_lib_IResolvable(p.originGroups);
        if (!visitedObjects.has(p.origins))
            aws_cdk_lib_IResolvable(p.origins);
        if (!visitedObjects.has(p.restrictions))
            aws_cdk_lib_IResolvable(p.restrictions);
        if (!visitedObjects.has(p.s3Origin))
            aws_cdk_lib_IResolvable(p.s3Origin);
        if (!visitedObjects.has(p.viewerCertificate))
            aws_cdk_lib_IResolvable(p.viewerCertificate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_ForwardedValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cookies))
            aws_cdk_lib_IResolvable(p.cookies);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_FunctionAssociationProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_GeoRestrictionProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_LambdaFunctionAssociationProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_LegacyCustomOriginProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_LegacyS3OriginProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_LoggingProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customOriginConfig))
            aws_cdk_lib_IResolvable(p.customOriginConfig);
        if (!visitedObjects.has(p.originCustomHeaders))
            aws_cdk_lib_IResolvable(p.originCustomHeaders);
        if (!visitedObjects.has(p.originShield))
            aws_cdk_lib_IResolvable(p.originShield);
        if (!visitedObjects.has(p.s3OriginConfig))
            aws_cdk_lib_IResolvable(p.s3OriginConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginCustomHeaderProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.failoverCriteria))
            aws_cdk_lib_IResolvable(p.failoverCriteria);
        if (!visitedObjects.has(p.members))
            aws_cdk_lib_IResolvable(p.members);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginGroupFailoverCriteriaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.statusCodes))
            aws_cdk_lib_IResolvable(p.statusCodes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginGroupMemberProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginGroupMembersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.items))
            aws_cdk_lib_IResolvable(p.items);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginGroupsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.items))
            aws_cdk_lib_IResolvable(p.items);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginShieldProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_RestrictionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.geoRestriction))
            aws_cdk_lib_IResolvable(p.geoRestriction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_S3OriginConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_StatusCodesProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnDistribution_ViewerCertificateProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnFunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.functionConfig))
            aws_cdk_lib_IResolvable(p.functionConfig);
        if (!visitedObjects.has(p.functionMetadata))
            aws_cdk_lib_IResolvable(p.functionMetadata);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnFunction(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnFunction_FunctionConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnFunction_FunctionMetadataProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnKeyGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.keyGroupConfig))
            aws_cdk_lib_IResolvable(p.keyGroupConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnKeyGroup(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnKeyGroup_KeyGroupConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnMonitoringSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.monitoringSubscription))
            aws_cdk_lib_IResolvable(p.monitoringSubscription);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnMonitoringSubscription(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnMonitoringSubscription_MonitoringSubscriptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.realtimeMetricsSubscriptionConfig))
            aws_cdk_lib_IResolvable(p.realtimeMetricsSubscriptionConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnMonitoringSubscription_RealtimeMetricsSubscriptionConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnOriginAccessControlProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.originAccessControlConfig))
            aws_cdk_lib_IResolvable(p.originAccessControlConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnOriginAccessControl(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnOriginAccessControl_OriginAccessControlConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnOriginRequestPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.originRequestPolicyConfig))
            aws_cdk_lib_IResolvable(p.originRequestPolicyConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnOriginRequestPolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnOriginRequestPolicy_CookiesConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnOriginRequestPolicy_HeadersConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnOriginRequestPolicy_OriginRequestPolicyConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cookiesConfig))
            aws_cdk_lib_IResolvable(p.cookiesConfig);
        if (!visitedObjects.has(p.headersConfig))
            aws_cdk_lib_IResolvable(p.headersConfig);
        if (!visitedObjects.has(p.queryStringsConfig))
            aws_cdk_lib_IResolvable(p.queryStringsConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnOriginRequestPolicy_QueryStringsConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnPublicKeyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.publicKeyConfig))
            aws_cdk_lib_IResolvable(p.publicKeyConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnPublicKey(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnPublicKey_PublicKeyConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnRealtimeLogConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.endPoints))
            aws_cdk_lib_IResolvable(p.endPoints);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnRealtimeLogConfig(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnRealtimeLogConfig_EndPointProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kinesisStreamConfig))
            aws_cdk_lib_IResolvable(p.kinesisStreamConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnRealtimeLogConfig_KinesisStreamConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.responseHeadersPolicyConfig))
            aws_cdk_lib_IResolvable(p.responseHeadersPolicyConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_AccessControlAllowHeadersProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_AccessControlAllowMethodsProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_AccessControlAllowOriginsProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_AccessControlExposeHeadersProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_ContentSecurityPolicyProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_ContentTypeOptionsProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_CorsConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessControlAllowHeaders))
            aws_cdk_lib_IResolvable(p.accessControlAllowHeaders);
        if (!visitedObjects.has(p.accessControlAllowMethods))
            aws_cdk_lib_IResolvable(p.accessControlAllowMethods);
        if (!visitedObjects.has(p.accessControlAllowOrigins))
            aws_cdk_lib_IResolvable(p.accessControlAllowOrigins);
        if (!visitedObjects.has(p.accessControlExposeHeaders))
            aws_cdk_lib_IResolvable(p.accessControlExposeHeaders);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_CustomHeaderProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_CustomHeadersConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.items))
            aws_cdk_lib_IResolvable(p.items);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_FrameOptionsProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_ReferrerPolicyProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_RemoveHeaderProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_RemoveHeadersConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.items))
            aws_cdk_lib_IResolvable(p.items);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_ResponseHeadersPolicyConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.corsConfig))
            aws_cdk_lib_IResolvable(p.corsConfig);
        if (!visitedObjects.has(p.customHeadersConfig))
            aws_cdk_lib_IResolvable(p.customHeadersConfig);
        if (!visitedObjects.has(p.removeHeadersConfig))
            aws_cdk_lib_IResolvable(p.removeHeadersConfig);
        if (!visitedObjects.has(p.securityHeadersConfig))
            aws_cdk_lib_IResolvable(p.securityHeadersConfig);
        if (!visitedObjects.has(p.serverTimingHeadersConfig))
            aws_cdk_lib_IResolvable(p.serverTimingHeadersConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_SecurityHeadersConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.contentSecurityPolicy))
            aws_cdk_lib_IResolvable(p.contentSecurityPolicy);
        if (!visitedObjects.has(p.contentTypeOptions))
            aws_cdk_lib_IResolvable(p.contentTypeOptions);
        if (!visitedObjects.has(p.frameOptions))
            aws_cdk_lib_IResolvable(p.frameOptions);
        if (!visitedObjects.has(p.referrerPolicy))
            aws_cdk_lib_IResolvable(p.referrerPolicy);
        if (!visitedObjects.has(p.strictTransportSecurity))
            aws_cdk_lib_IResolvable(p.strictTransportSecurity);
        if (!visitedObjects.has(p.xssProtection))
            aws_cdk_lib_IResolvable(p.xssProtection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_ServerTimingHeadersConfigProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_StrictTransportSecurityProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_XSSProtectionProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnStreamingDistributionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.streamingDistributionConfig))
            aws_cdk_lib_IResolvable(p.streamingDistributionConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnStreamingDistribution(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnStreamingDistribution_LoggingProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnStreamingDistribution_S3OriginProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_CfnStreamingDistribution_StreamingDistributionConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Origin))
            aws_cdk_lib_IResolvable(p.s3Origin);
        if (!visitedObjects.has(p.trustedSigners))
            aws_cdk_lib_IResolvable(p.trustedSigners);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_IResolvable(p.logging);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_CfnStreamingDistribution_TrustedSignersProperty(p) {
}
function aws_cdk_lib_aws_cloudfront_origins_HttpOriginProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.keepaliveTimeout))
            aws_cdk_lib_Duration(p.keepaliveTimeout);
        if (p.originSslProtocols != null)
            for (const o of p.originSslProtocols)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_OriginSslPolicy(o);
        if (!visitedObjects.has(p.protocolPolicy))
            aws_cdk_lib_aws_cloudfront_OriginProtocolPolicy(p.protocolPolicy);
        if (!visitedObjects.has(p.readTimeout))
            aws_cdk_lib_Duration(p.readTimeout);
        if (!visitedObjects.has(p.connectionTimeout))
            aws_cdk_lib_Duration(p.connectionTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_origins_HttpOrigin(p) {
}
function aws_cdk_lib_aws_cloudfront_origins_LoadBalancerV2OriginProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.keepaliveTimeout))
            aws_cdk_lib_Duration(p.keepaliveTimeout);
        if (p.originSslProtocols != null)
            for (const o of p.originSslProtocols)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudfront_OriginSslPolicy(o);
        if (!visitedObjects.has(p.protocolPolicy))
            aws_cdk_lib_aws_cloudfront_OriginProtocolPolicy(p.protocolPolicy);
        if (!visitedObjects.has(p.readTimeout))
            aws_cdk_lib_Duration(p.readTimeout);
        if (!visitedObjects.has(p.connectionTimeout))
            aws_cdk_lib_Duration(p.connectionTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_origins_LoadBalancerV2Origin(p) {
}
function aws_cdk_lib_aws_cloudfront_origins_S3OriginProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.originAccessIdentity))
            aws_cdk_lib_aws_cloudfront_IOriginAccessIdentity(p.originAccessIdentity);
        if (!visitedObjects.has(p.connectionTimeout))
            aws_cdk_lib_Duration(p.connectionTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_origins_S3Origin(p) {
}
function aws_cdk_lib_aws_cloudfront_origins_OriginGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fallbackOrigin))
            aws_cdk_lib_aws_cloudfront_IOrigin(p.fallbackOrigin);
        if (!visitedObjects.has(p.primaryOrigin))
            aws_cdk_lib_aws_cloudfront_IOrigin(p.primaryOrigin);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_origins_OriginGroup(p) {
}
function aws_cdk_lib_aws_cloudfront_origins_RestApiOriginProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.keepaliveTimeout))
            aws_cdk_lib_Duration(p.keepaliveTimeout);
        if (!visitedObjects.has(p.readTimeout))
            aws_cdk_lib_Duration(p.readTimeout);
        if (!visitedObjects.has(p.connectionTimeout))
            aws_cdk_lib_Duration(p.connectionTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudfront_origins_RestApiOrigin(p) {
}
function aws_cdk_lib_aws_cloudtrail_TrailProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
        if (!visitedObjects.has(p.cloudWatchLogGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.cloudWatchLogGroup);
        if (!visitedObjects.has(p.cloudWatchLogsRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.cloudWatchLogsRetention);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (p.insightTypes != null)
            for (const o of p.insightTypes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudtrail_InsightType(o);
        if (!visitedObjects.has(p.managementEvents))
            aws_cdk_lib_aws_cloudtrail_ReadWriteType(p.managementEvents);
        if (!visitedObjects.has(p.snsTopic))
            aws_cdk_lib_aws_sns_ITopic(p.snsTopic);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudtrail_ReadWriteType(p) {
}
function aws_cdk_lib_aws_cloudtrail_InsightType(p) {
}
function aws_cdk_lib_aws_cloudtrail_Trail(p) {
}
function aws_cdk_lib_aws_cloudtrail_AddEventSelectorOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.excludeManagementEventSources != null)
            for (const o of p.excludeManagementEventSources)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudtrail_ManagementEventSources(o);
        if (!visitedObjects.has(p.readWriteType))
            aws_cdk_lib_aws_cloudtrail_ReadWriteType(p.readWriteType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudtrail_ManagementEventSources(p) {
}
function aws_cdk_lib_aws_cloudtrail_S3EventSelector(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudtrail_DataResourceType(p) {
}
function aws_cdk_lib_aws_cloudtrail_CfnChannelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinations))
            aws_cdk_lib_IResolvable(p.destinations);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudtrail_CfnChannel(p) {
}
function aws_cdk_lib_aws_cloudtrail_CfnChannel_DestinationProperty(p) {
}
function aws_cdk_lib_aws_cloudtrail_CfnEventDataStoreProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.advancedEventSelectors))
            aws_cdk_lib_IResolvable(p.advancedEventSelectors);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudtrail_CfnEventDataStore(p) {
}
function aws_cdk_lib_aws_cloudtrail_CfnEventDataStore_AdvancedEventSelectorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldSelectors))
            aws_cdk_lib_IResolvable(p.fieldSelectors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudtrail_CfnEventDataStore_AdvancedFieldSelectorProperty(p) {
}
function aws_cdk_lib_aws_cloudtrail_CfnResourcePolicyProps(p) {
}
function aws_cdk_lib_aws_cloudtrail_CfnResourcePolicy(p) {
}
function aws_cdk_lib_aws_cloudtrail_CfnTrailProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventSelectors))
            aws_cdk_lib_IResolvable(p.eventSelectors);
        if (!visitedObjects.has(p.insightSelectors))
            aws_cdk_lib_IResolvable(p.insightSelectors);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudtrail_CfnTrail(p) {
}
function aws_cdk_lib_aws_cloudtrail_CfnTrail_DataResourceProperty(p) {
}
function aws_cdk_lib_aws_cloudtrail_CfnTrail_EventSelectorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataResources))
            aws_cdk_lib_IResolvable(p.dataResources);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudtrail_CfnTrail_InsightSelectorProperty(p) {
}
function aws_cdk_lib_aws_cloudwatch_AlarmProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metric))
            aws_cdk_lib_aws_cloudwatch_IMetric(p.metric);
        if (!visitedObjects.has(p.comparisonOperator))
            aws_cdk_lib_aws_cloudwatch_ComparisonOperator(p.comparisonOperator);
        if (!visitedObjects.has(p.treatMissingData))
            aws_cdk_lib_aws_cloudwatch_TreatMissingData(p.treatMissingData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_ComparisonOperator(p) {
}
function aws_cdk_lib_aws_cloudwatch_TreatMissingData(p) {
}
function aws_cdk_lib_aws_cloudwatch_Alarm(p) {
}
function aws_cdk_lib_aws_cloudwatch_IAlarmAction(p) {
}
function aws_cdk_lib_aws_cloudwatch_AlarmActionConfig(p) {
}
function aws_cdk_lib_aws_cloudwatch_IAlarmRule(p) {
}
function aws_cdk_lib_aws_cloudwatch_IAlarm(p) {
}
function aws_cdk_lib_aws_cloudwatch_AlarmBase(p) {
}
function aws_cdk_lib_aws_cloudwatch_AlarmState(p) {
}
function aws_cdk_lib_aws_cloudwatch_AlarmRule(p) {
}
function aws_cdk_lib_aws_cloudwatch_CompositeAlarmProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alarmRule))
            aws_cdk_lib_aws_cloudwatch_IAlarmRule(p.alarmRule);
        if (!visitedObjects.has(p.actionsSuppressor))
            aws_cdk_lib_aws_cloudwatch_IAlarm(p.actionsSuppressor);
        if (!visitedObjects.has(p.actionsSuppressorExtensionPeriod))
            aws_cdk_lib_Duration(p.actionsSuppressorExtensionPeriod);
        if (!visitedObjects.has(p.actionsSuppressorWaitPeriod))
            aws_cdk_lib_Duration(p.actionsSuppressorWaitPeriod);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CompositeAlarm(p) {
}
function aws_cdk_lib_aws_cloudwatch_PeriodOverride(p) {
}
function aws_cdk_lib_aws_cloudwatch_DashboardProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultInterval))
            aws_cdk_lib_Duration(p.defaultInterval);
        if (!visitedObjects.has(p.periodOverride))
            aws_cdk_lib_aws_cloudwatch_PeriodOverride(p.periodOverride);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_Dashboard(p) {
}
function aws_cdk_lib_aws_cloudwatch_MetricWidgetProps(p) {
}
function aws_cdk_lib_aws_cloudwatch_YAxisProps(p) {
}
function aws_cdk_lib_aws_cloudwatch_AlarmWidgetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alarm))
            aws_cdk_lib_aws_cloudwatch_IAlarm(p.alarm);
        if (!visitedObjects.has(p.leftYAxis))
            aws_cdk_lib_aws_cloudwatch_YAxisProps(p.leftYAxis);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_AlarmWidget(p) {
}
function aws_cdk_lib_aws_cloudwatch_GraphWidgetView(p) {
}
function aws_cdk_lib_aws_cloudwatch_GaugeWidgetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.annotations != null)
            for (const o of p.annotations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_HorizontalAnnotation(o);
        if (!visitedObjects.has(p.leftYAxis))
            aws_cdk_lib_aws_cloudwatch_YAxisProps(p.leftYAxis);
        if (!visitedObjects.has(p.legendPosition))
            aws_cdk_lib_aws_cloudwatch_LegendPosition(p.legendPosition);
        if (p.metrics != null)
            for (const o of p.metrics)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_IMetric(o);
        if (!visitedObjects.has(p.period))
            aws_cdk_lib_Duration(p.period);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_GaugeWidget(p) {
}
function aws_cdk_lib_aws_cloudwatch_GraphWidgetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.left != null)
            for (const o of p.left)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_IMetric(o);
        if (p.leftAnnotations != null)
            for (const o of p.leftAnnotations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_HorizontalAnnotation(o);
        if (!visitedObjects.has(p.leftYAxis))
            aws_cdk_lib_aws_cloudwatch_YAxisProps(p.leftYAxis);
        if (!visitedObjects.has(p.legendPosition))
            aws_cdk_lib_aws_cloudwatch_LegendPosition(p.legendPosition);
        if (!visitedObjects.has(p.period))
            aws_cdk_lib_Duration(p.period);
        if (p.right != null)
            for (const o of p.right)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_IMetric(o);
        if (p.rightAnnotations != null)
            for (const o of p.rightAnnotations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_HorizontalAnnotation(o);
        if (!visitedObjects.has(p.rightYAxis))
            aws_cdk_lib_aws_cloudwatch_YAxisProps(p.rightYAxis);
        if (!visitedObjects.has(p.view))
            aws_cdk_lib_aws_cloudwatch_GraphWidgetView(p.view);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_GraphWidget(p) {
}
function aws_cdk_lib_aws_cloudwatch_SingleValueWidgetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.metrics != null)
            for (const o of p.metrics)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_IMetric(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_SingleValueWidget(p) {
}
function aws_cdk_lib_aws_cloudwatch_CustomWidgetProps(p) {
}
function aws_cdk_lib_aws_cloudwatch_CustomWidget(p) {
}
function aws_cdk_lib_aws_cloudwatch_HorizontalAnnotation(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fill))
            aws_cdk_lib_aws_cloudwatch_Shading(p.fill);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_Shading(p) {
}
function aws_cdk_lib_aws_cloudwatch_Color(p) {
}
function aws_cdk_lib_aws_cloudwatch_LegendPosition(p) {
}
function aws_cdk_lib_aws_cloudwatch_Row(p) {
}
function aws_cdk_lib_aws_cloudwatch_Column(p) {
}
function aws_cdk_lib_aws_cloudwatch_SpacerProps(p) {
}
function aws_cdk_lib_aws_cloudwatch_Spacer(p) {
}
function aws_cdk_lib_aws_cloudwatch_CommonMetricOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.period))
            aws_cdk_lib_Duration(p.period);
        if (!visitedObjects.has(p.unit))
            aws_cdk_lib_aws_cloudwatch_Unit(p.unit);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_MetricProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.period))
            aws_cdk_lib_Duration(p.period);
        if (!visitedObjects.has(p.unit))
            aws_cdk_lib_aws_cloudwatch_Unit(p.unit);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_MetricOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.period))
            aws_cdk_lib_Duration(p.period);
        if (!visitedObjects.has(p.unit))
            aws_cdk_lib_aws_cloudwatch_Unit(p.unit);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_MathExpressionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.period))
            aws_cdk_lib_Duration(p.period);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_MathExpressionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.usingMetrics != null)
            for (const o of Object.values(p.usingMetrics))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_IMetric(o);
        if (!visitedObjects.has(p.period))
            aws_cdk_lib_Duration(p.period);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_Metric(p) {
}
function aws_cdk_lib_aws_cloudwatch_MathExpression(p) {
}
function aws_cdk_lib_aws_cloudwatch_CreateAlarmOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.comparisonOperator))
            aws_cdk_lib_aws_cloudwatch_ComparisonOperator(p.comparisonOperator);
        if (!visitedObjects.has(p.treatMissingData))
            aws_cdk_lib_aws_cloudwatch_TreatMissingData(p.treatMissingData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_IMetric(p) {
}
function aws_cdk_lib_aws_cloudwatch_Dimension(p) {
}
function aws_cdk_lib_aws_cloudwatch_Statistic(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        print("aws-cdk-lib.aws_cloudwatch.Statistic", "Use one of the factory methods on `Stats` to produce statistics strings");
        const ns = require("./aws-cloudwatch/lib/metric-types.js");
        if (Object.values(ns.Statistic).filter(x => x === p).length > 1)
            return;
        if (p === ns.Statistic.SAMPLE_COUNT)
            print("aws-cdk-lib.aws_cloudwatch.Statistic#SAMPLE_COUNT", "");
        if (p === ns.Statistic.AVERAGE)
            print("aws-cdk-lib.aws_cloudwatch.Statistic#AVERAGE", "");
        if (p === ns.Statistic.SUM)
            print("aws-cdk-lib.aws_cloudwatch.Statistic#SUM", "");
        if (p === ns.Statistic.MINIMUM)
            print("aws-cdk-lib.aws_cloudwatch.Statistic#MINIMUM", "");
        if (p === ns.Statistic.MAXIMUM)
            print("aws-cdk-lib.aws_cloudwatch.Statistic#MAXIMUM", "");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_Unit(p) {
}
function aws_cdk_lib_aws_cloudwatch_MetricConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mathExpression))
            aws_cdk_lib_aws_cloudwatch_MetricExpressionConfig(p.mathExpression);
        if (!visitedObjects.has(p.metricStat))
            aws_cdk_lib_aws_cloudwatch_MetricStatConfig(p.metricStat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_MetricStatConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.period))
            aws_cdk_lib_Duration(p.period);
        if (p.dimensions != null)
            for (const o of p.dimensions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_Dimension(o);
        if (!visitedObjects.has(p.unitFilter))
            aws_cdk_lib_aws_cloudwatch_Unit(p.unitFilter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_MetricExpressionConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.usingMetrics != null)
            for (const o of Object.values(p.usingMetrics))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_IMetric(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_LogQueryVisualizationType(p) {
}
function aws_cdk_lib_aws_cloudwatch_LogQueryWidgetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.view))
            aws_cdk_lib_aws_cloudwatch_LogQueryVisualizationType(p.view);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_LogQueryWidget(p) {
}
function aws_cdk_lib_aws_cloudwatch_TextWidgetBackground(p) {
}
function aws_cdk_lib_aws_cloudwatch_TextWidgetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.background))
            aws_cdk_lib_aws_cloudwatch_TextWidgetBackground(p.background);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_TextWidget(p) {
}
function aws_cdk_lib_aws_cloudwatch_IWidget(p) {
}
function aws_cdk_lib_aws_cloudwatch_ConcreteWidget(p) {
}
function aws_cdk_lib_aws_cloudwatch_AlarmStatusWidgetSortBy(p) {
}
function aws_cdk_lib_aws_cloudwatch_AlarmStatusWidgetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.alarms != null)
            for (const o of p.alarms)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_IAlarm(o);
        if (!visitedObjects.has(p.sortBy))
            aws_cdk_lib_aws_cloudwatch_AlarmStatusWidgetSortBy(p.sortBy);
        if (p.states != null)
            for (const o of p.states)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_AlarmState(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_AlarmStatusWidget(p) {
}
function aws_cdk_lib_aws_cloudwatch_Stats(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnAlarmProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
        if (!visitedObjects.has(p.metrics))
            aws_cdk_lib_IResolvable(p.metrics);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnAlarm(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnAlarm_DimensionProperty(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnAlarm_MetricProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnAlarm_MetricDataQueryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricStat))
            aws_cdk_lib_IResolvable(p.metricStat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnAlarm_MetricStatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metric))
            aws_cdk_lib_IResolvable(p.metric);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetectorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
        if (!visitedObjects.has(p.metricMathAnomalyDetector))
            aws_cdk_lib_IResolvable(p.metricMathAnomalyDetector);
        if (!visitedObjects.has(p.singleMetricAnomalyDetector))
            aws_cdk_lib_IResolvable(p.singleMetricAnomalyDetector);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_ConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.excludedTimeRanges))
            aws_cdk_lib_IResolvable(p.excludedTimeRanges);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_DimensionProperty(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_MetricProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_MetricDataQueryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricStat))
            aws_cdk_lib_IResolvable(p.metricStat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_MetricMathAnomalyDetectorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricDataQueries))
            aws_cdk_lib_IResolvable(p.metricDataQueries);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_MetricStatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metric))
            aws_cdk_lib_IResolvable(p.metric);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_RangeProperty(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_SingleMetricAnomalyDetectorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnCompositeAlarmProps(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnCompositeAlarm(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnDashboardProps(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnDashboard(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnInsightRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            aws_cdk_lib_IResolvable(p.tags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnInsightRule(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnMetricStreamProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.excludeFilters))
            aws_cdk_lib_IResolvable(p.excludeFilters);
        if (!visitedObjects.has(p.includeFilters))
            aws_cdk_lib_IResolvable(p.includeFilters);
        if (!visitedObjects.has(p.statisticsConfigurations))
            aws_cdk_lib_IResolvable(p.statisticsConfigurations);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnMetricStream(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnMetricStream_MetricStreamFilterProperty(p) {
}
function aws_cdk_lib_aws_cloudwatch_CfnMetricStream_MetricStreamStatisticsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.includeMetrics))
            aws_cdk_lib_IResolvable(p.includeMetrics);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cloudwatch_CfnMetricStream_MetricStreamStatisticsMetricProperty(p) {
}
function aws_cdk_lib_aws_cloudwatch_actions_ApplicationScalingAction(p) {
}
function aws_cdk_lib_aws_cloudwatch_actions_AutoScalingAction(p) {
}
function aws_cdk_lib_aws_cloudwatch_actions_SnsAction(p) {
}
function aws_cdk_lib_aws_cloudwatch_actions_Ec2InstanceAction(p) {
}
function aws_cdk_lib_aws_cloudwatch_actions_Ec2Action(p) {
}
function aws_cdk_lib_aws_cloudwatch_actions_OpsItemSeverity(p) {
}
function aws_cdk_lib_aws_cloudwatch_actions_OpsItemCategory(p) {
}
function aws_cdk_lib_aws_cloudwatch_actions_SsmAction(p) {
}
function aws_cdk_lib_aws_cloudwatch_actions_SsmIncidentAction(p) {
}
function aws_cdk_lib_aws_codeartifact_CfnDomainProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codeartifact_CfnDomain(p) {
}
function aws_cdk_lib_aws_codeartifact_CfnRepositoryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codeartifact_CfnRepository(p) {
}
function aws_cdk_lib_aws_codebuild_StateChangeEvent(p) {
}
function aws_cdk_lib_aws_codebuild_PhaseChangeEvent(p) {
}
function aws_cdk_lib_aws_codebuild_PipelineProjectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.buildSpec))
            aws_cdk_lib_aws_codebuild_BuildSpec(p.buildSpec);
        if (!visitedObjects.has(p.cache))
            aws_cdk_lib_aws_codebuild_Cache(p.cache);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_aws_codebuild_BuildEnvironment(p.environment);
        if (p.environmentVariables != null)
            for (const o of Object.values(p.environmentVariables))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_BuildEnvironmentVariable(o);
        if (p.fileSystemLocations != null)
            for (const o of p.fileSystemLocations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_IFileSystemLocation(o);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_aws_codebuild_LoggingOptions(p.logging);
        if (!visitedObjects.has(p.queuedTimeout))
            aws_cdk_lib_Duration(p.queuedTimeout);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_PipelineProject(p) {
}
function aws_cdk_lib_aws_codebuild_BatchBuildConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_BuildEnvironmentCertificate(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_ProjectNotifyOnOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_ProjectNotificationEvents(o);
        if (!visitedObjects.has(p.detailType))
            aws_cdk_lib_aws_codestarnotifications_DetailType(p.detailType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_IProject(p) {
}
function aws_cdk_lib_aws_codebuild_CommonProjectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.buildSpec))
            aws_cdk_lib_aws_codebuild_BuildSpec(p.buildSpec);
        if (!visitedObjects.has(p.cache))
            aws_cdk_lib_aws_codebuild_Cache(p.cache);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_aws_codebuild_BuildEnvironment(p.environment);
        if (p.environmentVariables != null)
            for (const o of Object.values(p.environmentVariables))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_BuildEnvironmentVariable(o);
        if (p.fileSystemLocations != null)
            for (const o of p.fileSystemLocations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_IFileSystemLocation(o);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_aws_codebuild_LoggingOptions(p.logging);
        if (!visitedObjects.has(p.queuedTimeout))
            aws_cdk_lib_Duration(p.queuedTimeout);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_ProjectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.artifacts))
            aws_cdk_lib_aws_codebuild_IArtifacts(p.artifacts);
        if (p.secondaryArtifacts != null)
            for (const o of p.secondaryArtifacts)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_IArtifacts(o);
        if (p.secondarySources != null)
            for (const o of p.secondarySources)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_ISource(o);
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_aws_codebuild_ISource(p.source);
        if (!visitedObjects.has(p.buildSpec))
            aws_cdk_lib_aws_codebuild_BuildSpec(p.buildSpec);
        if (!visitedObjects.has(p.cache))
            aws_cdk_lib_aws_codebuild_Cache(p.cache);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_aws_codebuild_BuildEnvironment(p.environment);
        if (p.environmentVariables != null)
            for (const o of Object.values(p.environmentVariables))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_BuildEnvironmentVariable(o);
        if (p.fileSystemLocations != null)
            for (const o of p.fileSystemLocations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_IFileSystemLocation(o);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_aws_codebuild_LoggingOptions(p.logging);
        if (!visitedObjects.has(p.queuedTimeout))
            aws_cdk_lib_Duration(p.queuedTimeout);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_BindToCodePipelineOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.artifactBucket))
            aws_cdk_lib_aws_s3_IBucket(p.artifactBucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_Project(p) {
}
function aws_cdk_lib_aws_codebuild_ComputeType(p) {
}
function aws_cdk_lib_aws_codebuild_ImagePullPrincipalType(p) {
}
function aws_cdk_lib_aws_codebuild_BuildEnvironment(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.buildImage))
            aws_cdk_lib_aws_codebuild_IBuildImage(p.buildImage);
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_codebuild_BuildEnvironmentCertificate(p.certificate);
        if (!visitedObjects.has(p.computeType))
            aws_cdk_lib_aws_codebuild_ComputeType(p.computeType);
        if (p.environmentVariables != null)
            for (const o of Object.values(p.environmentVariables))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_BuildEnvironmentVariable(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_IBuildImage(p) {
}
function aws_cdk_lib_aws_codebuild_BuildImageBindOptions(p) {
}
function aws_cdk_lib_aws_codebuild_BuildImageConfig(p) {
}
function aws_cdk_lib_aws_codebuild_IBindableBuildImage(p) {
}
function aws_cdk_lib_aws_codebuild_DockerImageOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secretsManagerCredentials))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.secretsManagerCredentials);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_LinuxBuildImage(p) {
}
function aws_cdk_lib_aws_codebuild_WindowsImageType(p) {
}
function aws_cdk_lib_aws_codebuild_WindowsBuildImage(p) {
}
function aws_cdk_lib_aws_codebuild_BuildEnvironmentVariable(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_codebuild_BuildEnvironmentVariableType(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_BuildEnvironmentVariableType(p) {
}
function aws_cdk_lib_aws_codebuild_ProjectNotificationEvents(p) {
}
function aws_cdk_lib_aws_codebuild_S3LoggingOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_CloudWatchLoggingOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.logGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_LoggingOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatch))
            aws_cdk_lib_aws_codebuild_CloudWatchLoggingOptions(p.cloudWatch);
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_aws_codebuild_S3LoggingOptions(p.s3);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_IReportGroup(p) {
}
function aws_cdk_lib_aws_codebuild_ReportGroupType(p) {
}
function aws_cdk_lib_aws_codebuild_ReportGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.exportBucket))
            aws_cdk_lib_aws_s3_IBucket(p.exportBucket);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_codebuild_ReportGroupType(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_ReportGroup(p) {
}
function aws_cdk_lib_aws_codebuild_SourceConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceProperty))
            aws_cdk_lib_aws_codebuild_CfnProject_SourceProperty(p.sourceProperty);
        if (!visitedObjects.has(p.buildTriggers))
            aws_cdk_lib_aws_codebuild_CfnProject_ProjectTriggersProperty(p.buildTriggers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_ISource(p) {
}
function aws_cdk_lib_aws_codebuild_SourceProps(p) {
}
function aws_cdk_lib_aws_codebuild_Source(p) {
}
function aws_cdk_lib_aws_codebuild_EventAction(p) {
}
function aws_cdk_lib_aws_codebuild_FilterGroup(p) {
}
function aws_cdk_lib_aws_codebuild_CodeCommitSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.repository))
            aws_cdk_lib_aws_codecommit_IRepository(p.repository);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_S3SourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_GitHubSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.webhookFilters != null)
            for (const o of p.webhookFilters)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_FilterGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_GitHubEnterpriseSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.webhookFilters != null)
            for (const o of p.webhookFilters)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_FilterGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_BitBucketSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.webhookFilters != null)
            for (const o of p.webhookFilters)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_FilterGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_GitHubSourceCredentialsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessToken))
            aws_cdk_lib_SecretValue(p.accessToken);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_GitHubSourceCredentials(p) {
}
function aws_cdk_lib_aws_codebuild_GitHubEnterpriseSourceCredentialsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessToken))
            aws_cdk_lib_SecretValue(p.accessToken);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_GitHubEnterpriseSourceCredentials(p) {
}
function aws_cdk_lib_aws_codebuild_BitBucketSourceCredentialsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.password))
            aws_cdk_lib_SecretValue(p.password);
        if (!visitedObjects.has(p.username))
            aws_cdk_lib_SecretValue(p.username);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_BitBucketSourceCredentials(p) {
}
function aws_cdk_lib_aws_codebuild_ArtifactsConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.artifactsProperty))
            aws_cdk_lib_aws_codebuild_CfnProject_ArtifactsProperty(p.artifactsProperty);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_IArtifacts(p) {
}
function aws_cdk_lib_aws_codebuild_ArtifactsProps(p) {
}
function aws_cdk_lib_aws_codebuild_Artifacts(p) {
}
function aws_cdk_lib_aws_codebuild_S3ArtifactsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_BucketCacheOptions(p) {
}
function aws_cdk_lib_aws_codebuild_LocalCacheMode(p) {
}
function aws_cdk_lib_aws_codebuild_Cache(p) {
}
function aws_cdk_lib_aws_codebuild_BuildSpec(p) {
}
function aws_cdk_lib_aws_codebuild_FileSystemConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.location))
            aws_cdk_lib_aws_codebuild_CfnProject_ProjectFileSystemLocationProperty(p.location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_IFileSystemLocation(p) {
}
function aws_cdk_lib_aws_codebuild_FileSystemLocation(p) {
}
function aws_cdk_lib_aws_codebuild_EfsFileSystemLocationProps(p) {
}
function aws_cdk_lib_aws_codebuild_LinuxGpuBuildImage(p) {
}
function aws_cdk_lib_aws_codebuild_UntrustedCodeBoundaryPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.additionalStatements != null)
            for (const o of p.additionalStatements)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_UntrustedCodeBoundaryPolicy(p) {
}
function aws_cdk_lib_aws_codebuild_LinuxArmBuildImage(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProjectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.artifacts))
            aws_cdk_lib_IResolvable(p.artifacts);
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_IResolvable(p.source);
        if (!visitedObjects.has(p.buildBatchConfig))
            aws_cdk_lib_IResolvable(p.buildBatchConfig);
        if (!visitedObjects.has(p.cache))
            aws_cdk_lib_IResolvable(p.cache);
        if (!visitedObjects.has(p.fileSystemLocations))
            aws_cdk_lib_IResolvable(p.fileSystemLocations);
        if (!visitedObjects.has(p.logsConfig))
            aws_cdk_lib_IResolvable(p.logsConfig);
        if (!visitedObjects.has(p.secondaryArtifacts))
            aws_cdk_lib_IResolvable(p.secondaryArtifacts);
        if (!visitedObjects.has(p.secondarySources))
            aws_cdk_lib_IResolvable(p.secondarySources);
        if (!visitedObjects.has(p.secondarySourceVersions))
            aws_cdk_lib_IResolvable(p.secondarySourceVersions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.triggers))
            aws_cdk_lib_IResolvable(p.triggers);
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_CfnProject(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_ArtifactsProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_BatchRestrictionsProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_BuildStatusConfigProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_CloudWatchLogsConfigProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_EnvironmentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environmentVariables))
            aws_cdk_lib_IResolvable(p.environmentVariables);
        if (!visitedObjects.has(p.registryCredential))
            aws_cdk_lib_IResolvable(p.registryCredential);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_CfnProject_EnvironmentVariableProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_GitSubmodulesConfigProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_LogsConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchLogs))
            aws_cdk_lib_IResolvable(p.cloudWatchLogs);
        if (!visitedObjects.has(p.s3Logs))
            aws_cdk_lib_IResolvable(p.s3Logs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_CfnProject_ProjectBuildBatchConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.restrictions))
            aws_cdk_lib_IResolvable(p.restrictions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_CfnProject_ProjectCacheProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_ProjectFileSystemLocationProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_ProjectSourceVersionProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_ProjectTriggersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filterGroups))
            aws_cdk_lib_IResolvable(p.filterGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_CfnProject_RegistryCredentialProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_S3LogsConfigProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_SourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.auth))
            aws_cdk_lib_IResolvable(p.auth);
        if (!visitedObjects.has(p.buildStatusConfig))
            aws_cdk_lib_IResolvable(p.buildStatusConfig);
        if (!visitedObjects.has(p.gitSubmodulesConfig))
            aws_cdk_lib_IResolvable(p.gitSubmodulesConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_CfnProject_SourceAuthProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnProject_WebhookFilterProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnReportGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.exportConfig))
            aws_cdk_lib_IResolvable(p.exportConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_CfnReportGroup(p) {
}
function aws_cdk_lib_aws_codebuild_CfnReportGroup_ReportExportConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Destination))
            aws_cdk_lib_IResolvable(p.s3Destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codebuild_CfnReportGroup_S3ReportExportConfigProperty(p) {
}
function aws_cdk_lib_aws_codebuild_CfnSourceCredentialProps(p) {
}
function aws_cdk_lib_aws_codebuild_CfnSourceCredential(p) {
}
function aws_cdk_lib_aws_codecommit_ReferenceEvent(p) {
}
function aws_cdk_lib_aws_codecommit_RepositoryNotifyOnOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codecommit_RepositoryNotificationEvents(o);
        if (!visitedObjects.has(p.detailType))
            aws_cdk_lib_aws_codestarnotifications_DetailType(p.detailType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codecommit_IRepository(p) {
}
function aws_cdk_lib_aws_codecommit_OnCommitOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_events_IRuleTarget(p.target);
        if (!visitedObjects.has(p.eventPattern))
            aws_cdk_lib_aws_events_EventPattern(p.eventPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codecommit_RepositoryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_codecommit_Code(p.code);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codecommit_Repository(p) {
}
function aws_cdk_lib_aws_codecommit_RepositoryTriggerOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codecommit_RepositoryEventTrigger(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codecommit_RepositoryEventTrigger(p) {
}
function aws_cdk_lib_aws_codecommit_RepositoryNotificationEvents(p) {
}
function aws_cdk_lib_aws_codecommit_CodeConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_codecommit_CfnRepository_CodeProperty(p.code);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codecommit_Code(p) {
}
function aws_cdk_lib_aws_codecommit_CfnRepositoryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_IResolvable(p.code);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.triggers))
            aws_cdk_lib_IResolvable(p.triggers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codecommit_CfnRepository(p) {
}
function aws_cdk_lib_aws_codecommit_CfnRepository_CodeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_IResolvable(p.s3);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codecommit_CfnRepository_RepositoryTriggerProperty(p) {
}
function aws_cdk_lib_aws_codecommit_CfnRepository_S3Property(p) {
}
function aws_cdk_lib_aws_codedeploy_IBaseDeploymentConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_BaseDeploymentConfigOptions(p) {
}
function aws_cdk_lib_aws_codedeploy_ComputePlatform(p) {
}
function aws_cdk_lib_aws_codedeploy_BaseDeploymentConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.computePlatform))
            aws_cdk_lib_aws_codedeploy_ComputePlatform(p.computePlatform);
        if (!visitedObjects.has(p.minimumHealthyHosts))
            aws_cdk_lib_aws_codedeploy_MinimumHealthyHosts(p.minimumHealthyHosts);
        if (!visitedObjects.has(p.trafficRouting))
            aws_cdk_lib_aws_codedeploy_TrafficRouting(p.trafficRouting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_BaseDeploymentConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_MinimumHealthyHosts(p) {
}
function aws_cdk_lib_aws_codedeploy_AutoRollbackConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_TrafficRoutingConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.timeBasedCanary))
            aws_cdk_lib_aws_codedeploy_CanaryTrafficRoutingConfig(p.timeBasedCanary);
        if (!visitedObjects.has(p.timeBasedLinear))
            aws_cdk_lib_aws_codedeploy_LinearTrafficRoutingConfig(p.timeBasedLinear);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CanaryTrafficRoutingConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_LinearTrafficRoutingConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_TrafficRouting(p) {
}
function aws_cdk_lib_aws_codedeploy_BaseTrafficShiftingConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_Duration(p.interval);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_AllAtOnceTrafficRouting(p) {
}
function aws_cdk_lib_aws_codedeploy_TimeBasedCanaryTrafficRoutingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_Duration(p.interval);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_TimeBasedCanaryTrafficRouting(p) {
}
function aws_cdk_lib_aws_codedeploy_TimeBasedLinearTrafficRoutingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_Duration(p.interval);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_TimeBasedLinearTrafficRouting(p) {
}
function aws_cdk_lib_aws_codedeploy_IEcsApplication(p) {
}
function aws_cdk_lib_aws_codedeploy_EcsApplicationProps(p) {
}
function aws_cdk_lib_aws_codedeploy_EcsApplication(p) {
}
function aws_cdk_lib_aws_codedeploy_IEcsDeploymentConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_EcsDeploymentConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trafficRouting))
            aws_cdk_lib_aws_codedeploy_TrafficRouting(p.trafficRouting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_EcsDeploymentConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_IEcsDeploymentGroup(p) {
}
function aws_cdk_lib_aws_codedeploy_EcsBlueGreenDeploymentConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blueTargetGroup))
            aws_cdk_lib_aws_elasticloadbalancingv2_ITargetGroup(p.blueTargetGroup);
        if (!visitedObjects.has(p.greenTargetGroup))
            aws_cdk_lib_aws_elasticloadbalancingv2_ITargetGroup(p.greenTargetGroup);
        if (!visitedObjects.has(p.listener))
            aws_cdk_lib_aws_elasticloadbalancingv2_IListener(p.listener);
        if (!visitedObjects.has(p.deploymentApprovalWaitTime))
            aws_cdk_lib_Duration(p.deploymentApprovalWaitTime);
        if (!visitedObjects.has(p.terminationWaitTime))
            aws_cdk_lib_Duration(p.terminationWaitTime);
        if (!visitedObjects.has(p.testListener))
            aws_cdk_lib_aws_elasticloadbalancingv2_IListener(p.testListener);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_EcsDeploymentGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blueGreenDeploymentConfig))
            aws_cdk_lib_aws_codedeploy_EcsBlueGreenDeploymentConfig(p.blueGreenDeploymentConfig);
        if (!visitedObjects.has(p.service))
            aws_cdk_lib_aws_ecs_IBaseService(p.service);
        if (p.alarms != null)
            for (const o of p.alarms)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_IAlarm(o);
        if (!visitedObjects.has(p.application))
            aws_cdk_lib_aws_codedeploy_IEcsApplication(p.application);
        if (!visitedObjects.has(p.autoRollback))
            aws_cdk_lib_aws_codedeploy_AutoRollbackConfig(p.autoRollback);
        if (!visitedObjects.has(p.deploymentConfig))
            aws_cdk_lib_aws_codedeploy_IEcsDeploymentConfig(p.deploymentConfig);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_EcsDeploymentGroup(p) {
}
function aws_cdk_lib_aws_codedeploy_EcsDeploymentGroupAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.application))
            aws_cdk_lib_aws_codedeploy_IEcsApplication(p.application);
        if (!visitedObjects.has(p.deploymentConfig))
            aws_cdk_lib_aws_codedeploy_IEcsDeploymentConfig(p.deploymentConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_ILambdaApplication(p) {
}
function aws_cdk_lib_aws_codedeploy_LambdaApplicationProps(p) {
}
function aws_cdk_lib_aws_codedeploy_LambdaApplication(p) {
}
function aws_cdk_lib_aws_codedeploy_CustomLambdaDeploymentConfigType(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        print("aws-cdk-lib.aws_codedeploy.CustomLambdaDeploymentConfigType", "Use `LambdaDeploymentConfig`");
        const ns = require("./aws-codedeploy/lib/lambda/custom-deployment-config.js");
        if (Object.values(ns.CustomLambdaDeploymentConfigType).filter(x => x === p).length > 1)
            return;
        if (p === ns.CustomLambdaDeploymentConfigType.CANARY)
            print("aws-cdk-lib.aws_codedeploy.CustomLambdaDeploymentConfigType#CANARY", "Use `LambdaDeploymentConfig`");
        if (p === ns.CustomLambdaDeploymentConfigType.LINEAR)
            print("aws-cdk-lib.aws_codedeploy.CustomLambdaDeploymentConfigType#LINEAR", "Use `LambdaDeploymentConfig`");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CustomLambdaDeploymentConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("interval" in p)
            print("aws-cdk-lib.aws_codedeploy.CustomLambdaDeploymentConfigProps#interval", "Use `LambdaDeploymentConfig`");
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_Duration(p.interval);
        if ("percentage" in p)
            print("aws-cdk-lib.aws_codedeploy.CustomLambdaDeploymentConfigProps#percentage", "Use `LambdaDeploymentConfig`");
        if ("type" in p)
            print("aws-cdk-lib.aws_codedeploy.CustomLambdaDeploymentConfigProps#type", "Use `LambdaDeploymentConfig`");
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_codedeploy_CustomLambdaDeploymentConfigType(p.type);
        if ("deploymentConfigName" in p)
            print("aws-cdk-lib.aws_codedeploy.CustomLambdaDeploymentConfigProps#deploymentConfigName", "Use `LambdaDeploymentConfig`");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CustomLambdaDeploymentConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_ILambdaDeploymentConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_LambdaDeploymentConfigImportProps(p) {
}
function aws_cdk_lib_aws_codedeploy_LambdaDeploymentConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trafficRouting))
            aws_cdk_lib_aws_codedeploy_TrafficRouting(p.trafficRouting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_LambdaDeploymentConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_ILambdaDeploymentGroup(p) {
}
function aws_cdk_lib_aws_codedeploy_LambdaDeploymentGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alias))
            aws_cdk_lib_aws_lambda_Alias(p.alias);
        if (p.alarms != null)
            for (const o of p.alarms)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_IAlarm(o);
        if (!visitedObjects.has(p.application))
            aws_cdk_lib_aws_codedeploy_ILambdaApplication(p.application);
        if (!visitedObjects.has(p.autoRollback))
            aws_cdk_lib_aws_codedeploy_AutoRollbackConfig(p.autoRollback);
        if (!visitedObjects.has(p.deploymentConfig))
            aws_cdk_lib_aws_codedeploy_ILambdaDeploymentConfig(p.deploymentConfig);
        if (!visitedObjects.has(p.postHook))
            aws_cdk_lib_aws_lambda_IFunction(p.postHook);
        if (!visitedObjects.has(p.preHook))
            aws_cdk_lib_aws_lambda_IFunction(p.preHook);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_LambdaDeploymentGroup(p) {
}
function aws_cdk_lib_aws_codedeploy_LambdaDeploymentGroupAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.application))
            aws_cdk_lib_aws_codedeploy_ILambdaApplication(p.application);
        if (!visitedObjects.has(p.deploymentConfig))
            aws_cdk_lib_aws_codedeploy_ILambdaDeploymentConfig(p.deploymentConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_IServerApplication(p) {
}
function aws_cdk_lib_aws_codedeploy_ServerApplicationProps(p) {
}
function aws_cdk_lib_aws_codedeploy_ServerApplication(p) {
}
function aws_cdk_lib_aws_codedeploy_IServerDeploymentConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_ServerDeploymentConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.minimumHealthyHosts))
            aws_cdk_lib_aws_codedeploy_MinimumHealthyHosts(p.minimumHealthyHosts);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_ServerDeploymentConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_IServerDeploymentGroup(p) {
}
function aws_cdk_lib_aws_codedeploy_ServerDeploymentGroupAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.application))
            aws_cdk_lib_aws_codedeploy_IServerApplication(p.application);
        if (!visitedObjects.has(p.deploymentConfig))
            aws_cdk_lib_aws_codedeploy_IServerDeploymentConfig(p.deploymentConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_InstanceTagSet(p) {
}
function aws_cdk_lib_aws_codedeploy_ServerDeploymentGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.alarms != null)
            for (const o of p.alarms)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cloudwatch_IAlarm(o);
        if (!visitedObjects.has(p.application))
            aws_cdk_lib_aws_codedeploy_IServerApplication(p.application);
        if (!visitedObjects.has(p.autoRollback))
            aws_cdk_lib_aws_codedeploy_AutoRollbackConfig(p.autoRollback);
        if (p.autoScalingGroups != null)
            for (const o of p.autoScalingGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_IAutoScalingGroup(o);
        if (!visitedObjects.has(p.deploymentConfig))
            aws_cdk_lib_aws_codedeploy_IServerDeploymentConfig(p.deploymentConfig);
        if (!visitedObjects.has(p.ec2InstanceTags))
            aws_cdk_lib_aws_codedeploy_InstanceTagSet(p.ec2InstanceTags);
        if (!visitedObjects.has(p.loadBalancer))
            aws_cdk_lib_aws_codedeploy_LoadBalancer(p.loadBalancer);
        if (!visitedObjects.has(p.onPremiseInstanceTags))
            aws_cdk_lib_aws_codedeploy_InstanceTagSet(p.onPremiseInstanceTags);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_ServerDeploymentGroup(p) {
}
function aws_cdk_lib_aws_codedeploy_LoadBalancerGeneration(p) {
}
function aws_cdk_lib_aws_codedeploy_LoadBalancer(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnApplication(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.minimumHealthyHosts))
            aws_cdk_lib_IResolvable(p.minimumHealthyHosts);
        if (!visitedObjects.has(p.trafficRoutingConfig))
            aws_cdk_lib_IResolvable(p.trafficRoutingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentConfig(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentConfig_MinimumHealthyHostsProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentConfig_TimeBasedCanaryProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentConfig_TimeBasedLinearProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentConfig_TrafficRoutingConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.timeBasedCanary))
            aws_cdk_lib_IResolvable(p.timeBasedCanary);
        if (!visitedObjects.has(p.timeBasedLinear))
            aws_cdk_lib_IResolvable(p.timeBasedLinear);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alarmConfiguration))
            aws_cdk_lib_IResolvable(p.alarmConfiguration);
        if (!visitedObjects.has(p.autoRollbackConfiguration))
            aws_cdk_lib_IResolvable(p.autoRollbackConfiguration);
        if (!visitedObjects.has(p.blueGreenDeploymentConfiguration))
            aws_cdk_lib_IResolvable(p.blueGreenDeploymentConfiguration);
        if (!visitedObjects.has(p.deployment))
            aws_cdk_lib_IResolvable(p.deployment);
        if (!visitedObjects.has(p.deploymentStyle))
            aws_cdk_lib_IResolvable(p.deploymentStyle);
        if (!visitedObjects.has(p.ec2TagFilters))
            aws_cdk_lib_IResolvable(p.ec2TagFilters);
        if (!visitedObjects.has(p.ec2TagSet))
            aws_cdk_lib_IResolvable(p.ec2TagSet);
        if (!visitedObjects.has(p.ecsServices))
            aws_cdk_lib_IResolvable(p.ecsServices);
        if (!visitedObjects.has(p.loadBalancerInfo))
            aws_cdk_lib_IResolvable(p.loadBalancerInfo);
        if (!visitedObjects.has(p.onPremisesInstanceTagFilters))
            aws_cdk_lib_IResolvable(p.onPremisesInstanceTagFilters);
        if (!visitedObjects.has(p.onPremisesTagSet))
            aws_cdk_lib_IResolvable(p.onPremisesTagSet);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.triggerConfigurations))
            aws_cdk_lib_IResolvable(p.triggerConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_AlarmProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_AlarmConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alarms))
            aws_cdk_lib_IResolvable(p.alarms);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_AutoRollbackConfigurationProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_BlueGreenDeploymentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deploymentReadyOption))
            aws_cdk_lib_IResolvable(p.deploymentReadyOption);
        if (!visitedObjects.has(p.greenFleetProvisioningOption))
            aws_cdk_lib_IResolvable(p.greenFleetProvisioningOption);
        if (!visitedObjects.has(p.terminateBlueInstancesOnDeploymentSuccess))
            aws_cdk_lib_IResolvable(p.terminateBlueInstancesOnDeploymentSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_BlueInstanceTerminationOptionProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_DeploymentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.revision))
            aws_cdk_lib_IResolvable(p.revision);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_DeploymentReadyOptionProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_DeploymentStyleProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_EC2TagFilterProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_EC2TagSetProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ec2TagSetList))
            aws_cdk_lib_IResolvable(p.ec2TagSetList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_EC2TagSetListObjectProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ec2TagGroup))
            aws_cdk_lib_IResolvable(p.ec2TagGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_ECSServiceProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_ELBInfoProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_GitHubLocationProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_GreenFleetProvisioningOptionProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_LoadBalancerInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.elbInfoList))
            aws_cdk_lib_IResolvable(p.elbInfoList);
        if (!visitedObjects.has(p.targetGroupInfoList))
            aws_cdk_lib_IResolvable(p.targetGroupInfoList);
        if (!visitedObjects.has(p.targetGroupPairInfoList))
            aws_cdk_lib_IResolvable(p.targetGroupPairInfoList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_OnPremisesTagSetProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onPremisesTagSetList))
            aws_cdk_lib_IResolvable(p.onPremisesTagSetList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_OnPremisesTagSetListObjectProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onPremisesTagGroup))
            aws_cdk_lib_IResolvable(p.onPremisesTagGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_RevisionLocationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.gitHubLocation))
            aws_cdk_lib_IResolvable(p.gitHubLocation);
        if (!visitedObjects.has(p.s3Location))
            aws_cdk_lib_IResolvable(p.s3Location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_TagFilterProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_TargetGroupInfoProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_TargetGroupPairInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.prodTrafficRoute))
            aws_cdk_lib_IResolvable(p.prodTrafficRoute);
        if (!visitedObjects.has(p.targetGroups))
            aws_cdk_lib_IResolvable(p.targetGroups);
        if (!visitedObjects.has(p.testTrafficRoute))
            aws_cdk_lib_IResolvable(p.testTrafficRoute);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_TrafficRouteProperty(p) {
}
function aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_TriggerConfigProperty(p) {
}
function aws_cdk_lib_aws_codeguruprofiler_CfnProfilingGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.anomalyDetectionNotificationConfiguration))
            aws_cdk_lib_IResolvable(p.anomalyDetectionNotificationConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codeguruprofiler_CfnProfilingGroup(p) {
}
function aws_cdk_lib_aws_codeguruprofiler_CfnProfilingGroup_AgentPermissionsProperty(p) {
}
function aws_cdk_lib_aws_codeguruprofiler_CfnProfilingGroup_ChannelProperty(p) {
}
function aws_cdk_lib_aws_codeguruprofiler_ComputePlatform(p) {
}
function aws_cdk_lib_aws_codeguruprofiler_IProfilingGroup(p) {
}
function aws_cdk_lib_aws_codeguruprofiler_ProfilingGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.computePlatform))
            aws_cdk_lib_aws_codeguruprofiler_ComputePlatform(p.computePlatform);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codeguruprofiler_ProfilingGroup(p) {
}
function aws_cdk_lib_aws_codegurureviewer_CfnRepositoryAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codegurureviewer_CfnRepositoryAssociation(p) {
}
function aws_cdk_lib_aws_codepipeline_ActionCategory(p) {
}
function aws_cdk_lib_aws_codepipeline_ActionArtifactBounds(p) {
}
function aws_cdk_lib_aws_codepipeline_GlobalVariables(p) {
}
function aws_cdk_lib_aws_codepipeline_ActionProperties(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.artifactBounds))
            aws_cdk_lib_aws_codepipeline_ActionArtifactBounds(p.artifactBounds);
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_aws_codepipeline_ActionCategory(p.category);
        if (p.inputs != null)
            for (const o of p.inputs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_Artifact(o);
        if (p.outputs != null)
            for (const o of p.outputs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_Artifact(o);
        if (!visitedObjects.has(p.resource))
            aws_cdk_lib_IResource(p.resource);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_ActionBindOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_ActionConfig(p) {
}
function aws_cdk_lib_aws_codepipeline_PipelineNotifyOnOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_PipelineNotificationEvents(o);
        if (!visitedObjects.has(p.detailType))
            aws_cdk_lib_aws_codestarnotifications_DetailType(p.detailType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_IAction(p) {
}
function aws_cdk_lib_aws_codepipeline_IPipeline(p) {
}
function aws_cdk_lib_aws_codepipeline_IStage(p) {
}
function aws_cdk_lib_aws_codepipeline_CommonActionProps(p) {
}
function aws_cdk_lib_aws_codepipeline_CommonAwsActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_Action(p) {
}
function aws_cdk_lib_aws_codepipeline_PipelineNotificationEvents(p) {
}
function aws_cdk_lib_aws_codepipeline_Artifact(p) {
}
function aws_cdk_lib_aws_codepipeline_ArtifactPath(p) {
}
function aws_cdk_lib_aws_codepipeline_StagePlacement(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.justAfter))
            aws_cdk_lib_aws_codepipeline_IStage(p.justAfter);
        if (!visitedObjects.has(p.rightBefore))
            aws_cdk_lib_aws_codepipeline_IStage(p.rightBefore);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_StageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.actions != null)
            for (const o of p.actions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_IAction(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_StageOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.placement))
            aws_cdk_lib_aws_codepipeline_StagePlacement(p.placement);
        if (p.actions != null)
            for (const o of p.actions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_IAction(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_PipelineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.artifactBucket))
            aws_cdk_lib_aws_s3_IBucket(p.artifactBucket);
        if (p.crossRegionReplicationBuckets != null)
            for (const o of Object.values(p.crossRegionReplicationBuckets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (p.stages != null)
            for (const o of p.stages)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_StageProps(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_Pipeline(p) {
}
function aws_cdk_lib_aws_codepipeline_CrossRegionSupport(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.replicationBucket))
            aws_cdk_lib_aws_s3_IBucket(p.replicationBucket);
        if (!visitedObjects.has(p.stack))
            aws_cdk_lib_Stack(p.stack);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_CustomActionProperty(p) {
}
function aws_cdk_lib_aws_codepipeline_CustomActionRegistrationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.artifactBounds))
            aws_cdk_lib_aws_codepipeline_ActionArtifactBounds(p.artifactBounds);
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_aws_codepipeline_ActionCategory(p.category);
        if (p.actionProperties != null)
            for (const o of p.actionProperties)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_CustomActionProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_CustomActionRegistration(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnCustomActionTypeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputArtifactDetails))
            aws_cdk_lib_IResolvable(p.inputArtifactDetails);
        if (!visitedObjects.has(p.outputArtifactDetails))
            aws_cdk_lib_IResolvable(p.outputArtifactDetails);
        if (!visitedObjects.has(p.configurationProperties))
            aws_cdk_lib_IResolvable(p.configurationProperties);
        if (!visitedObjects.has(p.settings))
            aws_cdk_lib_IResolvable(p.settings);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_CfnCustomActionType(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnCustomActionType_ArtifactDetailsProperty(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnCustomActionType_ConfigurationPropertiesProperty(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnCustomActionType_SettingsProperty(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnPipelineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stages))
            aws_cdk_lib_IResolvable(p.stages);
        if (!visitedObjects.has(p.artifactStore))
            aws_cdk_lib_IResolvable(p.artifactStore);
        if (!visitedObjects.has(p.artifactStores))
            aws_cdk_lib_IResolvable(p.artifactStores);
        if (!visitedObjects.has(p.disableInboundStageTransitions))
            aws_cdk_lib_IResolvable(p.disableInboundStageTransitions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_CfnPipeline(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnPipeline_ActionDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actionTypeId))
            aws_cdk_lib_IResolvable(p.actionTypeId);
        if (!visitedObjects.has(p.inputArtifacts))
            aws_cdk_lib_IResolvable(p.inputArtifacts);
        if (!visitedObjects.has(p.outputArtifacts))
            aws_cdk_lib_IResolvable(p.outputArtifacts);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_CfnPipeline_ActionTypeIdProperty(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnPipeline_ArtifactStoreProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_IResolvable(p.encryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_CfnPipeline_ArtifactStoreMapProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.artifactStore))
            aws_cdk_lib_IResolvable(p.artifactStore);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_CfnPipeline_BlockerDeclarationProperty(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnPipeline_EncryptionKeyProperty(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnPipeline_InputArtifactProperty(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnPipeline_OutputArtifactProperty(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnPipeline_StageDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.blockers))
            aws_cdk_lib_IResolvable(p.blockers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_CfnPipeline_StageTransitionProperty(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnWebhookProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticationConfiguration))
            aws_cdk_lib_IResolvable(p.authenticationConfiguration);
        if (!visitedObjects.has(p.filters))
            aws_cdk_lib_IResolvable(p.filters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_CfnWebhook(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnWebhook_WebhookAuthConfigurationProperty(p) {
}
function aws_cdk_lib_aws_codepipeline_CfnWebhook_WebhookFilterRuleProperty(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_AlexaSkillDeployActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientSecret))
            aws_cdk_lib_SecretValue(p.clientSecret);
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_aws_codepipeline_Artifact(p.input);
        if (!visitedObjects.has(p.refreshToken))
            aws_cdk_lib_SecretValue(p.refreshToken);
        if (!visitedObjects.has(p.parameterOverridesArtifact))
            aws_cdk_lib_aws_codepipeline_Artifact(p.parameterOverridesArtifact);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_AlexaSkillDeployAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CodeStarSourceVariables(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CodeStarConnectionsSourceActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_aws_codepipeline_Artifact(p.output);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CodeStarConnectionsSourceAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CloudFormationExecuteChangeSetActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_aws_codepipeline_Artifact(p.output);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CloudFormationExecuteChangeSetAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CloudFormationCreateReplaceChangeSetActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.templatePath))
            aws_cdk_lib_aws_codepipeline_ArtifactPath(p.templatePath);
        if (p.cfnCapabilities != null)
            for (const o of p.cfnCapabilities)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnCapabilities(o);
        if (!visitedObjects.has(p.deploymentRole))
            aws_cdk_lib_aws_iam_IRole(p.deploymentRole);
        if (p.extraInputs != null)
            for (const o of p.extraInputs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_Artifact(o);
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_aws_codepipeline_Artifact(p.output);
        if (!visitedObjects.has(p.templateConfiguration))
            aws_cdk_lib_aws_codepipeline_ArtifactPath(p.templateConfiguration);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CloudFormationCreateReplaceChangeSetAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CloudFormationCreateUpdateStackActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.templatePath))
            aws_cdk_lib_aws_codepipeline_ArtifactPath(p.templatePath);
        if (p.cfnCapabilities != null)
            for (const o of p.cfnCapabilities)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnCapabilities(o);
        if (!visitedObjects.has(p.deploymentRole))
            aws_cdk_lib_aws_iam_IRole(p.deploymentRole);
        if (p.extraInputs != null)
            for (const o of p.extraInputs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_Artifact(o);
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_aws_codepipeline_Artifact(p.output);
        if (!visitedObjects.has(p.templateConfiguration))
            aws_cdk_lib_aws_codepipeline_ArtifactPath(p.templateConfiguration);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CloudFormationCreateUpdateStackAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CloudFormationDeleteStackActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.cfnCapabilities != null)
            for (const o of p.cfnCapabilities)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnCapabilities(o);
        if (!visitedObjects.has(p.deploymentRole))
            aws_cdk_lib_aws_iam_IRole(p.deploymentRole);
        if (p.extraInputs != null)
            for (const o of p.extraInputs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_Artifact(o);
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_aws_codepipeline_Artifact(p.output);
        if (!visitedObjects.has(p.templateConfiguration))
            aws_cdk_lib_aws_codepipeline_ArtifactPath(p.templateConfiguration);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CloudFormationDeleteStackAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CloudFormationDeployStackSetActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.template))
            aws_cdk_lib_aws_codepipeline_actions_StackSetTemplate(p.template);
        if (p.cfnCapabilities != null)
            for (const o of p.cfnCapabilities)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnCapabilities(o);
        if (!visitedObjects.has(p.deploymentModel))
            aws_cdk_lib_aws_codepipeline_actions_StackSetDeploymentModel(p.deploymentModel);
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_aws_codepipeline_actions_StackSetParameters(p.parameters);
        if (!visitedObjects.has(p.stackInstances))
            aws_cdk_lib_aws_codepipeline_actions_StackInstances(p.stackInstances);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CloudFormationDeployStackSetAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CloudFormationDeployStackInstancesActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stackInstances))
            aws_cdk_lib_aws_codepipeline_actions_StackInstances(p.stackInstances);
        if (!visitedObjects.has(p.parameterOverrides))
            aws_cdk_lib_aws_codepipeline_actions_StackSetParameters(p.parameterOverrides);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CloudFormationDeployStackInstancesAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CommonCloudFormationStackSetOptions(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_StackSetTemplate(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_StackInstances(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_StackSetParameters(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_StackSetDeploymentModel(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_OrganizationsDeploymentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoDeployment))
            aws_cdk_lib_aws_codepipeline_actions_StackSetOrganizationsAutoDeployment(p.autoDeployment);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_StackSetOrganizationsAutoDeployment(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_SelfManagedDeploymentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.administrationRole))
            aws_cdk_lib_aws_iam_IRole(p.administrationRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CodeBuildActionType(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CodeBuildActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_aws_codepipeline_Artifact(p.input);
        if (!visitedObjects.has(p.project))
            aws_cdk_lib_aws_codebuild_IProject(p.project);
        if (p.environmentVariables != null)
            for (const o of Object.values(p.environmentVariables))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_BuildEnvironmentVariable(o);
        if (p.extraInputs != null)
            for (const o of p.extraInputs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_Artifact(o);
        if (p.outputs != null)
            for (const o of p.outputs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_Artifact(o);
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_codepipeline_actions_CodeBuildActionType(p.type);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CodeBuildAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CodeCommitTrigger(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CodeCommitSourceVariables(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CodeCommitSourceActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_aws_codepipeline_Artifact(p.output);
        if (!visitedObjects.has(p.repository))
            aws_cdk_lib_aws_codecommit_IRepository(p.repository);
        if (!visitedObjects.has(p.eventRole))
            aws_cdk_lib_aws_iam_IRole(p.eventRole);
        if (!visitedObjects.has(p.trigger))
            aws_cdk_lib_aws_codepipeline_actions_CodeCommitTrigger(p.trigger);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CodeCommitSourceAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CodeDeployEcsContainerImageInput(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_aws_codepipeline_Artifact(p.input);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CodeDeployEcsDeployActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deploymentGroup))
            aws_cdk_lib_aws_codedeploy_IEcsDeploymentGroup(p.deploymentGroup);
        if (!visitedObjects.has(p.appSpecTemplateFile))
            aws_cdk_lib_aws_codepipeline_ArtifactPath(p.appSpecTemplateFile);
        if (!visitedObjects.has(p.appSpecTemplateInput))
            aws_cdk_lib_aws_codepipeline_Artifact(p.appSpecTemplateInput);
        if (p.containerImageInputs != null)
            for (const o of p.containerImageInputs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_actions_CodeDeployEcsContainerImageInput(o);
        if (!visitedObjects.has(p.taskDefinitionTemplateFile))
            aws_cdk_lib_aws_codepipeline_ArtifactPath(p.taskDefinitionTemplateFile);
        if (!visitedObjects.has(p.taskDefinitionTemplateInput))
            aws_cdk_lib_aws_codepipeline_Artifact(p.taskDefinitionTemplateInput);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CodeDeployEcsDeployAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CodeDeployServerDeployActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deploymentGroup))
            aws_cdk_lib_aws_codedeploy_IServerDeploymentGroup(p.deploymentGroup);
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_aws_codepipeline_Artifact(p.input);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_CodeDeployServerDeployAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_EcrSourceVariables(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_EcrSourceActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_aws_codepipeline_Artifact(p.output);
        if (!visitedObjects.has(p.repository))
            aws_cdk_lib_aws_ecr_IRepository(p.repository);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_EcrSourceAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_EcsDeployActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.service))
            aws_cdk_lib_aws_ecs_IBaseService(p.service);
        if (!visitedObjects.has(p.deploymentTimeout))
            aws_cdk_lib_Duration(p.deploymentTimeout);
        if (!visitedObjects.has(p.imageFile))
            aws_cdk_lib_aws_codepipeline_ArtifactPath(p.imageFile);
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_aws_codepipeline_Artifact(p.input);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_EcsDeployAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_ElasticBeanstalkDeployActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_aws_codepipeline_Artifact(p.input);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_ElasticBeanstalkDeployAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_GitHubTrigger(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_GitHubSourceVariables(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_GitHubSourceActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.oauthToken))
            aws_cdk_lib_SecretValue(p.oauthToken);
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_aws_codepipeline_Artifact(p.output);
        if (!visitedObjects.has(p.trigger))
            aws_cdk_lib_aws_codepipeline_actions_GitHubTrigger(p.trigger);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_GitHubSourceAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_JenkinsActionType(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_JenkinsActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jenkinsProvider))
            aws_cdk_lib_aws_codepipeline_actions_IJenkinsProvider(p.jenkinsProvider);
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_codepipeline_actions_JenkinsActionType(p.type);
        if (p.inputs != null)
            for (const o of p.inputs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_Artifact(o);
        if (p.outputs != null)
            for (const o of p.outputs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_Artifact(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_JenkinsAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_IJenkinsProvider(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_JenkinsProviderAttributes(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_JenkinsProviderProps(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_BaseJenkinsProvider(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_JenkinsProvider(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_LambdaInvokeActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambda))
            aws_cdk_lib_aws_lambda_IFunction(p.lambda);
        if (p.inputs != null)
            for (const o of p.inputs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_Artifact(o);
        if (p.outputs != null)
            for (const o of p.outputs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_Artifact(o);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_LambdaInvokeAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_ManualApprovalActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.notificationTopic))
            aws_cdk_lib_aws_sns_ITopic(p.notificationTopic);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_ManualApprovalAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_CacheControl(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_S3DeployActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_aws_codepipeline_Artifact(p.input);
        if (!visitedObjects.has(p.accessControl))
            aws_cdk_lib_aws_s3_BucketAccessControl(p.accessControl);
        if (p.cacheControl != null)
            for (const o of p.cacheControl)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codepipeline_actions_CacheControl(o);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_S3DeployAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_S3Trigger(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_S3SourceVariables(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_S3SourceActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_aws_codepipeline_Artifact(p.output);
        if (!visitedObjects.has(p.trigger))
            aws_cdk_lib_aws_codepipeline_actions_S3Trigger(p.trigger);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_S3SourceAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_StateMachineInput(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_StepFunctionsInvokeActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stateMachine))
            aws_cdk_lib_aws_stepfunctions_IStateMachine(p.stateMachine);
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_aws_codepipeline_Artifact(p.output);
        if (!visitedObjects.has(p.stateMachineInput))
            aws_cdk_lib_aws_codepipeline_actions_StateMachineInput(p.stateMachineInput);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_StepFunctionInvokeAction(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_ServiceCatalogDeployActionBeta1Props(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.templatePath))
            aws_cdk_lib_aws_codepipeline_ArtifactPath(p.templatePath);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codepipeline_actions_ServiceCatalogDeployActionBeta1(p) {
}
function aws_cdk_lib_aws_codepipeline_actions_Action(p) {
}
function aws_cdk_lib_aws_codestar_CfnGitHubRepositoryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_IResolvable(p.code);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codestar_CfnGitHubRepository(p) {
}
function aws_cdk_lib_aws_codestar_CfnGitHubRepository_CodeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_IResolvable(p.s3);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codestar_CfnGitHubRepository_S3Property(p) {
}
function aws_cdk_lib_aws_codestarconnections_CfnConnectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codestarconnections_CfnConnection(p) {
}
function aws_cdk_lib_aws_codestarnotifications_CfnNotificationRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targets))
            aws_cdk_lib_IResolvable(p.targets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codestarnotifications_CfnNotificationRule(p) {
}
function aws_cdk_lib_aws_codestarnotifications_CfnNotificationRule_TargetProperty(p) {
}
function aws_cdk_lib_aws_codestarnotifications_DetailType(p) {
}
function aws_cdk_lib_aws_codestarnotifications_NotificationRuleOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.detailType))
            aws_cdk_lib_aws_codestarnotifications_DetailType(p.detailType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codestarnotifications_NotificationRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_aws_codestarnotifications_INotificationRuleSource(p.source);
        if (p.targets != null)
            for (const o of p.targets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codestarnotifications_INotificationRuleTarget(o);
        if (!visitedObjects.has(p.detailType))
            aws_cdk_lib_aws_codestarnotifications_DetailType(p.detailType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_codestarnotifications_INotificationRule(p) {
}
function aws_cdk_lib_aws_codestarnotifications_NotificationRule(p) {
}
function aws_cdk_lib_aws_codestarnotifications_NotificationRuleSourceConfig(p) {
}
function aws_cdk_lib_aws_codestarnotifications_INotificationRuleSource(p) {
}
function aws_cdk_lib_aws_codestarnotifications_NotificationRuleTargetConfig(p) {
}
function aws_cdk_lib_aws_codestarnotifications_INotificationRuleTarget(p) {
}
function aws_cdk_lib_aws_cognito_CfnIdentityPoolProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cognitoIdentityProviders))
            aws_cdk_lib_IResolvable(p.cognitoIdentityProviders);
        if (!visitedObjects.has(p.cognitoStreams))
            aws_cdk_lib_IResolvable(p.cognitoStreams);
        if (!visitedObjects.has(p.pushSync))
            aws_cdk_lib_IResolvable(p.pushSync);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnIdentityPool(p) {
}
function aws_cdk_lib_aws_cognito_CfnIdentityPool_CognitoIdentityProviderProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnIdentityPool_CognitoStreamsProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnIdentityPool_PushSyncProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnIdentityPoolRoleAttachmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.roleMappings))
            aws_cdk_lib_IResolvable(p.roleMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnIdentityPoolRoleAttachment(p) {
}
function aws_cdk_lib_aws_cognito_CfnIdentityPoolRoleAttachment_MappingRuleProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnIdentityPoolRoleAttachment_RoleMappingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rulesConfiguration))
            aws_cdk_lib_IResolvable(p.rulesConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnIdentityPoolRoleAttachment_RulesConfigurationTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPoolProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accountRecoverySetting))
            aws_cdk_lib_IResolvable(p.accountRecoverySetting);
        if (!visitedObjects.has(p.adminCreateUserConfig))
            aws_cdk_lib_IResolvable(p.adminCreateUserConfig);
        if (!visitedObjects.has(p.deviceConfiguration))
            aws_cdk_lib_IResolvable(p.deviceConfiguration);
        if (!visitedObjects.has(p.emailConfiguration))
            aws_cdk_lib_IResolvable(p.emailConfiguration);
        if (!visitedObjects.has(p.lambdaConfig))
            aws_cdk_lib_IResolvable(p.lambdaConfig);
        if (!visitedObjects.has(p.policies))
            aws_cdk_lib_IResolvable(p.policies);
        if (!visitedObjects.has(p.schema))
            aws_cdk_lib_IResolvable(p.schema);
        if (!visitedObjects.has(p.smsConfiguration))
            aws_cdk_lib_IResolvable(p.smsConfiguration);
        if (!visitedObjects.has(p.userAttributeUpdateSettings))
            aws_cdk_lib_IResolvable(p.userAttributeUpdateSettings);
        if (!visitedObjects.has(p.usernameConfiguration))
            aws_cdk_lib_IResolvable(p.usernameConfiguration);
        if (!visitedObjects.has(p.userPoolAddOns))
            aws_cdk_lib_IResolvable(p.userPoolAddOns);
        if (!visitedObjects.has(p.verificationMessageTemplate))
            aws_cdk_lib_IResolvable(p.verificationMessageTemplate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPool(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_AccountRecoverySettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.recoveryMechanisms))
            aws_cdk_lib_IResolvable(p.recoveryMechanisms);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPool_AdminCreateUserConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inviteMessageTemplate))
            aws_cdk_lib_IResolvable(p.inviteMessageTemplate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPool_CustomEmailSenderProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_CustomSMSSenderProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_DeviceConfigurationProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_EmailConfigurationProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_InviteMessageTemplateProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_LambdaConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customEmailSender))
            aws_cdk_lib_IResolvable(p.customEmailSender);
        if (!visitedObjects.has(p.customSmsSender))
            aws_cdk_lib_IResolvable(p.customSmsSender);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPool_NumberAttributeConstraintsProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_PasswordPolicyProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_PoliciesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.passwordPolicy))
            aws_cdk_lib_IResolvable(p.passwordPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPool_RecoveryOptionProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_SchemaAttributeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.numberAttributeConstraints))
            aws_cdk_lib_IResolvable(p.numberAttributeConstraints);
        if (!visitedObjects.has(p.stringAttributeConstraints))
            aws_cdk_lib_IResolvable(p.stringAttributeConstraints);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPool_SmsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_StringAttributeConstraintsProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_UserAttributeUpdateSettingsProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_UserPoolAddOnsProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_UsernameConfigurationProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPool_VerificationMessageTemplateProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolClientProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.analyticsConfiguration))
            aws_cdk_lib_IResolvable(p.analyticsConfiguration);
        if (!visitedObjects.has(p.tokenValidityUnits))
            aws_cdk_lib_IResolvable(p.tokenValidityUnits);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPoolClient(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolClient_AnalyticsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolClient_TokenValidityUnitsProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolDomainProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customDomainConfig))
            aws_cdk_lib_IResolvable(p.customDomainConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPoolDomain(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolDomain_CustomDomainConfigTypeProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolGroupProps(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolGroup(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolIdentityProviderProps(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolIdentityProvider(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolResourceServerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scopes))
            aws_cdk_lib_IResolvable(p.scopes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPoolResourceServer(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolResourceServer_ResourceServerScopeTypeProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accountTakeoverRiskConfiguration))
            aws_cdk_lib_IResolvable(p.accountTakeoverRiskConfiguration);
        if (!visitedObjects.has(p.compromisedCredentialsRiskConfiguration))
            aws_cdk_lib_IResolvable(p.compromisedCredentialsRiskConfiguration);
        if (!visitedObjects.has(p.riskExceptionConfiguration))
            aws_cdk_lib_IResolvable(p.riskExceptionConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_AccountTakeoverActionTypeProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_AccountTakeoverActionsTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.highAction))
            aws_cdk_lib_IResolvable(p.highAction);
        if (!visitedObjects.has(p.lowAction))
            aws_cdk_lib_IResolvable(p.lowAction);
        if (!visitedObjects.has(p.mediumAction))
            aws_cdk_lib_IResolvable(p.mediumAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_AccountTakeoverRiskConfigurationTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.notifyConfiguration))
            aws_cdk_lib_IResolvable(p.notifyConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_CompromisedCredentialsActionsTypeProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_CompromisedCredentialsRiskConfigurationTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_NotifyConfigurationTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blockEmail))
            aws_cdk_lib_IResolvable(p.blockEmail);
        if (!visitedObjects.has(p.mfaEmail))
            aws_cdk_lib_IResolvable(p.mfaEmail);
        if (!visitedObjects.has(p.noActionEmail))
            aws_cdk_lib_IResolvable(p.noActionEmail);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_NotifyEmailTypeProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_RiskExceptionConfigurationTypeProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolUICustomizationAttachmentProps(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolUICustomizationAttachment(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolUserProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userAttributes))
            aws_cdk_lib_IResolvable(p.userAttributes);
        if (!visitedObjects.has(p.validationData))
            aws_cdk_lib_IResolvable(p.validationData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CfnUserPoolUser(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolUser_AttributeTypeProperty(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolUserToGroupAttachmentProps(p) {
}
function aws_cdk_lib_aws_cognito_CfnUserPoolUserToGroupAttachment(p) {
}
function aws_cdk_lib_aws_cognito_SignInAliases(p) {
}
function aws_cdk_lib_aws_cognito_AutoVerifiedAttrs(p) {
}
function aws_cdk_lib_aws_cognito_KeepOriginalAttrs(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolTriggers(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.createAuthChallenge))
            aws_cdk_lib_aws_lambda_IFunction(p.createAuthChallenge);
        if (!visitedObjects.has(p.customEmailSender))
            aws_cdk_lib_aws_lambda_IFunction(p.customEmailSender);
        if (!visitedObjects.has(p.customMessage))
            aws_cdk_lib_aws_lambda_IFunction(p.customMessage);
        if (!visitedObjects.has(p.customSmsSender))
            aws_cdk_lib_aws_lambda_IFunction(p.customSmsSender);
        if (!visitedObjects.has(p.defineAuthChallenge))
            aws_cdk_lib_aws_lambda_IFunction(p.defineAuthChallenge);
        if (!visitedObjects.has(p.postAuthentication))
            aws_cdk_lib_aws_lambda_IFunction(p.postAuthentication);
        if (!visitedObjects.has(p.postConfirmation))
            aws_cdk_lib_aws_lambda_IFunction(p.postConfirmation);
        if (!visitedObjects.has(p.preAuthentication))
            aws_cdk_lib_aws_lambda_IFunction(p.preAuthentication);
        if (!visitedObjects.has(p.preSignUp))
            aws_cdk_lib_aws_lambda_IFunction(p.preSignUp);
        if (!visitedObjects.has(p.preTokenGeneration))
            aws_cdk_lib_aws_lambda_IFunction(p.preTokenGeneration);
        if (!visitedObjects.has(p.userMigration))
            aws_cdk_lib_aws_lambda_IFunction(p.userMigration);
        if (!visitedObjects.has(p.verifyAuthChallengeResponse))
            aws_cdk_lib_aws_lambda_IFunction(p.verifyAuthChallengeResponse);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolOperation(p) {
}
function aws_cdk_lib_aws_cognito_VerificationEmailStyle(p) {
}
function aws_cdk_lib_aws_cognito_UserVerificationConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.emailStyle))
            aws_cdk_lib_aws_cognito_VerificationEmailStyle(p.emailStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserInvitationConfig(p) {
}
function aws_cdk_lib_aws_cognito_Mfa(p) {
}
function aws_cdk_lib_aws_cognito_MfaSecondFactor(p) {
}
function aws_cdk_lib_aws_cognito_PasswordPolicy(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tempPasswordValidity))
            aws_cdk_lib_Duration(p.tempPasswordValidity);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_EmailSettings(p) {
}
function aws_cdk_lib_aws_cognito_AccountRecovery(p) {
}
function aws_cdk_lib_aws_cognito_DeviceTracking(p) {
}
function aws_cdk_lib_aws_cognito_AdvancedSecurityMode(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accountRecovery))
            aws_cdk_lib_aws_cognito_AccountRecovery(p.accountRecovery);
        if (!visitedObjects.has(p.advancedSecurityMode))
            aws_cdk_lib_aws_cognito_AdvancedSecurityMode(p.advancedSecurityMode);
        if (!visitedObjects.has(p.autoVerify))
            aws_cdk_lib_aws_cognito_AutoVerifiedAttrs(p.autoVerify);
        if (p.customAttributes != null)
            for (const o of Object.values(p.customAttributes))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cognito_ICustomAttribute(o);
        if (!visitedObjects.has(p.customSenderKmsKey))
            aws_cdk_lib_aws_kms_IKey(p.customSenderKmsKey);
        if (!visitedObjects.has(p.deviceTracking))
            aws_cdk_lib_aws_cognito_DeviceTracking(p.deviceTracking);
        if (!visitedObjects.has(p.email))
            aws_cdk_lib_aws_cognito_UserPoolEmail(p.email);
        if (!visitedObjects.has(p.keepOriginal))
            aws_cdk_lib_aws_cognito_KeepOriginalAttrs(p.keepOriginal);
        if (!visitedObjects.has(p.lambdaTriggers))
            aws_cdk_lib_aws_cognito_UserPoolTriggers(p.lambdaTriggers);
        if (!visitedObjects.has(p.mfa))
            aws_cdk_lib_aws_cognito_Mfa(p.mfa);
        if (!visitedObjects.has(p.mfaSecondFactor))
            aws_cdk_lib_aws_cognito_MfaSecondFactor(p.mfaSecondFactor);
        if (!visitedObjects.has(p.passwordPolicy))
            aws_cdk_lib_aws_cognito_PasswordPolicy(p.passwordPolicy);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.signInAliases))
            aws_cdk_lib_aws_cognito_SignInAliases(p.signInAliases);
        if (!visitedObjects.has(p.smsRole))
            aws_cdk_lib_aws_iam_IRole(p.smsRole);
        if (!visitedObjects.has(p.standardAttributes))
            aws_cdk_lib_aws_cognito_StandardAttributes(p.standardAttributes);
        if (!visitedObjects.has(p.userInvitation))
            aws_cdk_lib_aws_cognito_UserInvitationConfig(p.userInvitation);
        if (!visitedObjects.has(p.userVerification))
            aws_cdk_lib_aws_cognito_UserVerificationConfig(p.userVerification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_IUserPool(p) {
}
function aws_cdk_lib_aws_cognito_UserPool(p) {
}
function aws_cdk_lib_aws_cognito_StandardAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.address))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.address);
        if (!visitedObjects.has(p.birthdate))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.birthdate);
        if (!visitedObjects.has(p.email))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.email);
        if (!visitedObjects.has(p.familyName))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.familyName);
        if (!visitedObjects.has(p.fullname))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.fullname);
        if (!visitedObjects.has(p.gender))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.gender);
        if (!visitedObjects.has(p.givenName))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.givenName);
        if (!visitedObjects.has(p.lastUpdateTime))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.lastUpdateTime);
        if (!visitedObjects.has(p.locale))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.locale);
        if (!visitedObjects.has(p.middleName))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.middleName);
        if (!visitedObjects.has(p.nickname))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.nickname);
        if (!visitedObjects.has(p.phoneNumber))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.phoneNumber);
        if (!visitedObjects.has(p.preferredUsername))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.preferredUsername);
        if (!visitedObjects.has(p.profilePage))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.profilePage);
        if (!visitedObjects.has(p.profilePicture))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.profilePicture);
        if (!visitedObjects.has(p.timezone))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.timezone);
        if (!visitedObjects.has(p.website))
            aws_cdk_lib_aws_cognito_StandardAttribute(p.website);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_StandardAttribute(p) {
}
function aws_cdk_lib_aws_cognito_ICustomAttribute(p) {
}
function aws_cdk_lib_aws_cognito_CustomAttributeConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.numberConstraints))
            aws_cdk_lib_aws_cognito_NumberAttributeConstraints(p.numberConstraints);
        if (!visitedObjects.has(p.stringConstraints))
            aws_cdk_lib_aws_cognito_StringAttributeConstraints(p.stringConstraints);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CustomAttributeProps(p) {
}
function aws_cdk_lib_aws_cognito_StringAttributeConstraints(p) {
}
function aws_cdk_lib_aws_cognito_StringAttributeProps(p) {
}
function aws_cdk_lib_aws_cognito_StringAttribute(p) {
}
function aws_cdk_lib_aws_cognito_NumberAttributeConstraints(p) {
}
function aws_cdk_lib_aws_cognito_NumberAttributeProps(p) {
}
function aws_cdk_lib_aws_cognito_NumberAttribute(p) {
}
function aws_cdk_lib_aws_cognito_BooleanAttribute(p) {
}
function aws_cdk_lib_aws_cognito_DateTimeAttribute(p) {
}
function aws_cdk_lib_aws_cognito_StandardAttributesMask(p) {
}
function aws_cdk_lib_aws_cognito_ClientAttributes(p) {
}
function aws_cdk_lib_aws_cognito_AuthFlow(p) {
}
function aws_cdk_lib_aws_cognito_OAuthSettings(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.flows))
            aws_cdk_lib_aws_cognito_OAuthFlows(p.flows);
        if (p.scopes != null)
            for (const o of p.scopes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cognito_OAuthScope(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_OAuthFlows(p) {
}
function aws_cdk_lib_aws_cognito_OAuthScope(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolClientIdentityProvider(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolClientOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessTokenValidity))
            aws_cdk_lib_Duration(p.accessTokenValidity);
        if (!visitedObjects.has(p.authFlows))
            aws_cdk_lib_aws_cognito_AuthFlow(p.authFlows);
        if (!visitedObjects.has(p.authSessionValidity))
            aws_cdk_lib_Duration(p.authSessionValidity);
        if (!visitedObjects.has(p.idTokenValidity))
            aws_cdk_lib_Duration(p.idTokenValidity);
        if (!visitedObjects.has(p.oAuth))
            aws_cdk_lib_aws_cognito_OAuthSettings(p.oAuth);
        if (!visitedObjects.has(p.readAttributes))
            aws_cdk_lib_aws_cognito_ClientAttributes(p.readAttributes);
        if (!visitedObjects.has(p.refreshTokenValidity))
            aws_cdk_lib_Duration(p.refreshTokenValidity);
        if (p.supportedIdentityProviders != null)
            for (const o of p.supportedIdentityProviders)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cognito_UserPoolClientIdentityProvider(o);
        if (!visitedObjects.has(p.writeAttributes))
            aws_cdk_lib_aws_cognito_ClientAttributes(p.writeAttributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolClientProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userPool))
            aws_cdk_lib_aws_cognito_IUserPool(p.userPool);
        if (!visitedObjects.has(p.accessTokenValidity))
            aws_cdk_lib_Duration(p.accessTokenValidity);
        if (!visitedObjects.has(p.authFlows))
            aws_cdk_lib_aws_cognito_AuthFlow(p.authFlows);
        if (!visitedObjects.has(p.authSessionValidity))
            aws_cdk_lib_Duration(p.authSessionValidity);
        if (!visitedObjects.has(p.idTokenValidity))
            aws_cdk_lib_Duration(p.idTokenValidity);
        if (!visitedObjects.has(p.oAuth))
            aws_cdk_lib_aws_cognito_OAuthSettings(p.oAuth);
        if (!visitedObjects.has(p.readAttributes))
            aws_cdk_lib_aws_cognito_ClientAttributes(p.readAttributes);
        if (!visitedObjects.has(p.refreshTokenValidity))
            aws_cdk_lib_Duration(p.refreshTokenValidity);
        if (p.supportedIdentityProviders != null)
            for (const o of p.supportedIdentityProviders)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cognito_UserPoolClientIdentityProvider(o);
        if (!visitedObjects.has(p.writeAttributes))
            aws_cdk_lib_aws_cognito_ClientAttributes(p.writeAttributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_IUserPoolClient(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolClient(p) {
}
function aws_cdk_lib_aws_cognito_IUserPoolDomain(p) {
}
function aws_cdk_lib_aws_cognito_CustomDomainOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_certificatemanager_ICertificate(p.certificate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_CognitoDomainOptions(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolDomainOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cognitoDomain))
            aws_cdk_lib_aws_cognito_CognitoDomainOptions(p.cognitoDomain);
        if (!visitedObjects.has(p.customDomain))
            aws_cdk_lib_aws_cognito_CustomDomainOptions(p.customDomain);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolDomainProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userPool))
            aws_cdk_lib_aws_cognito_IUserPool(p.userPool);
        if (!visitedObjects.has(p.cognitoDomain))
            aws_cdk_lib_aws_cognito_CognitoDomainOptions(p.cognitoDomain);
        if (!visitedObjects.has(p.customDomain))
            aws_cdk_lib_aws_cognito_CustomDomainOptions(p.customDomain);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolDomain(p) {
}
function aws_cdk_lib_aws_cognito_BaseUrlOptions(p) {
}
function aws_cdk_lib_aws_cognito_SignInUrlOptions(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolSESOptions(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolEmail(p) {
}
function aws_cdk_lib_aws_cognito_IUserPoolIdentityProvider(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProvider(p) {
}
function aws_cdk_lib_aws_cognito_ProviderAttribute(p) {
}
function aws_cdk_lib_aws_cognito_AttributeMapping(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.address))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.address);
        if (!visitedObjects.has(p.birthdate))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.birthdate);
        if (p.custom != null)
            for (const o of Object.values(p.custom))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cognito_ProviderAttribute(o);
        if (!visitedObjects.has(p.email))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.email);
        if (!visitedObjects.has(p.familyName))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.familyName);
        if (!visitedObjects.has(p.fullname))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.fullname);
        if (!visitedObjects.has(p.gender))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.gender);
        if (!visitedObjects.has(p.givenName))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.givenName);
        if (!visitedObjects.has(p.lastUpdateTime))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.lastUpdateTime);
        if (!visitedObjects.has(p.locale))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.locale);
        if (!visitedObjects.has(p.middleName))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.middleName);
        if (!visitedObjects.has(p.nickname))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.nickname);
        if (!visitedObjects.has(p.phoneNumber))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.phoneNumber);
        if (!visitedObjects.has(p.preferredUsername))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.preferredUsername);
        if (!visitedObjects.has(p.profilePage))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.profilePage);
        if (!visitedObjects.has(p.profilePicture))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.profilePicture);
        if (!visitedObjects.has(p.timezone))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.timezone);
        if (!visitedObjects.has(p.website))
            aws_cdk_lib_aws_cognito_ProviderAttribute(p.website);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userPool))
            aws_cdk_lib_aws_cognito_IUserPool(p.userPool);
        if (!visitedObjects.has(p.attributeMapping))
            aws_cdk_lib_aws_cognito_AttributeMapping(p.attributeMapping);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderAppleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userPool))
            aws_cdk_lib_aws_cognito_IUserPool(p.userPool);
        if (!visitedObjects.has(p.attributeMapping))
            aws_cdk_lib_aws_cognito_AttributeMapping(p.attributeMapping);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderApple(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderAmazonProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userPool))
            aws_cdk_lib_aws_cognito_IUserPool(p.userPool);
        if (!visitedObjects.has(p.attributeMapping))
            aws_cdk_lib_aws_cognito_AttributeMapping(p.attributeMapping);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderAmazon(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderFacebookProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userPool))
            aws_cdk_lib_aws_cognito_IUserPool(p.userPool);
        if (!visitedObjects.has(p.attributeMapping))
            aws_cdk_lib_aws_cognito_AttributeMapping(p.attributeMapping);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderFacebook(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderGoogleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("clientSecret" in p)
            print("aws-cdk-lib.aws_cognito.UserPoolIdentityProviderGoogleProps#clientSecret", "use clientSecretValue instead");
        if (!visitedObjects.has(p.clientSecretValue))
            aws_cdk_lib_SecretValue(p.clientSecretValue);
        if (!visitedObjects.has(p.userPool))
            aws_cdk_lib_aws_cognito_IUserPool(p.userPool);
        if (!visitedObjects.has(p.attributeMapping))
            aws_cdk_lib_aws_cognito_AttributeMapping(p.attributeMapping);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderGoogle(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderOidcProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributeRequestMethod))
            aws_cdk_lib_aws_cognito_OidcAttributeRequestMethod(p.attributeRequestMethod);
        if (!visitedObjects.has(p.endpoints))
            aws_cdk_lib_aws_cognito_OidcEndpoints(p.endpoints);
        if (!visitedObjects.has(p.userPool))
            aws_cdk_lib_aws_cognito_IUserPool(p.userPool);
        if (!visitedObjects.has(p.attributeMapping))
            aws_cdk_lib_aws_cognito_AttributeMapping(p.attributeMapping);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_OidcEndpoints(p) {
}
function aws_cdk_lib_aws_cognito_OidcAttributeRequestMethod(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderOidc(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderSamlProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metadata))
            aws_cdk_lib_aws_cognito_UserPoolIdentityProviderSamlMetadata(p.metadata);
        if (!visitedObjects.has(p.userPool))
            aws_cdk_lib_aws_cognito_IUserPool(p.userPool);
        if (!visitedObjects.has(p.attributeMapping))
            aws_cdk_lib_aws_cognito_AttributeMapping(p.attributeMapping);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderSamlMetadataType(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderSamlMetadata(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolIdentityProviderSaml(p) {
}
function aws_cdk_lib_aws_cognito_IUserPoolResourceServer(p) {
}
function aws_cdk_lib_aws_cognito_ResourceServerScopeProps(p) {
}
function aws_cdk_lib_aws_cognito_ResourceServerScope(p) {
}
function aws_cdk_lib_aws_cognito_UserPoolResourceServerOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.scopes != null)
            for (const o of p.scopes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cognito_ResourceServerScope(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolResourceServerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userPool))
            aws_cdk_lib_aws_cognito_IUserPool(p.userPool);
        if (p.scopes != null)
            for (const o of p.scopes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_cognito_ResourceServerScope(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_cognito_UserPoolResourceServer(p) {
}
function aws_cdk_lib_aws_comprehend_CfnFlywheelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSecurityConfig))
            aws_cdk_lib_IResolvable(p.dataSecurityConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.taskConfig))
            aws_cdk_lib_IResolvable(p.taskConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_comprehend_CfnFlywheel(p) {
}
function aws_cdk_lib_aws_comprehend_CfnFlywheel_DataSecurityConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_comprehend_CfnFlywheel_DocumentClassificationConfigProperty(p) {
}
function aws_cdk_lib_aws_comprehend_CfnFlywheel_EntityRecognitionConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.entityTypes))
            aws_cdk_lib_IResolvable(p.entityTypes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_comprehend_CfnFlywheel_EntityTypesListItemProperty(p) {
}
function aws_cdk_lib_aws_comprehend_CfnFlywheel_TaskConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.documentClassificationConfig))
            aws_cdk_lib_IResolvable(p.documentClassificationConfig);
        if (!visitedObjects.has(p.entityRecognitionConfig))
            aws_cdk_lib_IResolvable(p.entityRecognitionConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_comprehend_CfnFlywheel_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_config_IRule(p) {
}
function aws_cdk_lib_aws_config_RuleScope(p) {
}
function aws_cdk_lib_aws_config_MaximumExecutionFrequency(p) {
}
function aws_cdk_lib_aws_config_RuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maximumExecutionFrequency))
            aws_cdk_lib_aws_config_MaximumExecutionFrequency(p.maximumExecutionFrequency);
        if (!visitedObjects.has(p.ruleScope))
            aws_cdk_lib_aws_config_RuleScope(p.ruleScope);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_ManagedRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maximumExecutionFrequency))
            aws_cdk_lib_aws_config_MaximumExecutionFrequency(p.maximumExecutionFrequency);
        if (!visitedObjects.has(p.ruleScope))
            aws_cdk_lib_aws_config_RuleScope(p.ruleScope);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_ManagedRule(p) {
}
function aws_cdk_lib_aws_config_CustomRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambdaFunction))
            aws_cdk_lib_aws_lambda_IFunction(p.lambdaFunction);
        if (!visitedObjects.has(p.maximumExecutionFrequency))
            aws_cdk_lib_aws_config_MaximumExecutionFrequency(p.maximumExecutionFrequency);
        if (!visitedObjects.has(p.ruleScope))
            aws_cdk_lib_aws_config_RuleScope(p.ruleScope);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CustomRule(p) {
}
function aws_cdk_lib_aws_config_CustomPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maximumExecutionFrequency))
            aws_cdk_lib_aws_config_MaximumExecutionFrequency(p.maximumExecutionFrequency);
        if (!visitedObjects.has(p.ruleScope))
            aws_cdk_lib_aws_config_RuleScope(p.ruleScope);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CustomPolicy(p) {
}
function aws_cdk_lib_aws_config_ManagedRuleIdentifiers(p) {
}
function aws_cdk_lib_aws_config_ResourceType(p) {
}
function aws_cdk_lib_aws_config_AccessKeysRotatedProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxAge))
            aws_cdk_lib_Duration(p.maxAge);
        if (!visitedObjects.has(p.maximumExecutionFrequency))
            aws_cdk_lib_aws_config_MaximumExecutionFrequency(p.maximumExecutionFrequency);
        if (!visitedObjects.has(p.ruleScope))
            aws_cdk_lib_aws_config_RuleScope(p.ruleScope);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_AccessKeysRotated(p) {
}
function aws_cdk_lib_aws_config_CloudFormationStackDriftDetectionCheckProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.maximumExecutionFrequency))
            aws_cdk_lib_aws_config_MaximumExecutionFrequency(p.maximumExecutionFrequency);
        if (!visitedObjects.has(p.ruleScope))
            aws_cdk_lib_aws_config_RuleScope(p.ruleScope);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CloudFormationStackDriftDetectionCheck(p) {
}
function aws_cdk_lib_aws_config_CloudFormationStackNotificationCheckProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.topics != null)
            for (const o of p.topics)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_ITopic(o);
        if (!visitedObjects.has(p.maximumExecutionFrequency))
            aws_cdk_lib_aws_config_MaximumExecutionFrequency(p.maximumExecutionFrequency);
        if (!visitedObjects.has(p.ruleScope))
            aws_cdk_lib_aws_config_RuleScope(p.ruleScope);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CloudFormationStackNotificationCheck(p) {
}
function aws_cdk_lib_aws_config_CfnAggregationAuthorizationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnAggregationAuthorization(p) {
}
function aws_cdk_lib_aws_config_CfnConfigRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_IResolvable(p.source);
        if (!visitedObjects.has(p.scope))
            aws_cdk_lib_IResolvable(p.scope);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnConfigRule(p) {
}
function aws_cdk_lib_aws_config_CfnConfigRule_CustomPolicyDetailsProperty(p) {
}
function aws_cdk_lib_aws_config_CfnConfigRule_ScopeProperty(p) {
}
function aws_cdk_lib_aws_config_CfnConfigRule_SourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customPolicyDetails))
            aws_cdk_lib_IResolvable(p.customPolicyDetails);
        if (!visitedObjects.has(p.sourceDetails))
            aws_cdk_lib_IResolvable(p.sourceDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnConfigRule_SourceDetailProperty(p) {
}
function aws_cdk_lib_aws_config_CfnConfigurationAggregatorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accountAggregationSources))
            aws_cdk_lib_IResolvable(p.accountAggregationSources);
        if (!visitedObjects.has(p.organizationAggregationSource))
            aws_cdk_lib_IResolvable(p.organizationAggregationSource);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnConfigurationAggregator(p) {
}
function aws_cdk_lib_aws_config_CfnConfigurationAggregator_AccountAggregationSourceProperty(p) {
}
function aws_cdk_lib_aws_config_CfnConfigurationAggregator_OrganizationAggregationSourceProperty(p) {
}
function aws_cdk_lib_aws_config_CfnConfigurationRecorderProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.recordingGroup))
            aws_cdk_lib_IResolvable(p.recordingGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnConfigurationRecorder(p) {
}
function aws_cdk_lib_aws_config_CfnConfigurationRecorder_RecordingGroupProperty(p) {
}
function aws_cdk_lib_aws_config_CfnConformancePackProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conformancePackInputParameters))
            aws_cdk_lib_IResolvable(p.conformancePackInputParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnConformancePack(p) {
}
function aws_cdk_lib_aws_config_CfnConformancePack_ConformancePackInputParameterProperty(p) {
}
function aws_cdk_lib_aws_config_CfnConformancePack_TemplateSSMDocumentDetailsProperty(p) {
}
function aws_cdk_lib_aws_config_CfnDeliveryChannelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configSnapshotDeliveryProperties))
            aws_cdk_lib_IResolvable(p.configSnapshotDeliveryProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnDeliveryChannel(p) {
}
function aws_cdk_lib_aws_config_CfnDeliveryChannel_ConfigSnapshotDeliveryPropertiesProperty(p) {
}
function aws_cdk_lib_aws_config_CfnOrganizationConfigRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.organizationCustomPolicyRuleMetadata))
            aws_cdk_lib_IResolvable(p.organizationCustomPolicyRuleMetadata);
        if (!visitedObjects.has(p.organizationCustomRuleMetadata))
            aws_cdk_lib_IResolvable(p.organizationCustomRuleMetadata);
        if (!visitedObjects.has(p.organizationManagedRuleMetadata))
            aws_cdk_lib_IResolvable(p.organizationManagedRuleMetadata);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnOrganizationConfigRule(p) {
}
function aws_cdk_lib_aws_config_CfnOrganizationConfigRule_OrganizationCustomPolicyRuleMetadataProperty(p) {
}
function aws_cdk_lib_aws_config_CfnOrganizationConfigRule_OrganizationCustomRuleMetadataProperty(p) {
}
function aws_cdk_lib_aws_config_CfnOrganizationConfigRule_OrganizationManagedRuleMetadataProperty(p) {
}
function aws_cdk_lib_aws_config_CfnOrganizationConformancePackProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conformancePackInputParameters))
            aws_cdk_lib_IResolvable(p.conformancePackInputParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnOrganizationConformancePack(p) {
}
function aws_cdk_lib_aws_config_CfnOrganizationConformancePack_ConformancePackInputParameterProperty(p) {
}
function aws_cdk_lib_aws_config_CfnRemediationConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.executionControls))
            aws_cdk_lib_IResolvable(p.executionControls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnRemediationConfiguration(p) {
}
function aws_cdk_lib_aws_config_CfnRemediationConfiguration_ExecutionControlsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ssmControls))
            aws_cdk_lib_IResolvable(p.ssmControls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnRemediationConfiguration_RemediationParameterValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourceValue))
            aws_cdk_lib_IResolvable(p.resourceValue);
        if (!visitedObjects.has(p.staticValue))
            aws_cdk_lib_IResolvable(p.staticValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnRemediationConfiguration_ResourceValueProperty(p) {
}
function aws_cdk_lib_aws_config_CfnRemediationConfiguration_SsmControlsProperty(p) {
}
function aws_cdk_lib_aws_config_CfnRemediationConfiguration_StaticValueProperty(p) {
}
function aws_cdk_lib_aws_config_CfnStoredQueryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_config_CfnStoredQuery(p) {
}
function aws_cdk_lib_aws_connect_CfnApprovedOriginProps(p) {
}
function aws_cdk_lib_aws_connect_CfnApprovedOrigin(p) {
}
function aws_cdk_lib_aws_connect_CfnContactFlowProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnContactFlow(p) {
}
function aws_cdk_lib_aws_connect_CfnContactFlowModuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnContactFlowModule(p) {
}
function aws_cdk_lib_aws_connect_CfnHoursOfOperationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.config))
            aws_cdk_lib_IResolvable(p.config);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnHoursOfOperation(p) {
}
function aws_cdk_lib_aws_connect_CfnHoursOfOperation_HoursOfOperationConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.endTime))
            aws_cdk_lib_IResolvable(p.endTime);
        if (!visitedObjects.has(p.startTime))
            aws_cdk_lib_IResolvable(p.startTime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnHoursOfOperation_HoursOfOperationTimeSliceProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnInstance(p) {
}
function aws_cdk_lib_aws_connect_CfnInstance_AttributesProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnInstanceStorageConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kinesisFirehoseConfig))
            aws_cdk_lib_IResolvable(p.kinesisFirehoseConfig);
        if (!visitedObjects.has(p.kinesisStreamConfig))
            aws_cdk_lib_IResolvable(p.kinesisStreamConfig);
        if (!visitedObjects.has(p.kinesisVideoStreamConfig))
            aws_cdk_lib_IResolvable(p.kinesisVideoStreamConfig);
        if (!visitedObjects.has(p.s3Config))
            aws_cdk_lib_IResolvable(p.s3Config);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnInstanceStorageConfig(p) {
}
function aws_cdk_lib_aws_connect_CfnInstanceStorageConfig_EncryptionConfigProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnInstanceStorageConfig_KinesisFirehoseConfigProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnInstanceStorageConfig_KinesisStreamConfigProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnInstanceStorageConfig_KinesisVideoStreamConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionConfig))
            aws_cdk_lib_IResolvable(p.encryptionConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnInstanceStorageConfig_S3ConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionConfig))
            aws_cdk_lib_IResolvable(p.encryptionConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnIntegrationAssociationProps(p) {
}
function aws_cdk_lib_aws_connect_CfnIntegrationAssociation(p) {
}
function aws_cdk_lib_aws_connect_CfnPhoneNumberProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnPhoneNumber(p) {
}
function aws_cdk_lib_aws_connect_CfnQuickConnectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.quickConnectConfig))
            aws_cdk_lib_IResolvable(p.quickConnectConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnQuickConnect(p) {
}
function aws_cdk_lib_aws_connect_CfnQuickConnect_PhoneNumberQuickConnectConfigProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnQuickConnect_QueueQuickConnectConfigProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnQuickConnect_QuickConnectConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.phoneConfig))
            aws_cdk_lib_IResolvable(p.phoneConfig);
        if (!visitedObjects.has(p.queueConfig))
            aws_cdk_lib_IResolvable(p.queueConfig);
        if (!visitedObjects.has(p.userConfig))
            aws_cdk_lib_IResolvable(p.userConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnQuickConnect_UserQuickConnectConfigProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.triggerEventSource))
            aws_cdk_lib_IResolvable(p.triggerEventSource);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnRule(p) {
}
function aws_cdk_lib_aws_connect_CfnRule_ActionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventBridgeActions))
            aws_cdk_lib_IResolvable(p.eventBridgeActions);
        if (!visitedObjects.has(p.sendNotificationActions))
            aws_cdk_lib_IResolvable(p.sendNotificationActions);
        if (!visitedObjects.has(p.taskActions))
            aws_cdk_lib_IResolvable(p.taskActions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnRule_EventBridgeActionProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnRule_NotificationRecipientTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userTags))
            aws_cdk_lib_IResolvable(p.userTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnRule_ReferenceProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnRule_RuleTriggerEventSourceProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnRule_SendNotificationActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.recipient))
            aws_cdk_lib_IResolvable(p.recipient);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnRule_TaskActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.references))
            aws_cdk_lib_IResolvable(p.references);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnSecurityKeyProps(p) {
}
function aws_cdk_lib_aws_connect_CfnSecurityKey(p) {
}
function aws_cdk_lib_aws_connect_CfnTaskTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaults))
            aws_cdk_lib_IResolvable(p.defaults);
        if (!visitedObjects.has(p.fields))
            aws_cdk_lib_IResolvable(p.fields);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnTaskTemplate(p) {
}
function aws_cdk_lib_aws_connect_CfnTaskTemplate_ConstraintsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.invisibleFields))
            aws_cdk_lib_IResolvable(p.invisibleFields);
        if (!visitedObjects.has(p.readOnlyFields))
            aws_cdk_lib_IResolvable(p.readOnlyFields);
        if (!visitedObjects.has(p.requiredFields))
            aws_cdk_lib_IResolvable(p.requiredFields);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnTaskTemplate_DefaultFieldValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.id))
            aws_cdk_lib_IResolvable(p.id);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnTaskTemplate_FieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.id))
            aws_cdk_lib_IResolvable(p.id);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnTaskTemplate_FieldIdentifierProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnTaskTemplate_InvisibleFieldInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.id))
            aws_cdk_lib_IResolvable(p.id);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnTaskTemplate_ReadOnlyFieldInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.id))
            aws_cdk_lib_IResolvable(p.id);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnTaskTemplate_RequiredFieldInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.id))
            aws_cdk_lib_IResolvable(p.id);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnUserProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.phoneConfig))
            aws_cdk_lib_IResolvable(p.phoneConfig);
        if (!visitedObjects.has(p.identityInfo))
            aws_cdk_lib_IResolvable(p.identityInfo);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connect_CfnUser(p) {
}
function aws_cdk_lib_aws_connect_CfnUser_UserIdentityInfoProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnUser_UserPhoneConfigProperty(p) {
}
function aws_cdk_lib_aws_connect_CfnUserHierarchyGroupProps(p) {
}
function aws_cdk_lib_aws_connect_CfnUserHierarchyGroup(p) {
}
function aws_cdk_lib_aws_connectcampaigns_CfnCampaignProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dialerConfig))
            aws_cdk_lib_IResolvable(p.dialerConfig);
        if (!visitedObjects.has(p.outboundCallConfig))
            aws_cdk_lib_IResolvable(p.outboundCallConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connectcampaigns_CfnCampaign(p) {
}
function aws_cdk_lib_aws_connectcampaigns_CfnCampaign_AnswerMachineDetectionConfigProperty(p) {
}
function aws_cdk_lib_aws_connectcampaigns_CfnCampaign_DialerConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.predictiveDialerConfig))
            aws_cdk_lib_IResolvable(p.predictiveDialerConfig);
        if (!visitedObjects.has(p.progressiveDialerConfig))
            aws_cdk_lib_IResolvable(p.progressiveDialerConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connectcampaigns_CfnCampaign_OutboundCallConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.answerMachineDetectionConfig))
            aws_cdk_lib_IResolvable(p.answerMachineDetectionConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_connectcampaigns_CfnCampaign_PredictiveDialerConfigProperty(p) {
}
function aws_cdk_lib_aws_connectcampaigns_CfnCampaign_ProgressiveDialerConfigProperty(p) {
}
function aws_cdk_lib_aws_controltower_CfnEnabledControlProps(p) {
}
function aws_cdk_lib_aws_controltower_CfnEnabledControl(p) {
}
function aws_cdk_lib_aws_cur_CfnReportDefinitionProps(p) {
}
function aws_cdk_lib_aws_cur_CfnReportDefinition(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnDomainProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_customerprofiles_CfnDomain(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegrationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.flowDefinition))
            aws_cdk_lib_IResolvable(p.flowDefinition);
        if (!visitedObjects.has(p.objectTypeNames))
            aws_cdk_lib_IResolvable(p.objectTypeNames);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_ConnectorOperatorProperty(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_FlowDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceFlowConfig))
            aws_cdk_lib_IResolvable(p.sourceFlowConfig);
        if (!visitedObjects.has(p.tasks))
            aws_cdk_lib_IResolvable(p.tasks);
        if (!visitedObjects.has(p.triggerConfig))
            aws_cdk_lib_IResolvable(p.triggerConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_IncrementalPullConfigProperty(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_MarketoSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_ObjectTypeMappingProperty(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_S3SourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_SalesforceSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_ScheduledTriggerPropertiesProperty(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_ServiceNowSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_SourceConnectorPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.marketo))
            aws_cdk_lib_IResolvable(p.marketo);
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_IResolvable(p.s3);
        if (!visitedObjects.has(p.salesforce))
            aws_cdk_lib_IResolvable(p.salesforce);
        if (!visitedObjects.has(p.serviceNow))
            aws_cdk_lib_IResolvable(p.serviceNow);
        if (!visitedObjects.has(p.zendesk))
            aws_cdk_lib_IResolvable(p.zendesk);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_SourceFlowConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceConnectorProperties))
            aws_cdk_lib_IResolvable(p.sourceConnectorProperties);
        if (!visitedObjects.has(p.incrementalPullConfig))
            aws_cdk_lib_IResolvable(p.incrementalPullConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_TaskProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectorOperator))
            aws_cdk_lib_IResolvable(p.connectorOperator);
        if (!visitedObjects.has(p.taskProperties))
            aws_cdk_lib_IResolvable(p.taskProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_TaskPropertiesMapProperty(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_TriggerConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.triggerProperties))
            aws_cdk_lib_IResolvable(p.triggerProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_TriggerPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scheduled))
            aws_cdk_lib_IResolvable(p.scheduled);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_customerprofiles_CfnIntegration_ZendeskSourcePropertiesProperty(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnObjectTypeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fields))
            aws_cdk_lib_IResolvable(p.fields);
        if (!visitedObjects.has(p.keys))
            aws_cdk_lib_IResolvable(p.keys);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_customerprofiles_CfnObjectType(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnObjectType_FieldMapProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.objectTypeField))
            aws_cdk_lib_IResolvable(p.objectTypeField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_customerprofiles_CfnObjectType_KeyMapProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.objectTypeKeyList))
            aws_cdk_lib_IResolvable(p.objectTypeKeyList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_customerprofiles_CfnObjectType_ObjectTypeFieldProperty(p) {
}
function aws_cdk_lib_aws_customerprofiles_CfnObjectType_ObjectTypeKeyProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnDatasetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_IResolvable(p.input);
        if (!visitedObjects.has(p.formatOptions))
            aws_cdk_lib_IResolvable(p.formatOptions);
        if (!visitedObjects.has(p.pathOptions))
            aws_cdk_lib_IResolvable(p.pathOptions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnDataset(p) {
}
function aws_cdk_lib_aws_databrew_CfnDataset_CsvOptionsProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnDataset_DataCatalogInputDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tempDirectory))
            aws_cdk_lib_IResolvable(p.tempDirectory);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnDataset_DatabaseInputDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tempDirectory))
            aws_cdk_lib_IResolvable(p.tempDirectory);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnDataset_DatasetParameterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.datetimeOptions))
            aws_cdk_lib_IResolvable(p.datetimeOptions);
        if (!visitedObjects.has(p.filter))
            aws_cdk_lib_IResolvable(p.filter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnDataset_DatetimeOptionsProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnDataset_ExcelOptionsProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnDataset_FilesLimitProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnDataset_FilterExpressionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.valuesMap))
            aws_cdk_lib_IResolvable(p.valuesMap);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnDataset_FilterValueProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnDataset_FormatOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csv))
            aws_cdk_lib_IResolvable(p.csv);
        if (!visitedObjects.has(p.excel))
            aws_cdk_lib_IResolvable(p.excel);
        if (!visitedObjects.has(p.json))
            aws_cdk_lib_IResolvable(p.json);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnDataset_InputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.databaseInputDefinition))
            aws_cdk_lib_IResolvable(p.databaseInputDefinition);
        if (!visitedObjects.has(p.dataCatalogInputDefinition))
            aws_cdk_lib_IResolvable(p.dataCatalogInputDefinition);
        if (!visitedObjects.has(p.metadata))
            aws_cdk_lib_IResolvable(p.metadata);
        if (!visitedObjects.has(p.s3InputDefinition))
            aws_cdk_lib_IResolvable(p.s3InputDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnDataset_JsonOptionsProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnDataset_MetadataProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnDataset_PathOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filesLimit))
            aws_cdk_lib_IResolvable(p.filesLimit);
        if (!visitedObjects.has(p.lastModifiedDateCondition))
            aws_cdk_lib_IResolvable(p.lastModifiedDateCondition);
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnDataset_PathParameterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.datasetParameter))
            aws_cdk_lib_IResolvable(p.datasetParameter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnDataset_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnJobProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.databaseOutputs))
            aws_cdk_lib_IResolvable(p.databaseOutputs);
        if (!visitedObjects.has(p.dataCatalogOutputs))
            aws_cdk_lib_IResolvable(p.dataCatalogOutputs);
        if (!visitedObjects.has(p.jobSample))
            aws_cdk_lib_IResolvable(p.jobSample);
        if (!visitedObjects.has(p.outputLocation))
            aws_cdk_lib_IResolvable(p.outputLocation);
        if (!visitedObjects.has(p.outputs))
            aws_cdk_lib_IResolvable(p.outputs);
        if (!visitedObjects.has(p.profileConfiguration))
            aws_cdk_lib_IResolvable(p.profileConfiguration);
        if (!visitedObjects.has(p.recipe))
            aws_cdk_lib_IResolvable(p.recipe);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.validationConfigurations))
            aws_cdk_lib_IResolvable(p.validationConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnJob(p) {
}
function aws_cdk_lib_aws_databrew_CfnJob_AllowedStatisticsProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnJob_ColumnSelectorProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnJob_ColumnStatisticsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.statistics))
            aws_cdk_lib_IResolvable(p.statistics);
        if (!visitedObjects.has(p.selectors))
            aws_cdk_lib_IResolvable(p.selectors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnJob_CsvOutputOptionsProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnJob_DataCatalogOutputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.databaseOptions))
            aws_cdk_lib_IResolvable(p.databaseOptions);
        if (!visitedObjects.has(p.s3Options))
            aws_cdk_lib_IResolvable(p.s3Options);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnJob_DatabaseOutputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.databaseOptions))
            aws_cdk_lib_IResolvable(p.databaseOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnJob_DatabaseTableOutputOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tempDirectory))
            aws_cdk_lib_IResolvable(p.tempDirectory);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnJob_EntityDetectorConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.allowedStatistics))
            aws_cdk_lib_IResolvable(p.allowedStatistics);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnJob_JobSampleProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnJob_OutputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.location))
            aws_cdk_lib_IResolvable(p.location);
        if (!visitedObjects.has(p.formatOptions))
            aws_cdk_lib_IResolvable(p.formatOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnJob_OutputFormatOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csv))
            aws_cdk_lib_IResolvable(p.csv);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnJob_OutputLocationProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnJob_ProfileConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnStatisticsConfigurations))
            aws_cdk_lib_IResolvable(p.columnStatisticsConfigurations);
        if (!visitedObjects.has(p.datasetStatisticsConfiguration))
            aws_cdk_lib_IResolvable(p.datasetStatisticsConfiguration);
        if (!visitedObjects.has(p.entityDetectorConfiguration))
            aws_cdk_lib_IResolvable(p.entityDetectorConfiguration);
        if (!visitedObjects.has(p.profileColumns))
            aws_cdk_lib_IResolvable(p.profileColumns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnJob_RecipeProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnJob_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnJob_S3TableOutputOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.location))
            aws_cdk_lib_IResolvable(p.location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnJob_StatisticOverrideProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnJob_StatisticsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.overrides))
            aws_cdk_lib_IResolvable(p.overrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnJob_ValidationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnProjectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sample))
            aws_cdk_lib_IResolvable(p.sample);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnProject(p) {
}
function aws_cdk_lib_aws_databrew_CfnProject_SampleProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnRecipeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.steps))
            aws_cdk_lib_IResolvable(p.steps);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnRecipe(p) {
}
function aws_cdk_lib_aws_databrew_CfnRecipe_ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnRecipe_ConditionExpressionProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnRecipe_DataCatalogInputDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tempDirectory))
            aws_cdk_lib_IResolvable(p.tempDirectory);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnRecipe_InputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataCatalogInputDefinition))
            aws_cdk_lib_IResolvable(p.dataCatalogInputDefinition);
        if (!visitedObjects.has(p.s3InputDefinition))
            aws_cdk_lib_IResolvable(p.s3InputDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnRecipe_RecipeParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secondaryInputs))
            aws_cdk_lib_IResolvable(p.secondaryInputs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnRecipe_RecipeStepProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
        if (!visitedObjects.has(p.conditionExpressions))
            aws_cdk_lib_IResolvable(p.conditionExpressions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnRecipe_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnRecipe_SecondaryInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataCatalogInputDefinition))
            aws_cdk_lib_IResolvable(p.dataCatalogInputDefinition);
        if (!visitedObjects.has(p.s3InputDefinition))
            aws_cdk_lib_IResolvable(p.s3InputDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnRulesetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnRuleset(p) {
}
function aws_cdk_lib_aws_databrew_CfnRuleset_ColumnSelectorProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnRuleset_RuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnSelectors))
            aws_cdk_lib_IResolvable(p.columnSelectors);
        if (!visitedObjects.has(p.substitutionMap))
            aws_cdk_lib_IResolvable(p.substitutionMap);
        if (!visitedObjects.has(p.threshold))
            aws_cdk_lib_IResolvable(p.threshold);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnRuleset_SubstitutionValueProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnRuleset_ThresholdProperty(p) {
}
function aws_cdk_lib_aws_databrew_CfnScheduleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_databrew_CfnSchedule(p) {
}
function aws_cdk_lib_aws_datapipeline_CfnPipelineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameterObjects))
            aws_cdk_lib_IResolvable(p.parameterObjects);
        if (!visitedObjects.has(p.parameterValues))
            aws_cdk_lib_IResolvable(p.parameterValues);
        if (!visitedObjects.has(p.pipelineObjects))
            aws_cdk_lib_IResolvable(p.pipelineObjects);
        if (!visitedObjects.has(p.pipelineTags))
            aws_cdk_lib_IResolvable(p.pipelineTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datapipeline_CfnPipeline(p) {
}
function aws_cdk_lib_aws_datapipeline_CfnPipeline_FieldProperty(p) {
}
function aws_cdk_lib_aws_datapipeline_CfnPipeline_ParameterAttributeProperty(p) {
}
function aws_cdk_lib_aws_datapipeline_CfnPipeline_ParameterObjectProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datapipeline_CfnPipeline_ParameterValueProperty(p) {
}
function aws_cdk_lib_aws_datapipeline_CfnPipeline_PipelineObjectProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fields))
            aws_cdk_lib_IResolvable(p.fields);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datapipeline_CfnPipeline_PipelineTagProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnAgentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnAgent(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationEFSProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ec2Config))
            aws_cdk_lib_IResolvable(p.ec2Config);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationEFS(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationEFS_Ec2ConfigProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxLustreProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxLustre(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxONTAPProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_IResolvable(p.protocol);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxONTAP(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxONTAP_NFSProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mountOptions))
            aws_cdk_lib_IResolvable(p.mountOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxONTAP_NfsMountOptionsProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxONTAP_ProtocolProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nfs))
            aws_cdk_lib_IResolvable(p.nfs);
        if (!visitedObjects.has(p.smb))
            aws_cdk_lib_IResolvable(p.smb);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxONTAP_SMBProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mountOptions))
            aws_cdk_lib_IResolvable(p.mountOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxONTAP_SmbMountOptionsProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxOpenZFSProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_IResolvable(p.protocol);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxOpenZFS(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxOpenZFS_MountOptionsProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxOpenZFS_NFSProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mountOptions))
            aws_cdk_lib_IResolvable(p.mountOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxOpenZFS_ProtocolProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nfs))
            aws_cdk_lib_IResolvable(p.nfs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxWindowsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationFSxWindows(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationHDFSProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nameNodes))
            aws_cdk_lib_IResolvable(p.nameNodes);
        if (!visitedObjects.has(p.qopConfiguration))
            aws_cdk_lib_IResolvable(p.qopConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationHDFS(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationHDFS_NameNodeProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationHDFS_QopConfigurationProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationNFSProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onPremConfig))
            aws_cdk_lib_IResolvable(p.onPremConfig);
        if (!visitedObjects.has(p.mountOptions))
            aws_cdk_lib_IResolvable(p.mountOptions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationNFS(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationNFS_MountOptionsProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationNFS_OnPremConfigProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationObjectStorageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationObjectStorage(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationS3Props(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Config))
            aws_cdk_lib_IResolvable(p.s3Config);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationS3(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationS3_S3ConfigProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationSMBProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mountOptions))
            aws_cdk_lib_IResolvable(p.mountOptions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnLocationSMB(p) {
}
function aws_cdk_lib_aws_datasync_CfnLocationSMB_MountOptionsProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnTaskProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.excludes))
            aws_cdk_lib_IResolvable(p.excludes);
        if (!visitedObjects.has(p.includes))
            aws_cdk_lib_IResolvable(p.includes);
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_IResolvable(p.options);
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_IResolvable(p.schedule);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_datasync_CfnTask(p) {
}
function aws_cdk_lib_aws_datasync_CfnTask_FilterRuleProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnTask_OptionsProperty(p) {
}
function aws_cdk_lib_aws_datasync_CfnTask_TaskScheduleProperty(p) {
}
function aws_cdk_lib_aws_dax_CfnClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sseSpecification))
            aws_cdk_lib_IResolvable(p.sseSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dax_CfnCluster(p) {
}
function aws_cdk_lib_aws_dax_CfnCluster_SSESpecificationProperty(p) {
}
function aws_cdk_lib_aws_dax_CfnParameterGroupProps(p) {
}
function aws_cdk_lib_aws_dax_CfnParameterGroup(p) {
}
function aws_cdk_lib_aws_dax_CfnSubnetGroupProps(p) {
}
function aws_cdk_lib_aws_dax_CfnSubnetGroup(p) {
}
function aws_cdk_lib_aws_detective_CfnGraphProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_detective_CfnGraph(p) {
}
function aws_cdk_lib_aws_detective_CfnMemberInvitationProps(p) {
}
function aws_cdk_lib_aws_detective_CfnMemberInvitation(p) {
}
function aws_cdk_lib_aws_devicefarm_CfnDevicePoolProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_devicefarm_CfnDevicePool(p) {
}
function aws_cdk_lib_aws_devicefarm_CfnDevicePool_RuleProperty(p) {
}
function aws_cdk_lib_aws_devicefarm_CfnInstanceProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_devicefarm_CfnInstanceProfile(p) {
}
function aws_cdk_lib_aws_devicefarm_CfnNetworkProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_devicefarm_CfnNetworkProfile(p) {
}
function aws_cdk_lib_aws_devicefarm_CfnProjectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_devicefarm_CfnProject(p) {
}
function aws_cdk_lib_aws_devicefarm_CfnTestGridProjectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_devicefarm_CfnTestGridProject(p) {
}
function aws_cdk_lib_aws_devicefarm_CfnTestGridProject_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_devicefarm_CfnVPCEConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_devicefarm_CfnVPCEConfiguration(p) {
}
function aws_cdk_lib_aws_devopsguru_CfnNotificationChannelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.config))
            aws_cdk_lib_IResolvable(p.config);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_devopsguru_CfnNotificationChannel(p) {
}
function aws_cdk_lib_aws_devopsguru_CfnNotificationChannel_NotificationChannelConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filters))
            aws_cdk_lib_IResolvable(p.filters);
        if (!visitedObjects.has(p.sns))
            aws_cdk_lib_IResolvable(p.sns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_devopsguru_CfnNotificationChannel_NotificationFilterConfigProperty(p) {
}
function aws_cdk_lib_aws_devopsguru_CfnNotificationChannel_SnsChannelConfigProperty(p) {
}
function aws_cdk_lib_aws_devopsguru_CfnResourceCollectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourceCollectionFilter))
            aws_cdk_lib_IResolvable(p.resourceCollectionFilter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_devopsguru_CfnResourceCollection(p) {
}
function aws_cdk_lib_aws_devopsguru_CfnResourceCollection_CloudFormationCollectionFilterProperty(p) {
}
function aws_cdk_lib_aws_devopsguru_CfnResourceCollection_ResourceCollectionFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudFormation))
            aws_cdk_lib_IResolvable(p.cloudFormation);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_devopsguru_CfnResourceCollection_TagCollectionProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_devopsguru_CfnResourceCollection_TagCollectionProperty(p) {
}
function aws_cdk_lib_aws_directoryservice_CfnMicrosoftADProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpcSettings))
            aws_cdk_lib_IResolvable(p.vpcSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_directoryservice_CfnMicrosoftAD(p) {
}
function aws_cdk_lib_aws_directoryservice_CfnMicrosoftAD_VpcSettingsProperty(p) {
}
function aws_cdk_lib_aws_directoryservice_CfnSimpleADProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpcSettings))
            aws_cdk_lib_IResolvable(p.vpcSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_directoryservice_CfnSimpleAD(p) {
}
function aws_cdk_lib_aws_directoryservice_CfnSimpleAD_VpcSettingsProperty(p) {
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.policyDetails))
            aws_cdk_lib_IResolvable(p.policyDetails);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy(p) {
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.crossRegionCopy))
            aws_cdk_lib_IResolvable(p.crossRegionCopy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_ArchiveRetainRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.retentionArchiveTier))
            aws_cdk_lib_IResolvable(p.retentionArchiveTier);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_ArchiveRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.retainRule))
            aws_cdk_lib_IResolvable(p.retainRule);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_CreateRuleProperty(p) {
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_CrossRegionCopyActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionConfiguration))
            aws_cdk_lib_IResolvable(p.encryptionConfiguration);
        if (!visitedObjects.has(p.retainRule))
            aws_cdk_lib_IResolvable(p.retainRule);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_CrossRegionCopyDeprecateRuleProperty(p) {
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_CrossRegionCopyRetainRuleProperty(p) {
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_CrossRegionCopyRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deprecateRule))
            aws_cdk_lib_IResolvable(p.deprecateRule);
        if (!visitedObjects.has(p.retainRule))
            aws_cdk_lib_IResolvable(p.retainRule);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_DeprecateRuleProperty(p) {
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_EncryptionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_EventParametersProperty(p) {
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_EventSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_FastRestoreRuleProperty(p) {
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_ParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.excludeDataVolumeTags))
            aws_cdk_lib_IResolvable(p.excludeDataVolumeTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_PolicyDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.eventSource))
            aws_cdk_lib_IResolvable(p.eventSource);
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (!visitedObjects.has(p.schedules))
            aws_cdk_lib_IResolvable(p.schedules);
        if (!visitedObjects.has(p.targetTags))
            aws_cdk_lib_IResolvable(p.targetTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_RetainRuleProperty(p) {
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_RetentionArchiveTierProperty(p) {
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_ScheduleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.archiveRule))
            aws_cdk_lib_IResolvable(p.archiveRule);
        if (!visitedObjects.has(p.createRule))
            aws_cdk_lib_IResolvable(p.createRule);
        if (!visitedObjects.has(p.crossRegionCopyRules))
            aws_cdk_lib_IResolvable(p.crossRegionCopyRules);
        if (!visitedObjects.has(p.deprecateRule))
            aws_cdk_lib_IResolvable(p.deprecateRule);
        if (!visitedObjects.has(p.fastRestoreRule))
            aws_cdk_lib_IResolvable(p.fastRestoreRule);
        if (!visitedObjects.has(p.retainRule))
            aws_cdk_lib_IResolvable(p.retainRule);
        if (!visitedObjects.has(p.shareRules))
            aws_cdk_lib_IResolvable(p.shareRules);
        if (!visitedObjects.has(p.tagsToAdd))
            aws_cdk_lib_IResolvable(p.tagsToAdd);
        if (!visitedObjects.has(p.variableTags))
            aws_cdk_lib_IResolvable(p.variableTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_ShareRuleProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnCertificateProps(p) {
}
function aws_cdk_lib_aws_dms_CfnCertificate(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.docDbSettings))
            aws_cdk_lib_IResolvable(p.docDbSettings);
        if (!visitedObjects.has(p.dynamoDbSettings))
            aws_cdk_lib_IResolvable(p.dynamoDbSettings);
        if (!visitedObjects.has(p.elasticsearchSettings))
            aws_cdk_lib_IResolvable(p.elasticsearchSettings);
        if (!visitedObjects.has(p.gcpMySqlSettings))
            aws_cdk_lib_IResolvable(p.gcpMySqlSettings);
        if (!visitedObjects.has(p.ibmDb2Settings))
            aws_cdk_lib_IResolvable(p.ibmDb2Settings);
        if (!visitedObjects.has(p.kafkaSettings))
            aws_cdk_lib_IResolvable(p.kafkaSettings);
        if (!visitedObjects.has(p.kinesisSettings))
            aws_cdk_lib_IResolvable(p.kinesisSettings);
        if (!visitedObjects.has(p.microsoftSqlServerSettings))
            aws_cdk_lib_IResolvable(p.microsoftSqlServerSettings);
        if (!visitedObjects.has(p.mongoDbSettings))
            aws_cdk_lib_IResolvable(p.mongoDbSettings);
        if (!visitedObjects.has(p.mySqlSettings))
            aws_cdk_lib_IResolvable(p.mySqlSettings);
        if (!visitedObjects.has(p.neptuneSettings))
            aws_cdk_lib_IResolvable(p.neptuneSettings);
        if (!visitedObjects.has(p.oracleSettings))
            aws_cdk_lib_IResolvable(p.oracleSettings);
        if (!visitedObjects.has(p.postgreSqlSettings))
            aws_cdk_lib_IResolvable(p.postgreSqlSettings);
        if (!visitedObjects.has(p.redisSettings))
            aws_cdk_lib_IResolvable(p.redisSettings);
        if (!visitedObjects.has(p.redshiftSettings))
            aws_cdk_lib_IResolvable(p.redshiftSettings);
        if (!visitedObjects.has(p.s3Settings))
            aws_cdk_lib_IResolvable(p.s3Settings);
        if (!visitedObjects.has(p.sybaseSettings))
            aws_cdk_lib_IResolvable(p.sybaseSettings);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dms_CfnEndpoint(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_DocDbSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_DynamoDbSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_ElasticsearchSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_GcpMySQLSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_IbmDb2SettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_KafkaSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_KinesisSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_MicrosoftSqlServerSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_MongoDbSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_MySqlSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_NeptuneSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_OracleSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_PostgreSqlSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_RedisSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_RedshiftSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_S3SettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEndpoint_SybaseSettingsProperty(p) {
}
function aws_cdk_lib_aws_dms_CfnEventSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dms_CfnEventSubscription(p) {
}
function aws_cdk_lib_aws_dms_CfnReplicationInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dms_CfnReplicationInstance(p) {
}
function aws_cdk_lib_aws_dms_CfnReplicationSubnetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dms_CfnReplicationSubnetGroup(p) {
}
function aws_cdk_lib_aws_dms_CfnReplicationTaskProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dms_CfnReplicationTask(p) {
}
function aws_cdk_lib_aws_docdb_DatabaseClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.masterUser))
            aws_cdk_lib_aws_docdb_Login(p.masterUser);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.backup))
            aws_cdk_lib_aws_docdb_BackupProps(p.backup);
        if (!visitedObjects.has(p.cloudWatchLogsRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.cloudWatchLogsRetention);
        if (!visitedObjects.has(p.cloudWatchLogsRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.cloudWatchLogsRetentionRole);
        if (!visitedObjects.has(p.kmsKey))
            aws_cdk_lib_aws_kms_IKey(p.kmsKey);
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_docdb_IClusterParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_docdb_DatabaseCluster(p) {
}
function aws_cdk_lib_aws_docdb_IDatabaseCluster(p) {
}
function aws_cdk_lib_aws_docdb_DatabaseClusterAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_docdb_DatabaseSecretProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.masterSecret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.masterSecret);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_docdb_DatabaseSecret(p) {
}
function aws_cdk_lib_aws_docdb_Endpoint(p) {
}
function aws_cdk_lib_aws_docdb_IDatabaseInstance(p) {
}
function aws_cdk_lib_aws_docdb_DatabaseInstanceAttributes(p) {
}
function aws_cdk_lib_aws_docdb_DatabaseInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_docdb_IDatabaseCluster(p.cluster);
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_docdb_DatabaseInstance(p) {
}
function aws_cdk_lib_aws_docdb_IClusterParameterGroup(p) {
}
function aws_cdk_lib_aws_docdb_ClusterParameterGroupProps(p) {
}
function aws_cdk_lib_aws_docdb_ClusterParameterGroup(p) {
}
function aws_cdk_lib_aws_docdb_BackupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.retention))
            aws_cdk_lib_Duration(p.retention);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_docdb_Login(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kmsKey))
            aws_cdk_lib_aws_kms_IKey(p.kmsKey);
        if (!visitedObjects.has(p.password))
            aws_cdk_lib_SecretValue(p.password);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_docdb_RotationMultiUserOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.secret);
        if (!visitedObjects.has(p.automaticallyAfter))
            aws_cdk_lib_Duration(p.automaticallyAfter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_docdb_CfnDBClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_docdb_CfnDBCluster(p) {
}
function aws_cdk_lib_aws_docdb_CfnDBClusterParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_docdb_CfnDBClusterParameterGroup(p) {
}
function aws_cdk_lib_aws_docdb_CfnDBInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_docdb_CfnDBInstance(p) {
}
function aws_cdk_lib_aws_docdb_CfnDBSubnetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_docdb_CfnDBSubnetGroup(p) {
}
function aws_cdk_lib_aws_docdbelastic_CfnClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_docdbelastic_CfnCluster(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTableProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributeDefinitions))
            aws_cdk_lib_IResolvable(p.attributeDefinitions);
        if (!visitedObjects.has(p.keySchema))
            aws_cdk_lib_IResolvable(p.keySchema);
        if (!visitedObjects.has(p.replicas))
            aws_cdk_lib_IResolvable(p.replicas);
        if (!visitedObjects.has(p.globalSecondaryIndexes))
            aws_cdk_lib_IResolvable(p.globalSecondaryIndexes);
        if (!visitedObjects.has(p.localSecondaryIndexes))
            aws_cdk_lib_IResolvable(p.localSecondaryIndexes);
        if (!visitedObjects.has(p.sseSpecification))
            aws_cdk_lib_IResolvable(p.sseSpecification);
        if (!visitedObjects.has(p.streamSpecification))
            aws_cdk_lib_IResolvable(p.streamSpecification);
        if (!visitedObjects.has(p.timeToLiveSpecification))
            aws_cdk_lib_IResolvable(p.timeToLiveSpecification);
        if (!visitedObjects.has(p.writeProvisionedThroughputSettings))
            aws_cdk_lib_IResolvable(p.writeProvisionedThroughputSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_AttributeDefinitionProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_CapacityAutoScalingSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetTrackingScalingPolicyConfiguration))
            aws_cdk_lib_IResolvable(p.targetTrackingScalingPolicyConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_ContributorInsightsSpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_GlobalSecondaryIndexProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.keySchema))
            aws_cdk_lib_IResolvable(p.keySchema);
        if (!visitedObjects.has(p.projection))
            aws_cdk_lib_IResolvable(p.projection);
        if (!visitedObjects.has(p.writeProvisionedThroughputSettings))
            aws_cdk_lib_IResolvable(p.writeProvisionedThroughputSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_KeySchemaProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_KinesisStreamSpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_LocalSecondaryIndexProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.keySchema))
            aws_cdk_lib_IResolvable(p.keySchema);
        if (!visitedObjects.has(p.projection))
            aws_cdk_lib_IResolvable(p.projection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_PointInTimeRecoverySpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_ProjectionProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_ReadProvisionedThroughputSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.readCapacityAutoScalingSettings))
            aws_cdk_lib_IResolvable(p.readCapacityAutoScalingSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_ReplicaGlobalSecondaryIndexSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.contributorInsightsSpecification))
            aws_cdk_lib_IResolvable(p.contributorInsightsSpecification);
        if (!visitedObjects.has(p.readProvisionedThroughputSettings))
            aws_cdk_lib_IResolvable(p.readProvisionedThroughputSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_ReplicaSSESpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_ReplicaSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.contributorInsightsSpecification))
            aws_cdk_lib_IResolvable(p.contributorInsightsSpecification);
        if (!visitedObjects.has(p.globalSecondaryIndexes))
            aws_cdk_lib_IResolvable(p.globalSecondaryIndexes);
        if (!visitedObjects.has(p.kinesisStreamSpecification))
            aws_cdk_lib_IResolvable(p.kinesisStreamSpecification);
        if (!visitedObjects.has(p.pointInTimeRecoverySpecification))
            aws_cdk_lib_IResolvable(p.pointInTimeRecoverySpecification);
        if (!visitedObjects.has(p.readProvisionedThroughputSettings))
            aws_cdk_lib_IResolvable(p.readProvisionedThroughputSettings);
        if (!visitedObjects.has(p.sseSpecification))
            aws_cdk_lib_IResolvable(p.sseSpecification);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_SSESpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_StreamSpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_TargetTrackingScalingPolicyConfigurationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_TimeToLiveSpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnGlobalTable_WriteProvisionedThroughputSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.writeCapacityAutoScalingSettings))
            aws_cdk_lib_IResolvable(p.writeCapacityAutoScalingSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnTableProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.keySchema))
            aws_cdk_lib_IResolvable(p.keySchema);
        if (!visitedObjects.has(p.attributeDefinitions))
            aws_cdk_lib_IResolvable(p.attributeDefinitions);
        if (!visitedObjects.has(p.contributorInsightsSpecification))
            aws_cdk_lib_IResolvable(p.contributorInsightsSpecification);
        if (!visitedObjects.has(p.globalSecondaryIndexes))
            aws_cdk_lib_IResolvable(p.globalSecondaryIndexes);
        if (!visitedObjects.has(p.importSourceSpecification))
            aws_cdk_lib_IResolvable(p.importSourceSpecification);
        if (!visitedObjects.has(p.kinesisStreamSpecification))
            aws_cdk_lib_IResolvable(p.kinesisStreamSpecification);
        if (!visitedObjects.has(p.localSecondaryIndexes))
            aws_cdk_lib_IResolvable(p.localSecondaryIndexes);
        if (!visitedObjects.has(p.pointInTimeRecoverySpecification))
            aws_cdk_lib_IResolvable(p.pointInTimeRecoverySpecification);
        if (!visitedObjects.has(p.provisionedThroughput))
            aws_cdk_lib_IResolvable(p.provisionedThroughput);
        if (!visitedObjects.has(p.sseSpecification))
            aws_cdk_lib_IResolvable(p.sseSpecification);
        if (!visitedObjects.has(p.streamSpecification))
            aws_cdk_lib_IResolvable(p.streamSpecification);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.timeToLiveSpecification))
            aws_cdk_lib_IResolvable(p.timeToLiveSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnTable(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnTable_AttributeDefinitionProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnTable_ContributorInsightsSpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnTable_CsvProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnTable_GlobalSecondaryIndexProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.keySchema))
            aws_cdk_lib_IResolvable(p.keySchema);
        if (!visitedObjects.has(p.projection))
            aws_cdk_lib_IResolvable(p.projection);
        if (!visitedObjects.has(p.contributorInsightsSpecification))
            aws_cdk_lib_IResolvable(p.contributorInsightsSpecification);
        if (!visitedObjects.has(p.provisionedThroughput))
            aws_cdk_lib_IResolvable(p.provisionedThroughput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnTable_ImportSourceSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3BucketSource))
            aws_cdk_lib_IResolvable(p.s3BucketSource);
        if (!visitedObjects.has(p.inputFormatOptions))
            aws_cdk_lib_IResolvable(p.inputFormatOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnTable_InputFormatOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csv))
            aws_cdk_lib_IResolvable(p.csv);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnTable_KeySchemaProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnTable_KinesisStreamSpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnTable_LocalSecondaryIndexProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.keySchema))
            aws_cdk_lib_IResolvable(p.keySchema);
        if (!visitedObjects.has(p.projection))
            aws_cdk_lib_IResolvable(p.projection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_CfnTable_PointInTimeRecoverySpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnTable_ProjectionProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnTable_ProvisionedThroughputProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnTable_S3BucketSourceProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnTable_SSESpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnTable_StreamSpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_CfnTable_TimeToLiveSpecificationProperty(p) {
}
function aws_cdk_lib_aws_dynamodb_SystemErrorsForOperationsMetricOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.operations != null)
            for (const o of p.operations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_dynamodb_Operation(o);
        if (!visitedObjects.has(p.period))
            aws_cdk_lib_Duration(p.period);
        if (!visitedObjects.has(p.unit))
            aws_cdk_lib_aws_cloudwatch_Unit(p.unit);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_OperationsMetricOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.operations != null)
            for (const o of p.operations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_dynamodb_Operation(o);
        if (!visitedObjects.has(p.period))
            aws_cdk_lib_Duration(p.period);
        if (!visitedObjects.has(p.unit))
            aws_cdk_lib_aws_cloudwatch_Unit(p.unit);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_Operation(p) {
}
function aws_cdk_lib_aws_dynamodb_Attribute(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_dynamodb_AttributeType(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_TableEncryption(p) {
}
function aws_cdk_lib_aws_dynamodb_SchemaOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.partitionKey))
            aws_cdk_lib_aws_dynamodb_Attribute(p.partitionKey);
        if (!visitedObjects.has(p.sortKey))
            aws_cdk_lib_aws_dynamodb_Attribute(p.sortKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_TableOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.billingMode))
            aws_cdk_lib_aws_dynamodb_BillingMode(p.billingMode);
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_aws_dynamodb_TableEncryption(p.encryption);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.replicationTimeout))
            aws_cdk_lib_Duration(p.replicationTimeout);
        if (!visitedObjects.has(p.stream))
            aws_cdk_lib_aws_dynamodb_StreamViewType(p.stream);
        if (!visitedObjects.has(p.tableClass))
            aws_cdk_lib_aws_dynamodb_TableClass(p.tableClass);
        if (!visitedObjects.has(p.partitionKey))
            aws_cdk_lib_aws_dynamodb_Attribute(p.partitionKey);
        if (!visitedObjects.has(p.sortKey))
            aws_cdk_lib_aws_dynamodb_Attribute(p.sortKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_TableProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kinesisStream))
            aws_cdk_lib_aws_kinesis_IStream(p.kinesisStream);
        if (!visitedObjects.has(p.billingMode))
            aws_cdk_lib_aws_dynamodb_BillingMode(p.billingMode);
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_aws_dynamodb_TableEncryption(p.encryption);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.replicationTimeout))
            aws_cdk_lib_Duration(p.replicationTimeout);
        if (!visitedObjects.has(p.stream))
            aws_cdk_lib_aws_dynamodb_StreamViewType(p.stream);
        if (!visitedObjects.has(p.tableClass))
            aws_cdk_lib_aws_dynamodb_TableClass(p.tableClass);
        if (!visitedObjects.has(p.partitionKey))
            aws_cdk_lib_aws_dynamodb_Attribute(p.partitionKey);
        if (!visitedObjects.has(p.sortKey))
            aws_cdk_lib_aws_dynamodb_Attribute(p.sortKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_SecondaryIndexProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.projectionType))
            aws_cdk_lib_aws_dynamodb_ProjectionType(p.projectionType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_GlobalSecondaryIndexProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.projectionType))
            aws_cdk_lib_aws_dynamodb_ProjectionType(p.projectionType);
        if (!visitedObjects.has(p.partitionKey))
            aws_cdk_lib_aws_dynamodb_Attribute(p.partitionKey);
        if (!visitedObjects.has(p.sortKey))
            aws_cdk_lib_aws_dynamodb_Attribute(p.sortKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_LocalSecondaryIndexProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sortKey))
            aws_cdk_lib_aws_dynamodb_Attribute(p.sortKey);
        if (!visitedObjects.has(p.projectionType))
            aws_cdk_lib_aws_dynamodb_ProjectionType(p.projectionType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_ITable(p) {
}
function aws_cdk_lib_aws_dynamodb_TableAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_dynamodb_Table(p) {
}
function aws_cdk_lib_aws_dynamodb_AttributeType(p) {
}
function aws_cdk_lib_aws_dynamodb_BillingMode(p) {
}
function aws_cdk_lib_aws_dynamodb_ProjectionType(p) {
}
function aws_cdk_lib_aws_dynamodb_StreamViewType(p) {
}
function aws_cdk_lib_aws_dynamodb_TableClass(p) {
}
function aws_cdk_lib_aws_dynamodb_IScalableTableAttribute(p) {
}
function aws_cdk_lib_aws_dynamodb_EnableScalingProps(p) {
}
function aws_cdk_lib_aws_dynamodb_UtilizationScalingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scaleInCooldown))
            aws_cdk_lib_Duration(p.scaleInCooldown);
        if (!visitedObjects.has(p.scaleOutCooldown))
            aws_cdk_lib_Duration(p.scaleOutCooldown);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_InstanceRequireImdsv2AspectProps(p) {
}
function aws_cdk_lib_aws_ec2_InstanceRequireImdsv2Aspect(p) {
}
function aws_cdk_lib_aws_ec2_LaunchTemplateRequireImdsv2AspectProps(p) {
}
function aws_cdk_lib_aws_ec2_LaunchTemplateRequireImdsv2Aspect(p) {
}
function aws_cdk_lib_aws_ec2_BastionHostLinuxProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (p.blockDevices != null)
            for (const o of p.blockDevices)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_BlockDevice(o);
        if (!visitedObjects.has(p.init))
            aws_cdk_lib_aws_ec2_CloudFormationInit(p.init);
        if (!visitedObjects.has(p.initOptions))
            aws_cdk_lib_aws_ec2_ApplyCloudFormationInitOptions(p.initOptions);
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.machineImage))
            aws_cdk_lib_aws_ec2_IMachineImage(p.machineImage);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_BastionHostLinux(p) {
}
function aws_cdk_lib_aws_ec2_IConnectable(p) {
}
function aws_cdk_lib_aws_ec2_ConnectionsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultPort))
            aws_cdk_lib_aws_ec2_Port(p.defaultPort);
        if (!visitedObjects.has(p.peer))
            aws_cdk_lib_aws_ec2_IPeer(p.peer);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_Connections(p) {
}
function aws_cdk_lib_aws_ec2_CloudFormationInit(p) {
}
function aws_cdk_lib_aws_ec2_InitConfig(p) {
}
function aws_cdk_lib_aws_ec2_ConfigSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.configs != null)
            for (const o of Object.values(p.configs))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_InitConfig(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_AttachInitOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceRole))
            aws_cdk_lib_aws_iam_IRole(p.instanceRole);
        if (!visitedObjects.has(p.platform))
            aws_cdk_lib_aws_ec2_OperatingSystemType(p.platform);
        if (!visitedObjects.has(p.userData))
            aws_cdk_lib_aws_ec2_UserData(p.userData);
        if (!visitedObjects.has(p.signalResource))
            aws_cdk_lib_CfnResource(p.signalResource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_InitServiceRestartHandle(p) {
}
function aws_cdk_lib_aws_ec2_InitElement(p) {
}
function aws_cdk_lib_aws_ec2_InitCommandOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.serviceRestartHandles != null)
            for (const o of p.serviceRestartHandles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_InitServiceRestartHandle(o);
        if (!visitedObjects.has(p.waitAfterCompletion))
            aws_cdk_lib_aws_ec2_InitCommandWaitDuration(p.waitAfterCompletion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_InitCommandWaitDuration(p) {
}
function aws_cdk_lib_aws_ec2_InitCommand(p) {
}
function aws_cdk_lib_aws_ec2_InitFileOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.serviceRestartHandles != null)
            for (const o of p.serviceRestartHandles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_InitServiceRestartHandle(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_InitFileAssetOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.serviceRestartHandles != null)
            for (const o of p.serviceRestartHandles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_InitServiceRestartHandle(o);
        if (p.readers != null)
            for (const o of p.readers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IGrantable(o);
        if (!visitedObjects.has(p.assetHashType))
            aws_cdk_lib_AssetHashType(p.assetHashType);
        if (!visitedObjects.has(p.bundling))
            aws_cdk_lib_BundlingOptions(p.bundling);
        if (!visitedObjects.has(p.followSymlinks))
            aws_cdk_lib_SymlinkFollowMode(p.followSymlinks);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_InitFile(p) {
}
function aws_cdk_lib_aws_ec2_InitGroup(p) {
}
function aws_cdk_lib_aws_ec2_InitUserOptions(p) {
}
function aws_cdk_lib_aws_ec2_InitUser(p) {
}
function aws_cdk_lib_aws_ec2_LocationPackageOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.serviceRestartHandles != null)
            for (const o of p.serviceRestartHandles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_InitServiceRestartHandle(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_NamedPackageOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.serviceRestartHandles != null)
            for (const o of p.serviceRestartHandles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_InitServiceRestartHandle(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_InitPackage(p) {
}
function aws_cdk_lib_aws_ec2_InitServiceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.serviceManager))
            aws_cdk_lib_aws_ec2_ServiceManager(p.serviceManager);
        if (!visitedObjects.has(p.serviceRestartHandle))
            aws_cdk_lib_aws_ec2_InitServiceRestartHandle(p.serviceRestartHandle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_InitService(p) {
}
function aws_cdk_lib_aws_ec2_InitSourceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.serviceRestartHandles != null)
            for (const o of p.serviceRestartHandles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_InitServiceRestartHandle(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_InitSourceAssetOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.serviceRestartHandles != null)
            for (const o of p.serviceRestartHandles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_InitServiceRestartHandle(o);
        if (p.readers != null)
            for (const o of p.readers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IGrantable(o);
        if (!visitedObjects.has(p.assetHashType))
            aws_cdk_lib_AssetHashType(p.assetHashType);
        if (!visitedObjects.has(p.bundling))
            aws_cdk_lib_BundlingOptions(p.bundling);
        if (!visitedObjects.has(p.followSymlinks))
            aws_cdk_lib_SymlinkFollowMode(p.followSymlinks);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_InitSource(p) {
}
function aws_cdk_lib_aws_ec2_ServiceManager(p) {
}
function aws_cdk_lib_aws_ec2_SystemdConfigFileOptions(p) {
}
function aws_cdk_lib_aws_ec2_InstanceClass(p) {
}
function aws_cdk_lib_aws_ec2_InstanceArchitecture(p) {
}
function aws_cdk_lib_aws_ec2_InstanceSize(p) {
}
function aws_cdk_lib_aws_ec2_InstanceType(p) {
}
function aws_cdk_lib_aws_ec2_IInstance(p) {
}
function aws_cdk_lib_aws_ec2_InstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.machineImage))
            aws_cdk_lib_aws_ec2_IMachineImage(p.machineImage);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (p.blockDevices != null)
            for (const o of p.blockDevices)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_BlockDevice(o);
        if (!visitedObjects.has(p.init))
            aws_cdk_lib_aws_ec2_CloudFormationInit(p.init);
        if (!visitedObjects.has(p.initOptions))
            aws_cdk_lib_aws_ec2_ApplyCloudFormationInitOptions(p.initOptions);
        if (!visitedObjects.has(p.resourceSignalTimeout))
            aws_cdk_lib_Duration(p.resourceSignalTimeout);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.userData))
            aws_cdk_lib_aws_ec2_UserData(p.userData);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_Instance(p) {
}
function aws_cdk_lib_aws_ec2_ApplyCloudFormationInitOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CpuCredits(p) {
}
function aws_cdk_lib_aws_ec2_InstanceInitiatedShutdownBehavior(p) {
}
function aws_cdk_lib_aws_ec2_ILaunchTemplate(p) {
}
function aws_cdk_lib_aws_ec2_SpotInstanceInterruption(p) {
}
function aws_cdk_lib_aws_ec2_SpotRequestType(p) {
}
function aws_cdk_lib_aws_ec2_LaunchTemplateSpotOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blockDuration))
            aws_cdk_lib_Duration(p.blockDuration);
        if (!visitedObjects.has(p.interruptionBehavior))
            aws_cdk_lib_aws_ec2_SpotInstanceInterruption(p.interruptionBehavior);
        if (!visitedObjects.has(p.requestType))
            aws_cdk_lib_aws_ec2_SpotRequestType(p.requestType);
        if (!visitedObjects.has(p.validUntil))
            aws_cdk_lib_Expiration(p.validUntil);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_LaunchTemplateHttpTokens(p) {
}
function aws_cdk_lib_aws_ec2_LaunchTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.blockDevices != null)
            for (const o of p.blockDevices)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_BlockDevice(o);
        if (!visitedObjects.has(p.cpuCredits))
            aws_cdk_lib_aws_ec2_CpuCredits(p.cpuCredits);
        if (!visitedObjects.has(p.httpTokens))
            aws_cdk_lib_aws_ec2_LaunchTemplateHttpTokens(p.httpTokens);
        if (!visitedObjects.has(p.instanceInitiatedShutdownBehavior))
            aws_cdk_lib_aws_ec2_InstanceInitiatedShutdownBehavior(p.instanceInitiatedShutdownBehavior);
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.machineImage))
            aws_cdk_lib_aws_ec2_IMachineImage(p.machineImage);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.spotOptions))
            aws_cdk_lib_aws_ec2_LaunchTemplateSpotOptions(p.spotOptions);
        if (!visitedObjects.has(p.userData))
            aws_cdk_lib_aws_ec2_UserData(p.userData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_LaunchTemplateSpecialVersions(p) {
}
function aws_cdk_lib_aws_ec2_LaunchTemplateAttributes(p) {
}
function aws_cdk_lib_aws_ec2_LaunchTemplate(p) {
}
function aws_cdk_lib_aws_ec2_IMachineImage(p) {
}
function aws_cdk_lib_aws_ec2_MachineImage(p) {
}
function aws_cdk_lib_aws_ec2_MachineImageConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.osType))
            aws_cdk_lib_aws_ec2_OperatingSystemType(p.osType);
        if (!visitedObjects.has(p.userData))
            aws_cdk_lib_aws_ec2_UserData(p.userData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_GenericSSMParameterImage(p) {
}
function aws_cdk_lib_aws_ec2_SsmParameterImageOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.os))
            aws_cdk_lib_aws_ec2_OperatingSystemType(p.os);
        if (!visitedObjects.has(p.userData))
            aws_cdk_lib_aws_ec2_UserData(p.userData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_WindowsImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userData))
            aws_cdk_lib_aws_ec2_UserData(p.userData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_WindowsImage(p) {
}
function aws_cdk_lib_aws_ec2_AmazonLinuxCpuType(p) {
}
function aws_cdk_lib_aws_ec2_AmazonLinuxImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cpuType))
            aws_cdk_lib_aws_ec2_AmazonLinuxCpuType(p.cpuType);
        if (!visitedObjects.has(p.edition))
            aws_cdk_lib_aws_ec2_AmazonLinuxEdition(p.edition);
        if (!visitedObjects.has(p.generation))
            aws_cdk_lib_aws_ec2_AmazonLinuxGeneration(p.generation);
        if (!visitedObjects.has(p.kernel))
            aws_cdk_lib_aws_ec2_AmazonLinuxKernel(p.kernel);
        if (!visitedObjects.has(p.storage))
            aws_cdk_lib_aws_ec2_AmazonLinuxStorage(p.storage);
        if (!visitedObjects.has(p.userData))
            aws_cdk_lib_aws_ec2_UserData(p.userData);
        if (!visitedObjects.has(p.virtualization))
            aws_cdk_lib_aws_ec2_AmazonLinuxVirt(p.virtualization);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_AmazonLinuxImage(p) {
}
function aws_cdk_lib_aws_ec2_AmazonLinuxGeneration(p) {
}
function aws_cdk_lib_aws_ec2_AmazonLinuxKernel(p) {
}
function aws_cdk_lib_aws_ec2_AmazonLinuxEdition(p) {
}
function aws_cdk_lib_aws_ec2_AmazonLinuxVirt(p) {
}
function aws_cdk_lib_aws_ec2_AmazonLinuxStorage(p) {
}
function aws_cdk_lib_aws_ec2_GenericLinuxImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userData))
            aws_cdk_lib_aws_ec2_UserData(p.userData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_GenericWindowsImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userData))
            aws_cdk_lib_aws_ec2_UserData(p.userData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_GenericLinuxImage(p) {
}
function aws_cdk_lib_aws_ec2_GenericWindowsImage(p) {
}
function aws_cdk_lib_aws_ec2_OperatingSystemType(p) {
}
function aws_cdk_lib_aws_ec2_LookupMachineImage(p) {
}
function aws_cdk_lib_aws_ec2_LookupMachineImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userData))
            aws_cdk_lib_aws_ec2_UserData(p.userData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_NatTrafficDirection(p) {
}
function aws_cdk_lib_aws_ec2_GatewayConfig(p) {
}
function aws_cdk_lib_aws_ec2_NatProvider(p) {
}
function aws_cdk_lib_aws_ec2_ConfigureNatOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.natSubnets != null)
            for (const o of p.natSubnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_PublicSubnet(o);
        if (p.privateSubnets != null)
            for (const o of p.privateSubnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_PrivateSubnet(o);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_Vpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_NatGatewayProps(p) {
}
function aws_cdk_lib_aws_ec2_NatInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.defaultAllowedTraffic))
            aws_cdk_lib_aws_ec2_NatTrafficDirection(p.defaultAllowedTraffic);
        if (!visitedObjects.has(p.machineImage))
            aws_cdk_lib_aws_ec2_IMachineImage(p.machineImage);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_NatInstanceProvider(p) {
}
function aws_cdk_lib_aws_ec2_NatInstanceImage(p) {
}
function aws_cdk_lib_aws_ec2_INetworkAcl(p) {
}
function aws_cdk_lib_aws_ec2_NetworkAclProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_NetworkAcl(p) {
}
function aws_cdk_lib_aws_ec2_Action(p) {
}
function aws_cdk_lib_aws_ec2_INetworkAclEntry(p) {
}
function aws_cdk_lib_aws_ec2_TrafficDirection(p) {
}
function aws_cdk_lib_aws_ec2_CommonNetworkAclEntryOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cidr))
            aws_cdk_lib_aws_ec2_AclCidr(p.cidr);
        if (!visitedObjects.has(p.traffic))
            aws_cdk_lib_aws_ec2_AclTraffic(p.traffic);
        if (!visitedObjects.has(p.direction))
            aws_cdk_lib_aws_ec2_TrafficDirection(p.direction);
        if (!visitedObjects.has(p.ruleAction))
            aws_cdk_lib_aws_ec2_Action(p.ruleAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_NetworkAclEntryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.networkAcl))
            aws_cdk_lib_aws_ec2_INetworkAcl(p.networkAcl);
        if (!visitedObjects.has(p.cidr))
            aws_cdk_lib_aws_ec2_AclCidr(p.cidr);
        if (!visitedObjects.has(p.traffic))
            aws_cdk_lib_aws_ec2_AclTraffic(p.traffic);
        if (!visitedObjects.has(p.direction))
            aws_cdk_lib_aws_ec2_TrafficDirection(p.direction);
        if (!visitedObjects.has(p.ruleAction))
            aws_cdk_lib_aws_ec2_Action(p.ruleAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_NetworkAclEntry(p) {
}
function aws_cdk_lib_aws_ec2_ISubnetNetworkAclAssociation(p) {
}
function aws_cdk_lib_aws_ec2_SubnetNetworkAclAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.networkAcl))
            aws_cdk_lib_aws_ec2_INetworkAcl(p.networkAcl);
        if (!visitedObjects.has(p.subnet))
            aws_cdk_lib_aws_ec2_ISubnet(p.subnet);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_SubnetNetworkAclAssociation(p) {
}
function aws_cdk_lib_aws_ec2_AclCidr(p) {
}
function aws_cdk_lib_aws_ec2_AclCidrConfig(p) {
}
function aws_cdk_lib_aws_ec2_AclTraffic(p) {
}
function aws_cdk_lib_aws_ec2_AclTrafficConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.icmp))
            aws_cdk_lib_aws_ec2_AclIcmp(p.icmp);
        if (!visitedObjects.has(p.portRange))
            aws_cdk_lib_aws_ec2_AclPortRange(p.portRange);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_AclIcmp(p) {
}
function aws_cdk_lib_aws_ec2_AclPortRange(p) {
}
function aws_cdk_lib_aws_ec2_Protocol(p) {
}
function aws_cdk_lib_aws_ec2_PortProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_ec2_Protocol(p.protocol);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_Port(p) {
}
function aws_cdk_lib_aws_ec2_ISecurityGroup(p) {
}
function aws_cdk_lib_aws_ec2_RuleScope(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scope))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.scope);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_SecurityGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_SecurityGroupImportOptions(p) {
}
function aws_cdk_lib_aws_ec2_SecurityGroup(p) {
}
function aws_cdk_lib_aws_ec2_ConnectionRule(p) {
}
function aws_cdk_lib_aws_ec2_SubnetFilter(p) {
}
function aws_cdk_lib_aws_ec2_IPeer(p) {
}
function aws_cdk_lib_aws_ec2_Peer(p) {
}
function aws_cdk_lib_aws_ec2_BlockDevice(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volume))
            aws_cdk_lib_aws_ec2_BlockDeviceVolume(p.volume);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_EbsDeviceOptionsBase(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeType))
            aws_cdk_lib_aws_ec2_EbsDeviceVolumeType(p.volumeType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_EbsDeviceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kmsKey))
            aws_cdk_lib_aws_kms_IKey(p.kmsKey);
        if (!visitedObjects.has(p.volumeType))
            aws_cdk_lib_aws_ec2_EbsDeviceVolumeType(p.volumeType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_EbsDeviceSnapshotOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeType))
            aws_cdk_lib_aws_ec2_EbsDeviceVolumeType(p.volumeType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_EbsDeviceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeType))
            aws_cdk_lib_aws_ec2_EbsDeviceVolumeType(p.volumeType);
        if (!visitedObjects.has(p.kmsKey))
            aws_cdk_lib_aws_kms_IKey(p.kmsKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_BlockDeviceVolume(p) {
}
function aws_cdk_lib_aws_ec2_EbsDeviceVolumeType(p) {
}
function aws_cdk_lib_aws_ec2_IVolume(p) {
}
function aws_cdk_lib_aws_ec2_VolumeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.size))
            aws_cdk_lib_Size(p.size);
        if (!visitedObjects.has(p.volumeType))
            aws_cdk_lib_aws_ec2_EbsDeviceVolumeType(p.volumeType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_VolumeAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_Volume(p) {
}
function aws_cdk_lib_aws_ec2_ISubnet(p) {
}
function aws_cdk_lib_aws_ec2_IRouteTable(p) {
}
function aws_cdk_lib_aws_ec2_IVpc(p) {
}
function aws_cdk_lib_aws_ec2_SubnetType(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        const ns = require("./aws-ec2/lib/vpc.js");
        if (Object.values(ns.SubnetType).filter(x => x === p).length > 1)
            return;
        if (p === ns.SubnetType.PRIVATE_WITH_NAT)
            print("aws-cdk-lib.aws_ec2.SubnetType#PRIVATE_WITH_NAT", "use `PRIVATE_WITH_EGRESS`");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_SubnetSelection(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.subnetFilters != null)
            for (const o of p.subnetFilters)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_SubnetFilter(o);
        if (p.subnets != null)
            for (const o of p.subnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISubnet(o);
        if (!visitedObjects.has(p.subnetType))
            aws_cdk_lib_aws_ec2_SubnetType(p.subnetType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_SelectedSubnets(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.subnets != null)
            for (const o of p.subnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISubnet(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_VpcAttributes(p) {
}
function aws_cdk_lib_aws_ec2_SubnetAttributes(p) {
}
function aws_cdk_lib_aws_ec2_VpcProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("cidr" in p)
            print("aws-cdk-lib.aws_ec2.VpcProps#cidr", "Use ipAddresses instead");
        if (!visitedObjects.has(p.defaultInstanceTenancy))
            aws_cdk_lib_aws_ec2_DefaultInstanceTenancy(p.defaultInstanceTenancy);
        if (p.flowLogs != null)
            for (const o of Object.values(p.flowLogs))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_FlowLogOptions(o);
        if (p.gatewayEndpoints != null)
            for (const o of Object.values(p.gatewayEndpoints))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_GatewayVpcEndpointOptions(o);
        if (!visitedObjects.has(p.ipAddresses))
            aws_cdk_lib_aws_ec2_IIpAddresses(p.ipAddresses);
        if (!visitedObjects.has(p.natGatewayProvider))
            aws_cdk_lib_aws_ec2_NatProvider(p.natGatewayProvider);
        if (!visitedObjects.has(p.natGatewaySubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.natGatewaySubnets);
        if (p.subnetConfiguration != null)
            for (const o of p.subnetConfiguration)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_SubnetConfiguration(o);
        if (p.vpnConnections != null)
            for (const o of Object.values(p.vpnConnections))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_VpnConnectionOptions(o);
        if (p.vpnRoutePropagation != null)
            for (const o of p.vpnRoutePropagation)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_SubnetSelection(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_DefaultInstanceTenancy(p) {
}
function aws_cdk_lib_aws_ec2_SubnetConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.subnetType))
            aws_cdk_lib_aws_ec2_SubnetType(p.subnetType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_Vpc(p) {
}
function aws_cdk_lib_aws_ec2_SubnetProps(p) {
}
function aws_cdk_lib_aws_ec2_Subnet(p) {
}
function aws_cdk_lib_aws_ec2_AddRouteOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.routerType))
            aws_cdk_lib_aws_ec2_RouterType(p.routerType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_RouterType(p) {
}
function aws_cdk_lib_aws_ec2_PublicSubnetProps(p) {
}
function aws_cdk_lib_aws_ec2_IPublicSubnet(p) {
}
function aws_cdk_lib_aws_ec2_PublicSubnetAttributes(p) {
}
function aws_cdk_lib_aws_ec2_PublicSubnet(p) {
}
function aws_cdk_lib_aws_ec2_PrivateSubnetProps(p) {
}
function aws_cdk_lib_aws_ec2_IPrivateSubnet(p) {
}
function aws_cdk_lib_aws_ec2_PrivateSubnetAttributes(p) {
}
function aws_cdk_lib_aws_ec2_PrivateSubnet(p) {
}
function aws_cdk_lib_aws_ec2_VpcLookupOptions(p) {
}
function aws_cdk_lib_aws_ec2_IVpnConnection(p) {
}
function aws_cdk_lib_aws_ec2_IVpnGateway(p) {
}
function aws_cdk_lib_aws_ec2_VpnTunnelOption(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("preSharedKey" in p)
            print("aws-cdk-lib.aws_ec2.VpnTunnelOption#preSharedKey", "Use `preSharedKeySecret` instead");
        if (!visitedObjects.has(p.preSharedKeySecret))
            aws_cdk_lib_SecretValue(p.preSharedKeySecret);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_VpnConnectionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tunnelOptions != null)
            for (const o of p.tunnelOptions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_VpnTunnelOption(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_VpnGatewayProps(p) {
}
function aws_cdk_lib_aws_ec2_EnableVpnGatewayOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.vpnRoutePropagation != null)
            for (const o of p.vpnRoutePropagation)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_SubnetSelection(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_VpnConnectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (p.tunnelOptions != null)
            for (const o of p.tunnelOptions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_VpnTunnelOption(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_VpnConnectionType(p) {
}
function aws_cdk_lib_aws_ec2_VpnGateway(p) {
}
function aws_cdk_lib_aws_ec2_VpnConnectionAttributes(p) {
}
function aws_cdk_lib_aws_ec2_VpnConnectionBase(p) {
}
function aws_cdk_lib_aws_ec2_VpnConnection(p) {
}
function aws_cdk_lib_aws_ec2_IVpcEndpoint(p) {
}
function aws_cdk_lib_aws_ec2_VpcEndpoint(p) {
}
function aws_cdk_lib_aws_ec2_IGatewayVpcEndpoint(p) {
}
function aws_cdk_lib_aws_ec2_VpcEndpointType(p) {
}
function aws_cdk_lib_aws_ec2_IGatewayVpcEndpointService(p) {
}
function aws_cdk_lib_aws_ec2_GatewayVpcEndpointAwsService(p) {
}
function aws_cdk_lib_aws_ec2_GatewayVpcEndpointOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.service))
            aws_cdk_lib_aws_ec2_IGatewayVpcEndpointService(p.service);
        if (p.subnets != null)
            for (const o of p.subnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_SubnetSelection(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_GatewayVpcEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.service))
            aws_cdk_lib_aws_ec2_IGatewayVpcEndpointService(p.service);
        if (p.subnets != null)
            for (const o of p.subnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_SubnetSelection(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_GatewayVpcEndpoint(p) {
}
function aws_cdk_lib_aws_ec2_IInterfaceVpcEndpointService(p) {
}
function aws_cdk_lib_aws_ec2_InterfaceVpcEndpointService(p) {
}
function aws_cdk_lib_aws_ec2_InterfaceVpcEndpointAwsService(p) {
}
function aws_cdk_lib_aws_ec2_InterfaceVpcEndpointOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.service))
            aws_cdk_lib_aws_ec2_IInterfaceVpcEndpointService(p.service);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_InterfaceVpcEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.service))
            aws_cdk_lib_aws_ec2_IInterfaceVpcEndpointService(p.service);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_IInterfaceVpcEndpoint(p) {
}
function aws_cdk_lib_aws_ec2_InterfaceVpcEndpoint(p) {
}
function aws_cdk_lib_aws_ec2_InterfaceVpcEndpointAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_IVpcEndpointServiceLoadBalancer(p) {
}
function aws_cdk_lib_aws_ec2_IVpcEndpointService(p) {
}
function aws_cdk_lib_aws_ec2_VpcEndpointService(p) {
}
function aws_cdk_lib_aws_ec2_VpcEndpointServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.vpcEndpointServiceLoadBalancers != null)
            for (const o of p.vpcEndpointServiceLoadBalancers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_IVpcEndpointServiceLoadBalancer(o);
        if (p.allowedPrincipals != null)
            for (const o of p.allowedPrincipals)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_ArnPrincipal(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_LinuxUserDataOptions(p) {
}
function aws_cdk_lib_aws_ec2_WindowsUserDataOptions(p) {
}
function aws_cdk_lib_aws_ec2_S3DownloadOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_ExecuteFileOptions(p) {
}
function aws_cdk_lib_aws_ec2_UserData(p) {
}
function aws_cdk_lib_aws_ec2_MultipartBodyOptions(p) {
}
function aws_cdk_lib_aws_ec2_MultipartBody(p) {
}
function aws_cdk_lib_aws_ec2_MultipartUserDataOptions(p) {
}
function aws_cdk_lib_aws_ec2_MultipartUserData(p) {
}
function aws_cdk_lib_aws_ec2_WindowsVersion(p) {
}
function aws_cdk_lib_aws_ec2_IFlowLog(p) {
}
function aws_cdk_lib_aws_ec2_FlowLogTrafficType(p) {
}
function aws_cdk_lib_aws_ec2_FlowLogDestinationType(p) {
}
function aws_cdk_lib_aws_ec2_FlowLogResourceType(p) {
}
function aws_cdk_lib_aws_ec2_FlowLogFileFormat(p) {
}
function aws_cdk_lib_aws_ec2_S3DestinationOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fileFormat))
            aws_cdk_lib_aws_ec2_FlowLogFileFormat(p.fileFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_DestinationOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fileFormat))
            aws_cdk_lib_aws_ec2_FlowLogFileFormat(p.fileFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_FlowLogDestination(p) {
}
function aws_cdk_lib_aws_ec2_FlowLogDestinationConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logDestinationType))
            aws_cdk_lib_aws_ec2_FlowLogDestinationType(p.logDestinationType);
        if (!visitedObjects.has(p.destinationOptions))
            aws_cdk_lib_aws_ec2_DestinationOptions(p.destinationOptions);
        if (!visitedObjects.has(p.iamRole))
            aws_cdk_lib_aws_iam_IRole(p.iamRole);
        if (!visitedObjects.has(p.logGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.logGroup);
        if (!visitedObjects.has(p.s3Bucket))
            aws_cdk_lib_aws_s3_IBucket(p.s3Bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_FlowLogMaxAggregationInterval(p) {
}
function aws_cdk_lib_aws_ec2_LogFormat(p) {
}
function aws_cdk_lib_aws_ec2_FlowLogOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_aws_ec2_FlowLogDestination(p.destination);
        if (p.logFormat != null)
            for (const o of p.logFormat)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_LogFormat(o);
        if (!visitedObjects.has(p.maxAggregationInterval))
            aws_cdk_lib_aws_ec2_FlowLogMaxAggregationInterval(p.maxAggregationInterval);
        if (!visitedObjects.has(p.trafficType))
            aws_cdk_lib_aws_ec2_FlowLogTrafficType(p.trafficType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_FlowLogProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourceType))
            aws_cdk_lib_aws_ec2_FlowLogResourceType(p.resourceType);
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_aws_ec2_FlowLogDestination(p.destination);
        if (p.logFormat != null)
            for (const o of p.logFormat)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_LogFormat(o);
        if (!visitedObjects.has(p.maxAggregationInterval))
            aws_cdk_lib_aws_ec2_FlowLogMaxAggregationInterval(p.maxAggregationInterval);
        if (!visitedObjects.has(p.trafficType))
            aws_cdk_lib_aws_ec2_FlowLogTrafficType(p.trafficType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_FlowLog(p) {
}
function aws_cdk_lib_aws_ec2_IClientVpnEndpoint(p) {
}
function aws_cdk_lib_aws_ec2_IClientVpnConnectionHandler(p) {
}
function aws_cdk_lib_aws_ec2_TransportProtocol(p) {
}
function aws_cdk_lib_aws_ec2_VpnPort(p) {
}
function aws_cdk_lib_aws_ec2_ClientVpnEndpointOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientConnectionHandler))
            aws_cdk_lib_aws_ec2_IClientVpnConnectionHandler(p.clientConnectionHandler);
        if (!visitedObjects.has(p.logGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.logGroup);
        if (!visitedObjects.has(p.logStream))
            aws_cdk_lib_aws_logs_ILogStream(p.logStream);
        if (!visitedObjects.has(p.port))
            aws_cdk_lib_aws_ec2_VpnPort(p.port);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.sessionTimeout))
            aws_cdk_lib_aws_ec2_ClientVpnSessionTimeout(p.sessionTimeout);
        if (!visitedObjects.has(p.transportProtocol))
            aws_cdk_lib_aws_ec2_TransportProtocol(p.transportProtocol);
        if (!visitedObjects.has(p.userBasedAuthentication))
            aws_cdk_lib_aws_ec2_ClientVpnUserBasedAuthentication(p.userBasedAuthentication);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_ClientVpnSessionTimeout(p) {
}
function aws_cdk_lib_aws_ec2_ClientVpnUserBasedAuthentication(p) {
}
function aws_cdk_lib_aws_ec2_ClientVpnEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.clientConnectionHandler))
            aws_cdk_lib_aws_ec2_IClientVpnConnectionHandler(p.clientConnectionHandler);
        if (!visitedObjects.has(p.logGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.logGroup);
        if (!visitedObjects.has(p.logStream))
            aws_cdk_lib_aws_logs_ILogStream(p.logStream);
        if (!visitedObjects.has(p.port))
            aws_cdk_lib_aws_ec2_VpnPort(p.port);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.sessionTimeout))
            aws_cdk_lib_aws_ec2_ClientVpnSessionTimeout(p.sessionTimeout);
        if (!visitedObjects.has(p.transportProtocol))
            aws_cdk_lib_aws_ec2_TransportProtocol(p.transportProtocol);
        if (!visitedObjects.has(p.userBasedAuthentication))
            aws_cdk_lib_aws_ec2_ClientVpnUserBasedAuthentication(p.userBasedAuthentication);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_ClientVpnEndpointAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_ClientVpnEndpoint(p) {
}
function aws_cdk_lib_aws_ec2_ClientVpnAuthorizationRuleOptions(p) {
}
function aws_cdk_lib_aws_ec2_ClientVpnAuthorizationRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientVpnEndpoint))
            aws_cdk_lib_aws_ec2_IClientVpnEndpoint(p.clientVpnEndpoint);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_ClientVpnAuthorizationRule(p) {
}
function aws_cdk_lib_aws_ec2_ClientVpnRouteOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_ec2_ClientVpnRouteTarget(p.target);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_ClientVpnRouteTarget(p) {
}
function aws_cdk_lib_aws_ec2_ClientVpnRouteProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientVpnEndpoint))
            aws_cdk_lib_aws_ec2_IClientVpnEndpoint(p.clientVpnEndpoint);
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_ec2_ClientVpnRouteTarget(p.target);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_ClientVpnRoute(p) {
}
function aws_cdk_lib_aws_ec2_IpAddresses(p) {
}
function aws_cdk_lib_aws_ec2_IIpAddresses(p) {
}
function aws_cdk_lib_aws_ec2_VpcIpamOptions(p) {
}
function aws_cdk_lib_aws_ec2_RequestedSubnet(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_aws_ec2_SubnetConfiguration(p.configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_AllocateCidrRequest(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.requestedSubnets != null)
            for (const o of p.requestedSubnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_RequestedSubnet(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_SubnetIpamOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.allocatedSubnets != null)
            for (const o of p.allocatedSubnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_AllocatedSubnet(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_AllocatedSubnet(p) {
}
function aws_cdk_lib_aws_ec2_AwsIpamProps(p) {
}
function aws_cdk_lib_aws_ec2_IPlacementGroup(p) {
}
function aws_cdk_lib_aws_ec2_PlacementGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spreadLevel))
            aws_cdk_lib_aws_ec2_PlacementGroupSpreadLevel(p.spreadLevel);
        if (!visitedObjects.has(p.strategy))
            aws_cdk_lib_aws_ec2_PlacementGroupStrategy(p.strategy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_PlacementGroupSpreadLevel(p) {
}
function aws_cdk_lib_aws_ec2_PlacementGroupStrategy(p) {
}
function aws_cdk_lib_aws_ec2_PlacementGroup(p) {
}
function aws_cdk_lib_aws_ec2_CfnCapacityReservationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tagSpecifications))
            aws_cdk_lib_IResolvable(p.tagSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnCapacityReservation(p) {
}
function aws_cdk_lib_aws_ec2_CfnCapacityReservation_TagSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnCapacityReservationFleetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceTypeSpecifications))
            aws_cdk_lib_IResolvable(p.instanceTypeSpecifications);
        if (!visitedObjects.has(p.tagSpecifications))
            aws_cdk_lib_IResolvable(p.tagSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnCapacityReservationFleet(p) {
}
function aws_cdk_lib_aws_ec2_CfnCapacityReservationFleet_InstanceTypeSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnCapacityReservationFleet_TagSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnCarrierGatewayProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnCarrierGateway(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnAuthorizationRuleProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnAuthorizationRule(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticationOptions))
            aws_cdk_lib_IResolvable(p.authenticationOptions);
        if (!visitedObjects.has(p.connectionLogOptions))
            aws_cdk_lib_IResolvable(p.connectionLogOptions);
        if (!visitedObjects.has(p.clientConnectOptions))
            aws_cdk_lib_IResolvable(p.clientConnectOptions);
        if (!visitedObjects.has(p.clientLoginBannerOptions))
            aws_cdk_lib_IResolvable(p.clientLoginBannerOptions);
        if (!visitedObjects.has(p.tagSpecifications))
            aws_cdk_lib_IResolvable(p.tagSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_CertificateAuthenticationRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_ClientAuthenticationRequestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.activeDirectory))
            aws_cdk_lib_IResolvable(p.activeDirectory);
        if (!visitedObjects.has(p.federatedAuthentication))
            aws_cdk_lib_IResolvable(p.federatedAuthentication);
        if (!visitedObjects.has(p.mutualAuthentication))
            aws_cdk_lib_IResolvable(p.mutualAuthentication);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_ClientConnectOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_ClientLoginBannerOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_ConnectionLogOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_DirectoryServiceAuthenticationRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_FederatedAuthenticationRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_TagSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnClientVpnRouteProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnRoute(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnTargetNetworkAssociationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnClientVpnTargetNetworkAssociation(p) {
}
function aws_cdk_lib_aws_ec2_CfnCustomerGatewayProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnCustomerGateway(p) {
}
function aws_cdk_lib_aws_ec2_CfnDHCPOptionsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnDHCPOptions(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2FleetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.launchTemplateConfigs))
            aws_cdk_lib_IResolvable(p.launchTemplateConfigs);
        if (!visitedObjects.has(p.targetCapacitySpecification))
            aws_cdk_lib_IResolvable(p.targetCapacitySpecification);
        if (!visitedObjects.has(p.onDemandOptions))
            aws_cdk_lib_IResolvable(p.onDemandOptions);
        if (!visitedObjects.has(p.spotOptions))
            aws_cdk_lib_IResolvable(p.spotOptions);
        if (!visitedObjects.has(p.tagSpecifications))
            aws_cdk_lib_IResolvable(p.tagSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_AcceleratorCountRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_AcceleratorTotalMemoryMiBRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_BaselineEbsBandwidthMbpsRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_CapacityRebalanceProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_CapacityReservationOptionsRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_FleetLaunchTemplateConfigRequestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.launchTemplateSpecification))
            aws_cdk_lib_IResolvable(p.launchTemplateSpecification);
        if (!visitedObjects.has(p.overrides))
            aws_cdk_lib_IResolvable(p.overrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_FleetLaunchTemplateOverridesRequestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceRequirements))
            aws_cdk_lib_IResolvable(p.instanceRequirements);
        if (!visitedObjects.has(p.placement))
            aws_cdk_lib_IResolvable(p.placement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_FleetLaunchTemplateSpecificationRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_InstanceRequirementsRequestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.acceleratorCount))
            aws_cdk_lib_IResolvable(p.acceleratorCount);
        if (!visitedObjects.has(p.acceleratorTotalMemoryMiB))
            aws_cdk_lib_IResolvable(p.acceleratorTotalMemoryMiB);
        if (!visitedObjects.has(p.baselineEbsBandwidthMbps))
            aws_cdk_lib_IResolvable(p.baselineEbsBandwidthMbps);
        if (!visitedObjects.has(p.memoryGiBPerVCpu))
            aws_cdk_lib_IResolvable(p.memoryGiBPerVCpu);
        if (!visitedObjects.has(p.memoryMiB))
            aws_cdk_lib_IResolvable(p.memoryMiB);
        if (!visitedObjects.has(p.networkBandwidthGbps))
            aws_cdk_lib_IResolvable(p.networkBandwidthGbps);
        if (!visitedObjects.has(p.networkInterfaceCount))
            aws_cdk_lib_IResolvable(p.networkInterfaceCount);
        if (!visitedObjects.has(p.totalLocalStorageGb))
            aws_cdk_lib_IResolvable(p.totalLocalStorageGb);
        if (!visitedObjects.has(p.vCpuCount))
            aws_cdk_lib_IResolvable(p.vCpuCount);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_MaintenanceStrategiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capacityRebalance))
            aws_cdk_lib_IResolvable(p.capacityRebalance);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_MemoryGiBPerVCpuRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_MemoryMiBRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_NetworkBandwidthGbpsRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_NetworkInterfaceCountRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_OnDemandOptionsRequestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capacityReservationOptions))
            aws_cdk_lib_IResolvable(p.capacityReservationOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_PlacementProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_SpotOptionsRequestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maintenanceStrategies))
            aws_cdk_lib_IResolvable(p.maintenanceStrategies);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_TagSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_TargetCapacitySpecificationRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_TotalLocalStorageGBRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEC2Fleet_VCpuCountRangeRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnEIPProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnEIP(p) {
}
function aws_cdk_lib_aws_ec2_CfnEIPAssociationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnEIPAssociation(p) {
}
function aws_cdk_lib_aws_ec2_CfnEgressOnlyInternetGatewayProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnEgressOnlyInternetGateway(p) {
}
function aws_cdk_lib_aws_ec2_CfnEnclaveCertificateIamRoleAssociationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnEnclaveCertificateIamRoleAssociation(p) {
}
function aws_cdk_lib_aws_ec2_CfnFlowLogProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnFlowLog(p) {
}
function aws_cdk_lib_aws_ec2_CfnFlowLog_DestinationOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnGatewayRouteTableAssociationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnGatewayRouteTableAssociation(p) {
}
function aws_cdk_lib_aws_ec2_CfnHostProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnHost(p) {
}
function aws_cdk_lib_aws_ec2_CfnIPAMProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.operatingRegions))
            aws_cdk_lib_IResolvable(p.operatingRegions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnIPAM(p) {
}
function aws_cdk_lib_aws_ec2_CfnIPAM_IpamOperatingRegionProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnIPAMAllocationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnIPAMAllocation(p) {
}
function aws_cdk_lib_aws_ec2_CfnIPAMPoolProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.allocationResourceTags))
            aws_cdk_lib_IResolvable(p.allocationResourceTags);
        if (!visitedObjects.has(p.provisionedCidrs))
            aws_cdk_lib_IResolvable(p.provisionedCidrs);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnIPAMPool(p) {
}
function aws_cdk_lib_aws_ec2_CfnIPAMPool_ProvisionedCidrProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnIPAMPoolCidrProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnIPAMPoolCidr(p) {
}
function aws_cdk_lib_aws_ec2_CfnIPAMResourceDiscoveryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.operatingRegions))
            aws_cdk_lib_IResolvable(p.operatingRegions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnIPAMResourceDiscovery(p) {
}
function aws_cdk_lib_aws_ec2_CfnIPAMResourceDiscovery_IpamOperatingRegionProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnIPAMResourceDiscoveryAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnIPAMResourceDiscoveryAssociation(p) {
}
function aws_cdk_lib_aws_ec2_CfnIPAMScopeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnIPAMScope(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blockDeviceMappings))
            aws_cdk_lib_IResolvable(p.blockDeviceMappings);
        if (!visitedObjects.has(p.cpuOptions))
            aws_cdk_lib_IResolvable(p.cpuOptions);
        if (!visitedObjects.has(p.creditSpecification))
            aws_cdk_lib_IResolvable(p.creditSpecification);
        if (!visitedObjects.has(p.elasticGpuSpecifications))
            aws_cdk_lib_IResolvable(p.elasticGpuSpecifications);
        if (!visitedObjects.has(p.elasticInferenceAccelerators))
            aws_cdk_lib_IResolvable(p.elasticInferenceAccelerators);
        if (!visitedObjects.has(p.enclaveOptions))
            aws_cdk_lib_IResolvable(p.enclaveOptions);
        if (!visitedObjects.has(p.hibernationOptions))
            aws_cdk_lib_IResolvable(p.hibernationOptions);
        if (!visitedObjects.has(p.ipv6Addresses))
            aws_cdk_lib_IResolvable(p.ipv6Addresses);
        if (!visitedObjects.has(p.launchTemplate))
            aws_cdk_lib_IResolvable(p.launchTemplate);
        if (!visitedObjects.has(p.licenseSpecifications))
            aws_cdk_lib_IResolvable(p.licenseSpecifications);
        if (!visitedObjects.has(p.networkInterfaces))
            aws_cdk_lib_IResolvable(p.networkInterfaces);
        if (!visitedObjects.has(p.privateDnsNameOptions))
            aws_cdk_lib_IResolvable(p.privateDnsNameOptions);
        if (!visitedObjects.has(p.ssmAssociations))
            aws_cdk_lib_IResolvable(p.ssmAssociations);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.volumes))
            aws_cdk_lib_IResolvable(p.volumes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnInstance(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_AssociationParameterProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_BlockDeviceMappingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ebs))
            aws_cdk_lib_IResolvable(p.ebs);
        if (!visitedObjects.has(p.noDevice))
            aws_cdk_lib_IResolvable(p.noDevice);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnInstance_CpuOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_CreditSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_EbsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_ElasticGpuSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_ElasticInferenceAcceleratorProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_EnclaveOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_HibernationOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_InstanceIpv6AddressProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_LaunchTemplateSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_LicenseSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_NetworkInterfaceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipv6Addresses))
            aws_cdk_lib_IResolvable(p.ipv6Addresses);
        if (!visitedObjects.has(p.privateIpAddresses))
            aws_cdk_lib_IResolvable(p.privateIpAddresses);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnInstance_NoDeviceProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_PrivateDnsNameOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_PrivateIpAddressSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInstance_SsmAssociationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.associationParameters))
            aws_cdk_lib_IResolvable(p.associationParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnInstance_VolumeProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnInternetGatewayProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnInternetGateway(p) {
}
function aws_cdk_lib_aws_ec2_CfnKeyPairProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnKeyPair(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.launchTemplateData))
            aws_cdk_lib_IResolvable(p.launchTemplateData);
        if (!visitedObjects.has(p.tagSpecifications))
            aws_cdk_lib_IResolvable(p.tagSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_AcceleratorCountProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_AcceleratorTotalMemoryMiBProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_BaselineEbsBandwidthMbpsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_BlockDeviceMappingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ebs))
            aws_cdk_lib_IResolvable(p.ebs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_CapacityReservationSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capacityReservationTarget))
            aws_cdk_lib_IResolvable(p.capacityReservationTarget);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_CapacityReservationTargetProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_CpuOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_CreditSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_EbsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_ElasticGpuSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_EnclaveOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_HibernationOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_IamInstanceProfileProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_InstanceMarketOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spotOptions))
            aws_cdk_lib_IResolvable(p.spotOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_InstanceRequirementsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.acceleratorCount))
            aws_cdk_lib_IResolvable(p.acceleratorCount);
        if (!visitedObjects.has(p.acceleratorTotalMemoryMiB))
            aws_cdk_lib_IResolvable(p.acceleratorTotalMemoryMiB);
        if (!visitedObjects.has(p.baselineEbsBandwidthMbps))
            aws_cdk_lib_IResolvable(p.baselineEbsBandwidthMbps);
        if (!visitedObjects.has(p.memoryGiBPerVCpu))
            aws_cdk_lib_IResolvable(p.memoryGiBPerVCpu);
        if (!visitedObjects.has(p.memoryMiB))
            aws_cdk_lib_IResolvable(p.memoryMiB);
        if (!visitedObjects.has(p.networkBandwidthGbps))
            aws_cdk_lib_IResolvable(p.networkBandwidthGbps);
        if (!visitedObjects.has(p.networkInterfaceCount))
            aws_cdk_lib_IResolvable(p.networkInterfaceCount);
        if (!visitedObjects.has(p.totalLocalStorageGb))
            aws_cdk_lib_IResolvable(p.totalLocalStorageGb);
        if (!visitedObjects.has(p.vCpuCount))
            aws_cdk_lib_IResolvable(p.vCpuCount);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_Ipv4PrefixSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_Ipv6AddProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_Ipv6PrefixSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_LaunchTemplateDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blockDeviceMappings))
            aws_cdk_lib_IResolvable(p.blockDeviceMappings);
        if (!visitedObjects.has(p.capacityReservationSpecification))
            aws_cdk_lib_IResolvable(p.capacityReservationSpecification);
        if (!visitedObjects.has(p.cpuOptions))
            aws_cdk_lib_IResolvable(p.cpuOptions);
        if (!visitedObjects.has(p.creditSpecification))
            aws_cdk_lib_IResolvable(p.creditSpecification);
        if (!visitedObjects.has(p.elasticGpuSpecifications))
            aws_cdk_lib_IResolvable(p.elasticGpuSpecifications);
        if (!visitedObjects.has(p.elasticInferenceAccelerators))
            aws_cdk_lib_IResolvable(p.elasticInferenceAccelerators);
        if (!visitedObjects.has(p.enclaveOptions))
            aws_cdk_lib_IResolvable(p.enclaveOptions);
        if (!visitedObjects.has(p.hibernationOptions))
            aws_cdk_lib_IResolvable(p.hibernationOptions);
        if (!visitedObjects.has(p.iamInstanceProfile))
            aws_cdk_lib_IResolvable(p.iamInstanceProfile);
        if (!visitedObjects.has(p.instanceMarketOptions))
            aws_cdk_lib_IResolvable(p.instanceMarketOptions);
        if (!visitedObjects.has(p.instanceRequirements))
            aws_cdk_lib_IResolvable(p.instanceRequirements);
        if (!visitedObjects.has(p.licenseSpecifications))
            aws_cdk_lib_IResolvable(p.licenseSpecifications);
        if (!visitedObjects.has(p.maintenanceOptions))
            aws_cdk_lib_IResolvable(p.maintenanceOptions);
        if (!visitedObjects.has(p.metadataOptions))
            aws_cdk_lib_IResolvable(p.metadataOptions);
        if (!visitedObjects.has(p.monitoring))
            aws_cdk_lib_IResolvable(p.monitoring);
        if (!visitedObjects.has(p.networkInterfaces))
            aws_cdk_lib_IResolvable(p.networkInterfaces);
        if (!visitedObjects.has(p.placement))
            aws_cdk_lib_IResolvable(p.placement);
        if (!visitedObjects.has(p.privateDnsNameOptions))
            aws_cdk_lib_IResolvable(p.privateDnsNameOptions);
        if (!visitedObjects.has(p.tagSpecifications))
            aws_cdk_lib_IResolvable(p.tagSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_LaunchTemplateElasticInferenceAcceleratorProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_LaunchTemplateTagSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_LicenseSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_MaintenanceOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_MemoryGiBPerVCpuProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_MemoryMiBProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_MetadataOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_MonitoringProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_NetworkBandwidthGbpsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_NetworkInterfaceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipv4Prefixes))
            aws_cdk_lib_IResolvable(p.ipv4Prefixes);
        if (!visitedObjects.has(p.ipv6Addresses))
            aws_cdk_lib_IResolvable(p.ipv6Addresses);
        if (!visitedObjects.has(p.ipv6Prefixes))
            aws_cdk_lib_IResolvable(p.ipv6Prefixes);
        if (!visitedObjects.has(p.privateIpAddresses))
            aws_cdk_lib_IResolvable(p.privateIpAddresses);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_NetworkInterfaceCountProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_PlacementProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_PrivateDnsNameOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_PrivateIpAddProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_SpotOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_TagSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_TotalLocalStorageGBProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLaunchTemplate_VCpuCountProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnLocalGatewayRoute(p) {
}
function aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteTableProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteTable(p) {
}
function aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteTableVPCAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteTableVPCAssociation(p) {
}
function aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteTableVirtualInterfaceGroupAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteTableVirtualInterfaceGroupAssociation(p) {
}
function aws_cdk_lib_aws_ec2_CfnNatGatewayProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNatGateway(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkAclProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkAcl(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkAclEntryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.icmp))
            aws_cdk_lib_IResolvable(p.icmp);
        if (!visitedObjects.has(p.portRange))
            aws_cdk_lib_IResolvable(p.portRange);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkAclEntry(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkAclEntry_IcmpProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkAclEntry_PortRangeProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScopeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.excludePaths))
            aws_cdk_lib_IResolvable(p.excludePaths);
        if (!visitedObjects.has(p.matchPaths))
            aws_cdk_lib_IResolvable(p.matchPaths);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScope(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScope_AccessScopePathRequestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_IResolvable(p.source);
        if (!visitedObjects.has(p.throughResources))
            aws_cdk_lib_IResolvable(p.throughResources);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScope_PacketHeaderStatementRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScope_PathStatementRequestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.packetHeaderStatement))
            aws_cdk_lib_IResolvable(p.packetHeaderStatement);
        if (!visitedObjects.has(p.resourceStatement))
            aws_cdk_lib_IResolvable(p.resourceStatement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScope_ResourceStatementRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScope_ThroughResourcesStatementRequestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourceStatement))
            aws_cdk_lib_IResolvable(p.resourceStatement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScopeAnalysisProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScopeAnalysis(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysisProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AdditionalDetailProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.component))
            aws_cdk_lib_IResolvable(p.component);
        if (!visitedObjects.has(p.loadBalancers))
            aws_cdk_lib_IResolvable(p.loadBalancers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AlternatePathHintProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisAclRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.portRange))
            aws_cdk_lib_IResolvable(p.portRange);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisComponentProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisLoadBalancerListenerProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisLoadBalancerTargetProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instance))
            aws_cdk_lib_IResolvable(p.instance);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisPacketHeaderProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationPortRanges))
            aws_cdk_lib_IResolvable(p.destinationPortRanges);
        if (!visitedObjects.has(p.sourcePortRanges))
            aws_cdk_lib_IResolvable(p.sourcePortRanges);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisRouteTableRouteProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisSecurityGroupRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.portRange))
            aws_cdk_lib_IResolvable(p.portRange);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_ExplanationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.acl))
            aws_cdk_lib_IResolvable(p.acl);
        if (!visitedObjects.has(p.aclRule))
            aws_cdk_lib_IResolvable(p.aclRule);
        if (!visitedObjects.has(p.attachedTo))
            aws_cdk_lib_IResolvable(p.attachedTo);
        if (!visitedObjects.has(p.classicLoadBalancerListener))
            aws_cdk_lib_IResolvable(p.classicLoadBalancerListener);
        if (!visitedObjects.has(p.component))
            aws_cdk_lib_IResolvable(p.component);
        if (!visitedObjects.has(p.customerGateway))
            aws_cdk_lib_IResolvable(p.customerGateway);
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
        if (!visitedObjects.has(p.destinationVpc))
            aws_cdk_lib_IResolvable(p.destinationVpc);
        if (!visitedObjects.has(p.elasticLoadBalancerListener))
            aws_cdk_lib_IResolvable(p.elasticLoadBalancerListener);
        if (!visitedObjects.has(p.ingressRouteTable))
            aws_cdk_lib_IResolvable(p.ingressRouteTable);
        if (!visitedObjects.has(p.internetGateway))
            aws_cdk_lib_IResolvable(p.internetGateway);
        if (!visitedObjects.has(p.loadBalancerTarget))
            aws_cdk_lib_IResolvable(p.loadBalancerTarget);
        if (!visitedObjects.has(p.loadBalancerTargetGroup))
            aws_cdk_lib_IResolvable(p.loadBalancerTargetGroup);
        if (!visitedObjects.has(p.loadBalancerTargetGroups))
            aws_cdk_lib_IResolvable(p.loadBalancerTargetGroups);
        if (!visitedObjects.has(p.natGateway))
            aws_cdk_lib_IResolvable(p.natGateway);
        if (!visitedObjects.has(p.networkInterface))
            aws_cdk_lib_IResolvable(p.networkInterface);
        if (!visitedObjects.has(p.portRanges))
            aws_cdk_lib_IResolvable(p.portRanges);
        if (!visitedObjects.has(p.prefixList))
            aws_cdk_lib_IResolvable(p.prefixList);
        if (!visitedObjects.has(p.routeTable))
            aws_cdk_lib_IResolvable(p.routeTable);
        if (!visitedObjects.has(p.routeTableRoute))
            aws_cdk_lib_IResolvable(p.routeTableRoute);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_IResolvable(p.securityGroup);
        if (!visitedObjects.has(p.securityGroupRule))
            aws_cdk_lib_IResolvable(p.securityGroupRule);
        if (!visitedObjects.has(p.securityGroups))
            aws_cdk_lib_IResolvable(p.securityGroups);
        if (!visitedObjects.has(p.sourceVpc))
            aws_cdk_lib_IResolvable(p.sourceVpc);
        if (!visitedObjects.has(p.subnet))
            aws_cdk_lib_IResolvable(p.subnet);
        if (!visitedObjects.has(p.subnetRouteTable))
            aws_cdk_lib_IResolvable(p.subnetRouteTable);
        if (!visitedObjects.has(p.transitGateway))
            aws_cdk_lib_IResolvable(p.transitGateway);
        if (!visitedObjects.has(p.transitGatewayAttachment))
            aws_cdk_lib_IResolvable(p.transitGatewayAttachment);
        if (!visitedObjects.has(p.transitGatewayRouteTable))
            aws_cdk_lib_IResolvable(p.transitGatewayRouteTable);
        if (!visitedObjects.has(p.transitGatewayRouteTableRoute))
            aws_cdk_lib_IResolvable(p.transitGatewayRouteTableRoute);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_IResolvable(p.vpc);
        if (!visitedObjects.has(p.vpcEndpoint))
            aws_cdk_lib_IResolvable(p.vpcEndpoint);
        if (!visitedObjects.has(p.vpcPeeringConnection))
            aws_cdk_lib_IResolvable(p.vpcPeeringConnection);
        if (!visitedObjects.has(p.vpnConnection))
            aws_cdk_lib_IResolvable(p.vpnConnection);
        if (!visitedObjects.has(p.vpnGateway))
            aws_cdk_lib_IResolvable(p.vpnGateway);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_PathComponentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aclRule))
            aws_cdk_lib_IResolvable(p.aclRule);
        if (!visitedObjects.has(p.additionalDetails))
            aws_cdk_lib_IResolvable(p.additionalDetails);
        if (!visitedObjects.has(p.component))
            aws_cdk_lib_IResolvable(p.component);
        if (!visitedObjects.has(p.destinationVpc))
            aws_cdk_lib_IResolvable(p.destinationVpc);
        if (!visitedObjects.has(p.elasticLoadBalancerListener))
            aws_cdk_lib_IResolvable(p.elasticLoadBalancerListener);
        if (!visitedObjects.has(p.explanations))
            aws_cdk_lib_IResolvable(p.explanations);
        if (!visitedObjects.has(p.inboundHeader))
            aws_cdk_lib_IResolvable(p.inboundHeader);
        if (!visitedObjects.has(p.outboundHeader))
            aws_cdk_lib_IResolvable(p.outboundHeader);
        if (!visitedObjects.has(p.routeTableRoute))
            aws_cdk_lib_IResolvable(p.routeTableRoute);
        if (!visitedObjects.has(p.securityGroupRule))
            aws_cdk_lib_IResolvable(p.securityGroupRule);
        if (!visitedObjects.has(p.sourceVpc))
            aws_cdk_lib_IResolvable(p.sourceVpc);
        if (!visitedObjects.has(p.subnet))
            aws_cdk_lib_IResolvable(p.subnet);
        if (!visitedObjects.has(p.transitGateway))
            aws_cdk_lib_IResolvable(p.transitGateway);
        if (!visitedObjects.has(p.transitGatewayRouteTableRoute))
            aws_cdk_lib_IResolvable(p.transitGatewayRouteTableRoute);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_IResolvable(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_PortRangeProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_TransitGatewayRouteTableRouteProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsPathProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInsightsPath(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInterfaceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipv6Addresses))
            aws_cdk_lib_IResolvable(p.ipv6Addresses);
        if (!visitedObjects.has(p.privateIpAddresses))
            aws_cdk_lib_IResolvable(p.privateIpAddresses);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnNetworkInterface(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInterface_InstanceIpv6AddressProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInterface_PrivateIpAddressSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInterfaceAttachmentProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInterfaceAttachment(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInterfacePermissionProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkInterfacePermission(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkPerformanceMetricSubscriptionProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnNetworkPerformanceMetricSubscription(p) {
}
function aws_cdk_lib_aws_ec2_CfnPlacementGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnPlacementGroup(p) {
}
function aws_cdk_lib_aws_ec2_CfnPrefixListProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.entries))
            aws_cdk_lib_IResolvable(p.entries);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnPrefixList(p) {
}
function aws_cdk_lib_aws_ec2_CfnPrefixList_EntryProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnRouteProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnRoute(p) {
}
function aws_cdk_lib_aws_ec2_CfnRouteTableProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnRouteTable(p) {
}
function aws_cdk_lib_aws_ec2_CfnSecurityGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityGroupEgress))
            aws_cdk_lib_IResolvable(p.securityGroupEgress);
        if (!visitedObjects.has(p.securityGroupIngress))
            aws_cdk_lib_IResolvable(p.securityGroupIngress);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSecurityGroup(p) {
}
function aws_cdk_lib_aws_ec2_CfnSecurityGroup_EgressProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSecurityGroup_IngressProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSecurityGroupEgressProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnSecurityGroupEgress(p) {
}
function aws_cdk_lib_aws_ec2_CfnSecurityGroupIngressProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnSecurityGroupIngress(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spotFleetRequestConfigData))
            aws_cdk_lib_IResolvable(p.spotFleetRequestConfigData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_AcceleratorCountRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_AcceleratorTotalMemoryMiBRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_BaselineEbsBandwidthMbpsRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_BlockDeviceMappingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ebs))
            aws_cdk_lib_IResolvable(p.ebs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_ClassicLoadBalancerProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_ClassicLoadBalancersConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.classicLoadBalancers))
            aws_cdk_lib_IResolvable(p.classicLoadBalancers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_EbsBlockDeviceProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_FleetLaunchTemplateSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_GroupIdentifierProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_IamInstanceProfileSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_InstanceIpv6AddressProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_InstanceNetworkInterfaceSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipv6Addresses))
            aws_cdk_lib_IResolvable(p.ipv6Addresses);
        if (!visitedObjects.has(p.privateIpAddresses))
            aws_cdk_lib_IResolvable(p.privateIpAddresses);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_InstanceRequirementsRequestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.acceleratorCount))
            aws_cdk_lib_IResolvable(p.acceleratorCount);
        if (!visitedObjects.has(p.acceleratorTotalMemoryMiB))
            aws_cdk_lib_IResolvable(p.acceleratorTotalMemoryMiB);
        if (!visitedObjects.has(p.baselineEbsBandwidthMbps))
            aws_cdk_lib_IResolvable(p.baselineEbsBandwidthMbps);
        if (!visitedObjects.has(p.memoryGiBPerVCpu))
            aws_cdk_lib_IResolvable(p.memoryGiBPerVCpu);
        if (!visitedObjects.has(p.memoryMiB))
            aws_cdk_lib_IResolvable(p.memoryMiB);
        if (!visitedObjects.has(p.networkBandwidthGbps))
            aws_cdk_lib_IResolvable(p.networkBandwidthGbps);
        if (!visitedObjects.has(p.networkInterfaceCount))
            aws_cdk_lib_IResolvable(p.networkInterfaceCount);
        if (!visitedObjects.has(p.totalLocalStorageGb))
            aws_cdk_lib_IResolvable(p.totalLocalStorageGb);
        if (!visitedObjects.has(p.vCpuCount))
            aws_cdk_lib_IResolvable(p.vCpuCount);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_LaunchTemplateConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.launchTemplateSpecification))
            aws_cdk_lib_IResolvable(p.launchTemplateSpecification);
        if (!visitedObjects.has(p.overrides))
            aws_cdk_lib_IResolvable(p.overrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_LaunchTemplateOverridesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceRequirements))
            aws_cdk_lib_IResolvable(p.instanceRequirements);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_LoadBalancersConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.classicLoadBalancersConfig))
            aws_cdk_lib_IResolvable(p.classicLoadBalancersConfig);
        if (!visitedObjects.has(p.targetGroupsConfig))
            aws_cdk_lib_IResolvable(p.targetGroupsConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_MemoryGiBPerVCpuRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_MemoryMiBRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_NetworkBandwidthGbpsRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_NetworkInterfaceCountRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_PrivateIpAddressSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotCapacityRebalanceProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotFleetLaunchSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blockDeviceMappings))
            aws_cdk_lib_IResolvable(p.blockDeviceMappings);
        if (!visitedObjects.has(p.iamInstanceProfile))
            aws_cdk_lib_IResolvable(p.iamInstanceProfile);
        if (!visitedObjects.has(p.instanceRequirements))
            aws_cdk_lib_IResolvable(p.instanceRequirements);
        if (!visitedObjects.has(p.monitoring))
            aws_cdk_lib_IResolvable(p.monitoring);
        if (!visitedObjects.has(p.networkInterfaces))
            aws_cdk_lib_IResolvable(p.networkInterfaces);
        if (!visitedObjects.has(p.placement))
            aws_cdk_lib_IResolvable(p.placement);
        if (!visitedObjects.has(p.securityGroups))
            aws_cdk_lib_IResolvable(p.securityGroups);
        if (!visitedObjects.has(p.tagSpecifications))
            aws_cdk_lib_IResolvable(p.tagSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotFleetMonitoringProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotFleetRequestConfigDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.launchSpecifications))
            aws_cdk_lib_IResolvable(p.launchSpecifications);
        if (!visitedObjects.has(p.launchTemplateConfigs))
            aws_cdk_lib_IResolvable(p.launchTemplateConfigs);
        if (!visitedObjects.has(p.loadBalancersConfig))
            aws_cdk_lib_IResolvable(p.loadBalancersConfig);
        if (!visitedObjects.has(p.spotMaintenanceStrategies))
            aws_cdk_lib_IResolvable(p.spotMaintenanceStrategies);
        if (!visitedObjects.has(p.tagSpecifications))
            aws_cdk_lib_IResolvable(p.tagSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotFleetTagSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotMaintenanceStrategiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capacityRebalance))
            aws_cdk_lib_IResolvable(p.capacityRebalance);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotPlacementProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_TargetGroupProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_TargetGroupsConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetGroups))
            aws_cdk_lib_IResolvable(p.targetGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_TotalLocalStorageGBRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSpotFleet_VCpuCountRangeRequestProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSubnetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnSubnet(p) {
}
function aws_cdk_lib_aws_ec2_CfnSubnet_PrivateDnsNameOptionsOnLaunchProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnSubnetCidrBlockProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnSubnetCidrBlock(p) {
}
function aws_cdk_lib_aws_ec2_CfnSubnetNetworkAclAssociationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnSubnetNetworkAclAssociation(p) {
}
function aws_cdk_lib_aws_ec2_CfnSubnetRouteTableAssociationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnSubnetRouteTableAssociation(p) {
}
function aws_cdk_lib_aws_ec2_CfnTrafficMirrorFilterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnTrafficMirrorFilter(p) {
}
function aws_cdk_lib_aws_ec2_CfnTrafficMirrorFilterRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationPortRange))
            aws_cdk_lib_IResolvable(p.destinationPortRange);
        if (!visitedObjects.has(p.sourcePortRange))
            aws_cdk_lib_IResolvable(p.sourcePortRange);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnTrafficMirrorFilterRule(p) {
}
function aws_cdk_lib_aws_ec2_CfnTrafficMirrorFilterRule_TrafficMirrorPortRangeProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnTrafficMirrorSessionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnTrafficMirrorSession(p) {
}
function aws_cdk_lib_aws_ec2_CfnTrafficMirrorTargetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnTrafficMirrorTarget(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnTransitGateway(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayAttachmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayAttachment(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayAttachment_OptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayConnectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_IResolvable(p.options);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayConnect(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayConnect_TransitGatewayConnectOptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastDomainProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastDomain(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastDomain_OptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastDomainAssociationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastDomainAssociation(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastGroupMemberProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastGroupMember(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastGroupSourceProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastGroupSource(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayPeeringAttachmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayPeeringAttachment(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayPeeringAttachment_PeeringAttachmentStatusProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayRoute(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteTableProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteTable(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteTableAssociationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteTableAssociation(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteTablePropagationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteTablePropagation(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayVpcAttachmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayVpcAttachment(p) {
}
function aws_cdk_lib_aws_ec2_CfnTransitGatewayVpcAttachment_OptionsProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnVPC(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCCidrBlockProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCCidrBlock(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCDHCPOptionsAssociationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCDHCPOptionsAssociation(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCEndpointProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCEndpoint(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCEndpointConnectionNotificationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCEndpointConnectionNotification(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCEndpointServiceProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCEndpointService(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCEndpointServicePermissionsProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCEndpointServicePermissions(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCGatewayAttachmentProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCGatewayAttachment(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPCPeeringConnectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnVPCPeeringConnection(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPNConnectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.vpnTunnelOptionsSpecifications))
            aws_cdk_lib_IResolvable(p.vpnTunnelOptionsSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnVPNConnection(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPNConnection_VpnTunnelOptionsSpecificationProperty(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPNConnectionRouteProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPNConnectionRoute(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPNGatewayProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnVPNGateway(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPNGatewayRoutePropagationProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnVPNGatewayRoutePropagation(p) {
}
function aws_cdk_lib_aws_ec2_CfnVolumeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ec2_CfnVolume(p) {
}
function aws_cdk_lib_aws_ec2_CfnVolumeAttachmentProps(p) {
}
function aws_cdk_lib_aws_ec2_CfnVolumeAttachment(p) {
}
function aws_cdk_lib_aws_ecr_CfnPublicRepositoryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecr_CfnPublicRepository(p) {
}
function aws_cdk_lib_aws_ecr_CfnPublicRepository_RepositoryCatalogDataProperty(p) {
}
function aws_cdk_lib_aws_ecr_CfnPullThroughCacheRuleProps(p) {
}
function aws_cdk_lib_aws_ecr_CfnPullThroughCacheRule(p) {
}
function aws_cdk_lib_aws_ecr_CfnRegistryPolicyProps(p) {
}
function aws_cdk_lib_aws_ecr_CfnRegistryPolicy(p) {
}
function aws_cdk_lib_aws_ecr_CfnReplicationConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.replicationConfiguration))
            aws_cdk_lib_IResolvable(p.replicationConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecr_CfnReplicationConfiguration(p) {
}
function aws_cdk_lib_aws_ecr_CfnReplicationConfiguration_ReplicationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecr_CfnReplicationConfiguration_ReplicationDestinationProperty(p) {
}
function aws_cdk_lib_aws_ecr_CfnReplicationConfiguration_ReplicationRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinations))
            aws_cdk_lib_IResolvable(p.destinations);
        if (!visitedObjects.has(p.repositoryFilters))
            aws_cdk_lib_IResolvable(p.repositoryFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecr_CfnReplicationConfiguration_RepositoryFilterProperty(p) {
}
function aws_cdk_lib_aws_ecr_CfnRepositoryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionConfiguration))
            aws_cdk_lib_IResolvable(p.encryptionConfiguration);
        if (!visitedObjects.has(p.imageScanningConfiguration))
            aws_cdk_lib_IResolvable(p.imageScanningConfiguration);
        if (!visitedObjects.has(p.lifecyclePolicy))
            aws_cdk_lib_IResolvable(p.lifecyclePolicy);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecr_CfnRepository(p) {
}
function aws_cdk_lib_aws_ecr_CfnRepository_EncryptionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ecr_CfnRepository_ImageScanningConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ecr_CfnRepository_LifecyclePolicyProperty(p) {
}
function aws_cdk_lib_aws_ecr_IRepository(p) {
}
function aws_cdk_lib_aws_ecr_RepositoryBase(p) {
}
function aws_cdk_lib_aws_ecr_OnCloudTrailImagePushedOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_events_IRuleTarget(p.target);
        if (!visitedObjects.has(p.eventPattern))
            aws_cdk_lib_aws_events_EventPattern(p.eventPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecr_OnImageScanCompletedOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_events_IRuleTarget(p.target);
        if (!visitedObjects.has(p.eventPattern))
            aws_cdk_lib_aws_events_EventPattern(p.eventPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecr_RepositoryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_aws_ecr_RepositoryEncryption(p.encryption);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.imageTagMutability))
            aws_cdk_lib_aws_ecr_TagMutability(p.imageTagMutability);
        if (p.lifecycleRules != null)
            for (const o of p.lifecycleRules)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecr_LifecycleRule(o);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecr_RepositoryAttributes(p) {
}
function aws_cdk_lib_aws_ecr_Repository(p) {
}
function aws_cdk_lib_aws_ecr_TagMutability(p) {
}
function aws_cdk_lib_aws_ecr_RepositoryEncryption(p) {
}
function aws_cdk_lib_aws_ecr_LifecycleRule(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxImageAge))
            aws_cdk_lib_Duration(p.maxImageAge);
        if (!visitedObjects.has(p.tagStatus))
            aws_cdk_lib_aws_ecr_TagStatus(p.tagStatus);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecr_TagStatus(p) {
}
function aws_cdk_lib_aws_ecr_AuthorizationToken(p) {
}
function aws_cdk_lib_aws_ecr_PublicGalleryAuthorizationToken(p) {
}
function aws_cdk_lib_aws_ecr_assets_NetworkMode(p) {
}
function aws_cdk_lib_aws_ecr_assets_Platform(p) {
}
function aws_cdk_lib_aws_ecr_assets_DockerImageAssetInvalidationOptions(p) {
}
function aws_cdk_lib_aws_ecr_assets_DockerCacheOption(p) {
}
function aws_cdk_lib_aws_ecr_assets_DockerImageAssetOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.cacheFrom != null)
            for (const o of p.cacheFrom)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecr_assets_DockerCacheOption(o);
        if (!visitedObjects.has(p.cacheTo))
            aws_cdk_lib_aws_ecr_assets_DockerCacheOption(p.cacheTo);
        if (!visitedObjects.has(p.invalidation))
            aws_cdk_lib_aws_ecr_assets_DockerImageAssetInvalidationOptions(p.invalidation);
        if (!visitedObjects.has(p.networkMode))
            aws_cdk_lib_aws_ecr_assets_NetworkMode(p.networkMode);
        if (!visitedObjects.has(p.platform))
            aws_cdk_lib_aws_ecr_assets_Platform(p.platform);
        if (!visitedObjects.has(p.followSymlinks))
            aws_cdk_lib_SymlinkFollowMode(p.followSymlinks);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecr_assets_DockerImageAssetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.cacheFrom != null)
            for (const o of p.cacheFrom)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecr_assets_DockerCacheOption(o);
        if (!visitedObjects.has(p.cacheTo))
            aws_cdk_lib_aws_ecr_assets_DockerCacheOption(p.cacheTo);
        if (!visitedObjects.has(p.invalidation))
            aws_cdk_lib_aws_ecr_assets_DockerImageAssetInvalidationOptions(p.invalidation);
        if (!visitedObjects.has(p.networkMode))
            aws_cdk_lib_aws_ecr_assets_NetworkMode(p.networkMode);
        if (!visitedObjects.has(p.platform))
            aws_cdk_lib_aws_ecr_assets_Platform(p.platform);
        if (!visitedObjects.has(p.followSymlinks))
            aws_cdk_lib_SymlinkFollowMode(p.followSymlinks);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecr_assets_DockerImageAsset(p) {
}
function aws_cdk_lib_aws_ecr_assets_TarballImageAssetProps(p) {
}
function aws_cdk_lib_aws_ecr_assets_TarballImageAsset(p) {
}
function aws_cdk_lib_aws_ecs_IService(p) {
}
function aws_cdk_lib_aws_ecs_DeploymentController(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_ecs_DeploymentControllerType(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p) {
}
function aws_cdk_lib_aws_ecs_EcsTarget(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listener))
            aws_cdk_lib_aws_ecs_ListenerConfig(p.listener);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_ecs_Protocol(p.protocol);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_IEcsLoadBalancerTarget(p) {
}
function aws_cdk_lib_aws_ecs_ServiceConnectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logDriver))
            aws_cdk_lib_aws_ecs_LogDriver(p.logDriver);
        if (p.services != null)
            for (const o of p.services)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_ServiceConnectService(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_ServiceConnectService(p) {
}
function aws_cdk_lib_aws_ecs_BaseServiceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.serviceConnectConfiguration))
            aws_cdk_lib_aws_ecs_ServiceConnectProps(p.serviceConnectConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_BaseServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.launchType))
            aws_cdk_lib_aws_ecs_LaunchType(p.launchType);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.serviceConnectConfiguration))
            aws_cdk_lib_aws_ecs_ServiceConnectProps(p.serviceConnectConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_ListenerConfig(p) {
}
function aws_cdk_lib_aws_ecs_IBaseService(p) {
}
function aws_cdk_lib_aws_ecs_BaseService(p) {
}
function aws_cdk_lib_aws_ecs_CloudMapOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudMapNamespace))
            aws_cdk_lib_aws_servicediscovery_INamespace(p.cloudMapNamespace);
        if (!visitedObjects.has(p.container))
            aws_cdk_lib_aws_ecs_ContainerDefinition(p.container);
        if (!visitedObjects.has(p.dnsRecordType))
            aws_cdk_lib_aws_servicediscovery_DnsRecordType(p.dnsRecordType);
        if (!visitedObjects.has(p.dnsTtl))
            aws_cdk_lib_Duration(p.dnsTtl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_AssociateCloudMapServiceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.service))
            aws_cdk_lib_aws_servicediscovery_IService(p.service);
        if (!visitedObjects.has(p.container))
            aws_cdk_lib_aws_ecs_ContainerDefinition(p.container);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_LaunchType(p) {
}
function aws_cdk_lib_aws_ecs_DeploymentControllerType(p) {
}
function aws_cdk_lib_aws_ecs_PropagatedTagSource(p) {
}
function aws_cdk_lib_aws_ecs_ScalableTaskCountProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.serviceNamespace))
            aws_cdk_lib_aws_applicationautoscaling_ServiceNamespace(p.serviceNamespace);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_ScalableTaskCount(p) {
}
function aws_cdk_lib_aws_ecs_CpuUtilizationScalingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scaleInCooldown))
            aws_cdk_lib_Duration(p.scaleInCooldown);
        if (!visitedObjects.has(p.scaleOutCooldown))
            aws_cdk_lib_Duration(p.scaleOutCooldown);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_MemoryUtilizationScalingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scaleInCooldown))
            aws_cdk_lib_Duration(p.scaleInCooldown);
        if (!visitedObjects.has(p.scaleOutCooldown))
            aws_cdk_lib_Duration(p.scaleOutCooldown);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_RequestCountScalingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetGroup))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationTargetGroup(p.targetGroup);
        if (!visitedObjects.has(p.scaleInCooldown))
            aws_cdk_lib_Duration(p.scaleInCooldown);
        if (!visitedObjects.has(p.scaleOutCooldown))
            aws_cdk_lib_Duration(p.scaleOutCooldown);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_TrackCustomMetricProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metric))
            aws_cdk_lib_aws_cloudwatch_IMetric(p.metric);
        if (!visitedObjects.has(p.scaleInCooldown))
            aws_cdk_lib_Duration(p.scaleInCooldown);
        if (!visitedObjects.has(p.scaleOutCooldown))
            aws_cdk_lib_Duration(p.scaleOutCooldown);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_ITaskDefinition(p) {
}
function aws_cdk_lib_aws_ecs_CommonTaskDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.executionRole))
            aws_cdk_lib_aws_iam_IRole(p.executionRole);
        if (!visitedObjects.has(p.proxyConfiguration))
            aws_cdk_lib_aws_ecs_ProxyConfiguration(p.proxyConfiguration);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
        if (p.volumes != null)
            for (const o of p.volumes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Volume(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_TaskDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.compatibility))
            aws_cdk_lib_aws_ecs_Compatibility(p.compatibility);
        if (p.inferenceAccelerators != null)
            for (const o of p.inferenceAccelerators)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_InferenceAccelerator(o);
        if (!visitedObjects.has(p.ipcMode))
            aws_cdk_lib_aws_ecs_IpcMode(p.ipcMode);
        if (!visitedObjects.has(p.networkMode))
            aws_cdk_lib_aws_ecs_NetworkMode(p.networkMode);
        if (!visitedObjects.has(p.pidMode))
            aws_cdk_lib_aws_ecs_PidMode(p.pidMode);
        if (p.placementConstraints != null)
            for (const o of p.placementConstraints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementConstraint(o);
        if (!visitedObjects.has(p.runtimePlatform))
            aws_cdk_lib_aws_ecs_RuntimePlatform(p.runtimePlatform);
        if (!visitedObjects.has(p.executionRole))
            aws_cdk_lib_aws_iam_IRole(p.executionRole);
        if (!visitedObjects.has(p.proxyConfiguration))
            aws_cdk_lib_aws_ecs_ProxyConfiguration(p.proxyConfiguration);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
        if (p.volumes != null)
            for (const o of p.volumes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Volume(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CommonTaskDefinitionAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.networkMode))
            aws_cdk_lib_aws_ecs_NetworkMode(p.networkMode);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_TaskDefinitionAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.compatibility))
            aws_cdk_lib_aws_ecs_Compatibility(p.compatibility);
        if (!visitedObjects.has(p.networkMode))
            aws_cdk_lib_aws_ecs_NetworkMode(p.networkMode);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_TaskDefinition(p) {
}
function aws_cdk_lib_aws_ecs_NetworkMode(p) {
}
function aws_cdk_lib_aws_ecs_IpcMode(p) {
}
function aws_cdk_lib_aws_ecs_PidMode(p) {
}
function aws_cdk_lib_aws_ecs_InferenceAccelerator(p) {
}
function aws_cdk_lib_aws_ecs_Volume(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dockerVolumeConfiguration))
            aws_cdk_lib_aws_ecs_DockerVolumeConfiguration(p.dockerVolumeConfiguration);
        if (!visitedObjects.has(p.efsVolumeConfiguration))
            aws_cdk_lib_aws_ecs_EfsVolumeConfiguration(p.efsVolumeConfiguration);
        if (!visitedObjects.has(p.host))
            aws_cdk_lib_aws_ecs_Host(p.host);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_Host(p) {
}
function aws_cdk_lib_aws_ecs_LoadBalancerTargetOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_ecs_Protocol(p.protocol);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_DockerVolumeConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scope))
            aws_cdk_lib_aws_ecs_Scope(p.scope);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_AuthorizationConfig(p) {
}
function aws_cdk_lib_aws_ecs_EfsVolumeConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authorizationConfig))
            aws_cdk_lib_aws_ecs_AuthorizationConfig(p.authorizationConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_Scope(p) {
}
function aws_cdk_lib_aws_ecs_Compatibility(p) {
}
function aws_cdk_lib_aws_ecs_ITaskDefinitionExtension(p) {
}
function aws_cdk_lib_aws_ecs_SecretVersionInfo(p) {
}
function aws_cdk_lib_aws_ecs_Secret(p) {
}
function aws_cdk_lib_aws_ecs_ContainerDefinitionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (p.environmentFiles != null)
            for (const o of p.environmentFiles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_EnvironmentFile(o);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_ecs_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.linuxParameters))
            aws_cdk_lib_aws_ecs_LinuxParameters(p.linuxParameters);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_aws_ecs_LogDriver(p.logging);
        if (p.portMappings != null)
            for (const o of p.portMappings)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PortMapping(o);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
        if (!visitedObjects.has(p.startTimeout))
            aws_cdk_lib_Duration(p.startTimeout);
        if (!visitedObjects.has(p.stopTimeout))
            aws_cdk_lib_Duration(p.stopTimeout);
        if (p.systemControls != null)
            for (const o of p.systemControls)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_SystemControl(o);
        if (p.ulimits != null)
            for (const o of p.ulimits)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Ulimit(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_ContainerDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_TaskDefinition(p.taskDefinition);
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (p.environmentFiles != null)
            for (const o of p.environmentFiles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_EnvironmentFile(o);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_ecs_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.linuxParameters))
            aws_cdk_lib_aws_ecs_LinuxParameters(p.linuxParameters);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_aws_ecs_LogDriver(p.logging);
        if (p.portMappings != null)
            for (const o of p.portMappings)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PortMapping(o);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
        if (!visitedObjects.has(p.startTimeout))
            aws_cdk_lib_Duration(p.startTimeout);
        if (!visitedObjects.has(p.stopTimeout))
            aws_cdk_lib_Duration(p.stopTimeout);
        if (p.systemControls != null)
            for (const o of p.systemControls)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_SystemControl(o);
        if (p.ulimits != null)
            for (const o of p.ulimits)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Ulimit(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_ContainerDefinition(p) {
}
function aws_cdk_lib_aws_ecs_HealthCheck(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_Duration(p.interval);
        if (!visitedObjects.has(p.startPeriod))
            aws_cdk_lib_Duration(p.startPeriod);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_Ulimit(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.name))
            aws_cdk_lib_aws_ecs_UlimitName(p.name);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_UlimitName(p) {
}
function aws_cdk_lib_aws_ecs_ContainerDependency(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.container))
            aws_cdk_lib_aws_ecs_ContainerDefinition(p.container);
        if (!visitedObjects.has(p.condition))
            aws_cdk_lib_aws_ecs_ContainerDependencyCondition(p.condition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_ContainerDependencyCondition(p) {
}
function aws_cdk_lib_aws_ecs_PortMapping(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.appProtocol))
            aws_cdk_lib_aws_ecs_AppProtocol(p.appProtocol);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_ecs_Protocol(p.protocol);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_PortMap(p) {
}
function aws_cdk_lib_aws_ecs_ServiceConnect(p) {
}
function aws_cdk_lib_aws_ecs_Protocol(p) {
}
function aws_cdk_lib_aws_ecs_AppProtocol(p) {
}
function aws_cdk_lib_aws_ecs_ScratchSpace(p) {
}
function aws_cdk_lib_aws_ecs_MountPoint(p) {
}
function aws_cdk_lib_aws_ecs_VolumeFrom(p) {
}
function aws_cdk_lib_aws_ecs_SystemControl(p) {
}
function aws_cdk_lib_aws_ecs_ContainerImage(p) {
}
function aws_cdk_lib_aws_ecs_ContainerImageConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.repositoryCredentials))
            aws_cdk_lib_aws_ecs_CfnTaskDefinition_RepositoryCredentialsProperty(p.repositoryCredentials);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_AmiHardwareType(p) {
}
function aws_cdk_lib_aws_ecs_WindowsOptimizedVersion(p) {
}
function aws_cdk_lib_aws_ecs_EcsOptimizedImageOptions(p) {
}
function aws_cdk_lib_aws_ecs_EcsOptimizedImage(p) {
}
function aws_cdk_lib_aws_ecs_BottlerocketEcsVariant(p) {
}
function aws_cdk_lib_aws_ecs_BottleRocketImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.architecture))
            aws_cdk_lib_aws_ec2_InstanceArchitecture(p.architecture);
        if (!visitedObjects.has(p.variant))
            aws_cdk_lib_aws_ecs_BottlerocketEcsVariant(p.variant);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_BottleRocketImage(p) {
}
function aws_cdk_lib_aws_ecs_ClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capacity))
            aws_cdk_lib_aws_ecs_AddCapacityOptions(p.capacity);
        if (!visitedObjects.has(p.defaultCloudMapNamespace))
            aws_cdk_lib_aws_ecs_CloudMapNamespaceOptions(p.defaultCloudMapNamespace);
        if (!visitedObjects.has(p.executeCommandConfiguration))
            aws_cdk_lib_aws_ecs_ExecuteCommandConfiguration(p.executeCommandConfiguration);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_MachineImageType(p) {
}
function aws_cdk_lib_aws_ecs_Cluster(p) {
}
function aws_cdk_lib_aws_ecs_ICluster(p) {
}
function aws_cdk_lib_aws_ecs_ClusterAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.autoscalingGroup))
            aws_cdk_lib_aws_autoscaling_IAutoScalingGroup(p.autoscalingGroup);
        if (!visitedObjects.has(p.defaultCloudMapNamespace))
            aws_cdk_lib_aws_servicediscovery_INamespace(p.defaultCloudMapNamespace);
        if (!visitedObjects.has(p.executeCommandConfiguration))
            aws_cdk_lib_aws_ecs_ExecuteCommandConfiguration(p.executeCommandConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_AddAutoScalingGroupCapacityOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.machineImageType))
            aws_cdk_lib_aws_ecs_MachineImageType(p.machineImageType);
        if (!visitedObjects.has(p.topicEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.topicEncryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_AddCapacityOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.machineImage))
            aws_cdk_lib_aws_ec2_IMachineImage(p.machineImage);
        if (!visitedObjects.has(p.machineImageType))
            aws_cdk_lib_aws_ecs_MachineImageType(p.machineImageType);
        if (!visitedObjects.has(p.topicEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.topicEncryptionKey);
        if (p.blockDevices != null)
            for (const o of p.blockDevices)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_BlockDevice(o);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.defaultInstanceWarmup))
            aws_cdk_lib_Duration(p.defaultInstanceWarmup);
        if (p.groupMetrics != null)
            for (const o of p.groupMetrics)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_GroupMetrics(o);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_autoscaling_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.instanceMonitoring))
            aws_cdk_lib_aws_autoscaling_Monitoring(p.instanceMonitoring);
        if (!visitedObjects.has(p.maxInstanceLifetime))
            aws_cdk_lib_Duration(p.maxInstanceLifetime);
        if (p.notifications != null)
            for (const o of p.notifications)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_NotificationConfiguration(o);
        if (!visitedObjects.has(p.signals))
            aws_cdk_lib_aws_autoscaling_Signals(p.signals);
        if (p.terminationPolicies != null)
            for (const o of p.terminationPolicies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_TerminationPolicy(o);
        if (!visitedObjects.has(p.updatePolicy))
            aws_cdk_lib_aws_autoscaling_UpdatePolicy(p.updatePolicy);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CloudMapNamespaceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_servicediscovery_NamespaceType(p.type);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CapacityProviderStrategy(p) {
}
function aws_cdk_lib_aws_ecs_ExecuteCommandConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kmsKey))
            aws_cdk_lib_aws_kms_IKey(p.kmsKey);
        if (!visitedObjects.has(p.logConfiguration))
            aws_cdk_lib_aws_ecs_ExecuteCommandLogConfiguration(p.logConfiguration);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_aws_ecs_ExecuteCommandLogging(p.logging);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_ExecuteCommandLogging(p) {
}
function aws_cdk_lib_aws_ecs_ExecuteCommandLogConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchLogGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.cloudWatchLogGroup);
        if (!visitedObjects.has(p.s3Bucket))
            aws_cdk_lib_aws_s3_IBucket(p.s3Bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_AsgCapacityProviderProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScalingGroup))
            aws_cdk_lib_aws_autoscaling_IAutoScalingGroup(p.autoScalingGroup);
        if (!visitedObjects.has(p.machineImageType))
            aws_cdk_lib_aws_ecs_MachineImageType(p.machineImageType);
        if (!visitedObjects.has(p.topicEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.topicEncryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_AsgCapacityProvider(p) {
}
function aws_cdk_lib_aws_ecs_EnvironmentFile(p) {
}
function aws_cdk_lib_aws_ecs_AssetEnvironmentFile(p) {
}
function aws_cdk_lib_aws_ecs_S3EnvironmentFile(p) {
}
function aws_cdk_lib_aws_ecs_EnvironmentFileConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fileType))
            aws_cdk_lib_aws_ecs_EnvironmentFileType(p.fileType);
        if (!visitedObjects.has(p.s3Location))
            aws_cdk_lib_aws_s3_Location(p.s3Location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_EnvironmentFileType(p) {
}
function aws_cdk_lib_aws_ecs_FirelensLogRouterType(p) {
}
function aws_cdk_lib_aws_ecs_FirelensConfigFileType(p) {
}
function aws_cdk_lib_aws_ecs_FirelensOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configFileType))
            aws_cdk_lib_aws_ecs_FirelensConfigFileType(p.configFileType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_FirelensConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_ecs_FirelensLogRouterType(p.type);
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_aws_ecs_FirelensOptions(p.options);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_FirelensLogRouterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.firelensConfig))
            aws_cdk_lib_aws_ecs_FirelensConfig(p.firelensConfig);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_TaskDefinition(p.taskDefinition);
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (p.environmentFiles != null)
            for (const o of p.environmentFiles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_EnvironmentFile(o);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_ecs_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.linuxParameters))
            aws_cdk_lib_aws_ecs_LinuxParameters(p.linuxParameters);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_aws_ecs_LogDriver(p.logging);
        if (p.portMappings != null)
            for (const o of p.portMappings)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PortMapping(o);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
        if (!visitedObjects.has(p.startTimeout))
            aws_cdk_lib_Duration(p.startTimeout);
        if (!visitedObjects.has(p.stopTimeout))
            aws_cdk_lib_Duration(p.stopTimeout);
        if (p.systemControls != null)
            for (const o of p.systemControls)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_SystemControl(o);
        if (p.ulimits != null)
            for (const o of p.ulimits)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Ulimit(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_FirelensLogRouterDefinitionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.firelensConfig))
            aws_cdk_lib_aws_ecs_FirelensConfig(p.firelensConfig);
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (p.environmentFiles != null)
            for (const o of p.environmentFiles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_EnvironmentFile(o);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_ecs_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.linuxParameters))
            aws_cdk_lib_aws_ecs_LinuxParameters(p.linuxParameters);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_aws_ecs_LogDriver(p.logging);
        if (p.portMappings != null)
            for (const o of p.portMappings)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PortMapping(o);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
        if (!visitedObjects.has(p.startTimeout))
            aws_cdk_lib_Duration(p.startTimeout);
        if (!visitedObjects.has(p.stopTimeout))
            aws_cdk_lib_Duration(p.stopTimeout);
        if (p.systemControls != null)
            for (const o of p.systemControls)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_SystemControl(o);
        if (p.ulimits != null)
            for (const o of p.ulimits)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Ulimit(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_FirelensLogRouter(p) {
}
function aws_cdk_lib_aws_ecs_BinPackResource(p) {
}
function aws_cdk_lib_aws_ecs_PlacementStrategy(p) {
}
function aws_cdk_lib_aws_ecs_PlacementConstraint(p) {
}
function aws_cdk_lib_aws_ecs_Ec2ServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_TaskDefinition(p.taskDefinition);
        if (p.placementConstraints != null)
            for (const o of p.placementConstraints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementConstraint(o);
        if (p.placementStrategies != null)
            for (const o of p.placementStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementStrategy(o);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.serviceConnectConfiguration))
            aws_cdk_lib_aws_ecs_ServiceConnectProps(p.serviceConnectConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_IEc2Service(p) {
}
function aws_cdk_lib_aws_ecs_Ec2ServiceAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_Ec2Service(p) {
}
function aws_cdk_lib_aws_ecs_BuiltInAttributes(p) {
}
function aws_cdk_lib_aws_ecs_Ec2TaskDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.inferenceAccelerators != null)
            for (const o of p.inferenceAccelerators)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_InferenceAccelerator(o);
        if (!visitedObjects.has(p.ipcMode))
            aws_cdk_lib_aws_ecs_IpcMode(p.ipcMode);
        if (!visitedObjects.has(p.networkMode))
            aws_cdk_lib_aws_ecs_NetworkMode(p.networkMode);
        if (!visitedObjects.has(p.pidMode))
            aws_cdk_lib_aws_ecs_PidMode(p.pidMode);
        if (p.placementConstraints != null)
            for (const o of p.placementConstraints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementConstraint(o);
        if (!visitedObjects.has(p.executionRole))
            aws_cdk_lib_aws_iam_IRole(p.executionRole);
        if (!visitedObjects.has(p.proxyConfiguration))
            aws_cdk_lib_aws_ecs_ProxyConfiguration(p.proxyConfiguration);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
        if (p.volumes != null)
            for (const o of p.volumes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Volume(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_IEc2TaskDefinition(p) {
}
function aws_cdk_lib_aws_ecs_Ec2TaskDefinitionAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.networkMode))
            aws_cdk_lib_aws_ecs_NetworkMode(p.networkMode);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_Ec2TaskDefinition(p) {
}
function aws_cdk_lib_aws_ecs_FargateServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_TaskDefinition(p.taskDefinition);
        if (!visitedObjects.has(p.platformVersion))
            aws_cdk_lib_aws_ecs_FargatePlatformVersion(p.platformVersion);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.serviceConnectConfiguration))
            aws_cdk_lib_aws_ecs_ServiceConnectProps(p.serviceConnectConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_IFargateService(p) {
}
function aws_cdk_lib_aws_ecs_FargateServiceAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_FargateService(p) {
}
function aws_cdk_lib_aws_ecs_FargatePlatformVersion(p) {
}
function aws_cdk_lib_aws_ecs_FargateTaskDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.runtimePlatform))
            aws_cdk_lib_aws_ecs_RuntimePlatform(p.runtimePlatform);
        if (!visitedObjects.has(p.executionRole))
            aws_cdk_lib_aws_iam_IRole(p.executionRole);
        if (!visitedObjects.has(p.proxyConfiguration))
            aws_cdk_lib_aws_ecs_ProxyConfiguration(p.proxyConfiguration);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
        if (p.volumes != null)
            for (const o of p.volumes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Volume(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_IFargateTaskDefinition(p) {
}
function aws_cdk_lib_aws_ecs_FargateTaskDefinitionAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.networkMode))
            aws_cdk_lib_aws_ecs_NetworkMode(p.networkMode);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_FargateTaskDefinition(p) {
}
function aws_cdk_lib_aws_ecs_ExternalServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_TaskDefinition(p.taskDefinition);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.serviceConnectConfiguration))
            aws_cdk_lib_aws_ecs_ServiceConnectProps(p.serviceConnectConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_IExternalService(p) {
}
function aws_cdk_lib_aws_ecs_ExternalServiceAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_ExternalService(p) {
}
function aws_cdk_lib_aws_ecs_ExternalTaskDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.networkMode))
            aws_cdk_lib_aws_ecs_NetworkMode(p.networkMode);
        if (!visitedObjects.has(p.executionRole))
            aws_cdk_lib_aws_iam_IRole(p.executionRole);
        if (!visitedObjects.has(p.proxyConfiguration))
            aws_cdk_lib_aws_ecs_ProxyConfiguration(p.proxyConfiguration);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
        if (p.volumes != null)
            for (const o of p.volumes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Volume(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_IExternalTaskDefinition(p) {
}
function aws_cdk_lib_aws_ecs_ExternalTaskDefinitionAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.networkMode))
            aws_cdk_lib_aws_ecs_NetworkMode(p.networkMode);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_ExternalTaskDefinition(p) {
}
function aws_cdk_lib_aws_ecs_LinuxParametersProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxSwap))
            aws_cdk_lib_Size(p.maxSwap);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_LinuxParameters(p) {
}
function aws_cdk_lib_aws_ecs_Device(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.permissions != null)
            for (const o of p.permissions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_DevicePermission(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_Tmpfs(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.mountOptions != null)
            for (const o of p.mountOptions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_TmpfsMountOption(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_Capability(p) {
}
function aws_cdk_lib_aws_ecs_DevicePermission(p) {
}
function aws_cdk_lib_aws_ecs_TmpfsMountOption(p) {
}
function aws_cdk_lib_aws_ecs_AssetImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.cacheFrom != null)
            for (const o of p.cacheFrom)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecr_assets_DockerCacheOption(o);
        if (!visitedObjects.has(p.cacheTo))
            aws_cdk_lib_aws_ecr_assets_DockerCacheOption(p.cacheTo);
        if (!visitedObjects.has(p.invalidation))
            aws_cdk_lib_aws_ecr_assets_DockerImageAssetInvalidationOptions(p.invalidation);
        if (!visitedObjects.has(p.networkMode))
            aws_cdk_lib_aws_ecr_assets_NetworkMode(p.networkMode);
        if (!visitedObjects.has(p.platform))
            aws_cdk_lib_aws_ecr_assets_Platform(p.platform);
        if (!visitedObjects.has(p.followSymlinks))
            aws_cdk_lib_SymlinkFollowMode(p.followSymlinks);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_AssetImage(p) {
}
function aws_cdk_lib_aws_ecs_RepositoryImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.credentials);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_RepositoryImage(p) {
}
function aws_cdk_lib_aws_ecs_EcrImage(p) {
}
function aws_cdk_lib_aws_ecs_TagParameterContainerImage(p) {
}
function aws_cdk_lib_aws_ecs_AwsLogDriverMode(p) {
}
function aws_cdk_lib_aws_ecs_AwsLogDriverProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.logGroup);
        if (!visitedObjects.has(p.logRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.logRetention);
        if (!visitedObjects.has(p.mode))
            aws_cdk_lib_aws_ecs_AwsLogDriverMode(p.mode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_AwsLogDriver(p) {
}
function aws_cdk_lib_aws_ecs_BaseLogDriverProps(p) {
}
function aws_cdk_lib_aws_ecs_FireLensLogDriverProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.secretOptions != null)
            for (const o of Object.values(p.secretOptions))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_FireLensLogDriver(p) {
}
function aws_cdk_lib_aws_ecs_FluentdLogDriverProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.retryWait))
            aws_cdk_lib_Duration(p.retryWait);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_FluentdLogDriver(p) {
}
function aws_cdk_lib_aws_ecs_GelfCompressionType(p) {
}
function aws_cdk_lib_aws_ecs_GelfLogDriverProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.compressionType))
            aws_cdk_lib_aws_ecs_GelfCompressionType(p.compressionType);
        if (!visitedObjects.has(p.tcpReconnectDelay))
            aws_cdk_lib_Duration(p.tcpReconnectDelay);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_GelfLogDriver(p) {
}
function aws_cdk_lib_aws_ecs_JournaldLogDriverProps(p) {
}
function aws_cdk_lib_aws_ecs_JournaldLogDriver(p) {
}
function aws_cdk_lib_aws_ecs_JsonFileLogDriverProps(p) {
}
function aws_cdk_lib_aws_ecs_JsonFileLogDriver(p) {
}
function aws_cdk_lib_aws_ecs_SplunkLogFormat(p) {
}
function aws_cdk_lib_aws_ecs_SplunkLogDriverProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secretToken))
            aws_cdk_lib_aws_ecs_Secret(p.secretToken);
        if (!visitedObjects.has(p.format))
            aws_cdk_lib_aws_ecs_SplunkLogFormat(p.format);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_SplunkLogDriver(p) {
}
function aws_cdk_lib_aws_ecs_SyslogLogDriverProps(p) {
}
function aws_cdk_lib_aws_ecs_SyslogLogDriver(p) {
}
function aws_cdk_lib_aws_ecs_LogDriver(p) {
}
function aws_cdk_lib_aws_ecs_LogDriverConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.secretOptions != null)
            for (const o of p.secretOptions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CfnTaskDefinition_SecretProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_GenericLogDriverProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.secretOptions != null)
            for (const o of Object.values(p.secretOptions))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_GenericLogDriver(p) {
}
function aws_cdk_lib_aws_ecs_LogDrivers(p) {
}
function aws_cdk_lib_aws_ecs_AppMeshProxyConfigurationProps(p) {
}
function aws_cdk_lib_aws_ecs_AppMeshProxyConfigurationConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.properties))
            aws_cdk_lib_aws_ecs_AppMeshProxyConfigurationProps(p.properties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_AppMeshProxyConfiguration(p) {
}
function aws_cdk_lib_aws_ecs_ProxyConfiguration(p) {
}
function aws_cdk_lib_aws_ecs_ProxyConfigurations(p) {
}
function aws_cdk_lib_aws_ecs_CpuArchitecture(p) {
}
function aws_cdk_lib_aws_ecs_OperatingSystemFamily(p) {
}
function aws_cdk_lib_aws_ecs_RuntimePlatform(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cpuArchitecture))
            aws_cdk_lib_aws_ecs_CpuArchitecture(p.cpuArchitecture);
        if (!visitedObjects.has(p.operatingSystemFamily))
            aws_cdk_lib_aws_ecs_OperatingSystemFamily(p.operatingSystemFamily);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnCapacityProviderProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScalingGroupProvider))
            aws_cdk_lib_IResolvable(p.autoScalingGroupProvider);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnCapacityProvider(p) {
}
function aws_cdk_lib_aws_ecs_CfnCapacityProvider_AutoScalingGroupProviderProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.managedScaling))
            aws_cdk_lib_IResolvable(p.managedScaling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnCapacityProvider_ManagedScalingProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterSettings))
            aws_cdk_lib_IResolvable(p.clusterSettings);
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
        if (!visitedObjects.has(p.defaultCapacityProviderStrategy))
            aws_cdk_lib_IResolvable(p.defaultCapacityProviderStrategy);
        if (!visitedObjects.has(p.serviceConnectDefaults))
            aws_cdk_lib_IResolvable(p.serviceConnectDefaults);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnCluster(p) {
}
function aws_cdk_lib_aws_ecs_CfnCluster_CapacityProviderStrategyItemProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnCluster_ClusterConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.executeCommandConfiguration))
            aws_cdk_lib_IResolvable(p.executeCommandConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnCluster_ClusterSettingsProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnCluster_ExecuteCommandConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logConfiguration))
            aws_cdk_lib_IResolvable(p.logConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnCluster_ExecuteCommandLogConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnCluster_ServiceConnectDefaultsProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnClusterCapacityProviderAssociationsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultCapacityProviderStrategy))
            aws_cdk_lib_IResolvable(p.defaultCapacityProviderStrategy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnClusterCapacityProviderAssociations(p) {
}
function aws_cdk_lib_aws_ecs_CfnClusterCapacityProviderAssociations_CapacityProviderStrategyProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnPrimaryTaskSetProps(p) {
}
function aws_cdk_lib_aws_ecs_CfnPrimaryTaskSet(p) {
}
function aws_cdk_lib_aws_ecs_CfnServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capacityProviderStrategy))
            aws_cdk_lib_IResolvable(p.capacityProviderStrategy);
        if (!visitedObjects.has(p.deploymentConfiguration))
            aws_cdk_lib_IResolvable(p.deploymentConfiguration);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_IResolvable(p.deploymentController);
        if (!visitedObjects.has(p.loadBalancers))
            aws_cdk_lib_IResolvable(p.loadBalancers);
        if (!visitedObjects.has(p.networkConfiguration))
            aws_cdk_lib_IResolvable(p.networkConfiguration);
        if (!visitedObjects.has(p.placementConstraints))
            aws_cdk_lib_IResolvable(p.placementConstraints);
        if (!visitedObjects.has(p.placementStrategies))
            aws_cdk_lib_IResolvable(p.placementStrategies);
        if (!visitedObjects.has(p.serviceConnectConfiguration))
            aws_cdk_lib_IResolvable(p.serviceConnectConfiguration);
        if (!visitedObjects.has(p.serviceRegistries))
            aws_cdk_lib_IResolvable(p.serviceRegistries);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnService(p) {
}
function aws_cdk_lib_aws_ecs_CfnService_AwsVpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnService_CapacityProviderStrategyItemProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnService_DeploymentAlarmsProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnService_DeploymentCircuitBreakerProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnService_DeploymentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alarms))
            aws_cdk_lib_IResolvable(p.alarms);
        if (!visitedObjects.has(p.deploymentCircuitBreaker))
            aws_cdk_lib_IResolvable(p.deploymentCircuitBreaker);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnService_DeploymentControllerProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnService_LoadBalancerProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnService_LogConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_IResolvable(p.options);
        if (!visitedObjects.has(p.secretOptions))
            aws_cdk_lib_IResolvable(p.secretOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnService_NetworkConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awsvpcConfiguration))
            aws_cdk_lib_IResolvable(p.awsvpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnService_PlacementConstraintProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnService_PlacementStrategyProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnService_SecretProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnService_ServiceConnectClientAliasProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnService_ServiceConnectConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logConfiguration))
            aws_cdk_lib_IResolvable(p.logConfiguration);
        if (!visitedObjects.has(p.services))
            aws_cdk_lib_IResolvable(p.services);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnService_ServiceConnectServiceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientAliases))
            aws_cdk_lib_IResolvable(p.clientAliases);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnService_ServiceRegistryProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containerDefinitions))
            aws_cdk_lib_IResolvable(p.containerDefinitions);
        if (!visitedObjects.has(p.ephemeralStorage))
            aws_cdk_lib_IResolvable(p.ephemeralStorage);
        if (!visitedObjects.has(p.inferenceAccelerators))
            aws_cdk_lib_IResolvable(p.inferenceAccelerators);
        if (!visitedObjects.has(p.placementConstraints))
            aws_cdk_lib_IResolvable(p.placementConstraints);
        if (!visitedObjects.has(p.proxyConfiguration))
            aws_cdk_lib_IResolvable(p.proxyConfiguration);
        if (!visitedObjects.has(p.runtimePlatform))
            aws_cdk_lib_IResolvable(p.runtimePlatform);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.volumes))
            aws_cdk_lib_IResolvable(p.volumes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_AuthorizationConfigProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_ContainerDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dependsOn))
            aws_cdk_lib_IResolvable(p.dependsOn);
        if (!visitedObjects.has(p.dockerLabels))
            aws_cdk_lib_IResolvable(p.dockerLabels);
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
        if (!visitedObjects.has(p.environmentFiles))
            aws_cdk_lib_IResolvable(p.environmentFiles);
        if (!visitedObjects.has(p.extraHosts))
            aws_cdk_lib_IResolvable(p.extraHosts);
        if (!visitedObjects.has(p.firelensConfiguration))
            aws_cdk_lib_IResolvable(p.firelensConfiguration);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_IResolvable(p.healthCheck);
        if (!visitedObjects.has(p.linuxParameters))
            aws_cdk_lib_IResolvable(p.linuxParameters);
        if (!visitedObjects.has(p.logConfiguration))
            aws_cdk_lib_IResolvable(p.logConfiguration);
        if (!visitedObjects.has(p.mountPoints))
            aws_cdk_lib_IResolvable(p.mountPoints);
        if (!visitedObjects.has(p.portMappings))
            aws_cdk_lib_IResolvable(p.portMappings);
        if (!visitedObjects.has(p.repositoryCredentials))
            aws_cdk_lib_IResolvable(p.repositoryCredentials);
        if (!visitedObjects.has(p.resourceRequirements))
            aws_cdk_lib_IResolvable(p.resourceRequirements);
        if (!visitedObjects.has(p.secrets))
            aws_cdk_lib_IResolvable(p.secrets);
        if (!visitedObjects.has(p.systemControls))
            aws_cdk_lib_IResolvable(p.systemControls);
        if (!visitedObjects.has(p.ulimits))
            aws_cdk_lib_IResolvable(p.ulimits);
        if (!visitedObjects.has(p.volumesFrom))
            aws_cdk_lib_IResolvable(p.volumesFrom);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_ContainerDependencyProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_DeviceProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_DockerVolumeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.driverOpts))
            aws_cdk_lib_IResolvable(p.driverOpts);
        if (!visitedObjects.has(p.labels))
            aws_cdk_lib_IResolvable(p.labels);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_EFSVolumeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authorizationConfig))
            aws_cdk_lib_IResolvable(p.authorizationConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_EnvironmentFileProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_EphemeralStorageProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_FirelensConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_IResolvable(p.options);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_HealthCheckProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_HostEntryProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_HostVolumePropertiesProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_InferenceAcceleratorProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_KernelCapabilitiesProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_KeyValuePairProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_LinuxParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capabilities))
            aws_cdk_lib_IResolvable(p.capabilities);
        if (!visitedObjects.has(p.devices))
            aws_cdk_lib_IResolvable(p.devices);
        if (!visitedObjects.has(p.tmpfs))
            aws_cdk_lib_IResolvable(p.tmpfs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_LogConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_IResolvable(p.options);
        if (!visitedObjects.has(p.secretOptions))
            aws_cdk_lib_IResolvable(p.secretOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_MountPointProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_PortMappingProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_ProxyConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.proxyConfigurationProperties))
            aws_cdk_lib_IResolvable(p.proxyConfigurationProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_RepositoryCredentialsProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_ResourceRequirementProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_RuntimePlatformProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_SecretProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_SystemControlProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_TaskDefinitionPlacementConstraintProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_TmpfsProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_UlimitProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_VolumeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dockerVolumeConfiguration))
            aws_cdk_lib_IResolvable(p.dockerVolumeConfiguration);
        if (!visitedObjects.has(p.efsVolumeConfiguration))
            aws_cdk_lib_IResolvable(p.efsVolumeConfiguration);
        if (!visitedObjects.has(p.host))
            aws_cdk_lib_IResolvable(p.host);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnTaskDefinition_VolumeFromProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loadBalancers))
            aws_cdk_lib_IResolvable(p.loadBalancers);
        if (!visitedObjects.has(p.networkConfiguration))
            aws_cdk_lib_IResolvable(p.networkConfiguration);
        if (!visitedObjects.has(p.scale))
            aws_cdk_lib_IResolvable(p.scale);
        if (!visitedObjects.has(p.serviceRegistries))
            aws_cdk_lib_IResolvable(p.serviceRegistries);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnTaskSet(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskSet_AwsVpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskSet_LoadBalancerProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskSet_NetworkConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awsVpcConfiguration))
            aws_cdk_lib_IResolvable(p.awsVpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_CfnTaskSet_ScaleProperty(p) {
}
function aws_cdk_lib_aws_ecs_CfnTaskSet_ServiceRegistryProperty(p) {
}
function aws_cdk_lib_aws_ecs_patterns_QueueProcessingEc2ServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.placementConstraints != null)
            for (const o of p.placementConstraints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementConstraint(o);
        if (p.placementStrategies != null)
            for (const o of p.placementStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementStrategy(o);
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.logDriver))
            aws_cdk_lib_aws_ecs_LogDriver(p.logDriver);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.queue))
            aws_cdk_lib_aws_sqs_IQueue(p.queue);
        if (!visitedObjects.has(p.retentionPeriod))
            aws_cdk_lib_Duration(p.retentionPeriod);
        if (p.scalingSteps != null)
            for (const o of p.scalingSteps)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_applicationautoscaling_ScalingInterval(o);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
        if (!visitedObjects.has(p.visibilityTimeout))
            aws_cdk_lib_Duration(p.visibilityTimeout);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_QueueProcessingEc2Service(p) {
}
function aws_cdk_lib_aws_ecs_patterns_QueueProcessingFargateServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_ecs_HealthCheck(p.healthCheck);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.taskSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.taskSubnets);
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.logDriver))
            aws_cdk_lib_aws_ecs_LogDriver(p.logDriver);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.queue))
            aws_cdk_lib_aws_sqs_IQueue(p.queue);
        if (!visitedObjects.has(p.retentionPeriod))
            aws_cdk_lib_Duration(p.retentionPeriod);
        if (p.scalingSteps != null)
            for (const o of p.scalingSteps)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_applicationautoscaling_ScalingInterval(o);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
        if (!visitedObjects.has(p.visibilityTimeout))
            aws_cdk_lib_Duration(p.visibilityTimeout);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.platformVersion))
            aws_cdk_lib_aws_ecs_FargatePlatformVersion(p.platformVersion);
        if (!visitedObjects.has(p.runtimePlatform))
            aws_cdk_lib_aws_ecs_RuntimePlatform(p.runtimePlatform);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_FargateTaskDefinition(p.taskDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_QueueProcessingFargateService(p) {
}
function aws_cdk_lib_aws_ecs_patterns_QueueProcessingServiceBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.logDriver))
            aws_cdk_lib_aws_ecs_LogDriver(p.logDriver);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.queue))
            aws_cdk_lib_aws_sqs_IQueue(p.queue);
        if (!visitedObjects.has(p.retentionPeriod))
            aws_cdk_lib_Duration(p.retentionPeriod);
        if (p.scalingSteps != null)
            for (const o of p.scalingSteps)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_applicationautoscaling_ScalingInterval(o);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
        if (!visitedObjects.has(p.visibilityTimeout))
            aws_cdk_lib_Duration(p.visibilityTimeout);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_QueueProcessingServiceBase(p) {
}
function aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedEc2ServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.placementConstraints != null)
            for (const o of p.placementConstraints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementConstraint(o);
        if (p.placementStrategies != null)
            for (const o of p.placementStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementStrategy(o);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_Ec2TaskDefinition(p.taskDefinition);
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.domainZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.domainZone);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (!visitedObjects.has(p.loadBalancer))
            aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancer(p.loadBalancer);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.recordType))
            aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedServiceRecordType(p.recordType);
        if (!visitedObjects.has(p.taskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedTaskImageOptions(p.taskImageOptions);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedEc2Service(p) {
}
function aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedFargateServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.taskSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.taskSubnets);
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.domainZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.domainZone);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (!visitedObjects.has(p.loadBalancer))
            aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancer(p.loadBalancer);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.recordType))
            aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedServiceRecordType(p.recordType);
        if (!visitedObjects.has(p.taskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedTaskImageOptions(p.taskImageOptions);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.platformVersion))
            aws_cdk_lib_aws_ecs_FargatePlatformVersion(p.platformVersion);
        if (!visitedObjects.has(p.runtimePlatform))
            aws_cdk_lib_aws_ecs_RuntimePlatform(p.runtimePlatform);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_FargateTaskDefinition(p.taskDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedFargateService(p) {
}
function aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedServiceRecordType(p) {
}
function aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedServiceBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.domainZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.domainZone);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (!visitedObjects.has(p.loadBalancer))
            aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancer(p.loadBalancer);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.recordType))
            aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedServiceRecordType(p.recordType);
        if (!visitedObjects.has(p.taskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedTaskImageOptions(p.taskImageOptions);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedTaskImageOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (!visitedObjects.has(p.executionRole))
            aws_cdk_lib_aws_iam_IRole(p.executionRole);
        if (!visitedObjects.has(p.logDriver))
            aws_cdk_lib_aws_ecs_LogDriver(p.logDriver);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedServiceBase(p) {
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedEc2ServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.placementConstraints != null)
            for (const o of p.placementConstraints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementConstraint(o);
        if (p.placementStrategies != null)
            for (const o of p.placementStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementStrategy(o);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_Ec2TaskDefinition(p.taskDefinition);
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_certificatemanager_ICertificate(p.certificate);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.domainZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.domainZone);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (!visitedObjects.has(p.idleTimeout))
            aws_cdk_lib_Duration(p.idleTimeout);
        if (!visitedObjects.has(p.loadBalancer))
            aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationLoadBalancer(p.loadBalancer);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.protocol);
        if (!visitedObjects.has(p.protocolVersion))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocolVersion(p.protocolVersion);
        if (!visitedObjects.has(p.recordType))
            aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedServiceRecordType(p.recordType);
        if (!visitedObjects.has(p.sslPolicy))
            aws_cdk_lib_aws_elasticloadbalancingv2_SslPolicy(p.sslPolicy);
        if (!visitedObjects.has(p.targetProtocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.targetProtocol);
        if (!visitedObjects.has(p.taskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedTaskImageOptions(p.taskImageOptions);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedEc2Service(p) {
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedFargateServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.taskSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.taskSubnets);
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_certificatemanager_ICertificate(p.certificate);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.domainZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.domainZone);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (!visitedObjects.has(p.idleTimeout))
            aws_cdk_lib_Duration(p.idleTimeout);
        if (!visitedObjects.has(p.loadBalancer))
            aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationLoadBalancer(p.loadBalancer);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.protocol);
        if (!visitedObjects.has(p.protocolVersion))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocolVersion(p.protocolVersion);
        if (!visitedObjects.has(p.recordType))
            aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedServiceRecordType(p.recordType);
        if (!visitedObjects.has(p.sslPolicy))
            aws_cdk_lib_aws_elasticloadbalancingv2_SslPolicy(p.sslPolicy);
        if (!visitedObjects.has(p.targetProtocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.targetProtocol);
        if (!visitedObjects.has(p.taskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedTaskImageOptions(p.taskImageOptions);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.platformVersion))
            aws_cdk_lib_aws_ecs_FargatePlatformVersion(p.platformVersion);
        if (!visitedObjects.has(p.runtimePlatform))
            aws_cdk_lib_aws_ecs_RuntimePlatform(p.runtimePlatform);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_FargateTaskDefinition(p.taskDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedFargateService(p) {
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedServiceRecordType(p) {
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedServiceBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.capacityProviderStrategies != null)
            for (const o of p.capacityProviderStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_CapacityProviderStrategy(o);
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_certificatemanager_ICertificate(p.certificate);
        if (!visitedObjects.has(p.circuitBreaker))
            aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker(p.circuitBreaker);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.deploymentController))
            aws_cdk_lib_aws_ecs_DeploymentController(p.deploymentController);
        if (!visitedObjects.has(p.domainZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.domainZone);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (!visitedObjects.has(p.idleTimeout))
            aws_cdk_lib_Duration(p.idleTimeout);
        if (!visitedObjects.has(p.loadBalancer))
            aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationLoadBalancer(p.loadBalancer);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.protocol);
        if (!visitedObjects.has(p.protocolVersion))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocolVersion(p.protocolVersion);
        if (!visitedObjects.has(p.recordType))
            aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedServiceRecordType(p.recordType);
        if (!visitedObjects.has(p.sslPolicy))
            aws_cdk_lib_aws_elasticloadbalancingv2_SslPolicy(p.sslPolicy);
        if (!visitedObjects.has(p.targetProtocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.targetProtocol);
        if (!visitedObjects.has(p.taskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedTaskImageOptions(p.taskImageOptions);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedTaskImageOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (!visitedObjects.has(p.executionRole))
            aws_cdk_lib_aws_iam_IRole(p.executionRole);
        if (!visitedObjects.has(p.logDriver))
            aws_cdk_lib_aws_ecs_LogDriver(p.logDriver);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedServiceBase(p) {
}
function aws_cdk_lib_aws_ecs_patterns_FargateServiceBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.platformVersion))
            aws_cdk_lib_aws_ecs_FargatePlatformVersion(p.platformVersion);
        if (!visitedObjects.has(p.runtimePlatform))
            aws_cdk_lib_aws_ecs_RuntimePlatform(p.runtimePlatform);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_FargateTaskDefinition(p.taskDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ScheduledEc2TaskProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scheduledEc2TaskDefinitionOptions))
            aws_cdk_lib_aws_ecs_patterns_ScheduledEc2TaskDefinitionOptions(p.scheduledEc2TaskDefinitionOptions);
        if (!visitedObjects.has(p.scheduledEc2TaskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_ScheduledEc2TaskImageOptions(p.scheduledEc2TaskImageOptions);
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_aws_applicationautoscaling_Schedule(p.schedule);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ScheduledEc2TaskImageOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (!visitedObjects.has(p.logDriver))
            aws_cdk_lib_aws_ecs_LogDriver(p.logDriver);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ScheduledEc2TaskDefinitionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_Ec2TaskDefinition(p.taskDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ScheduledEc2Task(p) {
}
function aws_cdk_lib_aws_ecs_patterns_ScheduledFargateTaskProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scheduledFargateTaskDefinitionOptions))
            aws_cdk_lib_aws_ecs_patterns_ScheduledFargateTaskDefinitionOptions(p.scheduledFargateTaskDefinitionOptions);
        if (!visitedObjects.has(p.scheduledFargateTaskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_ScheduledFargateTaskImageOptions(p.scheduledFargateTaskImageOptions);
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_aws_applicationautoscaling_Schedule(p.schedule);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.platformVersion))
            aws_cdk_lib_aws_ecs_FargatePlatformVersion(p.platformVersion);
        if (!visitedObjects.has(p.runtimePlatform))
            aws_cdk_lib_aws_ecs_RuntimePlatform(p.runtimePlatform);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_FargateTaskDefinition(p.taskDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ScheduledFargateTaskImageOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (!visitedObjects.has(p.logDriver))
            aws_cdk_lib_aws_ecs_LogDriver(p.logDriver);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
        if (!visitedObjects.has(p.platformVersion))
            aws_cdk_lib_aws_ecs_FargatePlatformVersion(p.platformVersion);
        if (!visitedObjects.has(p.runtimePlatform))
            aws_cdk_lib_aws_ecs_RuntimePlatform(p.runtimePlatform);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_FargateTaskDefinition(p.taskDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ScheduledFargateTaskDefinitionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_FargateTaskDefinition(p.taskDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ScheduledFargateTask(p) {
}
function aws_cdk_lib_aws_ecs_patterns_ScheduledTaskBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_aws_applicationautoscaling_Schedule(p.schedule);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ScheduledTaskImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (!visitedObjects.has(p.logDriver))
            aws_cdk_lib_aws_ecs_LogDriver(p.logDriver);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ScheduledTaskBase(p) {
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationMultipleTargetGroupsServiceBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (p.loadBalancers != null)
            for (const o of p.loadBalancers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancerProps(o);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (p.targetGroups != null)
            for (const o of p.targetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_ApplicationTargetProps(o);
        if (!visitedObjects.has(p.taskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedTaskImageProps(p.taskImageOptions);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedTaskImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (!visitedObjects.has(p.executionRole))
            aws_cdk_lib_aws_iam_IRole(p.executionRole);
        if (!visitedObjects.has(p.logDriver))
            aws_cdk_lib_aws_ecs_LogDriver(p.logDriver);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationTargetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_ecs_Protocol(p.protocol);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.listeners != null)
            for (const o of p.listeners)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_ApplicationListenerProps(o);
        if (!visitedObjects.has(p.domainZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.domainZone);
        if (!visitedObjects.has(p.idleTimeout))
            aws_cdk_lib_Duration(p.idleTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationListenerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_certificatemanager_ICertificate(p.certificate);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.protocol);
        if (!visitedObjects.has(p.sslPolicy))
            aws_cdk_lib_aws_elasticloadbalancingv2_SslPolicy(p.sslPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationMultipleTargetGroupsServiceBase(p) {
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationMultipleTargetGroupsEc2ServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.placementConstraints != null)
            for (const o of p.placementConstraints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementConstraint(o);
        if (p.placementStrategies != null)
            for (const o of p.placementStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementStrategy(o);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_Ec2TaskDefinition(p.taskDefinition);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (p.loadBalancers != null)
            for (const o of p.loadBalancers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancerProps(o);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (p.targetGroups != null)
            for (const o of p.targetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_ApplicationTargetProps(o);
        if (!visitedObjects.has(p.taskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedTaskImageProps(p.taskImageOptions);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationMultipleTargetGroupsEc2Service(p) {
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationMultipleTargetGroupsFargateServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (p.loadBalancers != null)
            for (const o of p.loadBalancers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancerProps(o);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (p.targetGroups != null)
            for (const o of p.targetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_ApplicationTargetProps(o);
        if (!visitedObjects.has(p.taskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedTaskImageProps(p.taskImageOptions);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.platformVersion))
            aws_cdk_lib_aws_ecs_FargatePlatformVersion(p.platformVersion);
        if (!visitedObjects.has(p.runtimePlatform))
            aws_cdk_lib_aws_ecs_RuntimePlatform(p.runtimePlatform);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_FargateTaskDefinition(p.taskDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_ApplicationMultipleTargetGroupsFargateService(p) {
}
function aws_cdk_lib_aws_ecs_patterns_NetworkMultipleTargetGroupsServiceBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (p.loadBalancers != null)
            for (const o of p.loadBalancers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancerProps(o);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (p.targetGroups != null)
            for (const o of p.targetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_NetworkTargetProps(o);
        if (!visitedObjects.has(p.taskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedTaskImageProps(p.taskImageOptions);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedTaskImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_ecs_ContainerImage(p.image);
        if (!visitedObjects.has(p.executionRole))
            aws_cdk_lib_aws_iam_IRole(p.executionRole);
        if (!visitedObjects.has(p.logDriver))
            aws_cdk_lib_aws_ecs_LogDriver(p.logDriver);
        if (p.secrets != null)
            for (const o of Object.values(p.secrets))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_Secret(o);
        if (!visitedObjects.has(p.taskRole))
            aws_cdk_lib_aws_iam_IRole(p.taskRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.listeners != null)
            for (const o of p.listeners)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_NetworkListenerProps(o);
        if (!visitedObjects.has(p.domainZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.domainZone);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_NetworkListenerProps(p) {
}
function aws_cdk_lib_aws_ecs_patterns_NetworkTargetProps(p) {
}
function aws_cdk_lib_aws_ecs_patterns_NetworkMultipleTargetGroupsServiceBase(p) {
}
function aws_cdk_lib_aws_ecs_patterns_NetworkMultipleTargetGroupsEc2ServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.placementConstraints != null)
            for (const o of p.placementConstraints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementConstraint(o);
        if (p.placementStrategies != null)
            for (const o of p.placementStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementStrategy(o);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_Ec2TaskDefinition(p.taskDefinition);
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (p.loadBalancers != null)
            for (const o of p.loadBalancers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancerProps(o);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (p.targetGroups != null)
            for (const o of p.targetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_NetworkTargetProps(o);
        if (!visitedObjects.has(p.taskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedTaskImageProps(p.taskImageOptions);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_NetworkMultipleTargetGroupsEc2Service(p) {
}
function aws_cdk_lib_aws_ecs_patterns_NetworkMultipleTargetGroupsFargateServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudMapOptions))
            aws_cdk_lib_aws_ecs_CloudMapOptions(p.cloudMapOptions);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.healthCheckGracePeriod))
            aws_cdk_lib_Duration(p.healthCheckGracePeriod);
        if (p.loadBalancers != null)
            for (const o of p.loadBalancers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancerProps(o);
        if (!visitedObjects.has(p.propagateTags))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagateTags);
        if (p.targetGroups != null)
            for (const o of p.targetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_patterns_NetworkTargetProps(o);
        if (!visitedObjects.has(p.taskImageOptions))
            aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedTaskImageProps(p.taskImageOptions);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.platformVersion))
            aws_cdk_lib_aws_ecs_FargatePlatformVersion(p.platformVersion);
        if (!visitedObjects.has(p.runtimePlatform))
            aws_cdk_lib_aws_ecs_RuntimePlatform(p.runtimePlatform);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_FargateTaskDefinition(p.taskDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ecs_patterns_NetworkMultipleTargetGroupsFargateService(p) {
}
function aws_cdk_lib_aws_efs_IAccessPoint(p) {
}
function aws_cdk_lib_aws_efs_Acl(p) {
}
function aws_cdk_lib_aws_efs_PosixUser(p) {
}
function aws_cdk_lib_aws_efs_AccessPointOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.createAcl))
            aws_cdk_lib_aws_efs_Acl(p.createAcl);
        if (!visitedObjects.has(p.posixUser))
            aws_cdk_lib_aws_efs_PosixUser(p.posixUser);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_efs_AccessPointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fileSystem))
            aws_cdk_lib_aws_efs_IFileSystem(p.fileSystem);
        if (!visitedObjects.has(p.createAcl))
            aws_cdk_lib_aws_efs_Acl(p.createAcl);
        if (!visitedObjects.has(p.posixUser))
            aws_cdk_lib_aws_efs_PosixUser(p.posixUser);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_efs_AccessPointAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fileSystem))
            aws_cdk_lib_aws_efs_IFileSystem(p.fileSystem);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_efs_AccessPoint(p) {
}
function aws_cdk_lib_aws_efs_LifecyclePolicy(p) {
}
function aws_cdk_lib_aws_efs_OutOfInfrequentAccessPolicy(p) {
}
function aws_cdk_lib_aws_efs_PerformanceMode(p) {
}
function aws_cdk_lib_aws_efs_ThroughputMode(p) {
}
function aws_cdk_lib_aws_efs_IFileSystem(p) {
}
function aws_cdk_lib_aws_efs_FileSystemProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.fileSystemPolicy))
            aws_cdk_lib_aws_iam_PolicyDocument(p.fileSystemPolicy);
        if (!visitedObjects.has(p.kmsKey))
            aws_cdk_lib_aws_kms_IKey(p.kmsKey);
        if (!visitedObjects.has(p.lifecyclePolicy))
            aws_cdk_lib_aws_efs_LifecyclePolicy(p.lifecyclePolicy);
        if (!visitedObjects.has(p.outOfInfrequentAccessPolicy))
            aws_cdk_lib_aws_efs_OutOfInfrequentAccessPolicy(p.outOfInfrequentAccessPolicy);
        if (!visitedObjects.has(p.performanceMode))
            aws_cdk_lib_aws_efs_PerformanceMode(p.performanceMode);
        if (!visitedObjects.has(p.provisionedThroughputPerSecond))
            aws_cdk_lib_Size(p.provisionedThroughputPerSecond);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.throughputMode))
            aws_cdk_lib_aws_efs_ThroughputMode(p.throughputMode);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_efs_FileSystemAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_efs_FileSystem(p) {
}
function aws_cdk_lib_aws_efs_CfnAccessPointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.accessPointTags != null)
            for (const o of p.accessPointTags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_efs_CfnAccessPoint_AccessPointTagProperty(o);
        if (!visitedObjects.has(p.posixUser))
            aws_cdk_lib_IResolvable(p.posixUser);
        if (!visitedObjects.has(p.rootDirectory))
            aws_cdk_lib_IResolvable(p.rootDirectory);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_efs_CfnAccessPoint(p) {
}
function aws_cdk_lib_aws_efs_CfnAccessPoint_AccessPointTagProperty(p) {
}
function aws_cdk_lib_aws_efs_CfnAccessPoint_CreationInfoProperty(p) {
}
function aws_cdk_lib_aws_efs_CfnAccessPoint_PosixUserProperty(p) {
}
function aws_cdk_lib_aws_efs_CfnAccessPoint_RootDirectoryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.creationInfo))
            aws_cdk_lib_IResolvable(p.creationInfo);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_efs_CfnFileSystemProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backupPolicy))
            aws_cdk_lib_IResolvable(p.backupPolicy);
        if (p.fileSystemTags != null)
            for (const o of p.fileSystemTags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_efs_CfnFileSystem_ElasticFileSystemTagProperty(o);
        if (!visitedObjects.has(p.lifecyclePolicies))
            aws_cdk_lib_IResolvable(p.lifecyclePolicies);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_efs_CfnFileSystem(p) {
}
function aws_cdk_lib_aws_efs_CfnFileSystem_BackupPolicyProperty(p) {
}
function aws_cdk_lib_aws_efs_CfnFileSystem_ElasticFileSystemTagProperty(p) {
}
function aws_cdk_lib_aws_efs_CfnFileSystem_LifecyclePolicyProperty(p) {
}
function aws_cdk_lib_aws_efs_CfnMountTargetProps(p) {
}
function aws_cdk_lib_aws_efs_CfnMountTarget(p) {
}
function aws_cdk_lib_aws_eks_AwsAuthProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_eks_Cluster(p.cluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_AwsAuth(p) {
}
function aws_cdk_lib_aws_eks_AwsAuthMapping(p) {
}
function aws_cdk_lib_aws_eks_ICluster(p) {
}
function aws_cdk_lib_aws_eks_ClusterAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awscliLayer))
            aws_cdk_lib_aws_lambda_ILayerVersion(p.awscliLayer);
        if (!visitedObjects.has(p.kubectlLambdaRole))
            aws_cdk_lib_aws_iam_IRole(p.kubectlLambdaRole);
        if (!visitedObjects.has(p.kubectlLayer))
            aws_cdk_lib_aws_lambda_ILayerVersion(p.kubectlLayer);
        if (!visitedObjects.has(p.kubectlMemory))
            aws_cdk_lib_Size(p.kubectlMemory);
        if (!visitedObjects.has(p.kubectlProvider))
            aws_cdk_lib_aws_eks_IKubectlProvider(p.kubectlProvider);
        if (!visitedObjects.has(p.onEventLayer))
            aws_cdk_lib_aws_lambda_ILayerVersion(p.onEventLayer);
        if (!visitedObjects.has(p.openIdConnectProvider))
            aws_cdk_lib_aws_iam_IOpenIdConnectProvider(p.openIdConnectProvider);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_CommonClusterOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_eks_KubernetesVersion(p.version);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (p.vpcSubnets != null)
            for (const o of p.vpcSubnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_SubnetSelection(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_ClusterOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.albController))
            aws_cdk_lib_aws_eks_AlbControllerOptions(p.albController);
        if (!visitedObjects.has(p.awscliLayer))
            aws_cdk_lib_aws_lambda_ILayerVersion(p.awscliLayer);
        if (!visitedObjects.has(p.clusterHandlerSecurityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.clusterHandlerSecurityGroup);
        if (p.clusterLogging != null)
            for (const o of p.clusterLogging)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_eks_ClusterLoggingTypes(o);
        if (!visitedObjects.has(p.coreDnsComputeType))
            aws_cdk_lib_aws_eks_CoreDnsComputeType(p.coreDnsComputeType);
        if (!visitedObjects.has(p.endpointAccess))
            aws_cdk_lib_aws_eks_EndpointAccess(p.endpointAccess);
        if (!visitedObjects.has(p.kubectlLayer))
            aws_cdk_lib_aws_lambda_ILayerVersion(p.kubectlLayer);
        if (!visitedObjects.has(p.kubectlMemory))
            aws_cdk_lib_Size(p.kubectlMemory);
        if (!visitedObjects.has(p.mastersRole))
            aws_cdk_lib_aws_iam_IRole(p.mastersRole);
        if (!visitedObjects.has(p.onEventLayer))
            aws_cdk_lib_aws_lambda_ILayerVersion(p.onEventLayer);
        if (!visitedObjects.has(p.secretsEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.secretsEncryptionKey);
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_eks_KubernetesVersion(p.version);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (p.vpcSubnets != null)
            for (const o of p.vpcSubnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_SubnetSelection(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_EndpointAccess(p) {
}
function aws_cdk_lib_aws_eks_ClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultCapacityInstance))
            aws_cdk_lib_aws_ec2_InstanceType(p.defaultCapacityInstance);
        if (!visitedObjects.has(p.defaultCapacityType))
            aws_cdk_lib_aws_eks_DefaultCapacityType(p.defaultCapacityType);
        if (!visitedObjects.has(p.kubectlLambdaRole))
            aws_cdk_lib_aws_iam_IRole(p.kubectlLambdaRole);
        if (!visitedObjects.has(p.albController))
            aws_cdk_lib_aws_eks_AlbControllerOptions(p.albController);
        if (!visitedObjects.has(p.awscliLayer))
            aws_cdk_lib_aws_lambda_ILayerVersion(p.awscliLayer);
        if (!visitedObjects.has(p.clusterHandlerSecurityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.clusterHandlerSecurityGroup);
        if (p.clusterLogging != null)
            for (const o of p.clusterLogging)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_eks_ClusterLoggingTypes(o);
        if (!visitedObjects.has(p.coreDnsComputeType))
            aws_cdk_lib_aws_eks_CoreDnsComputeType(p.coreDnsComputeType);
        if (!visitedObjects.has(p.endpointAccess))
            aws_cdk_lib_aws_eks_EndpointAccess(p.endpointAccess);
        if (!visitedObjects.has(p.kubectlLayer))
            aws_cdk_lib_aws_lambda_ILayerVersion(p.kubectlLayer);
        if (!visitedObjects.has(p.kubectlMemory))
            aws_cdk_lib_Size(p.kubectlMemory);
        if (!visitedObjects.has(p.mastersRole))
            aws_cdk_lib_aws_iam_IRole(p.mastersRole);
        if (!visitedObjects.has(p.onEventLayer))
            aws_cdk_lib_aws_lambda_ILayerVersion(p.onEventLayer);
        if (!visitedObjects.has(p.secretsEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.secretsEncryptionKey);
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_eks_KubernetesVersion(p.version);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (p.vpcSubnets != null)
            for (const o of p.vpcSubnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_SubnetSelection(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_KubernetesVersion(p) {
}
function aws_cdk_lib_aws_eks_ClusterLoggingTypes(p) {
}
function aws_cdk_lib_aws_eks_ServiceLoadBalancerAddressOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_IngressLoadBalancerAddressOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_Cluster(p) {
}
function aws_cdk_lib_aws_eks_AutoScalingGroupCapacityOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.bootstrapOptions))
            aws_cdk_lib_aws_eks_BootstrapOptions(p.bootstrapOptions);
        if (!visitedObjects.has(p.machineImageType))
            aws_cdk_lib_aws_eks_MachineImageType(p.machineImageType);
        if (p.blockDevices != null)
            for (const o of p.blockDevices)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_BlockDevice(o);
        if (!visitedObjects.has(p.cooldown))
            aws_cdk_lib_Duration(p.cooldown);
        if (!visitedObjects.has(p.defaultInstanceWarmup))
            aws_cdk_lib_Duration(p.defaultInstanceWarmup);
        if (p.groupMetrics != null)
            for (const o of p.groupMetrics)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_GroupMetrics(o);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_autoscaling_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.instanceMonitoring))
            aws_cdk_lib_aws_autoscaling_Monitoring(p.instanceMonitoring);
        if (!visitedObjects.has(p.maxInstanceLifetime))
            aws_cdk_lib_Duration(p.maxInstanceLifetime);
        if (p.notifications != null)
            for (const o of p.notifications)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_NotificationConfiguration(o);
        if (!visitedObjects.has(p.signals))
            aws_cdk_lib_aws_autoscaling_Signals(p.signals);
        if (p.terminationPolicies != null)
            for (const o of p.terminationPolicies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_autoscaling_TerminationPolicy(o);
        if (!visitedObjects.has(p.updatePolicy))
            aws_cdk_lib_aws_autoscaling_UpdatePolicy(p.updatePolicy);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_BootstrapOptions(p) {
}
function aws_cdk_lib_aws_eks_AutoScalingGroupOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bootstrapOptions))
            aws_cdk_lib_aws_eks_BootstrapOptions(p.bootstrapOptions);
        if (!visitedObjects.has(p.machineImageType))
            aws_cdk_lib_aws_eks_MachineImageType(p.machineImageType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_EksOptimizedImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cpuArch))
            aws_cdk_lib_aws_eks_CpuArch(p.cpuArch);
        if (!visitedObjects.has(p.nodeType))
            aws_cdk_lib_aws_eks_NodeType(p.nodeType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_EksOptimizedImage(p) {
}
function aws_cdk_lib_aws_eks_NodeType(p) {
}
function aws_cdk_lib_aws_eks_CpuArch(p) {
}
function aws_cdk_lib_aws_eks_CoreDnsComputeType(p) {
}
function aws_cdk_lib_aws_eks_DefaultCapacityType(p) {
}
function aws_cdk_lib_aws_eks_MachineImageType(p) {
}
function aws_cdk_lib_aws_eks_CfnAddonProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_CfnAddon(p) {
}
function aws_cdk_lib_aws_eks_CfnClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourcesVpcConfig))
            aws_cdk_lib_IResolvable(p.resourcesVpcConfig);
        if (!visitedObjects.has(p.encryptionConfig))
            aws_cdk_lib_IResolvable(p.encryptionConfig);
        if (!visitedObjects.has(p.kubernetesNetworkConfig))
            aws_cdk_lib_IResolvable(p.kubernetesNetworkConfig);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_IResolvable(p.logging);
        if (!visitedObjects.has(p.outpostConfig))
            aws_cdk_lib_IResolvable(p.outpostConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_CfnCluster(p) {
}
function aws_cdk_lib_aws_eks_CfnCluster_ClusterLoggingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.enabledTypes))
            aws_cdk_lib_IResolvable(p.enabledTypes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_CfnCluster_ControlPlanePlacementProperty(p) {
}
function aws_cdk_lib_aws_eks_CfnCluster_EncryptionConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.provider))
            aws_cdk_lib_IResolvable(p.provider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_CfnCluster_KubernetesNetworkConfigProperty(p) {
}
function aws_cdk_lib_aws_eks_CfnCluster_LoggingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterLogging))
            aws_cdk_lib_IResolvable(p.clusterLogging);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_CfnCluster_LoggingTypeConfigProperty(p) {
}
function aws_cdk_lib_aws_eks_CfnCluster_OutpostConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.controlPlanePlacement))
            aws_cdk_lib_IResolvable(p.controlPlanePlacement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_CfnCluster_ProviderProperty(p) {
}
function aws_cdk_lib_aws_eks_CfnCluster_ResourcesVpcConfigProperty(p) {
}
function aws_cdk_lib_aws_eks_CfnFargateProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectors))
            aws_cdk_lib_IResolvable(p.selectors);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_CfnFargateProfile(p) {
}
function aws_cdk_lib_aws_eks_CfnFargateProfile_LabelProperty(p) {
}
function aws_cdk_lib_aws_eks_CfnFargateProfile_SelectorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.labels))
            aws_cdk_lib_IResolvable(p.labels);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_CfnIdentityProviderConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.oidc))
            aws_cdk_lib_IResolvable(p.oidc);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_CfnIdentityProviderConfig(p) {
}
function aws_cdk_lib_aws_eks_CfnIdentityProviderConfig_OidcIdentityProviderConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.requiredClaims))
            aws_cdk_lib_IResolvable(p.requiredClaims);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_CfnIdentityProviderConfig_RequiredClaimProperty(p) {
}
function aws_cdk_lib_aws_eks_CfnNodegroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.labels))
            aws_cdk_lib_IResolvable(p.labels);
        if (!visitedObjects.has(p.launchTemplate))
            aws_cdk_lib_IResolvable(p.launchTemplate);
        if (!visitedObjects.has(p.remoteAccess))
            aws_cdk_lib_IResolvable(p.remoteAccess);
        if (!visitedObjects.has(p.scalingConfig))
            aws_cdk_lib_IResolvable(p.scalingConfig);
        if (!visitedObjects.has(p.taints))
            aws_cdk_lib_IResolvable(p.taints);
        if (!visitedObjects.has(p.updateConfig))
            aws_cdk_lib_IResolvable(p.updateConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_CfnNodegroup(p) {
}
function aws_cdk_lib_aws_eks_CfnNodegroup_LaunchTemplateSpecificationProperty(p) {
}
function aws_cdk_lib_aws_eks_CfnNodegroup_RemoteAccessProperty(p) {
}
function aws_cdk_lib_aws_eks_CfnNodegroup_ScalingConfigProperty(p) {
}
function aws_cdk_lib_aws_eks_CfnNodegroup_TaintProperty(p) {
}
function aws_cdk_lib_aws_eks_CfnNodegroup_UpdateConfigProperty(p) {
}
function aws_cdk_lib_aws_eks_FargateProfileOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.selectors != null)
            for (const o of p.selectors)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_eks_Selector(o);
        if (!visitedObjects.has(p.podExecutionRole))
            aws_cdk_lib_aws_iam_IRole(p.podExecutionRole);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_FargateProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_eks_Cluster(p.cluster);
        if (p.selectors != null)
            for (const o of p.selectors)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_eks_Selector(o);
        if (!visitedObjects.has(p.podExecutionRole))
            aws_cdk_lib_aws_iam_IRole(p.podExecutionRole);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_Selector(p) {
}
function aws_cdk_lib_aws_eks_FargateProfile(p) {
}
function aws_cdk_lib_aws_eks_HelmChartOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.chartAsset))
            aws_cdk_lib_aws_s3_assets_Asset(p.chartAsset);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_HelmChartProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_eks_ICluster(p.cluster);
        if (!visitedObjects.has(p.chartAsset))
            aws_cdk_lib_aws_s3_assets_Asset(p.chartAsset);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_HelmChart(p) {
}
function aws_cdk_lib_aws_eks_KubernetesPatchProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_eks_ICluster(p.cluster);
        if (!visitedObjects.has(p.patchType))
            aws_cdk_lib_aws_eks_PatchType(p.patchType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_PatchType(p) {
}
function aws_cdk_lib_aws_eks_KubernetesPatch(p) {
}
function aws_cdk_lib_aws_eks_KubernetesManifestOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ingressAlbScheme))
            aws_cdk_lib_aws_eks_AlbScheme(p.ingressAlbScheme);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_KubernetesManifestProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_eks_ICluster(p.cluster);
        if (!visitedObjects.has(p.ingressAlbScheme))
            aws_cdk_lib_aws_eks_AlbScheme(p.ingressAlbScheme);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_KubernetesManifest(p) {
}
function aws_cdk_lib_aws_eks_KubernetesObjectValueProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_eks_ICluster(p.cluster);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_KubernetesObjectValue(p) {
}
function aws_cdk_lib_aws_eks_KubectlProviderProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_eks_ICluster(p.cluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_KubectlProviderAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.handlerRole))
            aws_cdk_lib_aws_iam_IRole(p.handlerRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_IKubectlProvider(p) {
}
function aws_cdk_lib_aws_eks_KubectlProvider(p) {
}
function aws_cdk_lib_aws_eks_FargateClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultProfile))
            aws_cdk_lib_aws_eks_FargateProfileOptions(p.defaultProfile);
        if (!visitedObjects.has(p.albController))
            aws_cdk_lib_aws_eks_AlbControllerOptions(p.albController);
        if (!visitedObjects.has(p.awscliLayer))
            aws_cdk_lib_aws_lambda_ILayerVersion(p.awscliLayer);
        if (!visitedObjects.has(p.clusterHandlerSecurityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.clusterHandlerSecurityGroup);
        if (p.clusterLogging != null)
            for (const o of p.clusterLogging)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_eks_ClusterLoggingTypes(o);
        if (!visitedObjects.has(p.coreDnsComputeType))
            aws_cdk_lib_aws_eks_CoreDnsComputeType(p.coreDnsComputeType);
        if (!visitedObjects.has(p.endpointAccess))
            aws_cdk_lib_aws_eks_EndpointAccess(p.endpointAccess);
        if (!visitedObjects.has(p.kubectlLayer))
            aws_cdk_lib_aws_lambda_ILayerVersion(p.kubectlLayer);
        if (!visitedObjects.has(p.kubectlMemory))
            aws_cdk_lib_Size(p.kubectlMemory);
        if (!visitedObjects.has(p.mastersRole))
            aws_cdk_lib_aws_iam_IRole(p.mastersRole);
        if (!visitedObjects.has(p.onEventLayer))
            aws_cdk_lib_aws_lambda_ILayerVersion(p.onEventLayer);
        if (!visitedObjects.has(p.secretsEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.secretsEncryptionKey);
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_eks_KubernetesVersion(p.version);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (p.vpcSubnets != null)
            for (const o of p.vpcSubnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_SubnetSelection(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_FargateCluster(p) {
}
function aws_cdk_lib_aws_eks_ServiceAccountOptions(p) {
}
function aws_cdk_lib_aws_eks_ServiceAccountProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_eks_ICluster(p.cluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_ServiceAccount(p) {
}
function aws_cdk_lib_aws_eks_INodegroup(p) {
}
function aws_cdk_lib_aws_eks_NodegroupAmiType(p) {
}
function aws_cdk_lib_aws_eks_CapacityType(p) {
}
function aws_cdk_lib_aws_eks_NodegroupRemoteAccess(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.sourceSecurityGroups != null)
            for (const o of p.sourceSecurityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_LaunchTemplateSpec(p) {
}
function aws_cdk_lib_aws_eks_TaintEffect(p) {
}
function aws_cdk_lib_aws_eks_TaintSpec(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.effect))
            aws_cdk_lib_aws_eks_TaintEffect(p.effect);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_NodegroupOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.amiType))
            aws_cdk_lib_aws_eks_NodegroupAmiType(p.amiType);
        if (!visitedObjects.has(p.capacityType))
            aws_cdk_lib_aws_eks_CapacityType(p.capacityType);
        if (p.instanceTypes != null)
            for (const o of p.instanceTypes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_InstanceType(o);
        if (!visitedObjects.has(p.launchTemplateSpec))
            aws_cdk_lib_aws_eks_LaunchTemplateSpec(p.launchTemplateSpec);
        if (!visitedObjects.has(p.nodeRole))
            aws_cdk_lib_aws_iam_IRole(p.nodeRole);
        if (!visitedObjects.has(p.remoteAccess))
            aws_cdk_lib_aws_eks_NodegroupRemoteAccess(p.remoteAccess);
        if (!visitedObjects.has(p.subnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnets);
        if (p.taints != null)
            for (const o of p.taints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_eks_TaintSpec(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_NodegroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_eks_ICluster(p.cluster);
        if (!visitedObjects.has(p.amiType))
            aws_cdk_lib_aws_eks_NodegroupAmiType(p.amiType);
        if (!visitedObjects.has(p.capacityType))
            aws_cdk_lib_aws_eks_CapacityType(p.capacityType);
        if (p.instanceTypes != null)
            for (const o of p.instanceTypes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_InstanceType(o);
        if (!visitedObjects.has(p.launchTemplateSpec))
            aws_cdk_lib_aws_eks_LaunchTemplateSpec(p.launchTemplateSpec);
        if (!visitedObjects.has(p.nodeRole))
            aws_cdk_lib_aws_iam_IRole(p.nodeRole);
        if (!visitedObjects.has(p.remoteAccess))
            aws_cdk_lib_aws_eks_NodegroupRemoteAccess(p.remoteAccess);
        if (!visitedObjects.has(p.subnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnets);
        if (p.taints != null)
            for (const o of p.taints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_eks_TaintSpec(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_Nodegroup(p) {
}
function aws_cdk_lib_aws_eks_OpenIdConnectProviderProps(p) {
}
function aws_cdk_lib_aws_eks_OpenIdConnectProvider(p) {
}
function aws_cdk_lib_aws_eks_AlbControllerVersion(p) {
}
function aws_cdk_lib_aws_eks_AlbScheme(p) {
}
function aws_cdk_lib_aws_eks_AlbControllerOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_eks_AlbControllerVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_AlbControllerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_eks_Cluster(p.cluster);
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_eks_AlbControllerVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eks_AlbController(p) {
}
function aws_cdk_lib_aws_elasticache_CfnCacheClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logDeliveryConfigurations))
            aws_cdk_lib_IResolvable(p.logDeliveryConfigurations);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnCacheCluster(p) {
}
function aws_cdk_lib_aws_elasticache_CfnCacheCluster_CloudWatchLogsDestinationDetailsProperty(p) {
}
function aws_cdk_lib_aws_elasticache_CfnCacheCluster_DestinationDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchLogsDetails))
            aws_cdk_lib_IResolvable(p.cloudWatchLogsDetails);
        if (!visitedObjects.has(p.kinesisFirehoseDetails))
            aws_cdk_lib_IResolvable(p.kinesisFirehoseDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnCacheCluster_KinesisFirehoseDestinationDetailsProperty(p) {
}
function aws_cdk_lib_aws_elasticache_CfnCacheCluster_LogDeliveryConfigurationRequestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationDetails))
            aws_cdk_lib_IResolvable(p.destinationDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnGlobalReplicationGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.members))
            aws_cdk_lib_IResolvable(p.members);
        if (!visitedObjects.has(p.regionalConfigurations))
            aws_cdk_lib_IResolvable(p.regionalConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnGlobalReplicationGroup(p) {
}
function aws_cdk_lib_aws_elasticache_CfnGlobalReplicationGroup_GlobalReplicationGroupMemberProperty(p) {
}
function aws_cdk_lib_aws_elasticache_CfnGlobalReplicationGroup_RegionalConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.reshardingConfigurations))
            aws_cdk_lib_IResolvable(p.reshardingConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnGlobalReplicationGroup_ReshardingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_elasticache_CfnParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.properties))
            aws_cdk_lib_IResolvable(p.properties);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnParameterGroup(p) {
}
function aws_cdk_lib_aws_elasticache_CfnReplicationGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logDeliveryConfigurations))
            aws_cdk_lib_IResolvable(p.logDeliveryConfigurations);
        if (!visitedObjects.has(p.nodeGroupConfiguration))
            aws_cdk_lib_IResolvable(p.nodeGroupConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnReplicationGroup(p) {
}
function aws_cdk_lib_aws_elasticache_CfnReplicationGroup_CloudWatchLogsDestinationDetailsProperty(p) {
}
function aws_cdk_lib_aws_elasticache_CfnReplicationGroup_DestinationDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchLogsDetails))
            aws_cdk_lib_IResolvable(p.cloudWatchLogsDetails);
        if (!visitedObjects.has(p.kinesisFirehoseDetails))
            aws_cdk_lib_IResolvable(p.kinesisFirehoseDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnReplicationGroup_KinesisFirehoseDestinationDetailsProperty(p) {
}
function aws_cdk_lib_aws_elasticache_CfnReplicationGroup_LogDeliveryConfigurationRequestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationDetails))
            aws_cdk_lib_IResolvable(p.destinationDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnReplicationGroup_NodeGroupConfigurationProperty(p) {
}
function aws_cdk_lib_aws_elasticache_CfnSecurityGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnSecurityGroup(p) {
}
function aws_cdk_lib_aws_elasticache_CfnSecurityGroupIngressProps(p) {
}
function aws_cdk_lib_aws_elasticache_CfnSecurityGroupIngress(p) {
}
function aws_cdk_lib_aws_elasticache_CfnSubnetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnSubnetGroup(p) {
}
function aws_cdk_lib_aws_elasticache_CfnUserProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnUser(p) {
}
function aws_cdk_lib_aws_elasticache_CfnUser_AuthenticationModeProperty(p) {
}
function aws_cdk_lib_aws_elasticache_CfnUserGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticache_CfnUserGroup(p) {
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourceLifecycleConfig))
            aws_cdk_lib_IResolvable(p.resourceLifecycleConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnApplication(p) {
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnApplication_ApplicationResourceLifecycleConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.versionLifecycleConfig))
            aws_cdk_lib_IResolvable(p.versionLifecycleConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnApplication_ApplicationVersionLifecycleConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxAgeRule))
            aws_cdk_lib_IResolvable(p.maxAgeRule);
        if (!visitedObjects.has(p.maxCountRule))
            aws_cdk_lib_IResolvable(p.maxCountRule);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnApplication_MaxAgeRuleProperty(p) {
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnApplication_MaxCountRuleProperty(p) {
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnApplicationVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceBundle))
            aws_cdk_lib_IResolvable(p.sourceBundle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnApplicationVersion(p) {
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnApplicationVersion_SourceBundleProperty(p) {
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnConfigurationTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.optionSettings))
            aws_cdk_lib_IResolvable(p.optionSettings);
        if (!visitedObjects.has(p.sourceConfiguration))
            aws_cdk_lib_IResolvable(p.sourceConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnConfigurationTemplate(p) {
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnConfigurationTemplate_ConfigurationOptionSettingProperty(p) {
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnConfigurationTemplate_SourceConfigurationProperty(p) {
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnEnvironmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.optionSettings))
            aws_cdk_lib_IResolvable(p.optionSettings);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.tier))
            aws_cdk_lib_IResolvable(p.tier);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnEnvironment(p) {
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnEnvironment_OptionSettingProperty(p) {
}
function aws_cdk_lib_aws_elasticbeanstalk_CfnEnvironment_TierProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listeners))
            aws_cdk_lib_IResolvable(p.listeners);
        if (!visitedObjects.has(p.accessLoggingPolicy))
            aws_cdk_lib_IResolvable(p.accessLoggingPolicy);
        if (!visitedObjects.has(p.appCookieStickinessPolicy))
            aws_cdk_lib_IResolvable(p.appCookieStickinessPolicy);
        if (!visitedObjects.has(p.connectionDrainingPolicy))
            aws_cdk_lib_IResolvable(p.connectionDrainingPolicy);
        if (!visitedObjects.has(p.connectionSettings))
            aws_cdk_lib_IResolvable(p.connectionSettings);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_IResolvable(p.healthCheck);
        if (!visitedObjects.has(p.lbCookieStickinessPolicy))
            aws_cdk_lib_IResolvable(p.lbCookieStickinessPolicy);
        if (!visitedObjects.has(p.policies))
            aws_cdk_lib_IResolvable(p.policies);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_AccessLoggingPolicyProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_AppCookieStickinessPolicyProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_ConnectionDrainingPolicyProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_ConnectionSettingsProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_HealthCheckProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_LBCookieStickinessPolicyProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_ListenersProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_PoliciesProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_LoadBalancerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.accessLoggingPolicy))
            aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_AccessLoggingPolicyProperty(p.accessLoggingPolicy);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_elasticloadbalancing_HealthCheck(p.healthCheck);
        if (p.listeners != null)
            for (const o of p.listeners)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancing_LoadBalancerListener(o);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (p.targets != null)
            for (const o of p.targets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancing_ILoadBalancerTarget(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancing_HealthCheck(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_Duration(p.interval);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancing_LoadBalancingProtocol(p.protocol);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancing_ILoadBalancerTarget(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_LoadBalancerListener(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.allowConnectionsFrom != null)
            for (const o of p.allowConnectionsFrom)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_IConnectable(o);
        if (!visitedObjects.has(p.externalProtocol))
            aws_cdk_lib_aws_elasticloadbalancing_LoadBalancingProtocol(p.externalProtocol);
        if (!visitedObjects.has(p.internalProtocol))
            aws_cdk_lib_aws_elasticloadbalancing_LoadBalancingProtocol(p.internalProtocol);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancing_LoadBalancingProtocol(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_LoadBalancer(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_InstanceTarget(p) {
}
function aws_cdk_lib_aws_elasticloadbalancing_ListenerPort(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultActions))
            aws_cdk_lib_IResolvable(p.defaultActions);
        if (!visitedObjects.has(p.certificates))
            aws_cdk_lib_IResolvable(p.certificates);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticateCognitoConfig))
            aws_cdk_lib_IResolvable(p.authenticateCognitoConfig);
        if (!visitedObjects.has(p.authenticateOidcConfig))
            aws_cdk_lib_IResolvable(p.authenticateOidcConfig);
        if (!visitedObjects.has(p.fixedResponseConfig))
            aws_cdk_lib_IResolvable(p.fixedResponseConfig);
        if (!visitedObjects.has(p.forwardConfig))
            aws_cdk_lib_IResolvable(p.forwardConfig);
        if (!visitedObjects.has(p.redirectConfig))
            aws_cdk_lib_IResolvable(p.redirectConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_AuthenticateCognitoConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticationRequestExtraParams))
            aws_cdk_lib_IResolvable(p.authenticationRequestExtraParams);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_AuthenticateOidcConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticationRequestExtraParams))
            aws_cdk_lib_IResolvable(p.authenticationRequestExtraParams);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_CertificateProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_FixedResponseConfigProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_ForwardConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetGroups))
            aws_cdk_lib_IResolvable(p.targetGroups);
        if (!visitedObjects.has(p.targetGroupStickinessConfig))
            aws_cdk_lib_IResolvable(p.targetGroupStickinessConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_RedirectConfigProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_TargetGroupStickinessConfigProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_TargetGroupTupleProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerCertificateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.certificates))
            aws_cdk_lib_IResolvable(p.certificates);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerCertificate(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerCertificate_CertificateProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.conditions))
            aws_cdk_lib_IResolvable(p.conditions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticateCognitoConfig))
            aws_cdk_lib_IResolvable(p.authenticateCognitoConfig);
        if (!visitedObjects.has(p.authenticateOidcConfig))
            aws_cdk_lib_IResolvable(p.authenticateOidcConfig);
        if (!visitedObjects.has(p.fixedResponseConfig))
            aws_cdk_lib_IResolvable(p.fixedResponseConfig);
        if (!visitedObjects.has(p.forwardConfig))
            aws_cdk_lib_IResolvable(p.forwardConfig);
        if (!visitedObjects.has(p.redirectConfig))
            aws_cdk_lib_IResolvable(p.redirectConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_AuthenticateCognitoConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticationRequestExtraParams))
            aws_cdk_lib_IResolvable(p.authenticationRequestExtraParams);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_AuthenticateOidcConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticationRequestExtraParams))
            aws_cdk_lib_IResolvable(p.authenticationRequestExtraParams);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_FixedResponseConfigProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_ForwardConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetGroups))
            aws_cdk_lib_IResolvable(p.targetGroups);
        if (!visitedObjects.has(p.targetGroupStickinessConfig))
            aws_cdk_lib_IResolvable(p.targetGroupStickinessConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_HostHeaderConfigProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_HttpHeaderConfigProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_HttpRequestMethodConfigProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_PathPatternConfigProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_QueryStringConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_QueryStringKeyValueProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_RedirectConfigProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_RuleConditionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hostHeaderConfig))
            aws_cdk_lib_IResolvable(p.hostHeaderConfig);
        if (!visitedObjects.has(p.httpHeaderConfig))
            aws_cdk_lib_IResolvable(p.httpHeaderConfig);
        if (!visitedObjects.has(p.httpRequestMethodConfig))
            aws_cdk_lib_IResolvable(p.httpRequestMethodConfig);
        if (!visitedObjects.has(p.pathPatternConfig))
            aws_cdk_lib_IResolvable(p.pathPatternConfig);
        if (!visitedObjects.has(p.queryStringConfig))
            aws_cdk_lib_IResolvable(p.queryStringConfig);
        if (!visitedObjects.has(p.sourceIpConfig))
            aws_cdk_lib_IResolvable(p.sourceIpConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_SourceIpConfigProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_TargetGroupStickinessConfigProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_TargetGroupTupleProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnLoadBalancerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loadBalancerAttributes))
            aws_cdk_lib_IResolvable(p.loadBalancerAttributes);
        if (!visitedObjects.has(p.subnetMappings))
            aws_cdk_lib_IResolvable(p.subnetMappings);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnLoadBalancer(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnLoadBalancer_LoadBalancerAttributeProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnLoadBalancer_SubnetMappingProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnTargetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matcher))
            aws_cdk_lib_IResolvable(p.matcher);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.targetGroupAttributes))
            aws_cdk_lib_IResolvable(p.targetGroupAttributes);
        if (!visitedObjects.has(p.targets))
            aws_cdk_lib_IResolvable(p.targets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnTargetGroup(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnTargetGroup_MatcherProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnTargetGroup_TargetDescriptionProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_CfnTargetGroup_TargetGroupAttributeProperty(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_BaseApplicationListenerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.certificates != null)
            for (const o of p.certificates)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_IListenerCertificate(o);
        if (!visitedObjects.has(p.defaultAction))
            aws_cdk_lib_aws_elasticloadbalancingv2_ListenerAction(p.defaultAction);
        if (p.defaultTargetGroups != null)
            for (const o of p.defaultTargetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationTargetGroup(o);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.protocol);
        if (!visitedObjects.has(p.sslPolicy))
            aws_cdk_lib_aws_elasticloadbalancingv2_SslPolicy(p.sslPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loadBalancer))
            aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationLoadBalancer(p.loadBalancer);
        if (p.certificates != null)
            for (const o of p.certificates)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_IListenerCertificate(o);
        if (!visitedObjects.has(p.defaultAction))
            aws_cdk_lib_aws_elasticloadbalancingv2_ListenerAction(p.defaultAction);
        if (p.defaultTargetGroups != null)
            for (const o of p.defaultTargetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationTargetGroup(o);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.protocol);
        if (!visitedObjects.has(p.sslPolicy))
            aws_cdk_lib_aws_elasticloadbalancingv2_SslPolicy(p.sslPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerLookupOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listenerProtocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.listenerProtocol);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListener(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationListener(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_AddRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.conditions != null)
            for (const o of p.conditions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_ListenerCondition(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_AddApplicationTargetGroupsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.targetGroups != null)
            for (const o of p.targetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationTargetGroup(o);
        if (p.conditions != null)
            for (const o of p.conditions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_ListenerCondition(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_AddApplicationActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_aws_elasticloadbalancingv2_ListenerAction(p.action);
        if (p.conditions != null)
            for (const o of p.conditions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_ListenerCondition(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_AddApplicationTargetsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deregistrationDelay))
            aws_cdk_lib_Duration(p.deregistrationDelay);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_elasticloadbalancingv2_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.loadBalancingAlgorithmType))
            aws_cdk_lib_aws_elasticloadbalancingv2_TargetGroupLoadBalancingAlgorithmType(p.loadBalancingAlgorithmType);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.protocol);
        if (!visitedObjects.has(p.protocolVersion))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocolVersion(p.protocolVersion);
        if (!visitedObjects.has(p.slowStart))
            aws_cdk_lib_Duration(p.slowStart);
        if (!visitedObjects.has(p.stickinessCookieDuration))
            aws_cdk_lib_Duration(p.stickinessCookieDuration);
        if (p.targets != null)
            for (const o of p.targets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationLoadBalancerTarget(o);
        if (p.conditions != null)
            for (const o of p.conditions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_ListenerCondition(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerCertificateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listener))
            aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationListener(p.listener);
        if (p.certificates != null)
            for (const o of p.certificates)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_IListenerCertificate(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerCertificate(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_BaseApplicationListenerRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_aws_elasticloadbalancingv2_ListenerAction(p.action);
        if (p.conditions != null)
            for (const o of p.conditions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_ListenerCondition(o);
        if (p.targetGroups != null)
            for (const o of p.targetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationTargetGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listener))
            aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationListener(p.listener);
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_aws_elasticloadbalancingv2_ListenerAction(p.action);
        if (p.conditions != null)
            for (const o of p.conditions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_ListenerCondition(o);
        if (p.targetGroups != null)
            for (const o of p.targetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationTargetGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerRule(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationLoadBalancerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.desyncMitigationMode))
            aws_cdk_lib_aws_elasticloadbalancingv2_DesyncMitigationMode(p.desyncMitigationMode);
        if (!visitedObjects.has(p.idleTimeout))
            aws_cdk_lib_Duration(p.idleTimeout);
        if (!visitedObjects.has(p.ipAddressType))
            aws_cdk_lib_aws_elasticloadbalancingv2_IpAddressType(p.ipAddressType);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationLoadBalancerLookupOptions(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationLoadBalancer(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_HttpCodeElb(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_HttpCodeTarget(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationLoadBalancerMetrics(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationLoadBalancer(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationLoadBalancerAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationLoadBalancerRedirectConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceProtocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.sourceProtocol);
        if (!visitedObjects.has(p.targetProtocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.targetProtocol);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationTargetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loadBalancingAlgorithmType))
            aws_cdk_lib_aws_elasticloadbalancingv2_TargetGroupLoadBalancingAlgorithmType(p.loadBalancingAlgorithmType);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p.protocol);
        if (!visitedObjects.has(p.protocolVersion))
            aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocolVersion(p.protocolVersion);
        if (!visitedObjects.has(p.slowStart))
            aws_cdk_lib_Duration(p.slowStart);
        if (!visitedObjects.has(p.stickinessCookieDuration))
            aws_cdk_lib_Duration(p.stickinessCookieDuration);
        if (p.targets != null)
            for (const o of p.targets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationLoadBalancerTarget(o);
        if (!visitedObjects.has(p.deregistrationDelay))
            aws_cdk_lib_Duration(p.deregistrationDelay);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_elasticloadbalancingv2_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.targetType))
            aws_cdk_lib_aws_elasticloadbalancingv2_TargetType(p.targetType);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationTargetGroupMetrics(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationTargetGroup(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationTargetGroup(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationLoadBalancerTarget(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ListenerAction(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ForwardOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stickinessDuration))
            aws_cdk_lib_Duration(p.stickinessDuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_WeightedTargetGroup(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetGroup))
            aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationTargetGroup(p.targetGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_FixedResponseOptions(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_RedirectOptions(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_AuthenticateOidcOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientSecret))
            aws_cdk_lib_SecretValue(p.clientSecret);
        if (!visitedObjects.has(p.next))
            aws_cdk_lib_aws_elasticloadbalancingv2_ListenerAction(p.next);
        if (!visitedObjects.has(p.onUnauthenticatedRequest))
            aws_cdk_lib_aws_elasticloadbalancingv2_UnauthenticatedAction(p.onUnauthenticatedRequest);
        if (!visitedObjects.has(p.sessionTimeout))
            aws_cdk_lib_Duration(p.sessionTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_UnauthenticatedAction(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ListenerCondition(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_QueryStringCondition(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_BaseNetworkListenerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alpnPolicy))
            aws_cdk_lib_aws_elasticloadbalancingv2_AlpnPolicy(p.alpnPolicy);
        if (p.certificates != null)
            for (const o of p.certificates)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_IListenerCertificate(o);
        if (!visitedObjects.has(p.defaultAction))
            aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListenerAction(p.defaultAction);
        if (p.defaultTargetGroups != null)
            for (const o of p.defaultTargetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_INetworkTargetGroup(o);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_Protocol(p.protocol);
        if (!visitedObjects.has(p.sslPolicy))
            aws_cdk_lib_aws_elasticloadbalancingv2_SslPolicy(p.sslPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListenerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loadBalancer))
            aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancer(p.loadBalancer);
        if (!visitedObjects.has(p.alpnPolicy))
            aws_cdk_lib_aws_elasticloadbalancingv2_AlpnPolicy(p.alpnPolicy);
        if (p.certificates != null)
            for (const o of p.certificates)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_IListenerCertificate(o);
        if (!visitedObjects.has(p.defaultAction))
            aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListenerAction(p.defaultAction);
        if (p.defaultTargetGroups != null)
            for (const o of p.defaultTargetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_INetworkTargetGroup(o);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_Protocol(p.protocol);
        if (!visitedObjects.has(p.sslPolicy))
            aws_cdk_lib_aws_elasticloadbalancingv2_SslPolicy(p.sslPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListenerLookupOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listenerProtocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_Protocol(p.listenerProtocol);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListener(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_INetworkListener(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_AddNetworkActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListenerAction(p.action);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_AddNetworkTargetsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deregistrationDelay))
            aws_cdk_lib_Duration(p.deregistrationDelay);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_elasticloadbalancingv2_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_Protocol(p.protocol);
        if (p.targets != null)
            for (const o of p.targets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancerTarget(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_NetworkLoadBalancerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_NetworkLoadBalancerAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_NetworkLoadBalancerLookupOptions(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_NetworkLoadBalancer(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancerMetrics(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancer(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_NetworkTargetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_Protocol(p.protocol);
        if (p.targets != null)
            for (const o of p.targets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancerTarget(o);
        if (!visitedObjects.has(p.deregistrationDelay))
            aws_cdk_lib_Duration(p.deregistrationDelay);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_elasticloadbalancingv2_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.targetType))
            aws_cdk_lib_aws_elasticloadbalancingv2_TargetType(p.targetType);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_INetworkTargetGroupMetrics(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_NetworkTargetGroup(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_INetworkTargetGroup(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancerTarget(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListenerAction(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_NetworkForwardOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stickinessDuration))
            aws_cdk_lib_Duration(p.stickinessDuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_NetworkWeightedTargetGroup(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetGroup))
            aws_cdk_lib_aws_elasticloadbalancingv2_INetworkTargetGroup(p.targetGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_BaseListenerLookupOptions(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_IListener(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_BaseListener(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_BaseLoadBalancerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ILoadBalancerV2(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_BaseLoadBalancerLookupOptions(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_BaseLoadBalancer(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_BaseTargetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deregistrationDelay))
            aws_cdk_lib_Duration(p.deregistrationDelay);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_elasticloadbalancingv2_HealthCheck(p.healthCheck);
        if (!visitedObjects.has(p.targetType))
            aws_cdk_lib_aws_elasticloadbalancingv2_TargetType(p.targetType);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_HealthCheck(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_Duration(p.interval);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_elasticloadbalancingv2_Protocol(p.protocol);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_TargetGroupBase(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_TargetGroupAttributes(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ITargetGroup(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_LoadBalancerTargetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetType))
            aws_cdk_lib_aws_elasticloadbalancingv2_TargetType(p.targetType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_IpAddressType(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_Protocol(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocolVersion(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_SslPolicy(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_TargetType(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_AlpnPolicy(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_TargetGroupLoadBalancingAlgorithmType(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_DesyncMitigationMode(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_IListenerCertificate(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_ListenerCertificate(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_IListenerAction(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_actions_AuthenticateCognitoActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.next))
            aws_cdk_lib_aws_elasticloadbalancingv2_ListenerAction(p.next);
        if (!visitedObjects.has(p.userPool))
            aws_cdk_lib_aws_cognito_IUserPool(p.userPool);
        if (!visitedObjects.has(p.userPoolClient))
            aws_cdk_lib_aws_cognito_IUserPoolClient(p.userPoolClient);
        if (!visitedObjects.has(p.userPoolDomain))
            aws_cdk_lib_aws_cognito_IUserPoolDomain(p.userPoolDomain);
        if (!visitedObjects.has(p.onUnauthenticatedRequest))
            aws_cdk_lib_aws_elasticloadbalancingv2_UnauthenticatedAction(p.onUnauthenticatedRequest);
        if (!visitedObjects.has(p.sessionTimeout))
            aws_cdk_lib_Duration(p.sessionTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticloadbalancingv2_actions_AuthenticateCognitoAction(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_targets_AlbArnTarget(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_targets_AlbTarget(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_targets_IpTarget(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_targets_InstanceIdTarget(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_targets_InstanceTarget(p) {
}
function aws_cdk_lib_aws_elasticloadbalancingv2_targets_LambdaTarget(p) {
}
function aws_cdk_lib_aws_elasticsearch_ElasticsearchVersion(p) {
}
function aws_cdk_lib_aws_elasticsearch_CapacityConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("dataNodeInstanceType" in p)
            print("aws-cdk-lib.aws_elasticsearch.CapacityConfig#dataNodeInstanceType", "use opensearchservice module instead");
        if ("dataNodes" in p)
            print("aws-cdk-lib.aws_elasticsearch.CapacityConfig#dataNodes", "use opensearchservice module instead");
        if ("masterNodeInstanceType" in p)
            print("aws-cdk-lib.aws_elasticsearch.CapacityConfig#masterNodeInstanceType", "use opensearchservice module instead");
        if ("masterNodes" in p)
            print("aws-cdk-lib.aws_elasticsearch.CapacityConfig#masterNodes", "use opensearchservice module instead");
        if ("warmInstanceType" in p)
            print("aws-cdk-lib.aws_elasticsearch.CapacityConfig#warmInstanceType", "use opensearchservice module instead");
        if ("warmNodes" in p)
            print("aws-cdk-lib.aws_elasticsearch.CapacityConfig#warmNodes", "use opensearchservice module instead");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_ZoneAwarenessConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("availabilityZoneCount" in p)
            print("aws-cdk-lib.aws_elasticsearch.ZoneAwarenessConfig#availabilityZoneCount", "use opensearchservice module instead");
        if ("enabled" in p)
            print("aws-cdk-lib.aws_elasticsearch.ZoneAwarenessConfig#enabled", "use opensearchservice module instead");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_EbsOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("enabled" in p)
            print("aws-cdk-lib.aws_elasticsearch.EbsOptions#enabled", "use opensearchservice module instead");
        if ("iops" in p)
            print("aws-cdk-lib.aws_elasticsearch.EbsOptions#iops", "use opensearchservice module instead");
        if ("volumeSize" in p)
            print("aws-cdk-lib.aws_elasticsearch.EbsOptions#volumeSize", "use opensearchservice module instead");
        if ("volumeType" in p)
            print("aws-cdk-lib.aws_elasticsearch.EbsOptions#volumeType", "use opensearchservice module instead");
        if (!visitedObjects.has(p.volumeType))
            aws_cdk_lib_aws_ec2_EbsDeviceVolumeType(p.volumeType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_LoggingOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("appLogEnabled" in p)
            print("aws-cdk-lib.aws_elasticsearch.LoggingOptions#appLogEnabled", "use opensearchservice module instead");
        if ("appLogGroup" in p)
            print("aws-cdk-lib.aws_elasticsearch.LoggingOptions#appLogGroup", "use opensearchservice module instead");
        if (!visitedObjects.has(p.appLogGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.appLogGroup);
        if ("auditLogEnabled" in p)
            print("aws-cdk-lib.aws_elasticsearch.LoggingOptions#auditLogEnabled", "use opensearchservice module instead");
        if ("auditLogGroup" in p)
            print("aws-cdk-lib.aws_elasticsearch.LoggingOptions#auditLogGroup", "use opensearchservice module instead");
        if (!visitedObjects.has(p.auditLogGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.auditLogGroup);
        if ("slowIndexLogEnabled" in p)
            print("aws-cdk-lib.aws_elasticsearch.LoggingOptions#slowIndexLogEnabled", "use opensearchservice module instead");
        if ("slowIndexLogGroup" in p)
            print("aws-cdk-lib.aws_elasticsearch.LoggingOptions#slowIndexLogGroup", "use opensearchservice module instead");
        if (!visitedObjects.has(p.slowIndexLogGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.slowIndexLogGroup);
        if ("slowSearchLogEnabled" in p)
            print("aws-cdk-lib.aws_elasticsearch.LoggingOptions#slowSearchLogEnabled", "use opensearchservice module instead");
        if ("slowSearchLogGroup" in p)
            print("aws-cdk-lib.aws_elasticsearch.LoggingOptions#slowSearchLogGroup", "use opensearchservice module instead");
        if (!visitedObjects.has(p.slowSearchLogGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.slowSearchLogGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_EncryptionAtRestOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("enabled" in p)
            print("aws-cdk-lib.aws_elasticsearch.EncryptionAtRestOptions#enabled", "use opensearchservice module instead");
        if ("kmsKey" in p)
            print("aws-cdk-lib.aws_elasticsearch.EncryptionAtRestOptions#kmsKey", "use opensearchservice module instead");
        if (!visitedObjects.has(p.kmsKey))
            aws_cdk_lib_aws_kms_IKey(p.kmsKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_CognitoOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("identityPoolId" in p)
            print("aws-cdk-lib.aws_elasticsearch.CognitoOptions#identityPoolId", "use opensearchservice module instead");
        if ("role" in p)
            print("aws-cdk-lib.aws_elasticsearch.CognitoOptions#role", "use opensearchservice module instead");
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if ("userPoolId" in p)
            print("aws-cdk-lib.aws_elasticsearch.CognitoOptions#userPoolId", "use opensearchservice module instead");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_TLSSecurityPolicy(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        print("aws-cdk-lib.aws_elasticsearch.TLSSecurityPolicy", "use opensearchservice module instead");
        const ns = require("./aws-elasticsearch/lib/domain.js");
        if (Object.values(ns.TLSSecurityPolicy).filter(x => x === p).length > 1)
            return;
        if (p === ns.TLSSecurityPolicy.TLS_1_0)
            print("aws-cdk-lib.aws_elasticsearch.TLSSecurityPolicy#TLS_1_0", "");
        if (p === ns.TLSSecurityPolicy.TLS_1_2)
            print("aws-cdk-lib.aws_elasticsearch.TLSSecurityPolicy#TLS_1_2", "");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_AdvancedSecurityOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("masterUserArn" in p)
            print("aws-cdk-lib.aws_elasticsearch.AdvancedSecurityOptions#masterUserArn", "use opensearchservice module instead");
        if ("masterUserName" in p)
            print("aws-cdk-lib.aws_elasticsearch.AdvancedSecurityOptions#masterUserName", "use opensearchservice module instead");
        if ("masterUserPassword" in p)
            print("aws-cdk-lib.aws_elasticsearch.AdvancedSecurityOptions#masterUserPassword", "use opensearchservice module instead");
        if (!visitedObjects.has(p.masterUserPassword))
            aws_cdk_lib_SecretValue(p.masterUserPassword);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_CustomEndpointOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("domainName" in p)
            print("aws-cdk-lib.aws_elasticsearch.CustomEndpointOptions#domainName", "use opensearchservice module instead");
        if ("certificate" in p)
            print("aws-cdk-lib.aws_elasticsearch.CustomEndpointOptions#certificate", "use opensearchservice module instead");
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_certificatemanager_ICertificate(p.certificate);
        if ("hostedZone" in p)
            print("aws-cdk-lib.aws_elasticsearch.CustomEndpointOptions#hostedZone", "use opensearchservice module instead");
        if (!visitedObjects.has(p.hostedZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.hostedZone);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_DomainProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("version" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#version", "use opensearchservice module instead");
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_elasticsearch_ElasticsearchVersion(p.version);
        if ("accessPolicies" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#accessPolicies", "use opensearchservice module instead");
        if (p.accessPolicies != null)
            for (const o of p.accessPolicies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if ("advancedOptions" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#advancedOptions", "use opensearchservice module instead");
        if ("automatedSnapshotStartHour" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#automatedSnapshotStartHour", "use opensearchservice module instead");
        if ("capacity" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#capacity", "use opensearchservice module instead");
        if (!visitedObjects.has(p.capacity))
            aws_cdk_lib_aws_elasticsearch_CapacityConfig(p.capacity);
        if ("cognitoKibanaAuth" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#cognitoKibanaAuth", "use opensearchservice module instead");
        if (!visitedObjects.has(p.cognitoKibanaAuth))
            aws_cdk_lib_aws_elasticsearch_CognitoOptions(p.cognitoKibanaAuth);
        if ("customEndpoint" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#customEndpoint", "use opensearchservice module instead");
        if (!visitedObjects.has(p.customEndpoint))
            aws_cdk_lib_aws_elasticsearch_CustomEndpointOptions(p.customEndpoint);
        if ("domainName" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#domainName", "use opensearchservice module instead");
        if ("ebs" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#ebs", "use opensearchservice module instead");
        if (!visitedObjects.has(p.ebs))
            aws_cdk_lib_aws_elasticsearch_EbsOptions(p.ebs);
        if ("enableVersionUpgrade" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#enableVersionUpgrade", "use opensearchservice module instead");
        if ("encryptionAtRest" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#encryptionAtRest", "use opensearchservice module instead");
        if (!visitedObjects.has(p.encryptionAtRest))
            aws_cdk_lib_aws_elasticsearch_EncryptionAtRestOptions(p.encryptionAtRest);
        if ("enforceHttps" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#enforceHttps", "use opensearchservice module instead");
        if ("fineGrainedAccessControl" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#fineGrainedAccessControl", "use opensearchservice module instead");
        if (!visitedObjects.has(p.fineGrainedAccessControl))
            aws_cdk_lib_aws_elasticsearch_AdvancedSecurityOptions(p.fineGrainedAccessControl);
        if ("logging" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#logging", "use opensearchservice module instead");
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_aws_elasticsearch_LoggingOptions(p.logging);
        if ("nodeToNodeEncryption" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#nodeToNodeEncryption", "use opensearchservice module instead");
        if ("removalPolicy" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#removalPolicy", "use opensearchservice module instead");
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if ("securityGroups" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#securityGroups", "use opensearchservice module instead");
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if ("tlsSecurityPolicy" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#tlsSecurityPolicy", "use opensearchservice module instead");
        if (!visitedObjects.has(p.tlsSecurityPolicy))
            aws_cdk_lib_aws_elasticsearch_TLSSecurityPolicy(p.tlsSecurityPolicy);
        if ("useUnsignedBasicAuth" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#useUnsignedBasicAuth", "use opensearchservice module instead");
        if ("vpc" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#vpc", "use opensearchservice module instead");
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if ("vpcSubnets" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#vpcSubnets", "use opensearchservice module instead");
        if (p.vpcSubnets != null)
            for (const o of p.vpcSubnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_SubnetSelection(o);
        if ("zoneAwareness" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainProps#zoneAwareness", "use opensearchservice module instead");
        if (!visitedObjects.has(p.zoneAwareness))
            aws_cdk_lib_aws_elasticsearch_ZoneAwarenessConfig(p.zoneAwareness);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_IDomain(p) {
}
function aws_cdk_lib_aws_elasticsearch_DomainAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("domainArn" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainAttributes#domainArn", "use opensearchservice module instead");
        if ("domainEndpoint" in p)
            print("aws-cdk-lib.aws_elasticsearch.DomainAttributes#domainEndpoint", "use opensearchservice module instead");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_Domain(p) {
}
function aws_cdk_lib_aws_elasticsearch_CfnDomainProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.advancedOptions))
            aws_cdk_lib_IResolvable(p.advancedOptions);
        if (!visitedObjects.has(p.advancedSecurityOptions))
            aws_cdk_lib_IResolvable(p.advancedSecurityOptions);
        if (!visitedObjects.has(p.cognitoOptions))
            aws_cdk_lib_IResolvable(p.cognitoOptions);
        if (!visitedObjects.has(p.domainEndpointOptions))
            aws_cdk_lib_IResolvable(p.domainEndpointOptions);
        if (!visitedObjects.has(p.ebsOptions))
            aws_cdk_lib_IResolvable(p.ebsOptions);
        if (!visitedObjects.has(p.elasticsearchClusterConfig))
            aws_cdk_lib_IResolvable(p.elasticsearchClusterConfig);
        if (!visitedObjects.has(p.encryptionAtRestOptions))
            aws_cdk_lib_IResolvable(p.encryptionAtRestOptions);
        if (!visitedObjects.has(p.logPublishingOptions))
            aws_cdk_lib_IResolvable(p.logPublishingOptions);
        if (!visitedObjects.has(p.nodeToNodeEncryptionOptions))
            aws_cdk_lib_IResolvable(p.nodeToNodeEncryptionOptions);
        if (!visitedObjects.has(p.snapshotOptions))
            aws_cdk_lib_IResolvable(p.snapshotOptions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.vpcOptions))
            aws_cdk_lib_IResolvable(p.vpcOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain(p) {
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_AdvancedSecurityOptionsInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.masterUserOptions))
            aws_cdk_lib_IResolvable(p.masterUserOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_CognitoOptionsProperty(p) {
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_ColdStorageOptionsProperty(p) {
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_DomainEndpointOptionsProperty(p) {
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_EBSOptionsProperty(p) {
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_ElasticsearchClusterConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.coldStorageOptions))
            aws_cdk_lib_IResolvable(p.coldStorageOptions);
        if (!visitedObjects.has(p.zoneAwarenessConfig))
            aws_cdk_lib_IResolvable(p.zoneAwarenessConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_EncryptionAtRestOptionsProperty(p) {
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_LogPublishingOptionProperty(p) {
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_MasterUserOptionsProperty(p) {
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_NodeToNodeEncryptionOptionsProperty(p) {
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_SnapshotOptionsProperty(p) {
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_VPCOptionsProperty(p) {
}
function aws_cdk_lib_aws_elasticsearch_CfnDomain_ZoneAwarenessConfigProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instances))
            aws_cdk_lib_IResolvable(p.instances);
        if (!visitedObjects.has(p.applications))
            aws_cdk_lib_IResolvable(p.applications);
        if (!visitedObjects.has(p.autoTerminationPolicy))
            aws_cdk_lib_IResolvable(p.autoTerminationPolicy);
        if (!visitedObjects.has(p.bootstrapActions))
            aws_cdk_lib_IResolvable(p.bootstrapActions);
        if (!visitedObjects.has(p.configurations))
            aws_cdk_lib_IResolvable(p.configurations);
        if (!visitedObjects.has(p.kerberosAttributes))
            aws_cdk_lib_IResolvable(p.kerberosAttributes);
        if (!visitedObjects.has(p.managedScalingPolicy))
            aws_cdk_lib_IResolvable(p.managedScalingPolicy);
        if (!visitedObjects.has(p.steps))
            aws_cdk_lib_IResolvable(p.steps);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster(p) {
}
function aws_cdk_lib_aws_emr_CfnCluster_ApplicationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.additionalInfo))
            aws_cdk_lib_IResolvable(p.additionalInfo);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_AutoScalingPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.constraints))
            aws_cdk_lib_IResolvable(p.constraints);
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_AutoTerminationPolicyProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnCluster_BootstrapActionConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scriptBootstrapAction))
            aws_cdk_lib_IResolvable(p.scriptBootstrapAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_CloudWatchAlarmDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_ComputeLimitsProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnCluster_ConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurationProperties))
            aws_cdk_lib_IResolvable(p.configurationProperties);
        if (!visitedObjects.has(p.configurations))
            aws_cdk_lib_IResolvable(p.configurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_EbsBlockDeviceConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeSpecification))
            aws_cdk_lib_IResolvable(p.volumeSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_EbsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ebsBlockDeviceConfigs))
            aws_cdk_lib_IResolvable(p.ebsBlockDeviceConfigs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_HadoopJarStepConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stepProperties))
            aws_cdk_lib_IResolvable(p.stepProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_InstanceFleetConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceTypeConfigs))
            aws_cdk_lib_IResolvable(p.instanceTypeConfigs);
        if (!visitedObjects.has(p.launchSpecifications))
            aws_cdk_lib_IResolvable(p.launchSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_InstanceFleetProvisioningSpecificationsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onDemandSpecification))
            aws_cdk_lib_IResolvable(p.onDemandSpecification);
        if (!visitedObjects.has(p.spotSpecification))
            aws_cdk_lib_IResolvable(p.spotSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_InstanceGroupConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScalingPolicy))
            aws_cdk_lib_IResolvable(p.autoScalingPolicy);
        if (!visitedObjects.has(p.configurations))
            aws_cdk_lib_IResolvable(p.configurations);
        if (!visitedObjects.has(p.ebsConfiguration))
            aws_cdk_lib_IResolvable(p.ebsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_InstanceTypeConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurations))
            aws_cdk_lib_IResolvable(p.configurations);
        if (!visitedObjects.has(p.ebsConfiguration))
            aws_cdk_lib_IResolvable(p.ebsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_JobFlowInstancesConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.coreInstanceFleet))
            aws_cdk_lib_IResolvable(p.coreInstanceFleet);
        if (!visitedObjects.has(p.coreInstanceGroup))
            aws_cdk_lib_IResolvable(p.coreInstanceGroup);
        if (!visitedObjects.has(p.masterInstanceFleet))
            aws_cdk_lib_IResolvable(p.masterInstanceFleet);
        if (!visitedObjects.has(p.masterInstanceGroup))
            aws_cdk_lib_IResolvable(p.masterInstanceGroup);
        if (!visitedObjects.has(p.placement))
            aws_cdk_lib_IResolvable(p.placement);
        if (!visitedObjects.has(p.taskInstanceFleets))
            aws_cdk_lib_IResolvable(p.taskInstanceFleets);
        if (!visitedObjects.has(p.taskInstanceGroups))
            aws_cdk_lib_IResolvable(p.taskInstanceGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_KerberosAttributesProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnCluster_KeyValueProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnCluster_ManagedScalingPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.computeLimits))
            aws_cdk_lib_IResolvable(p.computeLimits);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_MetricDimensionProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnCluster_OnDemandProvisioningSpecificationProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnCluster_PlacementTypeProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnCluster_ScalingActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.simpleScalingPolicyConfiguration))
            aws_cdk_lib_IResolvable(p.simpleScalingPolicyConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_ScalingConstraintsProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnCluster_ScalingRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
        if (!visitedObjects.has(p.trigger))
            aws_cdk_lib_IResolvable(p.trigger);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_ScalingTriggerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchAlarmDefinition))
            aws_cdk_lib_IResolvable(p.cloudWatchAlarmDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_ScriptBootstrapActionConfigProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnCluster_SimpleScalingPolicyConfigurationProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnCluster_SpotProvisioningSpecificationProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnCluster_StepConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hadoopJarStep))
            aws_cdk_lib_IResolvable(p.hadoopJarStep);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnCluster_VolumeSpecificationProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnInstanceFleetConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceTypeConfigs))
            aws_cdk_lib_IResolvable(p.instanceTypeConfigs);
        if (!visitedObjects.has(p.launchSpecifications))
            aws_cdk_lib_IResolvable(p.launchSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceFleetConfig(p) {
}
function aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_ConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurationProperties))
            aws_cdk_lib_IResolvable(p.configurationProperties);
        if (!visitedObjects.has(p.configurations))
            aws_cdk_lib_IResolvable(p.configurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_EbsBlockDeviceConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeSpecification))
            aws_cdk_lib_IResolvable(p.volumeSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_EbsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ebsBlockDeviceConfigs))
            aws_cdk_lib_IResolvable(p.ebsBlockDeviceConfigs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_InstanceFleetProvisioningSpecificationsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onDemandSpecification))
            aws_cdk_lib_IResolvable(p.onDemandSpecification);
        if (!visitedObjects.has(p.spotSpecification))
            aws_cdk_lib_IResolvable(p.spotSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_InstanceTypeConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurations))
            aws_cdk_lib_IResolvable(p.configurations);
        if (!visitedObjects.has(p.ebsConfiguration))
            aws_cdk_lib_IResolvable(p.ebsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_OnDemandProvisioningSpecificationProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_SpotProvisioningSpecificationProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_VolumeSpecificationProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScalingPolicy))
            aws_cdk_lib_IResolvable(p.autoScalingPolicy);
        if (!visitedObjects.has(p.configurations))
            aws_cdk_lib_IResolvable(p.configurations);
        if (!visitedObjects.has(p.ebsConfiguration))
            aws_cdk_lib_IResolvable(p.ebsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig(p) {
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_AutoScalingPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.constraints))
            aws_cdk_lib_IResolvable(p.constraints);
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_CloudWatchAlarmDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_ConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurationProperties))
            aws_cdk_lib_IResolvable(p.configurationProperties);
        if (!visitedObjects.has(p.configurations))
            aws_cdk_lib_IResolvable(p.configurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_EbsBlockDeviceConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeSpecification))
            aws_cdk_lib_IResolvable(p.volumeSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_EbsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ebsBlockDeviceConfigs))
            aws_cdk_lib_IResolvable(p.ebsBlockDeviceConfigs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_MetricDimensionProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_ScalingActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.simpleScalingPolicyConfiguration))
            aws_cdk_lib_IResolvable(p.simpleScalingPolicyConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_ScalingConstraintsProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_ScalingRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
        if (!visitedObjects.has(p.trigger))
            aws_cdk_lib_IResolvable(p.trigger);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_ScalingTriggerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchAlarmDefinition))
            aws_cdk_lib_IResolvable(p.cloudWatchAlarmDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_SimpleScalingPolicyConfigurationProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_VolumeSpecificationProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnSecurityConfigurationProps(p) {
}
function aws_cdk_lib_aws_emr_CfnSecurityConfiguration(p) {
}
function aws_cdk_lib_aws_emr_CfnStepProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hadoopJarStep))
            aws_cdk_lib_IResolvable(p.hadoopJarStep);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnStep(p) {
}
function aws_cdk_lib_aws_emr_CfnStep_HadoopJarStepConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stepProperties))
            aws_cdk_lib_IResolvable(p.stepProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnStep_KeyValueProperty(p) {
}
function aws_cdk_lib_aws_emr_CfnStudioProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emr_CfnStudio(p) {
}
function aws_cdk_lib_aws_emr_CfnStudioSessionMappingProps(p) {
}
function aws_cdk_lib_aws_emr_CfnStudioSessionMapping(p) {
}
function aws_cdk_lib_aws_emrcontainers_CfnVirtualClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containerProvider))
            aws_cdk_lib_IResolvable(p.containerProvider);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emrcontainers_CfnVirtualCluster(p) {
}
function aws_cdk_lib_aws_emrcontainers_CfnVirtualCluster_ContainerInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eksInfo))
            aws_cdk_lib_IResolvable(p.eksInfo);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emrcontainers_CfnVirtualCluster_ContainerProviderProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.info))
            aws_cdk_lib_IResolvable(p.info);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emrcontainers_CfnVirtualCluster_EksInfoProperty(p) {
}
function aws_cdk_lib_aws_emrserverless_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoStartConfiguration))
            aws_cdk_lib_IResolvable(p.autoStartConfiguration);
        if (!visitedObjects.has(p.autoStopConfiguration))
            aws_cdk_lib_IResolvable(p.autoStopConfiguration);
        if (!visitedObjects.has(p.imageConfiguration))
            aws_cdk_lib_IResolvable(p.imageConfiguration);
        if (!visitedObjects.has(p.initialCapacity))
            aws_cdk_lib_IResolvable(p.initialCapacity);
        if (!visitedObjects.has(p.maximumCapacity))
            aws_cdk_lib_IResolvable(p.maximumCapacity);
        if (!visitedObjects.has(p.networkConfiguration))
            aws_cdk_lib_IResolvable(p.networkConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.workerTypeSpecifications))
            aws_cdk_lib_IResolvable(p.workerTypeSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emrserverless_CfnApplication(p) {
}
function aws_cdk_lib_aws_emrserverless_CfnApplication_AutoStartConfigurationProperty(p) {
}
function aws_cdk_lib_aws_emrserverless_CfnApplication_AutoStopConfigurationProperty(p) {
}
function aws_cdk_lib_aws_emrserverless_CfnApplication_ImageConfigurationInputProperty(p) {
}
function aws_cdk_lib_aws_emrserverless_CfnApplication_InitialCapacityConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.workerConfiguration))
            aws_cdk_lib_IResolvable(p.workerConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emrserverless_CfnApplication_InitialCapacityConfigKeyValuePairProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_emrserverless_CfnApplication_MaximumAllowedResourcesProperty(p) {
}
function aws_cdk_lib_aws_emrserverless_CfnApplication_NetworkConfigurationProperty(p) {
}
function aws_cdk_lib_aws_emrserverless_CfnApplication_WorkerConfigurationProperty(p) {
}
function aws_cdk_lib_aws_emrserverless_CfnApplication_WorkerTypeSpecificationInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.imageConfiguration))
            aws_cdk_lib_IResolvable(p.imageConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_RuleTargetInput(p) {
}
function aws_cdk_lib_aws_events_RuleTargetInputProperties(p) {
}
function aws_cdk_lib_aws_events_EventField(p) {
}
function aws_cdk_lib_aws_events_RuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventBus))
            aws_cdk_lib_aws_events_IEventBus(p.eventBus);
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_aws_events_Schedule(p.schedule);
        if (p.targets != null)
            for (const o of p.targets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_events_IRuleTarget(o);
        if (!visitedObjects.has(p.eventPattern))
            aws_cdk_lib_aws_events_EventPattern(p.eventPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_Rule(p) {
}
function aws_cdk_lib_aws_events_IRule(p) {
}
function aws_cdk_lib_aws_events_IRuleTarget(p) {
}
function aws_cdk_lib_aws_events_RuleTargetConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.batchParameters))
            aws_cdk_lib_aws_events_CfnRule_BatchParametersProperty(p.batchParameters);
        if (!visitedObjects.has(p.deadLetterConfig))
            aws_cdk_lib_aws_events_CfnRule_DeadLetterConfigProperty(p.deadLetterConfig);
        if (!visitedObjects.has(p.ecsParameters))
            aws_cdk_lib_aws_events_CfnRule_EcsParametersProperty(p.ecsParameters);
        if (!visitedObjects.has(p.httpParameters))
            aws_cdk_lib_aws_events_CfnRule_HttpParametersProperty(p.httpParameters);
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_aws_events_RuleTargetInput(p.input);
        if (!visitedObjects.has(p.kinesisParameters))
            aws_cdk_lib_aws_events_CfnRule_KinesisParametersProperty(p.kinesisParameters);
        if (!visitedObjects.has(p.retryPolicy))
            aws_cdk_lib_aws_events_CfnRule_RetryPolicyProperty(p.retryPolicy);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.runCommandParameters))
            aws_cdk_lib_aws_events_CfnRule_RunCommandParametersProperty(p.runCommandParameters);
        if (!visitedObjects.has(p.sqsParameters))
            aws_cdk_lib_aws_events_CfnRule_SqsParametersProperty(p.sqsParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_IEventBus(p) {
}
function aws_cdk_lib_aws_events_EventBusProps(p) {
}
function aws_cdk_lib_aws_events_EventBusAttributes(p) {
}
function aws_cdk_lib_aws_events_EventBus(p) {
}
function aws_cdk_lib_aws_events_EventBusPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventBus))
            aws_cdk_lib_aws_events_IEventBus(p.eventBus);
        if (!visitedObjects.has(p.statement))
            aws_cdk_lib_aws_iam_PolicyStatement(p.statement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_EventBusPolicy(p) {
}
function aws_cdk_lib_aws_events_Match(p) {
}
function aws_cdk_lib_aws_events_EventPattern(p) {
}
function aws_cdk_lib_aws_events_Schedule(p) {
}
function aws_cdk_lib_aws_events_CronOptions(p) {
}
function aws_cdk_lib_aws_events_EventCommonOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventPattern))
            aws_cdk_lib_aws_events_EventPattern(p.eventPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_OnEventOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_events_IRuleTarget(p.target);
        if (!visitedObjects.has(p.eventPattern))
            aws_cdk_lib_aws_events_EventPattern(p.eventPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_BaseArchiveProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventPattern))
            aws_cdk_lib_aws_events_EventPattern(p.eventPattern);
        if (!visitedObjects.has(p.retention))
            aws_cdk_lib_Duration(p.retention);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_ArchiveProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceEventBus))
            aws_cdk_lib_aws_events_IEventBus(p.sourceEventBus);
        if (!visitedObjects.has(p.eventPattern))
            aws_cdk_lib_aws_events_EventPattern(p.eventPattern);
        if (!visitedObjects.has(p.retention))
            aws_cdk_lib_Duration(p.retention);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_Archive(p) {
}
function aws_cdk_lib_aws_events_ConnectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authorization))
            aws_cdk_lib_aws_events_Authorization(p.authorization);
        if (p.bodyParameters != null)
            for (const o of Object.values(p.bodyParameters))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_events_HttpParameter(o);
        if (p.headerParameters != null)
            for (const o of Object.values(p.headerParameters))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_events_HttpParameter(o);
        if (p.queryStringParameters != null)
            for (const o of Object.values(p.queryStringParameters))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_events_HttpParameter(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_Authorization(p) {
}
function aws_cdk_lib_aws_events_OAuthAuthorizationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientSecret))
            aws_cdk_lib_SecretValue(p.clientSecret);
        if (!visitedObjects.has(p.httpMethod))
            aws_cdk_lib_aws_events_HttpMethod(p.httpMethod);
        if (p.bodyParameters != null)
            for (const o of Object.values(p.bodyParameters))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_events_HttpParameter(o);
        if (p.headerParameters != null)
            for (const o of Object.values(p.headerParameters))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_events_HttpParameter(o);
        if (p.queryStringParameters != null)
            for (const o of Object.values(p.queryStringParameters))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_events_HttpParameter(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_HttpParameter(p) {
}
function aws_cdk_lib_aws_events_IConnection(p) {
}
function aws_cdk_lib_aws_events_ConnectionAttributes(p) {
}
function aws_cdk_lib_aws_events_Connection(p) {
}
function aws_cdk_lib_aws_events_HttpMethod(p) {
}
function aws_cdk_lib_aws_events_ApiDestinationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connection))
            aws_cdk_lib_aws_events_IConnection(p.connection);
        if (!visitedObjects.has(p.httpMethod))
            aws_cdk_lib_aws_events_HttpMethod(p.httpMethod);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_IApiDestination(p) {
}
function aws_cdk_lib_aws_events_ApiDestination(p) {
}
function aws_cdk_lib_aws_events_CfnApiDestinationProps(p) {
}
function aws_cdk_lib_aws_events_CfnApiDestination(p) {
}
function aws_cdk_lib_aws_events_CfnArchiveProps(p) {
}
function aws_cdk_lib_aws_events_CfnArchive(p) {
}
function aws_cdk_lib_aws_events_CfnConnectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authParameters))
            aws_cdk_lib_IResolvable(p.authParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnConnection(p) {
}
function aws_cdk_lib_aws_events_CfnConnection_ApiKeyAuthParametersProperty(p) {
}
function aws_cdk_lib_aws_events_CfnConnection_AuthParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.apiKeyAuthParameters))
            aws_cdk_lib_IResolvable(p.apiKeyAuthParameters);
        if (!visitedObjects.has(p.basicAuthParameters))
            aws_cdk_lib_IResolvable(p.basicAuthParameters);
        if (!visitedObjects.has(p.invocationHttpParameters))
            aws_cdk_lib_IResolvable(p.invocationHttpParameters);
        if (!visitedObjects.has(p.oAuthParameters))
            aws_cdk_lib_IResolvable(p.oAuthParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnConnection_BasicAuthParametersProperty(p) {
}
function aws_cdk_lib_aws_events_CfnConnection_ClientParametersProperty(p) {
}
function aws_cdk_lib_aws_events_CfnConnection_ConnectionHttpParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bodyParameters))
            aws_cdk_lib_IResolvable(p.bodyParameters);
        if (!visitedObjects.has(p.headerParameters))
            aws_cdk_lib_IResolvable(p.headerParameters);
        if (!visitedObjects.has(p.queryStringParameters))
            aws_cdk_lib_IResolvable(p.queryStringParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnConnection_OAuthParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientParameters))
            aws_cdk_lib_IResolvable(p.clientParameters);
        if (!visitedObjects.has(p.oAuthHttpParameters))
            aws_cdk_lib_IResolvable(p.oAuthHttpParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnConnection_ParameterProperty(p) {
}
function aws_cdk_lib_aws_events_CfnEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventBuses))
            aws_cdk_lib_IResolvable(p.eventBuses);
        if (!visitedObjects.has(p.routingConfig))
            aws_cdk_lib_IResolvable(p.routingConfig);
        if (!visitedObjects.has(p.replicationConfig))
            aws_cdk_lib_IResolvable(p.replicationConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnEndpoint(p) {
}
function aws_cdk_lib_aws_events_CfnEndpoint_EndpointEventBusProperty(p) {
}
function aws_cdk_lib_aws_events_CfnEndpoint_FailoverConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.primary))
            aws_cdk_lib_IResolvable(p.primary);
        if (!visitedObjects.has(p.secondary))
            aws_cdk_lib_IResolvable(p.secondary);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnEndpoint_PrimaryProperty(p) {
}
function aws_cdk_lib_aws_events_CfnEndpoint_ReplicationConfigProperty(p) {
}
function aws_cdk_lib_aws_events_CfnEndpoint_RoutingConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.failoverConfig))
            aws_cdk_lib_IResolvable(p.failoverConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnEndpoint_SecondaryProperty(p) {
}
function aws_cdk_lib_aws_events_CfnEventBusProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_events_CfnEventBus_TagEntryProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnEventBus(p) {
}
function aws_cdk_lib_aws_events_CfnEventBus_TagEntryProperty(p) {
}
function aws_cdk_lib_aws_events_CfnEventBusPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.condition))
            aws_cdk_lib_IResolvable(p.condition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnEventBusPolicy(p) {
}
function aws_cdk_lib_aws_events_CfnEventBusPolicy_ConditionProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targets))
            aws_cdk_lib_IResolvable(p.targets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnRule(p) {
}
function aws_cdk_lib_aws_events_CfnRule_AwsVpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_BatchArrayPropertiesProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_BatchParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arrayProperties))
            aws_cdk_lib_IResolvable(p.arrayProperties);
        if (!visitedObjects.has(p.retryStrategy))
            aws_cdk_lib_IResolvable(p.retryStrategy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnRule_BatchRetryStrategyProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_CapacityProviderStrategyItemProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_DeadLetterConfigProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_EcsParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capacityProviderStrategy))
            aws_cdk_lib_IResolvable(p.capacityProviderStrategy);
        if (!visitedObjects.has(p.networkConfiguration))
            aws_cdk_lib_IResolvable(p.networkConfiguration);
        if (!visitedObjects.has(p.placementConstraints))
            aws_cdk_lib_IResolvable(p.placementConstraints);
        if (!visitedObjects.has(p.placementStrategies))
            aws_cdk_lib_IResolvable(p.placementStrategies);
        if (!visitedObjects.has(p.tagList))
            aws_cdk_lib_IResolvable(p.tagList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnRule_HttpParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.headerParameters))
            aws_cdk_lib_IResolvable(p.headerParameters);
        if (!visitedObjects.has(p.queryStringParameters))
            aws_cdk_lib_IResolvable(p.queryStringParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnRule_InputTransformerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputPathsMap))
            aws_cdk_lib_IResolvable(p.inputPathsMap);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnRule_KinesisParametersProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_NetworkConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awsVpcConfiguration))
            aws_cdk_lib_IResolvable(p.awsVpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnRule_PlacementConstraintProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_PlacementStrategyProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_RedshiftDataParametersProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_RetryPolicyProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_RunCommandParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.runCommandTargets))
            aws_cdk_lib_IResolvable(p.runCommandTargets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnRule_RunCommandTargetProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_SageMakerPipelineParameterProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_SageMakerPipelineParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pipelineParameterList))
            aws_cdk_lib_IResolvable(p.pipelineParameterList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_CfnRule_SqsParametersProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_TagProperty(p) {
}
function aws_cdk_lib_aws_events_CfnRule_TargetProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.batchParameters))
            aws_cdk_lib_IResolvable(p.batchParameters);
        if (!visitedObjects.has(p.deadLetterConfig))
            aws_cdk_lib_IResolvable(p.deadLetterConfig);
        if (!visitedObjects.has(p.ecsParameters))
            aws_cdk_lib_IResolvable(p.ecsParameters);
        if (!visitedObjects.has(p.httpParameters))
            aws_cdk_lib_IResolvable(p.httpParameters);
        if (!visitedObjects.has(p.inputTransformer))
            aws_cdk_lib_IResolvable(p.inputTransformer);
        if (!visitedObjects.has(p.kinesisParameters))
            aws_cdk_lib_IResolvable(p.kinesisParameters);
        if (!visitedObjects.has(p.redshiftDataParameters))
            aws_cdk_lib_IResolvable(p.redshiftDataParameters);
        if (!visitedObjects.has(p.retryPolicy))
            aws_cdk_lib_IResolvable(p.retryPolicy);
        if (!visitedObjects.has(p.runCommandParameters))
            aws_cdk_lib_IResolvable(p.runCommandParameters);
        if (!visitedObjects.has(p.sageMakerPipelineParameters))
            aws_cdk_lib_IResolvable(p.sageMakerPipelineParameters);
        if (!visitedObjects.has(p.sqsParameters))
            aws_cdk_lib_IResolvable(p.sqsParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_BatchJobProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.event))
            aws_cdk_lib_aws_events_RuleTargetInput(p.event);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_BatchJob(p) {
}
function aws_cdk_lib_aws_events_targets_CodePipelineTargetOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventRole))
            aws_cdk_lib_aws_iam_IRole(p.eventRole);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_CodePipeline(p) {
}
function aws_cdk_lib_aws_events_targets_SnsTopicProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.message))
            aws_cdk_lib_aws_events_RuleTargetInput(p.message);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_SnsTopic(p) {
}
function aws_cdk_lib_aws_events_targets_SqsQueueProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.message))
            aws_cdk_lib_aws_events_RuleTargetInput(p.message);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_SqsQueue(p) {
}
function aws_cdk_lib_aws_events_targets_CodeBuildProjectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.event))
            aws_cdk_lib_aws_events_RuleTargetInput(p.event);
        if (!visitedObjects.has(p.eventRole))
            aws_cdk_lib_aws_iam_IRole(p.eventRole);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_CodeBuildProject(p) {
}
function aws_cdk_lib_aws_events_targets_AwsApiInput(p) {
}
function aws_cdk_lib_aws_events_targets_AwsApiProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.policyStatement))
            aws_cdk_lib_aws_iam_PolicyStatement(p.policyStatement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_AwsApi(p) {
}
function aws_cdk_lib_aws_events_targets_LambdaFunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.event))
            aws_cdk_lib_aws_events_RuleTargetInput(p.event);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_LambdaFunction(p) {
}
function aws_cdk_lib_aws_events_targets_ContainerOverride(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.environment != null)
            for (const o of p.environment)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_events_targets_TaskEnvironmentVariable(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_TaskEnvironmentVariable(p) {
}
function aws_cdk_lib_aws_events_targets_EcsTaskProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_ITaskDefinition(p.taskDefinition);
        if (p.containerOverrides != null)
            for (const o of p.containerOverrides)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_events_targets_ContainerOverride(o);
        if (!visitedObjects.has(p.platformVersion))
            aws_cdk_lib_aws_ecs_FargatePlatformVersion(p.platformVersion);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_EcsTask(p) {
}
function aws_cdk_lib_aws_events_targets_EventBusProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_EventBus(p) {
}
function aws_cdk_lib_aws_events_targets_SfnStateMachineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_aws_events_RuleTargetInput(p.input);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_SfnStateMachine(p) {
}
function aws_cdk_lib_aws_events_targets_KinesisStreamProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.message))
            aws_cdk_lib_aws_events_RuleTargetInput(p.message);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_KinesisStream(p) {
}
function aws_cdk_lib_aws_events_targets_LogGroupTargetInputOptions(p) {
}
function aws_cdk_lib_aws_events_targets_LogGroupTargetInput(p) {
}
function aws_cdk_lib_aws_events_targets_LogGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("event" in p)
            print("aws-cdk-lib.aws_events_targets.LogGroupProps#event", "use logEvent instead");
        if (!visitedObjects.has(p.event))
            aws_cdk_lib_aws_events_RuleTargetInput(p.event);
        if (!visitedObjects.has(p.logEvent))
            aws_cdk_lib_aws_events_targets_LogGroupTargetInput(p.logEvent);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_CloudWatchLogGroup(p) {
}
function aws_cdk_lib_aws_events_targets_KinesisFirehoseStreamProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.message))
            aws_cdk_lib_aws_events_RuleTargetInput(p.message);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_KinesisFirehoseStream(p) {
}
function aws_cdk_lib_aws_events_targets_ApiGatewayProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventRole))
            aws_cdk_lib_aws_iam_IRole(p.eventRole);
        if (!visitedObjects.has(p.postBody))
            aws_cdk_lib_aws_events_RuleTargetInput(p.postBody);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_ApiGateway(p) {
}
function aws_cdk_lib_aws_events_targets_ApiDestinationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.event))
            aws_cdk_lib_aws_events_RuleTargetInput(p.event);
        if (!visitedObjects.has(p.eventRole))
            aws_cdk_lib_aws_iam_IRole(p.eventRole);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_events_targets_ApiDestination(p) {
}
function aws_cdk_lib_aws_events_targets_TargetBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eventschemas_CfnDiscovererProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_eventschemas_CfnDiscoverer_TagsEntryProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eventschemas_CfnDiscoverer(p) {
}
function aws_cdk_lib_aws_eventschemas_CfnDiscoverer_TagsEntryProperty(p) {
}
function aws_cdk_lib_aws_eventschemas_CfnRegistryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_eventschemas_CfnRegistry_TagsEntryProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eventschemas_CfnRegistry(p) {
}
function aws_cdk_lib_aws_eventschemas_CfnRegistry_TagsEntryProperty(p) {
}
function aws_cdk_lib_aws_eventschemas_CfnRegistryPolicyProps(p) {
}
function aws_cdk_lib_aws_eventschemas_CfnRegistryPolicy(p) {
}
function aws_cdk_lib_aws_eventschemas_CfnSchemaProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_eventschemas_CfnSchema_TagsEntryProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_eventschemas_CfnSchema(p) {
}
function aws_cdk_lib_aws_eventschemas_CfnSchema_TagsEntryProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnExperimentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricGoals))
            aws_cdk_lib_IResolvable(p.metricGoals);
        if (!visitedObjects.has(p.onlineAbConfig))
            aws_cdk_lib_IResolvable(p.onlineAbConfig);
        if (!visitedObjects.has(p.treatments))
            aws_cdk_lib_IResolvable(p.treatments);
        if (!visitedObjects.has(p.runningStatus))
            aws_cdk_lib_IResolvable(p.runningStatus);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_evidently_CfnExperiment(p) {
}
function aws_cdk_lib_aws_evidently_CfnExperiment_MetricGoalObjectProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnExperiment_OnlineAbConfigObjectProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.treatmentWeights))
            aws_cdk_lib_IResolvable(p.treatmentWeights);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_evidently_CfnExperiment_RunningStatusObjectProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnExperiment_TreatmentObjectProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnExperiment_TreatmentToWeightProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnFeatureProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.variations))
            aws_cdk_lib_IResolvable(p.variations);
        if (!visitedObjects.has(p.entityOverrides))
            aws_cdk_lib_IResolvable(p.entityOverrides);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_evidently_CfnFeature(p) {
}
function aws_cdk_lib_aws_evidently_CfnFeature_EntityOverrideProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnFeature_VariationObjectProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnLaunchProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groups))
            aws_cdk_lib_IResolvable(p.groups);
        if (!visitedObjects.has(p.scheduledSplitsConfig))
            aws_cdk_lib_IResolvable(p.scheduledSplitsConfig);
        if (!visitedObjects.has(p.executionStatus))
            aws_cdk_lib_IResolvable(p.executionStatus);
        if (!visitedObjects.has(p.metricMonitors))
            aws_cdk_lib_IResolvable(p.metricMonitors);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_evidently_CfnLaunch(p) {
}
function aws_cdk_lib_aws_evidently_CfnLaunch_ExecutionStatusObjectProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnLaunch_GroupToWeightProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnLaunch_LaunchGroupObjectProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnLaunch_MetricDefinitionObjectProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnLaunch_SegmentOverrideProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.weights))
            aws_cdk_lib_IResolvable(p.weights);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_evidently_CfnLaunch_StepConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupWeights))
            aws_cdk_lib_IResolvable(p.groupWeights);
        if (!visitedObjects.has(p.segmentOverrides))
            aws_cdk_lib_IResolvable(p.segmentOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_evidently_CfnProjectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.appConfigResource))
            aws_cdk_lib_IResolvable(p.appConfigResource);
        if (!visitedObjects.has(p.dataDelivery))
            aws_cdk_lib_IResolvable(p.dataDelivery);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_evidently_CfnProject(p) {
}
function aws_cdk_lib_aws_evidently_CfnProject_AppConfigResourceObjectProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnProject_DataDeliveryObjectProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_IResolvable(p.s3);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_evidently_CfnProject_S3DestinationProperty(p) {
}
function aws_cdk_lib_aws_evidently_CfnSegmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_evidently_CfnSegment(p) {
}
function aws_cdk_lib_aws_finspace_CfnEnvironmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.federationParameters))
            aws_cdk_lib_IResolvable(p.federationParameters);
        if (!visitedObjects.has(p.superuserParameters))
            aws_cdk_lib_IResolvable(p.superuserParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_finspace_CfnEnvironment(p) {
}
function aws_cdk_lib_aws_finspace_CfnEnvironment_FederationParametersProperty(p) {
}
function aws_cdk_lib_aws_finspace_CfnEnvironment_SuperuserParametersProperty(p) {
}
function aws_cdk_lib_aws_fis_CfnExperimentTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stopConditions))
            aws_cdk_lib_IResolvable(p.stopConditions);
        if (!visitedObjects.has(p.targets))
            aws_cdk_lib_IResolvable(p.targets);
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.logConfiguration))
            aws_cdk_lib_IResolvable(p.logConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fis_CfnExperimentTemplate(p) {
}
function aws_cdk_lib_aws_fis_CfnExperimentTemplate_CloudWatchLogsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_fis_CfnExperimentTemplate_ExperimentTemplateActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (!visitedObjects.has(p.targets))
            aws_cdk_lib_IResolvable(p.targets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fis_CfnExperimentTemplate_ExperimentTemplateLogConfigurationProperty(p) {
}
function aws_cdk_lib_aws_fis_CfnExperimentTemplate_ExperimentTemplateStopConditionProperty(p) {
}
function aws_cdk_lib_aws_fis_CfnExperimentTemplate_ExperimentTemplateTargetProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filters))
            aws_cdk_lib_IResolvable(p.filters);
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (!visitedObjects.has(p.resourceTags))
            aws_cdk_lib_IResolvable(p.resourceTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fis_CfnExperimentTemplate_ExperimentTemplateTargetFilterProperty(p) {
}
function aws_cdk_lib_aws_fis_CfnExperimentTemplate_S3ConfigurationProperty(p) {
}
function aws_cdk_lib_aws_fms_CfnNotificationChannelProps(p) {
}
function aws_cdk_lib_aws_fms_CfnNotificationChannel(p) {
}
function aws_cdk_lib_aws_fms_CfnPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityServicePolicyData))
            aws_cdk_lib_IResolvable(p.securityServicePolicyData);
        if (!visitedObjects.has(p.excludeMap))
            aws_cdk_lib_IResolvable(p.excludeMap);
        if (!visitedObjects.has(p.includeMap))
            aws_cdk_lib_IResolvable(p.includeMap);
        if (!visitedObjects.has(p.resourceTags))
            aws_cdk_lib_IResolvable(p.resourceTags);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_fms_CfnPolicy_PolicyTagProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fms_CfnPolicy(p) {
}
function aws_cdk_lib_aws_fms_CfnPolicy_IEMapProperty(p) {
}
function aws_cdk_lib_aws_fms_CfnPolicy_NetworkFirewallPolicyProperty(p) {
}
function aws_cdk_lib_aws_fms_CfnPolicy_PolicyOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.networkFirewallPolicy))
            aws_cdk_lib_IResolvable(p.networkFirewallPolicy);
        if (!visitedObjects.has(p.thirdPartyFirewallPolicy))
            aws_cdk_lib_IResolvable(p.thirdPartyFirewallPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fms_CfnPolicy_PolicyTagProperty(p) {
}
function aws_cdk_lib_aws_fms_CfnPolicy_ResourceTagProperty(p) {
}
function aws_cdk_lib_aws_fms_CfnPolicy_SecurityServicePolicyDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.policyOption))
            aws_cdk_lib_IResolvable(p.policyOption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fms_CfnPolicy_ThirdPartyFirewallPolicyProperty(p) {
}
function aws_cdk_lib_aws_fms_CfnResourceSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fms_CfnResourceSet(p) {
}
function aws_cdk_lib_aws_forecast_CfnDatasetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_forecast_CfnDataset_TagsItemsProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_forecast_CfnDataset(p) {
}
function aws_cdk_lib_aws_forecast_CfnDataset_AttributesItemsProperty(p) {
}
function aws_cdk_lib_aws_forecast_CfnDataset_EncryptionConfigProperty(p) {
}
function aws_cdk_lib_aws_forecast_CfnDataset_SchemaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_forecast_CfnDataset_TagsItemsProperty(p) {
}
function aws_cdk_lib_aws_forecast_CfnDatasetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_forecast_CfnDatasetGroup(p) {
}
function aws_cdk_lib_aws_frauddetector_CfnDetectorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventType))
            aws_cdk_lib_IResolvable(p.eventType);
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
        if (!visitedObjects.has(p.associatedModels))
            aws_cdk_lib_IResolvable(p.associatedModels);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnDetector(p) {
}
function aws_cdk_lib_aws_frauddetector_CfnDetector_EntityTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnDetector_EventTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.entityTypes))
            aws_cdk_lib_IResolvable(p.entityTypes);
        if (!visitedObjects.has(p.eventVariables))
            aws_cdk_lib_IResolvable(p.eventVariables);
        if (!visitedObjects.has(p.labels))
            aws_cdk_lib_IResolvable(p.labels);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnDetector_EventVariableProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnDetector_LabelProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnDetector_ModelProperty(p) {
}
function aws_cdk_lib_aws_frauddetector_CfnDetector_OutcomeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnDetector_RuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.outcomes))
            aws_cdk_lib_IResolvable(p.outcomes);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnEntityTypeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnEntityType(p) {
}
function aws_cdk_lib_aws_frauddetector_CfnEventTypeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.entityTypes))
            aws_cdk_lib_IResolvable(p.entityTypes);
        if (!visitedObjects.has(p.eventVariables))
            aws_cdk_lib_IResolvable(p.eventVariables);
        if (!visitedObjects.has(p.labels))
            aws_cdk_lib_IResolvable(p.labels);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnEventType(p) {
}
function aws_cdk_lib_aws_frauddetector_CfnEventType_EntityTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnEventType_EventVariableProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnEventType_LabelProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnLabelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnLabel(p) {
}
function aws_cdk_lib_aws_frauddetector_CfnOutcomeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnOutcome(p) {
}
function aws_cdk_lib_aws_frauddetector_CfnVariableProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_frauddetector_CfnVariable(p) {
}
function aws_cdk_lib_aws_fsx_IFileSystem(p) {
}
function aws_cdk_lib_aws_fsx_FileSystemProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.kmsKey))
            aws_cdk_lib_aws_kms_IKey(p.kmsKey);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_FileSystemBase(p) {
}
function aws_cdk_lib_aws_fsx_FileSystemAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnDataRepositoryAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_IResolvable(p.s3);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnDataRepositoryAssociation(p) {
}
function aws_cdk_lib_aws_fsx_CfnDataRepositoryAssociation_AutoExportPolicyProperty(p) {
}
function aws_cdk_lib_aws_fsx_CfnDataRepositoryAssociation_AutoImportPolicyProperty(p) {
}
function aws_cdk_lib_aws_fsx_CfnDataRepositoryAssociation_S3Property(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoExportPolicy))
            aws_cdk_lib_IResolvable(p.autoExportPolicy);
        if (!visitedObjects.has(p.autoImportPolicy))
            aws_cdk_lib_IResolvable(p.autoImportPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnFileSystemProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lustreConfiguration))
            aws_cdk_lib_IResolvable(p.lustreConfiguration);
        if (!visitedObjects.has(p.ontapConfiguration))
            aws_cdk_lib_IResolvable(p.ontapConfiguration);
        if (!visitedObjects.has(p.openZfsConfiguration))
            aws_cdk_lib_IResolvable(p.openZfsConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.windowsConfiguration))
            aws_cdk_lib_IResolvable(p.windowsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnFileSystem(p) {
}
function aws_cdk_lib_aws_fsx_CfnFileSystem_AuditLogConfigurationProperty(p) {
}
function aws_cdk_lib_aws_fsx_CfnFileSystem_ClientConfigurationsProperty(p) {
}
function aws_cdk_lib_aws_fsx_CfnFileSystem_DiskIopsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_fsx_CfnFileSystem_LustreConfigurationProperty(p) {
}
function aws_cdk_lib_aws_fsx_CfnFileSystem_NfsExportsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientConfigurations))
            aws_cdk_lib_IResolvable(p.clientConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnFileSystem_OntapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.diskIopsConfiguration))
            aws_cdk_lib_IResolvable(p.diskIopsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnFileSystem_OpenZFSConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.diskIopsConfiguration))
            aws_cdk_lib_IResolvable(p.diskIopsConfiguration);
        if (!visitedObjects.has(p.rootVolumeConfiguration))
            aws_cdk_lib_IResolvable(p.rootVolumeConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnFileSystem_RootVolumeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nfsExports))
            aws_cdk_lib_IResolvable(p.nfsExports);
        if (!visitedObjects.has(p.userAndGroupQuotas))
            aws_cdk_lib_IResolvable(p.userAndGroupQuotas);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnFileSystem_SelfManagedActiveDirectoryConfigurationProperty(p) {
}
function aws_cdk_lib_aws_fsx_CfnFileSystem_UserAndGroupQuotasProperty(p) {
}
function aws_cdk_lib_aws_fsx_CfnFileSystem_WindowsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.auditLogConfiguration))
            aws_cdk_lib_IResolvable(p.auditLogConfiguration);
        if (!visitedObjects.has(p.selfManagedActiveDirectoryConfiguration))
            aws_cdk_lib_IResolvable(p.selfManagedActiveDirectoryConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnSnapshotProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnSnapshot(p) {
}
function aws_cdk_lib_aws_fsx_CfnStorageVirtualMachineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.activeDirectoryConfiguration))
            aws_cdk_lib_IResolvable(p.activeDirectoryConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnStorageVirtualMachine(p) {
}
function aws_cdk_lib_aws_fsx_CfnStorageVirtualMachine_ActiveDirectoryConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selfManagedActiveDirectoryConfiguration))
            aws_cdk_lib_IResolvable(p.selfManagedActiveDirectoryConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnStorageVirtualMachine_SelfManagedActiveDirectoryConfigurationProperty(p) {
}
function aws_cdk_lib_aws_fsx_CfnVolumeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ontapConfiguration))
            aws_cdk_lib_IResolvable(p.ontapConfiguration);
        if (!visitedObjects.has(p.openZfsConfiguration))
            aws_cdk_lib_IResolvable(p.openZfsConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnVolume(p) {
}
function aws_cdk_lib_aws_fsx_CfnVolume_ClientConfigurationsProperty(p) {
}
function aws_cdk_lib_aws_fsx_CfnVolume_NfsExportsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientConfigurations))
            aws_cdk_lib_IResolvable(p.clientConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnVolume_OntapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tieringPolicy))
            aws_cdk_lib_IResolvable(p.tieringPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnVolume_OpenZFSConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nfsExports))
            aws_cdk_lib_IResolvable(p.nfsExports);
        if (!visitedObjects.has(p.originSnapshot))
            aws_cdk_lib_IResolvable(p.originSnapshot);
        if (!visitedObjects.has(p.userAndGroupQuotas))
            aws_cdk_lib_IResolvable(p.userAndGroupQuotas);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_CfnVolume_OriginSnapshotProperty(p) {
}
function aws_cdk_lib_aws_fsx_CfnVolume_TieringPolicyProperty(p) {
}
function aws_cdk_lib_aws_fsx_CfnVolume_UserAndGroupQuotasProperty(p) {
}
function aws_cdk_lib_aws_fsx_LustreDeploymentType(p) {
}
function aws_cdk_lib_aws_fsx_LustreAutoImportPolicy(p) {
}
function aws_cdk_lib_aws_fsx_LustreDataCompressionType(p) {
}
function aws_cdk_lib_aws_fsx_LustreConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deploymentType))
            aws_cdk_lib_aws_fsx_LustreDeploymentType(p.deploymentType);
        if (!visitedObjects.has(p.autoImportPolicy))
            aws_cdk_lib_aws_fsx_LustreAutoImportPolicy(p.autoImportPolicy);
        if (!visitedObjects.has(p.dataCompressionType))
            aws_cdk_lib_aws_fsx_LustreDataCompressionType(p.dataCompressionType);
        if (!visitedObjects.has(p.weeklyMaintenanceStartTime))
            aws_cdk_lib_aws_fsx_LustreMaintenanceTime(p.weeklyMaintenanceStartTime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_LustreFileSystemProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lustreConfiguration))
            aws_cdk_lib_aws_fsx_LustreConfiguration(p.lustreConfiguration);
        if (!visitedObjects.has(p.vpcSubnet))
            aws_cdk_lib_aws_ec2_ISubnet(p.vpcSubnet);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.kmsKey))
            aws_cdk_lib_aws_kms_IKey(p.kmsKey);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_LustreFileSystem(p) {
}
function aws_cdk_lib_aws_fsx_Weekday(p) {
}
function aws_cdk_lib_aws_fsx_LustreMaintenanceTimeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.day))
            aws_cdk_lib_aws_fsx_Weekday(p.day);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_fsx_LustreMaintenanceTime(p) {
}
function aws_cdk_lib_aws_gamelift_CfnAliasProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.routingStrategy))
            aws_cdk_lib_IResolvable(p.routingStrategy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_gamelift_CfnAlias(p) {
}
function aws_cdk_lib_aws_gamelift_CfnAlias_RoutingStrategyProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnBuildProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.storageLocation))
            aws_cdk_lib_IResolvable(p.storageLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_gamelift_CfnBuild(p) {
}
function aws_cdk_lib_aws_gamelift_CfnBuild_StorageLocationProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnFleetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.anywhereConfiguration))
            aws_cdk_lib_IResolvable(p.anywhereConfiguration);
        if (!visitedObjects.has(p.certificateConfiguration))
            aws_cdk_lib_IResolvable(p.certificateConfiguration);
        if (!visitedObjects.has(p.ec2InboundPermissions))
            aws_cdk_lib_IResolvable(p.ec2InboundPermissions);
        if (!visitedObjects.has(p.locations))
            aws_cdk_lib_IResolvable(p.locations);
        if (!visitedObjects.has(p.resourceCreationLimitPolicy))
            aws_cdk_lib_IResolvable(p.resourceCreationLimitPolicy);
        if (!visitedObjects.has(p.runtimeConfiguration))
            aws_cdk_lib_IResolvable(p.runtimeConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_gamelift_CfnFleet(p) {
}
function aws_cdk_lib_aws_gamelift_CfnFleet_AnywhereConfigurationProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnFleet_CertificateConfigurationProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnFleet_IpPermissionProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnFleet_LocationCapacityProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnFleet_LocationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.locationCapacity))
            aws_cdk_lib_IResolvable(p.locationCapacity);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_gamelift_CfnFleet_ResourceCreationLimitPolicyProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnFleet_RuntimeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.serverProcesses))
            aws_cdk_lib_IResolvable(p.serverProcesses);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_gamelift_CfnFleet_ServerProcessProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnGameServerGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceDefinitions))
            aws_cdk_lib_IResolvable(p.instanceDefinitions);
        if (!visitedObjects.has(p.launchTemplate))
            aws_cdk_lib_IResolvable(p.launchTemplate);
        if (!visitedObjects.has(p.autoScalingPolicy))
            aws_cdk_lib_IResolvable(p.autoScalingPolicy);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_gamelift_CfnGameServerGroup(p) {
}
function aws_cdk_lib_aws_gamelift_CfnGameServerGroup_AutoScalingPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetTrackingConfiguration))
            aws_cdk_lib_IResolvable(p.targetTrackingConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_gamelift_CfnGameServerGroup_InstanceDefinitionProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnGameServerGroup_LaunchTemplateProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnGameServerGroup_TargetTrackingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnGameSessionQueueProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinations))
            aws_cdk_lib_IResolvable(p.destinations);
        if (!visitedObjects.has(p.filterConfiguration))
            aws_cdk_lib_IResolvable(p.filterConfiguration);
        if (!visitedObjects.has(p.playerLatencyPolicies))
            aws_cdk_lib_IResolvable(p.playerLatencyPolicies);
        if (!visitedObjects.has(p.priorityConfiguration))
            aws_cdk_lib_IResolvable(p.priorityConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_gamelift_CfnGameSessionQueue(p) {
}
function aws_cdk_lib_aws_gamelift_CfnGameSessionQueue_DestinationProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnGameSessionQueue_FilterConfigurationProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnGameSessionQueue_PlayerLatencyPolicyProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnGameSessionQueue_PriorityConfigurationProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnLocationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_gamelift_CfnLocation(p) {
}
function aws_cdk_lib_aws_gamelift_CfnMatchmakingConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.gameProperties))
            aws_cdk_lib_IResolvable(p.gameProperties);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_gamelift_CfnMatchmakingConfiguration(p) {
}
function aws_cdk_lib_aws_gamelift_CfnMatchmakingConfiguration_GamePropertyProperty(p) {
}
function aws_cdk_lib_aws_gamelift_CfnMatchmakingRuleSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_gamelift_CfnMatchmakingRuleSet(p) {
}
function aws_cdk_lib_aws_gamelift_CfnScriptProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.storageLocation))
            aws_cdk_lib_IResolvable(p.storageLocation);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_gamelift_CfnScript(p) {
}
function aws_cdk_lib_aws_gamelift_CfnScript_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_globalaccelerator_CfnAcceleratorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_globalaccelerator_CfnAccelerator(p) {
}
function aws_cdk_lib_aws_globalaccelerator_CfnEndpointGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.endpointConfigurations))
            aws_cdk_lib_IResolvable(p.endpointConfigurations);
        if (!visitedObjects.has(p.portOverrides))
            aws_cdk_lib_IResolvable(p.portOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_globalaccelerator_CfnEndpointGroup(p) {
}
function aws_cdk_lib_aws_globalaccelerator_CfnEndpointGroup_EndpointConfigurationProperty(p) {
}
function aws_cdk_lib_aws_globalaccelerator_CfnEndpointGroup_PortOverrideProperty(p) {
}
function aws_cdk_lib_aws_globalaccelerator_CfnListenerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.portRanges))
            aws_cdk_lib_IResolvable(p.portRanges);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_globalaccelerator_CfnListener(p) {
}
function aws_cdk_lib_aws_globalaccelerator_CfnListener_PortRangeProperty(p) {
}
function aws_cdk_lib_aws_globalaccelerator_IAccelerator(p) {
}
function aws_cdk_lib_aws_globalaccelerator_AcceleratorProps(p) {
}
function aws_cdk_lib_aws_globalaccelerator_AcceleratorAttributes(p) {
}
function aws_cdk_lib_aws_globalaccelerator_Accelerator(p) {
}
function aws_cdk_lib_aws_globalaccelerator_IListener(p) {
}
function aws_cdk_lib_aws_globalaccelerator_ListenerOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.portRanges != null)
            for (const o of p.portRanges)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_globalaccelerator_PortRange(o);
        if (!visitedObjects.has(p.clientAffinity))
            aws_cdk_lib_aws_globalaccelerator_ClientAffinity(p.clientAffinity);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_globalaccelerator_ConnectionProtocol(p.protocol);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_globalaccelerator_ListenerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accelerator))
            aws_cdk_lib_aws_globalaccelerator_IAccelerator(p.accelerator);
        if (p.portRanges != null)
            for (const o of p.portRanges)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_globalaccelerator_PortRange(o);
        if (!visitedObjects.has(p.clientAffinity))
            aws_cdk_lib_aws_globalaccelerator_ClientAffinity(p.clientAffinity);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_globalaccelerator_ConnectionProtocol(p.protocol);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_globalaccelerator_PortRange(p) {
}
function aws_cdk_lib_aws_globalaccelerator_ConnectionProtocol(p) {
}
function aws_cdk_lib_aws_globalaccelerator_ClientAffinity(p) {
}
function aws_cdk_lib_aws_globalaccelerator_Listener(p) {
}
function aws_cdk_lib_aws_globalaccelerator_IEndpointGroup(p) {
}
function aws_cdk_lib_aws_globalaccelerator_EndpointGroupOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.endpoints != null)
            for (const o of p.endpoints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_globalaccelerator_IEndpoint(o);
        if (!visitedObjects.has(p.healthCheckInterval))
            aws_cdk_lib_Duration(p.healthCheckInterval);
        if (!visitedObjects.has(p.healthCheckProtocol))
            aws_cdk_lib_aws_globalaccelerator_HealthCheckProtocol(p.healthCheckProtocol);
        if (p.portOverrides != null)
            for (const o of p.portOverrides)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_globalaccelerator_PortOverride(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_globalaccelerator_PortOverride(p) {
}
function aws_cdk_lib_aws_globalaccelerator_HealthCheckProtocol(p) {
}
function aws_cdk_lib_aws_globalaccelerator_EndpointGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listener))
            aws_cdk_lib_aws_globalaccelerator_IListener(p.listener);
        if (p.endpoints != null)
            for (const o of p.endpoints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_globalaccelerator_IEndpoint(o);
        if (!visitedObjects.has(p.healthCheckInterval))
            aws_cdk_lib_Duration(p.healthCheckInterval);
        if (!visitedObjects.has(p.healthCheckProtocol))
            aws_cdk_lib_aws_globalaccelerator_HealthCheckProtocol(p.healthCheckProtocol);
        if (p.portOverrides != null)
            for (const o of p.portOverrides)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_globalaccelerator_PortOverride(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_globalaccelerator_EndpointGroup(p) {
}
function aws_cdk_lib_aws_globalaccelerator_IEndpoint(p) {
}
function aws_cdk_lib_aws_globalaccelerator_RawEndpointProps(p) {
}
function aws_cdk_lib_aws_globalaccelerator_RawEndpoint(p) {
}
function aws_cdk_lib_aws_globalaccelerator_endpoints_ApplicationLoadBalancerEndpointOptions(p) {
}
function aws_cdk_lib_aws_globalaccelerator_endpoints_ApplicationLoadBalancerEndpoint(p) {
}
function aws_cdk_lib_aws_globalaccelerator_endpoints_NetworkLoadBalancerEndpointProps(p) {
}
function aws_cdk_lib_aws_globalaccelerator_endpoints_NetworkLoadBalancerEndpoint(p) {
}
function aws_cdk_lib_aws_globalaccelerator_endpoints_InstanceEndpointProps(p) {
}
function aws_cdk_lib_aws_globalaccelerator_endpoints_InstanceEndpoint(p) {
}
function aws_cdk_lib_aws_globalaccelerator_endpoints_CfnEipEndpointProps(p) {
}
function aws_cdk_lib_aws_globalaccelerator_endpoints_CfnEipEndpoint(p) {
}
function aws_cdk_lib_aws_glue_CfnClassifierProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csvClassifier))
            aws_cdk_lib_IResolvable(p.csvClassifier);
        if (!visitedObjects.has(p.grokClassifier))
            aws_cdk_lib_IResolvable(p.grokClassifier);
        if (!visitedObjects.has(p.jsonClassifier))
            aws_cdk_lib_IResolvable(p.jsonClassifier);
        if (!visitedObjects.has(p.xmlClassifier))
            aws_cdk_lib_IResolvable(p.xmlClassifier);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnClassifier(p) {
}
function aws_cdk_lib_aws_glue_CfnClassifier_CsvClassifierProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnClassifier_GrokClassifierProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnClassifier_JsonClassifierProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnClassifier_XMLClassifierProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnConnectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionInput))
            aws_cdk_lib_IResolvable(p.connectionInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnConnection(p) {
}
function aws_cdk_lib_aws_glue_CfnConnection_ConnectionInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.physicalConnectionRequirements))
            aws_cdk_lib_IResolvable(p.physicalConnectionRequirements);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnConnection_PhysicalConnectionRequirementsProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnCrawlerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targets))
            aws_cdk_lib_IResolvable(p.targets);
        if (!visitedObjects.has(p.recrawlPolicy))
            aws_cdk_lib_IResolvable(p.recrawlPolicy);
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_IResolvable(p.schedule);
        if (!visitedObjects.has(p.schemaChangePolicy))
            aws_cdk_lib_IResolvable(p.schemaChangePolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnCrawler(p) {
}
function aws_cdk_lib_aws_glue_CfnCrawler_CatalogTargetProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnCrawler_DynamoDBTargetProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnCrawler_JdbcTargetProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnCrawler_MongoDBTargetProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnCrawler_RecrawlPolicyProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnCrawler_S3TargetProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnCrawler_ScheduleProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnCrawler_SchemaChangePolicyProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnCrawler_TargetsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.catalogTargets))
            aws_cdk_lib_IResolvable(p.catalogTargets);
        if (!visitedObjects.has(p.dynamoDbTargets))
            aws_cdk_lib_IResolvable(p.dynamoDbTargets);
        if (!visitedObjects.has(p.jdbcTargets))
            aws_cdk_lib_IResolvable(p.jdbcTargets);
        if (!visitedObjects.has(p.mongoDbTargets))
            aws_cdk_lib_IResolvable(p.mongoDbTargets);
        if (!visitedObjects.has(p.s3Targets))
            aws_cdk_lib_IResolvable(p.s3Targets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnDataCatalogEncryptionSettingsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataCatalogEncryptionSettings))
            aws_cdk_lib_IResolvable(p.dataCatalogEncryptionSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnDataCatalogEncryptionSettings(p) {
}
function aws_cdk_lib_aws_glue_CfnDataCatalogEncryptionSettings_ConnectionPasswordEncryptionProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnDataCatalogEncryptionSettings_DataCatalogEncryptionSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionPasswordEncryption))
            aws_cdk_lib_IResolvable(p.connectionPasswordEncryption);
        if (!visitedObjects.has(p.encryptionAtRest))
            aws_cdk_lib_IResolvable(p.encryptionAtRest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnDataCatalogEncryptionSettings_EncryptionAtRestProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnDatabaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.databaseInput))
            aws_cdk_lib_IResolvable(p.databaseInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnDatabase(p) {
}
function aws_cdk_lib_aws_glue_CfnDatabase_DataLakePrincipalProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnDatabase_DatabaseIdentifierProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnDatabase_DatabaseInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.createTableDefaultPermissions))
            aws_cdk_lib_IResolvable(p.createTableDefaultPermissions);
        if (!visitedObjects.has(p.targetDatabase))
            aws_cdk_lib_IResolvable(p.targetDatabase);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnDatabase_PrincipalPrivilegesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.principal))
            aws_cdk_lib_IResolvable(p.principal);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnDevEndpointProps(p) {
}
function aws_cdk_lib_aws_glue_CfnDevEndpoint(p) {
}
function aws_cdk_lib_aws_glue_CfnJobProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.command))
            aws_cdk_lib_IResolvable(p.command);
        if (!visitedObjects.has(p.connections))
            aws_cdk_lib_IResolvable(p.connections);
        if (!visitedObjects.has(p.executionProperty))
            aws_cdk_lib_IResolvable(p.executionProperty);
        if (!visitedObjects.has(p.notificationProperty))
            aws_cdk_lib_IResolvable(p.notificationProperty);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnJob(p) {
}
function aws_cdk_lib_aws_glue_CfnJob_ConnectionsListProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnJob_ExecutionPropertyProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnJob_JobCommandProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnJob_NotificationPropertyProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnMLTransformProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputRecordTables))
            aws_cdk_lib_IResolvable(p.inputRecordTables);
        if (!visitedObjects.has(p.transformParameters))
            aws_cdk_lib_IResolvable(p.transformParameters);
        if (!visitedObjects.has(p.transformEncryption))
            aws_cdk_lib_IResolvable(p.transformEncryption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnMLTransform(p) {
}
function aws_cdk_lib_aws_glue_CfnMLTransform_FindMatchesParametersProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnMLTransform_GlueTablesProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnMLTransform_InputRecordTablesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.glueTables))
            aws_cdk_lib_IResolvable(p.glueTables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnMLTransform_MLUserDataEncryptionProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnMLTransform_TransformEncryptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mlUserDataEncryption))
            aws_cdk_lib_IResolvable(p.mlUserDataEncryption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnMLTransform_TransformParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.findMatchesParameters))
            aws_cdk_lib_IResolvable(p.findMatchesParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnPartitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.partitionInput))
            aws_cdk_lib_IResolvable(p.partitionInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnPartition(p) {
}
function aws_cdk_lib_aws_glue_CfnPartition_ColumnProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnPartition_OrderProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnPartition_PartitionInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.storageDescriptor))
            aws_cdk_lib_IResolvable(p.storageDescriptor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnPartition_SchemaIdProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnPartition_SchemaReferenceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.schemaId))
            aws_cdk_lib_IResolvable(p.schemaId);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnPartition_SerdeInfoProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnPartition_SkewedInfoProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnPartition_StorageDescriptorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.schemaReference))
            aws_cdk_lib_IResolvable(p.schemaReference);
        if (!visitedObjects.has(p.serdeInfo))
            aws_cdk_lib_IResolvable(p.serdeInfo);
        if (!visitedObjects.has(p.skewedInfo))
            aws_cdk_lib_IResolvable(p.skewedInfo);
        if (!visitedObjects.has(p.sortColumns))
            aws_cdk_lib_IResolvable(p.sortColumns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnRegistryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnRegistry(p) {
}
function aws_cdk_lib_aws_glue_CfnSchemaProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.checkpointVersion))
            aws_cdk_lib_IResolvable(p.checkpointVersion);
        if (!visitedObjects.has(p.registry))
            aws_cdk_lib_IResolvable(p.registry);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnSchema(p) {
}
function aws_cdk_lib_aws_glue_CfnSchema_RegistryProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnSchema_SchemaVersionProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnSchemaVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.schema))
            aws_cdk_lib_IResolvable(p.schema);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnSchemaVersion(p) {
}
function aws_cdk_lib_aws_glue_CfnSchemaVersion_SchemaProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnSchemaVersionMetadataProps(p) {
}
function aws_cdk_lib_aws_glue_CfnSchemaVersionMetadata(p) {
}
function aws_cdk_lib_aws_glue_CfnSecurityConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionConfiguration))
            aws_cdk_lib_IResolvable(p.encryptionConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnSecurityConfiguration(p) {
}
function aws_cdk_lib_aws_glue_CfnSecurityConfiguration_CloudWatchEncryptionProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnSecurityConfiguration_EncryptionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchEncryption))
            aws_cdk_lib_IResolvable(p.cloudWatchEncryption);
        if (!visitedObjects.has(p.jobBookmarksEncryption))
            aws_cdk_lib_IResolvable(p.jobBookmarksEncryption);
        if (!visitedObjects.has(p.s3Encryptions))
            aws_cdk_lib_IResolvable(p.s3Encryptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnSecurityConfiguration_JobBookmarksEncryptionProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnSecurityConfiguration_S3EncryptionProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnTableProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tableInput))
            aws_cdk_lib_IResolvable(p.tableInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnTable(p) {
}
function aws_cdk_lib_aws_glue_CfnTable_ColumnProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnTable_OrderProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnTable_SchemaIdProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnTable_SchemaReferenceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.schemaId))
            aws_cdk_lib_IResolvable(p.schemaId);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnTable_SerdeInfoProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnTable_SkewedInfoProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnTable_StorageDescriptorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.schemaReference))
            aws_cdk_lib_IResolvable(p.schemaReference);
        if (!visitedObjects.has(p.serdeInfo))
            aws_cdk_lib_IResolvable(p.serdeInfo);
        if (!visitedObjects.has(p.skewedInfo))
            aws_cdk_lib_IResolvable(p.skewedInfo);
        if (!visitedObjects.has(p.sortColumns))
            aws_cdk_lib_IResolvable(p.sortColumns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnTable_TableIdentifierProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnTable_TableInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.partitionKeys))
            aws_cdk_lib_IResolvable(p.partitionKeys);
        if (!visitedObjects.has(p.storageDescriptor))
            aws_cdk_lib_IResolvable(p.storageDescriptor);
        if (!visitedObjects.has(p.targetTable))
            aws_cdk_lib_IResolvable(p.targetTable);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnTriggerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.eventBatchingCondition))
            aws_cdk_lib_IResolvable(p.eventBatchingCondition);
        if (!visitedObjects.has(p.predicate))
            aws_cdk_lib_IResolvable(p.predicate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnTrigger(p) {
}
function aws_cdk_lib_aws_glue_CfnTrigger_ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.notificationProperty))
            aws_cdk_lib_IResolvable(p.notificationProperty);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnTrigger_ConditionProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnTrigger_EventBatchingConditionProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnTrigger_NotificationPropertyProperty(p) {
}
function aws_cdk_lib_aws_glue_CfnTrigger_PredicateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditions))
            aws_cdk_lib_IResolvable(p.conditions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_glue_CfnWorkflowProps(p) {
}
function aws_cdk_lib_aws_glue_CfnWorkflow(p) {
}
function aws_cdk_lib_aws_grafana_CfnWorkspaceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.samlConfiguration))
            aws_cdk_lib_IResolvable(p.samlConfiguration);
        if (!visitedObjects.has(p.vpcConfiguration))
            aws_cdk_lib_IResolvable(p.vpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_grafana_CfnWorkspace(p) {
}
function aws_cdk_lib_aws_grafana_CfnWorkspace_AssertionAttributesProperty(p) {
}
function aws_cdk_lib_aws_grafana_CfnWorkspace_IdpMetadataProperty(p) {
}
function aws_cdk_lib_aws_grafana_CfnWorkspace_RoleValuesProperty(p) {
}
function aws_cdk_lib_aws_grafana_CfnWorkspace_SamlConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.idpMetadata))
            aws_cdk_lib_IResolvable(p.idpMetadata);
        if (!visitedObjects.has(p.assertionAttributes))
            aws_cdk_lib_IResolvable(p.assertionAttributes);
        if (!visitedObjects.has(p.roleValues))
            aws_cdk_lib_IResolvable(p.roleValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_grafana_CfnWorkspace_VpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnConnectorDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.initialVersion))
            aws_cdk_lib_IResolvable(p.initialVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnConnectorDefinition(p) {
}
function aws_cdk_lib_aws_greengrass_CfnConnectorDefinition_ConnectorProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnConnectorDefinition_ConnectorDefinitionVersionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectors))
            aws_cdk_lib_IResolvable(p.connectors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnConnectorDefinitionVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectors))
            aws_cdk_lib_IResolvable(p.connectors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnConnectorDefinitionVersion(p) {
}
function aws_cdk_lib_aws_greengrass_CfnConnectorDefinitionVersion_ConnectorProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnCoreDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.initialVersion))
            aws_cdk_lib_IResolvable(p.initialVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnCoreDefinition(p) {
}
function aws_cdk_lib_aws_greengrass_CfnCoreDefinition_CoreProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnCoreDefinition_CoreDefinitionVersionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cores))
            aws_cdk_lib_IResolvable(p.cores);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnCoreDefinitionVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cores))
            aws_cdk_lib_IResolvable(p.cores);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnCoreDefinitionVersion(p) {
}
function aws_cdk_lib_aws_greengrass_CfnCoreDefinitionVersion_CoreProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnDeviceDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.initialVersion))
            aws_cdk_lib_IResolvable(p.initialVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnDeviceDefinition(p) {
}
function aws_cdk_lib_aws_greengrass_CfnDeviceDefinition_DeviceProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnDeviceDefinition_DeviceDefinitionVersionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.devices))
            aws_cdk_lib_IResolvable(p.devices);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnDeviceDefinitionVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.devices))
            aws_cdk_lib_IResolvable(p.devices);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnDeviceDefinitionVersion(p) {
}
function aws_cdk_lib_aws_greengrass_CfnDeviceDefinitionVersion_DeviceProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.initialVersion))
            aws_cdk_lib_IResolvable(p.initialVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinition(p) {
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_DefaultConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.execution))
            aws_cdk_lib_IResolvable(p.execution);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_EnvironmentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.execution))
            aws_cdk_lib_IResolvable(p.execution);
        if (!visitedObjects.has(p.resourceAccessPolicies))
            aws_cdk_lib_IResolvable(p.resourceAccessPolicies);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_ExecutionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.runAs))
            aws_cdk_lib_IResolvable(p.runAs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_FunctionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.functionConfiguration))
            aws_cdk_lib_IResolvable(p.functionConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_FunctionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_FunctionDefinitionVersionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.functions))
            aws_cdk_lib_IResolvable(p.functions);
        if (!visitedObjects.has(p.defaultConfig))
            aws_cdk_lib_IResolvable(p.defaultConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_ResourceAccessPolicyProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_RunAsProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.functions))
            aws_cdk_lib_IResolvable(p.functions);
        if (!visitedObjects.has(p.defaultConfig))
            aws_cdk_lib_IResolvable(p.defaultConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion(p) {
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_DefaultConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.execution))
            aws_cdk_lib_IResolvable(p.execution);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_EnvironmentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.execution))
            aws_cdk_lib_IResolvable(p.execution);
        if (!visitedObjects.has(p.resourceAccessPolicies))
            aws_cdk_lib_IResolvable(p.resourceAccessPolicies);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_ExecutionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.runAs))
            aws_cdk_lib_IResolvable(p.runAs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_FunctionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.functionConfiguration))
            aws_cdk_lib_IResolvable(p.functionConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_FunctionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_ResourceAccessPolicyProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_RunAsProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.initialVersion))
            aws_cdk_lib_IResolvable(p.initialVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnGroup(p) {
}
function aws_cdk_lib_aws_greengrass_CfnGroup_GroupVersionProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnGroupVersionProps(p) {
}
function aws_cdk_lib_aws_greengrass_CfnGroupVersion(p) {
}
function aws_cdk_lib_aws_greengrass_CfnLoggerDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.initialVersion))
            aws_cdk_lib_IResolvable(p.initialVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnLoggerDefinition(p) {
}
function aws_cdk_lib_aws_greengrass_CfnLoggerDefinition_LoggerProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnLoggerDefinition_LoggerDefinitionVersionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loggers))
            aws_cdk_lib_IResolvable(p.loggers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnLoggerDefinitionVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loggers))
            aws_cdk_lib_IResolvable(p.loggers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnLoggerDefinitionVersion(p) {
}
function aws_cdk_lib_aws_greengrass_CfnLoggerDefinitionVersion_LoggerProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.initialVersion))
            aws_cdk_lib_IResolvable(p.initialVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinition(p) {
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinition_GroupOwnerSettingProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinition_LocalDeviceResourceDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupOwnerSetting))
            aws_cdk_lib_IResolvable(p.groupOwnerSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinition_LocalVolumeResourceDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupOwnerSetting))
            aws_cdk_lib_IResolvable(p.groupOwnerSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinition_ResourceDataContainerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.localDeviceResourceData))
            aws_cdk_lib_IResolvable(p.localDeviceResourceData);
        if (!visitedObjects.has(p.localVolumeResourceData))
            aws_cdk_lib_IResolvable(p.localVolumeResourceData);
        if (!visitedObjects.has(p.s3MachineLearningModelResourceData))
            aws_cdk_lib_IResolvable(p.s3MachineLearningModelResourceData);
        if (!visitedObjects.has(p.sageMakerMachineLearningModelResourceData))
            aws_cdk_lib_IResolvable(p.sageMakerMachineLearningModelResourceData);
        if (!visitedObjects.has(p.secretsManagerSecretResourceData))
            aws_cdk_lib_IResolvable(p.secretsManagerSecretResourceData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinition_ResourceDefinitionVersionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resources))
            aws_cdk_lib_IResolvable(p.resources);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinition_ResourceDownloadOwnerSettingProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinition_ResourceInstanceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourceDataContainer))
            aws_cdk_lib_IResolvable(p.resourceDataContainer);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinition_S3MachineLearningModelResourceDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ownerSetting))
            aws_cdk_lib_IResolvable(p.ownerSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinition_SageMakerMachineLearningModelResourceDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ownerSetting))
            aws_cdk_lib_IResolvable(p.ownerSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinition_SecretsManagerSecretResourceDataProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resources))
            aws_cdk_lib_IResolvable(p.resources);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion(p) {
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_GroupOwnerSettingProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_LocalDeviceResourceDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupOwnerSetting))
            aws_cdk_lib_IResolvable(p.groupOwnerSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_LocalVolumeResourceDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupOwnerSetting))
            aws_cdk_lib_IResolvable(p.groupOwnerSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_ResourceDataContainerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.localDeviceResourceData))
            aws_cdk_lib_IResolvable(p.localDeviceResourceData);
        if (!visitedObjects.has(p.localVolumeResourceData))
            aws_cdk_lib_IResolvable(p.localVolumeResourceData);
        if (!visitedObjects.has(p.s3MachineLearningModelResourceData))
            aws_cdk_lib_IResolvable(p.s3MachineLearningModelResourceData);
        if (!visitedObjects.has(p.sageMakerMachineLearningModelResourceData))
            aws_cdk_lib_IResolvable(p.sageMakerMachineLearningModelResourceData);
        if (!visitedObjects.has(p.secretsManagerSecretResourceData))
            aws_cdk_lib_IResolvable(p.secretsManagerSecretResourceData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_ResourceDownloadOwnerSettingProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_ResourceInstanceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourceDataContainer))
            aws_cdk_lib_IResolvable(p.resourceDataContainer);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_S3MachineLearningModelResourceDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ownerSetting))
            aws_cdk_lib_IResolvable(p.ownerSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_SageMakerMachineLearningModelResourceDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ownerSetting))
            aws_cdk_lib_IResolvable(p.ownerSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_SecretsManagerSecretResourceDataProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.initialVersion))
            aws_cdk_lib_IResolvable(p.initialVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinition(p) {
}
function aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinition_SubscriptionProperty(p) {
}
function aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinition_SubscriptionDefinitionVersionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.subscriptions))
            aws_cdk_lib_IResolvable(p.subscriptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinitionVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.subscriptions))
            aws_cdk_lib_IResolvable(p.subscriptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinitionVersion(p) {
}
function aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinitionVersion_SubscriptionProperty(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnComponentVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambdaFunction))
            aws_cdk_lib_IResolvable(p.lambdaFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnComponentVersion(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_ComponentDependencyRequirementProperty(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_ComponentPlatformProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaContainerParamsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.devices))
            aws_cdk_lib_IResolvable(p.devices);
        if (!visitedObjects.has(p.volumes))
            aws_cdk_lib_IResolvable(p.volumes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaDeviceMountProperty(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaEventSourceProperty(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaExecutionParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environmentVariables))
            aws_cdk_lib_IResolvable(p.environmentVariables);
        if (!visitedObjects.has(p.eventSources))
            aws_cdk_lib_IResolvable(p.eventSources);
        if (!visitedObjects.has(p.linuxProcessParams))
            aws_cdk_lib_IResolvable(p.linuxProcessParams);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaFunctionRecipeSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.componentDependencies))
            aws_cdk_lib_IResolvable(p.componentDependencies);
        if (!visitedObjects.has(p.componentLambdaParameters))
            aws_cdk_lib_IResolvable(p.componentLambdaParameters);
        if (!visitedObjects.has(p.componentPlatforms))
            aws_cdk_lib_IResolvable(p.componentPlatforms);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaLinuxProcessParamsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containerParams))
            aws_cdk_lib_IResolvable(p.containerParams);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaVolumeMountProperty(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnDeploymentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.components))
            aws_cdk_lib_IResolvable(p.components);
        if (!visitedObjects.has(p.deploymentPolicies))
            aws_cdk_lib_IResolvable(p.deploymentPolicies);
        if (!visitedObjects.has(p.iotJobConfiguration))
            aws_cdk_lib_IResolvable(p.iotJobConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_ComponentConfigurationUpdateProperty(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_ComponentDeploymentSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurationUpdate))
            aws_cdk_lib_IResolvable(p.configurationUpdate);
        if (!visitedObjects.has(p.runWith))
            aws_cdk_lib_IResolvable(p.runWith);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_ComponentRunWithProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.systemResourceLimits))
            aws_cdk_lib_IResolvable(p.systemResourceLimits);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_DeploymentComponentUpdatePolicyProperty(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_DeploymentConfigurationValidationPolicyProperty(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_DeploymentIoTJobConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.abortConfig))
            aws_cdk_lib_IResolvable(p.abortConfig);
        if (!visitedObjects.has(p.jobExecutionsRolloutConfig))
            aws_cdk_lib_IResolvable(p.jobExecutionsRolloutConfig);
        if (!visitedObjects.has(p.timeoutConfig))
            aws_cdk_lib_IResolvable(p.timeoutConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_DeploymentPoliciesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.componentUpdatePolicy))
            aws_cdk_lib_IResolvable(p.componentUpdatePolicy);
        if (!visitedObjects.has(p.configurationValidationPolicy))
            aws_cdk_lib_IResolvable(p.configurationValidationPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_IoTJobAbortConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.criteriaList))
            aws_cdk_lib_IResolvable(p.criteriaList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_IoTJobAbortCriteriaProperty(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_IoTJobExecutionsRolloutConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.exponentialRate))
            aws_cdk_lib_IResolvable(p.exponentialRate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_IoTJobExponentialRolloutRateProperty(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_IoTJobTimeoutConfigProperty(p) {
}
function aws_cdk_lib_aws_greengrassv2_CfnDeployment_SystemResourceLimitsProperty(p) {
}
function aws_cdk_lib_aws_groundstation_CfnConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configData))
            aws_cdk_lib_IResolvable(p.configData);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_groundstation_CfnConfig(p) {
}
function aws_cdk_lib_aws_groundstation_CfnConfig_AntennaDownlinkConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spectrumConfig))
            aws_cdk_lib_IResolvable(p.spectrumConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_groundstation_CfnConfig_AntennaDownlinkDemodDecodeConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decodeConfig))
            aws_cdk_lib_IResolvable(p.decodeConfig);
        if (!visitedObjects.has(p.demodulationConfig))
            aws_cdk_lib_IResolvable(p.demodulationConfig);
        if (!visitedObjects.has(p.spectrumConfig))
            aws_cdk_lib_IResolvable(p.spectrumConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_groundstation_CfnConfig_AntennaUplinkConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spectrumConfig))
            aws_cdk_lib_IResolvable(p.spectrumConfig);
        if (!visitedObjects.has(p.targetEirp))
            aws_cdk_lib_IResolvable(p.targetEirp);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_groundstation_CfnConfig_ConfigDataProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.antennaDownlinkConfig))
            aws_cdk_lib_IResolvable(p.antennaDownlinkConfig);
        if (!visitedObjects.has(p.antennaDownlinkDemodDecodeConfig))
            aws_cdk_lib_IResolvable(p.antennaDownlinkDemodDecodeConfig);
        if (!visitedObjects.has(p.antennaUplinkConfig))
            aws_cdk_lib_IResolvable(p.antennaUplinkConfig);
        if (!visitedObjects.has(p.dataflowEndpointConfig))
            aws_cdk_lib_IResolvable(p.dataflowEndpointConfig);
        if (!visitedObjects.has(p.s3RecordingConfig))
            aws_cdk_lib_IResolvable(p.s3RecordingConfig);
        if (!visitedObjects.has(p.trackingConfig))
            aws_cdk_lib_IResolvable(p.trackingConfig);
        if (!visitedObjects.has(p.uplinkEchoConfig))
            aws_cdk_lib_IResolvable(p.uplinkEchoConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_groundstation_CfnConfig_DataflowEndpointConfigProperty(p) {
}
function aws_cdk_lib_aws_groundstation_CfnConfig_DecodeConfigProperty(p) {
}
function aws_cdk_lib_aws_groundstation_CfnConfig_DemodulationConfigProperty(p) {
}
function aws_cdk_lib_aws_groundstation_CfnConfig_EirpProperty(p) {
}
function aws_cdk_lib_aws_groundstation_CfnConfig_FrequencyProperty(p) {
}
function aws_cdk_lib_aws_groundstation_CfnConfig_FrequencyBandwidthProperty(p) {
}
function aws_cdk_lib_aws_groundstation_CfnConfig_S3RecordingConfigProperty(p) {
}
function aws_cdk_lib_aws_groundstation_CfnConfig_SpectrumConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bandwidth))
            aws_cdk_lib_IResolvable(p.bandwidth);
        if (!visitedObjects.has(p.centerFrequency))
            aws_cdk_lib_IResolvable(p.centerFrequency);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_groundstation_CfnConfig_TrackingConfigProperty(p) {
}
function aws_cdk_lib_aws_groundstation_CfnConfig_UplinkEchoConfigProperty(p) {
}
function aws_cdk_lib_aws_groundstation_CfnConfig_UplinkSpectrumConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.centerFrequency))
            aws_cdk_lib_IResolvable(p.centerFrequency);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_groundstation_CfnDataflowEndpointGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.endpointDetails))
            aws_cdk_lib_IResolvable(p.endpointDetails);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_groundstation_CfnDataflowEndpointGroup(p) {
}
function aws_cdk_lib_aws_groundstation_CfnDataflowEndpointGroup_DataflowEndpointProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.address))
            aws_cdk_lib_IResolvable(p.address);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_groundstation_CfnDataflowEndpointGroup_EndpointDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.endpoint))
            aws_cdk_lib_IResolvable(p.endpoint);
        if (!visitedObjects.has(p.securityDetails))
            aws_cdk_lib_IResolvable(p.securityDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_groundstation_CfnDataflowEndpointGroup_SecurityDetailsProperty(p) {
}
function aws_cdk_lib_aws_groundstation_CfnDataflowEndpointGroup_SocketAddressProperty(p) {
}
function aws_cdk_lib_aws_groundstation_CfnMissionProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataflowEdges))
            aws_cdk_lib_IResolvable(p.dataflowEdges);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_groundstation_CfnMissionProfile(p) {
}
function aws_cdk_lib_aws_groundstation_CfnMissionProfile_DataflowEdgeProperty(p) {
}
function aws_cdk_lib_aws_guardduty_CfnDetectorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSources))
            aws_cdk_lib_IResolvable(p.dataSources);
        if (!visitedObjects.has(p.features))
            aws_cdk_lib_IResolvable(p.features);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_guardduty_CfnDetector(p) {
}
function aws_cdk_lib_aws_guardduty_CfnDetector_CFNDataSourceConfigurationsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kubernetes))
            aws_cdk_lib_IResolvable(p.kubernetes);
        if (!visitedObjects.has(p.malwareProtection))
            aws_cdk_lib_IResolvable(p.malwareProtection);
        if (!visitedObjects.has(p.s3Logs))
            aws_cdk_lib_IResolvable(p.s3Logs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_guardduty_CfnDetector_CFNKubernetesAuditLogsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_guardduty_CfnDetector_CFNKubernetesConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.auditLogs))
            aws_cdk_lib_IResolvable(p.auditLogs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_guardduty_CfnDetector_CFNMalwareProtectionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scanEc2InstanceWithFindings))
            aws_cdk_lib_IResolvable(p.scanEc2InstanceWithFindings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_guardduty_CfnDetector_CFNS3LogsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_guardduty_CfnDetector_CFNScanEc2InstanceWithFindingsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_guardduty_CfnDetector_FeatureAdditionalConfigurationProperty(p) {
}
function aws_cdk_lib_aws_guardduty_CfnDetector_FeatureConfigurationsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.additionalConfiguration))
            aws_cdk_lib_IResolvable(p.additionalConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_guardduty_CfnFilterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.findingCriteria))
            aws_cdk_lib_IResolvable(p.findingCriteria);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_guardduty_CfnFilter(p) {
}
function aws_cdk_lib_aws_guardduty_CfnFilter_ConditionProperty(p) {
}
function aws_cdk_lib_aws_guardduty_CfnFilter_FindingCriteriaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.itemType))
            aws_cdk_lib_IResolvable(p.itemType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_guardduty_CfnIPSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_guardduty_CfnIPSet(p) {
}
function aws_cdk_lib_aws_guardduty_CfnMasterProps(p) {
}
function aws_cdk_lib_aws_guardduty_CfnMaster(p) {
}
function aws_cdk_lib_aws_guardduty_CfnMemberProps(p) {
}
function aws_cdk_lib_aws_guardduty_CfnMember(p) {
}
function aws_cdk_lib_aws_guardduty_CfnThreatIntelSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_guardduty_CfnThreatIntelSet(p) {
}
function aws_cdk_lib_aws_healthlake_CfnFHIRDatastoreProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.preloadDataConfig))
            aws_cdk_lib_IResolvable(p.preloadDataConfig);
        if (!visitedObjects.has(p.sseConfiguration))
            aws_cdk_lib_IResolvable(p.sseConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_healthlake_CfnFHIRDatastore(p) {
}
function aws_cdk_lib_aws_healthlake_CfnFHIRDatastore_CreatedAtProperty(p) {
}
function aws_cdk_lib_aws_healthlake_CfnFHIRDatastore_KmsEncryptionConfigProperty(p) {
}
function aws_cdk_lib_aws_healthlake_CfnFHIRDatastore_PreloadDataConfigProperty(p) {
}
function aws_cdk_lib_aws_healthlake_CfnFHIRDatastore_SseConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kmsEncryptionConfig))
            aws_cdk_lib_IResolvable(p.kmsEncryptionConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_PolicyDocumentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.statements != null)
            for (const o of p.statements)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_PolicyDocument(p) {
}
function aws_cdk_lib_aws_iam_PolicyStatement(p) {
}
function aws_cdk_lib_aws_iam_Effect(p) {
}
function aws_cdk_lib_aws_iam_PolicyStatementProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.effect))
            aws_cdk_lib_aws_iam_Effect(p.effect);
        if (p.notPrincipals != null)
            for (const o of p.notPrincipals)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IPrincipal(o);
        if (p.principals != null)
            for (const o of p.principals)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IPrincipal(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_IManagedPolicy(p) {
}
function aws_cdk_lib_aws_iam_ManagedPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.document))
            aws_cdk_lib_aws_iam_PolicyDocument(p.document);
        if (p.groups != null)
            for (const o of p.groups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IGroup(o);
        if (p.roles != null)
            for (const o of p.roles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IRole(o);
        if (p.statements != null)
            for (const o of p.statements)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (p.users != null)
            for (const o of p.users)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IUser(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_ManagedPolicy(p) {
}
function aws_cdk_lib_aws_iam_RoleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assumedBy))
            aws_cdk_lib_aws_iam_IPrincipal(p.assumedBy);
        if (p.inlinePolicies != null)
            for (const o of Object.values(p.inlinePolicies))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyDocument(o);
        if (p.managedPolicies != null)
            for (const o of p.managedPolicies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IManagedPolicy(o);
        if (!visitedObjects.has(p.maxSessionDuration))
            aws_cdk_lib_Duration(p.maxSessionDuration);
        if (!visitedObjects.has(p.permissionsBoundary))
            aws_cdk_lib_aws_iam_IManagedPolicy(p.permissionsBoundary);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_FromRoleArnOptions(p) {
}
function aws_cdk_lib_aws_iam_CustomizeRolesOptions(p) {
}
function aws_cdk_lib_aws_iam_FromRoleNameOptions(p) {
}
function aws_cdk_lib_aws_iam_Role(p) {
}
function aws_cdk_lib_aws_iam_IRole(p) {
}
function aws_cdk_lib_aws_iam_WithoutPolicyUpdatesOptions(p) {
}
function aws_cdk_lib_aws_iam_IPolicy(p) {
}
function aws_cdk_lib_aws_iam_PolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.document))
            aws_cdk_lib_aws_iam_PolicyDocument(p.document);
        if (p.groups != null)
            for (const o of p.groups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IGroup(o);
        if (p.roles != null)
            for (const o of p.roles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IRole(o);
        if (p.statements != null)
            for (const o of p.statements)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (p.users != null)
            for (const o of p.users)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IUser(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_Policy(p) {
}
function aws_cdk_lib_aws_iam_IUser(p) {
}
function aws_cdk_lib_aws_iam_UserProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.groups != null)
            for (const o of p.groups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IGroup(o);
        if (p.managedPolicies != null)
            for (const o of p.managedPolicies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IManagedPolicy(o);
        if (!visitedObjects.has(p.password))
            aws_cdk_lib_SecretValue(p.password);
        if (!visitedObjects.has(p.permissionsBoundary))
            aws_cdk_lib_aws_iam_IManagedPolicy(p.permissionsBoundary);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_UserAttributes(p) {
}
function aws_cdk_lib_aws_iam_User(p) {
}
function aws_cdk_lib_aws_iam_IGroup(p) {
}
function aws_cdk_lib_aws_iam_GroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.managedPolicies != null)
            for (const o of p.managedPolicies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IManagedPolicy(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_Group(p) {
}
function aws_cdk_lib_aws_iam_LazyRoleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assumedBy))
            aws_cdk_lib_aws_iam_IPrincipal(p.assumedBy);
        if (p.inlinePolicies != null)
            for (const o of Object.values(p.inlinePolicies))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyDocument(o);
        if (p.managedPolicies != null)
            for (const o of p.managedPolicies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IManagedPolicy(o);
        if (!visitedObjects.has(p.maxSessionDuration))
            aws_cdk_lib_Duration(p.maxSessionDuration);
        if (!visitedObjects.has(p.permissionsBoundary))
            aws_cdk_lib_aws_iam_IManagedPolicy(p.permissionsBoundary);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_LazyRole(p) {
}
function aws_cdk_lib_aws_iam_IGrantable(p) {
}
function aws_cdk_lib_aws_iam_IPrincipal(p) {
}
function aws_cdk_lib_aws_iam_IComparablePrincipal(p) {
}
function aws_cdk_lib_aws_iam_ComparablePrincipal(p) {
}
function aws_cdk_lib_aws_iam_IAssumeRolePrincipal(p) {
}
function aws_cdk_lib_aws_iam_AddToPrincipalPolicyResult(p) {
}
function aws_cdk_lib_aws_iam_PrincipalBase(p) {
}
function aws_cdk_lib_aws_iam_PrincipalWithConditions(p) {
}
function aws_cdk_lib_aws_iam_SessionTagsPrincipal(p) {
}
function aws_cdk_lib_aws_iam_PrincipalPolicyFragment(p) {
}
function aws_cdk_lib_aws_iam_ArnPrincipal(p) {
}
function aws_cdk_lib_aws_iam_AccountPrincipal(p) {
}
function aws_cdk_lib_aws_iam_ServicePrincipalOpts(p) {
}
function aws_cdk_lib_aws_iam_ServicePrincipal(p) {
}
function aws_cdk_lib_aws_iam_OrganizationPrincipal(p) {
}
function aws_cdk_lib_aws_iam_CanonicalUserPrincipal(p) {
}
function aws_cdk_lib_aws_iam_FederatedPrincipal(p) {
}
function aws_cdk_lib_aws_iam_WebIdentityPrincipal(p) {
}
function aws_cdk_lib_aws_iam_OpenIdConnectPrincipal(p) {
}
function aws_cdk_lib_aws_iam_SamlPrincipal(p) {
}
function aws_cdk_lib_aws_iam_SamlConsolePrincipal(p) {
}
function aws_cdk_lib_aws_iam_AccountRootPrincipal(p) {
}
function aws_cdk_lib_aws_iam_AnyPrincipal(p) {
}
function aws_cdk_lib_aws_iam_StarPrincipal(p) {
}
function aws_cdk_lib_aws_iam_CompositePrincipal(p) {
}
function aws_cdk_lib_aws_iam_IIdentity(p) {
}
function aws_cdk_lib_aws_iam_CommonGrantOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.grantee))
            aws_cdk_lib_aws_iam_IGrantable(p.grantee);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_GrantWithResourceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resource))
            aws_cdk_lib_aws_iam_IResourceWithPolicy(p.resource);
        if (!visitedObjects.has(p.grantee))
            aws_cdk_lib_aws_iam_IGrantable(p.grantee);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_GrantOnPrincipalOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.grantee))
            aws_cdk_lib_aws_iam_IGrantable(p.grantee);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_GrantOnPrincipalAndResourceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resource))
            aws_cdk_lib_aws_iam_IResourceWithPolicy(p.resource);
        if (!visitedObjects.has(p.resourcePolicyPrincipal))
            aws_cdk_lib_aws_iam_IPrincipal(p.resourcePolicyPrincipal);
        if (!visitedObjects.has(p.grantee))
            aws_cdk_lib_aws_iam_IGrantable(p.grantee);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_Grant(p) {
}
function aws_cdk_lib_aws_iam_IResourceWithPolicy(p) {
}
function aws_cdk_lib_aws_iam_AddToResourcePolicyResult(p) {
}
function aws_cdk_lib_aws_iam_CompositeDependable(p) {
}
function aws_cdk_lib_aws_iam_UnknownPrincipalProps(p) {
}
function aws_cdk_lib_aws_iam_UnknownPrincipal(p) {
}
function aws_cdk_lib_aws_iam_IOpenIdConnectProvider(p) {
}
function aws_cdk_lib_aws_iam_OpenIdConnectProviderProps(p) {
}
function aws_cdk_lib_aws_iam_OpenIdConnectProvider(p) {
}
function aws_cdk_lib_aws_iam_PermissionsBoundary(p) {
}
function aws_cdk_lib_aws_iam_ISamlProvider(p) {
}
function aws_cdk_lib_aws_iam_SamlProviderProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metadataDocument))
            aws_cdk_lib_aws_iam_SamlMetadataDocument(p.metadataDocument);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_SamlMetadataDocument(p) {
}
function aws_cdk_lib_aws_iam_SamlProvider(p) {
}
function aws_cdk_lib_aws_iam_AccessKeyStatus(p) {
}
function aws_cdk_lib_aws_iam_IAccessKey(p) {
}
function aws_cdk_lib_aws_iam_AccessKeyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.user))
            aws_cdk_lib_aws_iam_IUser(p.user);
        if (!visitedObjects.has(p.status))
            aws_cdk_lib_aws_iam_AccessKeyStatus(p.status);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_AccessKey(p) {
}
function aws_cdk_lib_aws_iam_CfnAccessKeyProps(p) {
}
function aws_cdk_lib_aws_iam_CfnAccessKey(p) {
}
function aws_cdk_lib_aws_iam_CfnGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.policies))
            aws_cdk_lib_IResolvable(p.policies);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_CfnGroup(p) {
}
function aws_cdk_lib_aws_iam_CfnGroup_PolicyProperty(p) {
}
function aws_cdk_lib_aws_iam_CfnInstanceProfileProps(p) {
}
function aws_cdk_lib_aws_iam_CfnInstanceProfile(p) {
}
function aws_cdk_lib_aws_iam_CfnManagedPolicyProps(p) {
}
function aws_cdk_lib_aws_iam_CfnManagedPolicy(p) {
}
function aws_cdk_lib_aws_iam_CfnOIDCProviderProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_CfnOIDCProvider(p) {
}
function aws_cdk_lib_aws_iam_CfnPolicyProps(p) {
}
function aws_cdk_lib_aws_iam_CfnPolicy(p) {
}
function aws_cdk_lib_aws_iam_CfnRoleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.policies))
            aws_cdk_lib_IResolvable(p.policies);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_CfnRole(p) {
}
function aws_cdk_lib_aws_iam_CfnRole_PolicyProperty(p) {
}
function aws_cdk_lib_aws_iam_CfnSAMLProviderProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_CfnSAMLProvider(p) {
}
function aws_cdk_lib_aws_iam_CfnServerCertificateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_CfnServerCertificate(p) {
}
function aws_cdk_lib_aws_iam_CfnServiceLinkedRoleProps(p) {
}
function aws_cdk_lib_aws_iam_CfnServiceLinkedRole(p) {
}
function aws_cdk_lib_aws_iam_CfnUserProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loginProfile))
            aws_cdk_lib_IResolvable(p.loginProfile);
        if (!visitedObjects.has(p.policies))
            aws_cdk_lib_IResolvable(p.policies);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_CfnUser(p) {
}
function aws_cdk_lib_aws_iam_CfnUser_LoginProfileProperty(p) {
}
function aws_cdk_lib_aws_iam_CfnUser_PolicyProperty(p) {
}
function aws_cdk_lib_aws_iam_CfnUserToGroupAdditionProps(p) {
}
function aws_cdk_lib_aws_iam_CfnUserToGroupAddition(p) {
}
function aws_cdk_lib_aws_iam_CfnVirtualMFADeviceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iam_CfnVirtualMFADevice(p) {
}
function aws_cdk_lib_aws_identitystore_CfnGroupProps(p) {
}
function aws_cdk_lib_aws_identitystore_CfnGroup(p) {
}
function aws_cdk_lib_aws_identitystore_CfnGroupMembershipProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.memberId))
            aws_cdk_lib_IResolvable(p.memberId);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_identitystore_CfnGroupMembership(p) {
}
function aws_cdk_lib_aws_identitystore_CfnGroupMembership_MemberIdProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnComponentProps(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnComponent(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnContainerRecipeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.components))
            aws_cdk_lib_IResolvable(p.components);
        if (!visitedObjects.has(p.targetRepository))
            aws_cdk_lib_IResolvable(p.targetRepository);
        if (!visitedObjects.has(p.instanceConfiguration))
            aws_cdk_lib_IResolvable(p.instanceConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe_ComponentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe_ComponentParameterProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe_EbsInstanceBlockDeviceSpecificationProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe_InstanceBlockDeviceMappingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ebs))
            aws_cdk_lib_IResolvable(p.ebs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe_InstanceConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blockDeviceMappings))
            aws_cdk_lib_IResolvable(p.blockDeviceMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe_TargetContainerRepositoryProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnDistributionConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.distributions))
            aws_cdk_lib_IResolvable(p.distributions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_AmiDistributionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.amiTags))
            aws_cdk_lib_IResolvable(p.amiTags);
        if (!visitedObjects.has(p.launchPermissionConfiguration))
            aws_cdk_lib_IResolvable(p.launchPermissionConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_ContainerDistributionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetRepository))
            aws_cdk_lib_IResolvable(p.targetRepository);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_DistributionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fastLaunchConfigurations))
            aws_cdk_lib_IResolvable(p.fastLaunchConfigurations);
        if (!visitedObjects.has(p.launchTemplateConfigurations))
            aws_cdk_lib_IResolvable(p.launchTemplateConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_FastLaunchConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.launchTemplate))
            aws_cdk_lib_IResolvable(p.launchTemplate);
        if (!visitedObjects.has(p.snapshotConfiguration))
            aws_cdk_lib_IResolvable(p.snapshotConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_FastLaunchLaunchTemplateSpecificationProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_FastLaunchSnapshotConfigurationProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_LaunchPermissionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_LaunchTemplateConfigurationProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_TargetContainerRepositoryProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.imageScanningConfiguration))
            aws_cdk_lib_IResolvable(p.imageScanningConfiguration);
        if (!visitedObjects.has(p.imageTestsConfiguration))
            aws_cdk_lib_IResolvable(p.imageTestsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnImage(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnImage_EcrConfigurationProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnImage_ImageScanningConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ecrConfiguration))
            aws_cdk_lib_IResolvable(p.ecrConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnImage_ImageTestsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnImagePipelineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.imageScanningConfiguration))
            aws_cdk_lib_IResolvable(p.imageScanningConfiguration);
        if (!visitedObjects.has(p.imageTestsConfiguration))
            aws_cdk_lib_IResolvable(p.imageTestsConfiguration);
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_IResolvable(p.schedule);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnImagePipeline(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnImagePipeline_EcrConfigurationProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnImagePipeline_ImageScanningConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ecrConfiguration))
            aws_cdk_lib_IResolvable(p.ecrConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnImagePipeline_ImageTestsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnImagePipeline_ScheduleProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnImageRecipeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.components))
            aws_cdk_lib_IResolvable(p.components);
        if (!visitedObjects.has(p.additionalInstanceConfiguration))
            aws_cdk_lib_IResolvable(p.additionalInstanceConfiguration);
        if (!visitedObjects.has(p.blockDeviceMappings))
            aws_cdk_lib_IResolvable(p.blockDeviceMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnImageRecipe(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnImageRecipe_AdditionalInstanceConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.systemsManagerAgent))
            aws_cdk_lib_IResolvable(p.systemsManagerAgent);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnImageRecipe_ComponentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnImageRecipe_ComponentParameterProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnImageRecipe_EbsInstanceBlockDeviceSpecificationProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnImageRecipe_InstanceBlockDeviceMappingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ebs))
            aws_cdk_lib_IResolvable(p.ebs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnImageRecipe_SystemsManagerAgentProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnInfrastructureConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceMetadataOptions))
            aws_cdk_lib_IResolvable(p.instanceMetadataOptions);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_IResolvable(p.logging);
        if (!visitedObjects.has(p.resourceTags))
            aws_cdk_lib_IResolvable(p.resourceTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnInfrastructureConfiguration(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnInfrastructureConfiguration_InstanceMetadataOptionsProperty(p) {
}
function aws_cdk_lib_aws_imagebuilder_CfnInfrastructureConfiguration_LoggingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Logs))
            aws_cdk_lib_IResolvable(p.s3Logs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_imagebuilder_CfnInfrastructureConfiguration_S3LogsProperty(p) {
}
function aws_cdk_lib_aws_inspector_CfnAssessmentTargetProps(p) {
}
function aws_cdk_lib_aws_inspector_CfnAssessmentTarget(p) {
}
function aws_cdk_lib_aws_inspector_CfnAssessmentTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userAttributesForFindings))
            aws_cdk_lib_IResolvable(p.userAttributesForFindings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_inspector_CfnAssessmentTemplate(p) {
}
function aws_cdk_lib_aws_inspector_CfnResourceGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourceGroupTags))
            aws_cdk_lib_IResolvable(p.resourceGroupTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_inspector_CfnResourceGroup(p) {
}
function aws_cdk_lib_aws_inspectorv2_CfnFilterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filterCriteria))
            aws_cdk_lib_IResolvable(p.filterCriteria);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_inspectorv2_CfnFilter(p) {
}
function aws_cdk_lib_aws_inspectorv2_CfnFilter_DateFilterProperty(p) {
}
function aws_cdk_lib_aws_inspectorv2_CfnFilter_FilterCriteriaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awsAccountId))
            aws_cdk_lib_IResolvable(p.awsAccountId);
        if (!visitedObjects.has(p.componentId))
            aws_cdk_lib_IResolvable(p.componentId);
        if (!visitedObjects.has(p.componentType))
            aws_cdk_lib_IResolvable(p.componentType);
        if (!visitedObjects.has(p.ec2InstanceImageId))
            aws_cdk_lib_IResolvable(p.ec2InstanceImageId);
        if (!visitedObjects.has(p.ec2InstanceSubnetId))
            aws_cdk_lib_IResolvable(p.ec2InstanceSubnetId);
        if (!visitedObjects.has(p.ec2InstanceVpcId))
            aws_cdk_lib_IResolvable(p.ec2InstanceVpcId);
        if (!visitedObjects.has(p.ecrImageArchitecture))
            aws_cdk_lib_IResolvable(p.ecrImageArchitecture);
        if (!visitedObjects.has(p.ecrImageHash))
            aws_cdk_lib_IResolvable(p.ecrImageHash);
        if (!visitedObjects.has(p.ecrImagePushedAt))
            aws_cdk_lib_IResolvable(p.ecrImagePushedAt);
        if (!visitedObjects.has(p.ecrImageRegistry))
            aws_cdk_lib_IResolvable(p.ecrImageRegistry);
        if (!visitedObjects.has(p.ecrImageRepositoryName))
            aws_cdk_lib_IResolvable(p.ecrImageRepositoryName);
        if (!visitedObjects.has(p.ecrImageTags))
            aws_cdk_lib_IResolvable(p.ecrImageTags);
        if (!visitedObjects.has(p.findingArn))
            aws_cdk_lib_IResolvable(p.findingArn);
        if (!visitedObjects.has(p.findingStatus))
            aws_cdk_lib_IResolvable(p.findingStatus);
        if (!visitedObjects.has(p.findingType))
            aws_cdk_lib_IResolvable(p.findingType);
        if (!visitedObjects.has(p.firstObservedAt))
            aws_cdk_lib_IResolvable(p.firstObservedAt);
        if (!visitedObjects.has(p.inspectorScore))
            aws_cdk_lib_IResolvable(p.inspectorScore);
        if (!visitedObjects.has(p.lastObservedAt))
            aws_cdk_lib_IResolvable(p.lastObservedAt);
        if (!visitedObjects.has(p.networkProtocol))
            aws_cdk_lib_IResolvable(p.networkProtocol);
        if (!visitedObjects.has(p.portRange))
            aws_cdk_lib_IResolvable(p.portRange);
        if (!visitedObjects.has(p.relatedVulnerabilities))
            aws_cdk_lib_IResolvable(p.relatedVulnerabilities);
        if (!visitedObjects.has(p.resourceId))
            aws_cdk_lib_IResolvable(p.resourceId);
        if (!visitedObjects.has(p.resourceTags))
            aws_cdk_lib_IResolvable(p.resourceTags);
        if (!visitedObjects.has(p.resourceType))
            aws_cdk_lib_IResolvable(p.resourceType);
        if (!visitedObjects.has(p.severity))
            aws_cdk_lib_IResolvable(p.severity);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
        if (!visitedObjects.has(p.updatedAt))
            aws_cdk_lib_IResolvable(p.updatedAt);
        if (!visitedObjects.has(p.vendorSeverity))
            aws_cdk_lib_IResolvable(p.vendorSeverity);
        if (!visitedObjects.has(p.vulnerabilityId))
            aws_cdk_lib_IResolvable(p.vulnerabilityId);
        if (!visitedObjects.has(p.vulnerabilitySource))
            aws_cdk_lib_IResolvable(p.vulnerabilitySource);
        if (!visitedObjects.has(p.vulnerablePackages))
            aws_cdk_lib_IResolvable(p.vulnerablePackages);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_inspectorv2_CfnFilter_MapFilterProperty(p) {
}
function aws_cdk_lib_aws_inspectorv2_CfnFilter_NumberFilterProperty(p) {
}
function aws_cdk_lib_aws_inspectorv2_CfnFilter_PackageFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.architecture))
            aws_cdk_lib_IResolvable(p.architecture);
        if (!visitedObjects.has(p.epoch))
            aws_cdk_lib_IResolvable(p.epoch);
        if (!visitedObjects.has(p.name))
            aws_cdk_lib_IResolvable(p.name);
        if (!visitedObjects.has(p.release))
            aws_cdk_lib_IResolvable(p.release);
        if (!visitedObjects.has(p.sourceLayerHash))
            aws_cdk_lib_IResolvable(p.sourceLayerHash);
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_IResolvable(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_inspectorv2_CfnFilter_PortRangeFilterProperty(p) {
}
function aws_cdk_lib_aws_inspectorv2_CfnFilter_StringFilterProperty(p) {
}
function aws_cdk_lib_aws_internetmonitor_CfnMonitorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_internetmonitor_CfnMonitor(p) {
}
function aws_cdk_lib_aws_iot_CfnAccountAuditConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.auditCheckConfigurations))
            aws_cdk_lib_IResolvable(p.auditCheckConfigurations);
        if (!visitedObjects.has(p.auditNotificationTargetConfigurations))
            aws_cdk_lib_IResolvable(p.auditNotificationTargetConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnAccountAuditConfiguration(p) {
}
function aws_cdk_lib_aws_iot_CfnAccountAuditConfiguration_AuditCheckConfigurationProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnAccountAuditConfiguration_AuditCheckConfigurationsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticatedCognitoRoleOverlyPermissiveCheck))
            aws_cdk_lib_IResolvable(p.authenticatedCognitoRoleOverlyPermissiveCheck);
        if (!visitedObjects.has(p.caCertificateExpiringCheck))
            aws_cdk_lib_IResolvable(p.caCertificateExpiringCheck);
        if (!visitedObjects.has(p.caCertificateKeyQualityCheck))
            aws_cdk_lib_IResolvable(p.caCertificateKeyQualityCheck);
        if (!visitedObjects.has(p.conflictingClientIdsCheck))
            aws_cdk_lib_IResolvable(p.conflictingClientIdsCheck);
        if (!visitedObjects.has(p.deviceCertificateExpiringCheck))
            aws_cdk_lib_IResolvable(p.deviceCertificateExpiringCheck);
        if (!visitedObjects.has(p.deviceCertificateKeyQualityCheck))
            aws_cdk_lib_IResolvable(p.deviceCertificateKeyQualityCheck);
        if (!visitedObjects.has(p.deviceCertificateSharedCheck))
            aws_cdk_lib_IResolvable(p.deviceCertificateSharedCheck);
        if (!visitedObjects.has(p.intermediateCaRevokedForActiveDeviceCertificatesCheck))
            aws_cdk_lib_IResolvable(p.intermediateCaRevokedForActiveDeviceCertificatesCheck);
        if (!visitedObjects.has(p.iotPolicyOverlyPermissiveCheck))
            aws_cdk_lib_IResolvable(p.iotPolicyOverlyPermissiveCheck);
        if (!visitedObjects.has(p.ioTPolicyPotentialMisConfigurationCheck))
            aws_cdk_lib_IResolvable(p.ioTPolicyPotentialMisConfigurationCheck);
        if (!visitedObjects.has(p.iotRoleAliasAllowsAccessToUnusedServicesCheck))
            aws_cdk_lib_IResolvable(p.iotRoleAliasAllowsAccessToUnusedServicesCheck);
        if (!visitedObjects.has(p.iotRoleAliasOverlyPermissiveCheck))
            aws_cdk_lib_IResolvable(p.iotRoleAliasOverlyPermissiveCheck);
        if (!visitedObjects.has(p.loggingDisabledCheck))
            aws_cdk_lib_IResolvable(p.loggingDisabledCheck);
        if (!visitedObjects.has(p.revokedCaCertificateStillActiveCheck))
            aws_cdk_lib_IResolvable(p.revokedCaCertificateStillActiveCheck);
        if (!visitedObjects.has(p.revokedDeviceCertificateStillActiveCheck))
            aws_cdk_lib_IResolvable(p.revokedDeviceCertificateStillActiveCheck);
        if (!visitedObjects.has(p.unauthenticatedCognitoRoleOverlyPermissiveCheck))
            aws_cdk_lib_IResolvable(p.unauthenticatedCognitoRoleOverlyPermissiveCheck);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnAccountAuditConfiguration_AuditNotificationTargetProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnAccountAuditConfiguration_AuditNotificationTargetConfigurationsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sns))
            aws_cdk_lib_IResolvable(p.sns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnAuthorizerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.tokenSigningPublicKeys))
            aws_cdk_lib_IResolvable(p.tokenSigningPublicKeys);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnAuthorizer(p) {
}
function aws_cdk_lib_aws_iot_CfnCACertificateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.registrationConfig))
            aws_cdk_lib_IResolvable(p.registrationConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnCACertificate(p) {
}
function aws_cdk_lib_aws_iot_CfnCACertificate_RegistrationConfigProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnCertificateProps(p) {
}
function aws_cdk_lib_aws_iot_CfnCertificate(p) {
}
function aws_cdk_lib_aws_iot_CfnCustomMetricProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnCustomMetric(p) {
}
function aws_cdk_lib_aws_iot_CfnDimensionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnDimension(p) {
}
function aws_cdk_lib_aws_iot_CfnDomainConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authorizerConfig))
            aws_cdk_lib_IResolvable(p.authorizerConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnDomainConfiguration(p) {
}
function aws_cdk_lib_aws_iot_CfnDomainConfiguration_AuthorizerConfigProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnDomainConfiguration_ServerCertificateSummaryProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnFleetMetricProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aggregationType))
            aws_cdk_lib_IResolvable(p.aggregationType);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnFleetMetric(p) {
}
function aws_cdk_lib_aws_iot_CfnFleetMetric_AggregationTypeProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnJobTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jobExecutionsRetryConfig))
            aws_cdk_lib_IResolvable(p.jobExecutionsRetryConfig);
        if (!visitedObjects.has(p.maintenanceWindows))
            aws_cdk_lib_IResolvable(p.maintenanceWindows);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnJobTemplate(p) {
}
function aws_cdk_lib_aws_iot_CfnJobTemplate_AbortConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.criteriaList))
            aws_cdk_lib_IResolvable(p.criteriaList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnJobTemplate_AbortCriteriaProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnJobTemplate_ExponentialRolloutRateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rateIncreaseCriteria))
            aws_cdk_lib_IResolvable(p.rateIncreaseCriteria);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnJobTemplate_JobExecutionsRetryConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.retryCriteriaList))
            aws_cdk_lib_IResolvable(p.retryCriteriaList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnJobTemplate_JobExecutionsRolloutConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.exponentialRolloutRate))
            aws_cdk_lib_IResolvable(p.exponentialRolloutRate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnJobTemplate_MaintenanceWindowProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnJobTemplate_PresignedUrlConfigProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnJobTemplate_RateIncreaseCriteriaProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnJobTemplate_RetryCriteriaProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnJobTemplate_TimeoutConfigProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnLoggingProps(p) {
}
function aws_cdk_lib_aws_iot_CfnLogging(p) {
}
function aws_cdk_lib_aws_iot_CfnMitigationActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actionParams))
            aws_cdk_lib_IResolvable(p.actionParams);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnMitigationAction(p) {
}
function aws_cdk_lib_aws_iot_CfnMitigationAction_ActionParamsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.addThingsToThingGroupParams))
            aws_cdk_lib_IResolvable(p.addThingsToThingGroupParams);
        if (!visitedObjects.has(p.enableIoTLoggingParams))
            aws_cdk_lib_IResolvable(p.enableIoTLoggingParams);
        if (!visitedObjects.has(p.publishFindingToSnsParams))
            aws_cdk_lib_IResolvable(p.publishFindingToSnsParams);
        if (!visitedObjects.has(p.replaceDefaultPolicyVersionParams))
            aws_cdk_lib_IResolvable(p.replaceDefaultPolicyVersionParams);
        if (!visitedObjects.has(p.updateCaCertificateParams))
            aws_cdk_lib_IResolvable(p.updateCaCertificateParams);
        if (!visitedObjects.has(p.updateDeviceCertificateParams))
            aws_cdk_lib_IResolvable(p.updateDeviceCertificateParams);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnMitigationAction_AddThingsToThingGroupParamsProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnMitigationAction_EnableIoTLoggingParamsProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnMitigationAction_PublishFindingToSnsParamsProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnMitigationAction_ReplaceDefaultPolicyVersionParamsProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnMitigationAction_UpdateCACertificateParamsProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnMitigationAction_UpdateDeviceCertificateParamsProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnPolicyProps(p) {
}
function aws_cdk_lib_aws_iot_CfnPolicy(p) {
}
function aws_cdk_lib_aws_iot_CfnPolicyPrincipalAttachmentProps(p) {
}
function aws_cdk_lib_aws_iot_CfnPolicyPrincipalAttachment(p) {
}
function aws_cdk_lib_aws_iot_CfnProvisioningTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.preProvisioningHook))
            aws_cdk_lib_IResolvable(p.preProvisioningHook);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnProvisioningTemplate(p) {
}
function aws_cdk_lib_aws_iot_CfnProvisioningTemplate_ProvisioningHookProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnResourceSpecificLoggingProps(p) {
}
function aws_cdk_lib_aws_iot_CfnResourceSpecificLogging(p) {
}
function aws_cdk_lib_aws_iot_CfnRoleAliasProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnRoleAlias(p) {
}
function aws_cdk_lib_aws_iot_CfnScheduledAuditProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnScheduledAudit(p) {
}
function aws_cdk_lib_aws_iot_CfnSecurityProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.additionalMetricsToRetainV2))
            aws_cdk_lib_IResolvable(p.additionalMetricsToRetainV2);
        if (!visitedObjects.has(p.alertTargets))
            aws_cdk_lib_IResolvable(p.alertTargets);
        if (!visitedObjects.has(p.behaviors))
            aws_cdk_lib_IResolvable(p.behaviors);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnSecurityProfile(p) {
}
function aws_cdk_lib_aws_iot_CfnSecurityProfile_AlertTargetProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnSecurityProfile_BehaviorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.criteria))
            aws_cdk_lib_IResolvable(p.criteria);
        if (!visitedObjects.has(p.metricDimension))
            aws_cdk_lib_IResolvable(p.metricDimension);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnSecurityProfile_BehaviorCriteriaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mlDetectionConfig))
            aws_cdk_lib_IResolvable(p.mlDetectionConfig);
        if (!visitedObjects.has(p.statisticalThreshold))
            aws_cdk_lib_IResolvable(p.statisticalThreshold);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnSecurityProfile_MachineLearningDetectionConfigProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnSecurityProfile_MetricDimensionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnSecurityProfile_MetricToRetainProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricDimension))
            aws_cdk_lib_IResolvable(p.metricDimension);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnSecurityProfile_MetricValueProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnSecurityProfile_StatisticalThresholdProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnThingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributePayload))
            aws_cdk_lib_IResolvable(p.attributePayload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnThing(p) {
}
function aws_cdk_lib_aws_iot_CfnThing_AttributePayloadProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnThingPrincipalAttachmentProps(p) {
}
function aws_cdk_lib_aws_iot_CfnThingPrincipalAttachment(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.topicRulePayload))
            aws_cdk_lib_IResolvable(p.topicRulePayload);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudwatchAlarm))
            aws_cdk_lib_IResolvable(p.cloudwatchAlarm);
        if (!visitedObjects.has(p.cloudwatchLogs))
            aws_cdk_lib_IResolvable(p.cloudwatchLogs);
        if (!visitedObjects.has(p.cloudwatchMetric))
            aws_cdk_lib_IResolvable(p.cloudwatchMetric);
        if (!visitedObjects.has(p.dynamoDb))
            aws_cdk_lib_IResolvable(p.dynamoDb);
        if (!visitedObjects.has(p.dynamoDBv2))
            aws_cdk_lib_IResolvable(p.dynamoDBv2);
        if (!visitedObjects.has(p.elasticsearch))
            aws_cdk_lib_IResolvable(p.elasticsearch);
        if (!visitedObjects.has(p.firehose))
            aws_cdk_lib_IResolvable(p.firehose);
        if (!visitedObjects.has(p.http))
            aws_cdk_lib_IResolvable(p.http);
        if (!visitedObjects.has(p.iotAnalytics))
            aws_cdk_lib_IResolvable(p.iotAnalytics);
        if (!visitedObjects.has(p.iotEvents))
            aws_cdk_lib_IResolvable(p.iotEvents);
        if (!visitedObjects.has(p.iotSiteWise))
            aws_cdk_lib_IResolvable(p.iotSiteWise);
        if (!visitedObjects.has(p.kafka))
            aws_cdk_lib_IResolvable(p.kafka);
        if (!visitedObjects.has(p.kinesis))
            aws_cdk_lib_IResolvable(p.kinesis);
        if (!visitedObjects.has(p.lambda))
            aws_cdk_lib_IResolvable(p.lambda);
        if (!visitedObjects.has(p.location))
            aws_cdk_lib_IResolvable(p.location);
        if (!visitedObjects.has(p.openSearch))
            aws_cdk_lib_IResolvable(p.openSearch);
        if (!visitedObjects.has(p.republish))
            aws_cdk_lib_IResolvable(p.republish);
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_IResolvable(p.s3);
        if (!visitedObjects.has(p.sns))
            aws_cdk_lib_IResolvable(p.sns);
        if (!visitedObjects.has(p.sqs))
            aws_cdk_lib_IResolvable(p.sqs);
        if (!visitedObjects.has(p.stepFunctions))
            aws_cdk_lib_IResolvable(p.stepFunctions);
        if (!visitedObjects.has(p.timestream))
            aws_cdk_lib_IResolvable(p.timestream);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_AssetPropertyTimestampProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_AssetPropertyValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.timestamp))
            aws_cdk_lib_IResolvable(p.timestamp);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_AssetPropertyVariantProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_CloudwatchAlarmActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_CloudwatchLogsActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_CloudwatchMetricActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_DynamoDBActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_DynamoDBv2ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.putItem))
            aws_cdk_lib_IResolvable(p.putItem);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_ElasticsearchActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_FirehoseActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_HttpActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.auth))
            aws_cdk_lib_IResolvable(p.auth);
        if (!visitedObjects.has(p.headers))
            aws_cdk_lib_IResolvable(p.headers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_HttpActionHeaderProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_HttpAuthorizationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sigv4))
            aws_cdk_lib_IResolvable(p.sigv4);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_IotAnalyticsActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_IotEventsActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_IotSiteWiseActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.putAssetPropertyValueEntries))
            aws_cdk_lib_IResolvable(p.putAssetPropertyValueEntries);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_KafkaActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientProperties))
            aws_cdk_lib_IResolvable(p.clientProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_KinesisActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_LambdaActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_LocationActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.timestamp))
            aws_cdk_lib_IResolvable(p.timestamp);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_OpenSearchActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_PutAssetPropertyValueEntryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.propertyValues))
            aws_cdk_lib_IResolvable(p.propertyValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_PutItemInputProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_RepublishActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.headers))
            aws_cdk_lib_IResolvable(p.headers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_RepublishActionHeadersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.userProperties))
            aws_cdk_lib_IResolvable(p.userProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_S3ActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_SigV4AuthorizationProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_SnsActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_SqsActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_StepFunctionsActionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_TimestampProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_TimestreamActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
        if (!visitedObjects.has(p.timestamp))
            aws_cdk_lib_IResolvable(p.timestamp);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_TimestreamDimensionProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_TimestreamTimestampProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRule_TopicRulePayloadProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.errorAction))
            aws_cdk_lib_IResolvable(p.errorAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRule_UserPropertyProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRuleDestinationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.httpUrlProperties))
            aws_cdk_lib_IResolvable(p.httpUrlProperties);
        if (!visitedObjects.has(p.vpcProperties))
            aws_cdk_lib_IResolvable(p.vpcProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot_CfnTopicRuleDestination(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRuleDestination_HttpUrlDestinationSummaryProperty(p) {
}
function aws_cdk_lib_aws_iot_CfnTopicRuleDestination_VpcDestinationPropertiesProperty(p) {
}
function aws_cdk_lib_aws_iot1click_CfnDeviceProps(p) {
}
function aws_cdk_lib_aws_iot1click_CfnDevice(p) {
}
function aws_cdk_lib_aws_iot1click_CfnPlacementProps(p) {
}
function aws_cdk_lib_aws_iot1click_CfnPlacement(p) {
}
function aws_cdk_lib_aws_iot1click_CfnProjectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.placementTemplate))
            aws_cdk_lib_IResolvable(p.placementTemplate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iot1click_CfnProject(p) {
}
function aws_cdk_lib_aws_iot1click_CfnProject_DeviceTemplateProperty(p) {
}
function aws_cdk_lib_aws_iot1click_CfnProject_PlacementTemplateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deviceTemplates))
            aws_cdk_lib_IResolvable(p.deviceTemplates);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnChannelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.channelStorage))
            aws_cdk_lib_IResolvable(p.channelStorage);
        if (!visitedObjects.has(p.retentionPeriod))
            aws_cdk_lib_IResolvable(p.retentionPeriod);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnChannel(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnChannel_ChannelStorageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customerManagedS3))
            aws_cdk_lib_IResolvable(p.customerManagedS3);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnChannel_CustomerManagedS3Property(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnChannel_RetentionPeriodProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDatasetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.contentDeliveryRules))
            aws_cdk_lib_IResolvable(p.contentDeliveryRules);
        if (!visitedObjects.has(p.lateDataRules))
            aws_cdk_lib_IResolvable(p.lateDataRules);
        if (!visitedObjects.has(p.retentionPeriod))
            aws_cdk_lib_IResolvable(p.retentionPeriod);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.triggers))
            aws_cdk_lib_IResolvable(p.triggers);
        if (!visitedObjects.has(p.versioningConfiguration))
            aws_cdk_lib_IResolvable(p.versioningConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containerAction))
            aws_cdk_lib_IResolvable(p.containerAction);
        if (!visitedObjects.has(p.queryAction))
            aws_cdk_lib_IResolvable(p.queryAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_ContainerActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourceConfiguration))
            aws_cdk_lib_IResolvable(p.resourceConfiguration);
        if (!visitedObjects.has(p.variables))
            aws_cdk_lib_IResolvable(p.variables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_DatasetContentDeliveryRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_DatasetContentDeliveryRuleDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.iotEventsDestinationConfiguration))
            aws_cdk_lib_IResolvable(p.iotEventsDestinationConfiguration);
        if (!visitedObjects.has(p.s3DestinationConfiguration))
            aws_cdk_lib_IResolvable(p.s3DestinationConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_DatasetContentVersionValueProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_DeltaTimeProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_DeltaTimeSessionWindowConfigurationProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_FilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deltaTime))
            aws_cdk_lib_IResolvable(p.deltaTime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_GlueConfigurationProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_IotEventsDestinationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_LateDataRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ruleConfiguration))
            aws_cdk_lib_IResolvable(p.ruleConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_LateDataRuleConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deltaTimeSessionWindowConfiguration))
            aws_cdk_lib_IResolvable(p.deltaTimeSessionWindowConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_OutputFileUriValueProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_QueryActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filters))
            aws_cdk_lib_IResolvable(p.filters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_ResourceConfigurationProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_RetentionPeriodProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_S3DestinationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.glueConfiguration))
            aws_cdk_lib_IResolvable(p.glueConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_ScheduleProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_TriggerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_IResolvable(p.schedule);
        if (!visitedObjects.has(p.triggeringDataset))
            aws_cdk_lib_IResolvable(p.triggeringDataset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_TriggeringDatasetProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_VariableProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.datasetContentVersionValue))
            aws_cdk_lib_IResolvable(p.datasetContentVersionValue);
        if (!visitedObjects.has(p.outputFileUriValue))
            aws_cdk_lib_IResolvable(p.outputFileUriValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDataset_VersioningConfigurationProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastoreProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.datastorePartitions))
            aws_cdk_lib_IResolvable(p.datastorePartitions);
        if (!visitedObjects.has(p.datastoreStorage))
            aws_cdk_lib_IResolvable(p.datastoreStorage);
        if (!visitedObjects.has(p.fileFormatConfiguration))
            aws_cdk_lib_IResolvable(p.fileFormatConfiguration);
        if (!visitedObjects.has(p.retentionPeriod))
            aws_cdk_lib_IResolvable(p.retentionPeriod);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_ColumnProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_CustomerManagedS3Property(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_CustomerManagedS3StorageProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_DatastorePartitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.partition))
            aws_cdk_lib_IResolvable(p.partition);
        if (!visitedObjects.has(p.timestampPartition))
            aws_cdk_lib_IResolvable(p.timestampPartition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_DatastorePartitionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.partitions))
            aws_cdk_lib_IResolvable(p.partitions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_DatastoreStorageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customerManagedS3))
            aws_cdk_lib_IResolvable(p.customerManagedS3);
        if (!visitedObjects.has(p.iotSiteWiseMultiLayerStorage))
            aws_cdk_lib_IResolvable(p.iotSiteWiseMultiLayerStorage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_FileFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parquetConfiguration))
            aws_cdk_lib_IResolvable(p.parquetConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_IotSiteWiseMultiLayerStorageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customerManagedS3Storage))
            aws_cdk_lib_IResolvable(p.customerManagedS3Storage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_ParquetConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.schemaDefinition))
            aws_cdk_lib_IResolvable(p.schemaDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_PartitionProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_RetentionPeriodProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_SchemaDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnDatastore_TimestampPartitionProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnPipelineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pipelineActivities))
            aws_cdk_lib_IResolvable(p.pipelineActivities);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnPipeline(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnPipeline_ActivityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.addAttributes))
            aws_cdk_lib_IResolvable(p.addAttributes);
        if (!visitedObjects.has(p.channel))
            aws_cdk_lib_IResolvable(p.channel);
        if (!visitedObjects.has(p.datastore))
            aws_cdk_lib_IResolvable(p.datastore);
        if (!visitedObjects.has(p.deviceRegistryEnrich))
            aws_cdk_lib_IResolvable(p.deviceRegistryEnrich);
        if (!visitedObjects.has(p.deviceShadowEnrich))
            aws_cdk_lib_IResolvable(p.deviceShadowEnrich);
        if (!visitedObjects.has(p.filter))
            aws_cdk_lib_IResolvable(p.filter);
        if (!visitedObjects.has(p.lambda))
            aws_cdk_lib_IResolvable(p.lambda);
        if (!visitedObjects.has(p.math))
            aws_cdk_lib_IResolvable(p.math);
        if (!visitedObjects.has(p.removeAttributes))
            aws_cdk_lib_IResolvable(p.removeAttributes);
        if (!visitedObjects.has(p.selectAttributes))
            aws_cdk_lib_IResolvable(p.selectAttributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnPipeline_AddAttributesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotanalytics_CfnPipeline_ChannelProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnPipeline_DatastoreProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnPipeline_DeviceRegistryEnrichProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnPipeline_DeviceShadowEnrichProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnPipeline_FilterProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnPipeline_LambdaProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnPipeline_MathProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnPipeline_RemoveAttributesProperty(p) {
}
function aws_cdk_lib_aws_iotanalytics_CfnPipeline_SelectAttributesProperty(p) {
}
function aws_cdk_lib_aws_iotcoredeviceadvisor_CfnSuiteDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotcoredeviceadvisor_CfnSuiteDefinition(p) {
}
function aws_cdk_lib_aws_iotcoredeviceadvisor_CfnSuiteDefinition_DeviceUnderTestProperty(p) {
}
function aws_cdk_lib_aws_iotcoredeviceadvisor_CfnSuiteDefinition_SuiteDefinitionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.devices))
            aws_cdk_lib_IResolvable(p.devices);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alarmRule))
            aws_cdk_lib_IResolvable(p.alarmRule);
        if (!visitedObjects.has(p.alarmCapabilities))
            aws_cdk_lib_IResolvable(p.alarmCapabilities);
        if (!visitedObjects.has(p.alarmEventActions))
            aws_cdk_lib_IResolvable(p.alarmEventActions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel(p) {
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_AcknowledgeFlowProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_AlarmActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamoDb))
            aws_cdk_lib_IResolvable(p.dynamoDb);
        if (!visitedObjects.has(p.dynamoDBv2))
            aws_cdk_lib_IResolvable(p.dynamoDBv2);
        if (!visitedObjects.has(p.firehose))
            aws_cdk_lib_IResolvable(p.firehose);
        if (!visitedObjects.has(p.iotEvents))
            aws_cdk_lib_IResolvable(p.iotEvents);
        if (!visitedObjects.has(p.iotSiteWise))
            aws_cdk_lib_IResolvable(p.iotSiteWise);
        if (!visitedObjects.has(p.iotTopicPublish))
            aws_cdk_lib_IResolvable(p.iotTopicPublish);
        if (!visitedObjects.has(p.lambda))
            aws_cdk_lib_IResolvable(p.lambda);
        if (!visitedObjects.has(p.sns))
            aws_cdk_lib_IResolvable(p.sns);
        if (!visitedObjects.has(p.sqs))
            aws_cdk_lib_IResolvable(p.sqs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_AlarmCapabilitiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.acknowledgeFlow))
            aws_cdk_lib_IResolvable(p.acknowledgeFlow);
        if (!visitedObjects.has(p.initializationConfiguration))
            aws_cdk_lib_IResolvable(p.initializationConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_AlarmEventActionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alarmActions))
            aws_cdk_lib_IResolvable(p.alarmActions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_AlarmRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.simpleRule))
            aws_cdk_lib_IResolvable(p.simpleRule);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_AssetPropertyTimestampProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_AssetPropertyValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
        if (!visitedObjects.has(p.timestamp))
            aws_cdk_lib_IResolvable(p.timestamp);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_AssetPropertyVariantProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_DynamoDBProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_DynamoDBv2Property(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_FirehoseProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_InitializationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_IotEventsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_IotSiteWiseProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.propertyValue))
            aws_cdk_lib_IResolvable(p.propertyValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_IotTopicPublishProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_LambdaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_PayloadProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_SimpleRuleProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_SnsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnAlarmModel_SqsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.detectorModelDefinition))
            aws_cdk_lib_IResolvable(p.detectorModelDefinition);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel(p) {
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clearTimer))
            aws_cdk_lib_IResolvable(p.clearTimer);
        if (!visitedObjects.has(p.dynamoDb))
            aws_cdk_lib_IResolvable(p.dynamoDb);
        if (!visitedObjects.has(p.dynamoDBv2))
            aws_cdk_lib_IResolvable(p.dynamoDBv2);
        if (!visitedObjects.has(p.firehose))
            aws_cdk_lib_IResolvable(p.firehose);
        if (!visitedObjects.has(p.iotEvents))
            aws_cdk_lib_IResolvable(p.iotEvents);
        if (!visitedObjects.has(p.iotSiteWise))
            aws_cdk_lib_IResolvable(p.iotSiteWise);
        if (!visitedObjects.has(p.iotTopicPublish))
            aws_cdk_lib_IResolvable(p.iotTopicPublish);
        if (!visitedObjects.has(p.lambda))
            aws_cdk_lib_IResolvable(p.lambda);
        if (!visitedObjects.has(p.resetTimer))
            aws_cdk_lib_IResolvable(p.resetTimer);
        if (!visitedObjects.has(p.setTimer))
            aws_cdk_lib_IResolvable(p.setTimer);
        if (!visitedObjects.has(p.setVariable))
            aws_cdk_lib_IResolvable(p.setVariable);
        if (!visitedObjects.has(p.sns))
            aws_cdk_lib_IResolvable(p.sns);
        if (!visitedObjects.has(p.sqs))
            aws_cdk_lib_IResolvable(p.sqs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_AssetPropertyTimestampProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_AssetPropertyValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
        if (!visitedObjects.has(p.timestamp))
            aws_cdk_lib_IResolvable(p.timestamp);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_AssetPropertyVariantProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_ClearTimerProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_DetectorModelDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.states))
            aws_cdk_lib_IResolvable(p.states);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_DynamoDBProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_DynamoDBv2Property(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_EventProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_FirehoseProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_IotEventsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_IotSiteWiseProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.propertyValue))
            aws_cdk_lib_IResolvable(p.propertyValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_IotTopicPublishProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_LambdaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_OnEnterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.events))
            aws_cdk_lib_IResolvable(p.events);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_OnExitProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.events))
            aws_cdk_lib_IResolvable(p.events);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_OnInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.events))
            aws_cdk_lib_IResolvable(p.events);
        if (!visitedObjects.has(p.transitionEvents))
            aws_cdk_lib_IResolvable(p.transitionEvents);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_PayloadProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_ResetTimerProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_SetTimerProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_SetVariableProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_SnsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_SqsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_IResolvable(p.payload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_StateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onEnter))
            aws_cdk_lib_IResolvable(p.onEnter);
        if (!visitedObjects.has(p.onExit))
            aws_cdk_lib_IResolvable(p.onExit);
        if (!visitedObjects.has(p.onInput))
            aws_cdk_lib_IResolvable(p.onInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnDetectorModel_TransitionEventProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnInputProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputDefinition))
            aws_cdk_lib_IResolvable(p.inputDefinition);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotevents_CfnInput(p) {
}
function aws_cdk_lib_aws_iotevents_CfnInput_AttributeProperty(p) {
}
function aws_cdk_lib_aws_iotevents_CfnInput_InputDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotfleethub_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotfleethub_CfnApplication(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnCampaignProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.collectionScheme))
            aws_cdk_lib_IResolvable(p.collectionScheme);
        if (!visitedObjects.has(p.signalsToCollect))
            aws_cdk_lib_IResolvable(p.signalsToCollect);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotfleetwise_CfnCampaign(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnCampaign_CollectionSchemeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionBasedCollectionScheme))
            aws_cdk_lib_IResolvable(p.conditionBasedCollectionScheme);
        if (!visitedObjects.has(p.timeBasedCollectionScheme))
            aws_cdk_lib_IResolvable(p.timeBasedCollectionScheme);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotfleetwise_CfnCampaign_ConditionBasedCollectionSchemeProperty(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnCampaign_SignalInformationProperty(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnCampaign_TimeBasedCollectionSchemeProperty(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifestProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.networkInterfaces))
            aws_cdk_lib_IResolvable(p.networkInterfaces);
        if (!visitedObjects.has(p.signalDecoders))
            aws_cdk_lib_IResolvable(p.signalDecoders);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest_CanInterfaceProperty(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest_CanSignalProperty(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest_NetworkInterfacesItemsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.canInterface))
            aws_cdk_lib_IResolvable(p.canInterface);
        if (!visitedObjects.has(p.obdInterface))
            aws_cdk_lib_IResolvable(p.obdInterface);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest_ObdInterfaceProperty(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest_ObdSignalProperty(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest_SignalDecodersItemsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.canSignal))
            aws_cdk_lib_IResolvable(p.canSignal);
        if (!visitedObjects.has(p.obdSignal))
            aws_cdk_lib_IResolvable(p.obdSignal);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotfleetwise_CfnFleetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotfleetwise_CfnFleet(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnModelManifestProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotfleetwise_CfnModelManifest(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalogProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nodeCounts))
            aws_cdk_lib_IResolvable(p.nodeCounts);
        if (!visitedObjects.has(p.nodes))
            aws_cdk_lib_IResolvable(p.nodes);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog_ActuatorProperty(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog_AttributeProperty(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog_BranchProperty(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog_NodeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actuator))
            aws_cdk_lib_IResolvable(p.actuator);
        if (!visitedObjects.has(p.attribute))
            aws_cdk_lib_IResolvable(p.attribute);
        if (!visitedObjects.has(p.branch))
            aws_cdk_lib_IResolvable(p.branch);
        if (!visitedObjects.has(p.sensor))
            aws_cdk_lib_IResolvable(p.sensor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog_NodeCountsProperty(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog_SensorProperty(p) {
}
function aws_cdk_lib_aws_iotfleetwise_CfnVehicleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotfleetwise_CfnVehicle(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAccessPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessPolicyIdentity))
            aws_cdk_lib_IResolvable(p.accessPolicyIdentity);
        if (!visitedObjects.has(p.accessPolicyResource))
            aws_cdk_lib_IResolvable(p.accessPolicyResource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_AccessPolicyIdentityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.iamRole))
            aws_cdk_lib_IResolvable(p.iamRole);
        if (!visitedObjects.has(p.iamUser))
            aws_cdk_lib_IResolvable(p.iamUser);
        if (!visitedObjects.has(p.user))
            aws_cdk_lib_IResolvable(p.user);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_AccessPolicyResourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.portal))
            aws_cdk_lib_IResolvable(p.portal);
        if (!visitedObjects.has(p.project))
            aws_cdk_lib_IResolvable(p.project);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_IamRoleProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_IamUserProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_PortalProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_ProjectProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_UserProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assetHierarchies))
            aws_cdk_lib_IResolvable(p.assetHierarchies);
        if (!visitedObjects.has(p.assetProperties))
            aws_cdk_lib_IResolvable(p.assetProperties);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnAsset(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAsset_AssetHierarchyProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAsset_AssetPropertyProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assetModelCompositeModels))
            aws_cdk_lib_IResolvable(p.assetModelCompositeModels);
        if (!visitedObjects.has(p.assetModelHierarchies))
            aws_cdk_lib_IResolvable(p.assetModelHierarchies);
        if (!visitedObjects.has(p.assetModelProperties))
            aws_cdk_lib_IResolvable(p.assetModelProperties);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModel(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModel_AssetModelCompositeModelProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.compositeModelProperties))
            aws_cdk_lib_IResolvable(p.compositeModelProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModel_AssetModelHierarchyProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModel_AssetModelPropertyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_IResolvable(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModel_AttributeProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModel_ExpressionVariableProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModel_MetricProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.variables))
            aws_cdk_lib_IResolvable(p.variables);
        if (!visitedObjects.has(p.window))
            aws_cdk_lib_IResolvable(p.window);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModel_MetricWindowProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tumbling))
            aws_cdk_lib_IResolvable(p.tumbling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModel_PropertyTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attribute))
            aws_cdk_lib_IResolvable(p.attribute);
        if (!visitedObjects.has(p.metric))
            aws_cdk_lib_IResolvable(p.metric);
        if (!visitedObjects.has(p.transform))
            aws_cdk_lib_IResolvable(p.transform);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModel_TransformProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.variables))
            aws_cdk_lib_IResolvable(p.variables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModel_TumblingWindowProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnAssetModel_VariableValueProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnDashboardProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnDashboard(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnGatewayProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.gatewayPlatform))
            aws_cdk_lib_IResolvable(p.gatewayPlatform);
        if (!visitedObjects.has(p.gatewayCapabilitySummaries))
            aws_cdk_lib_IResolvable(p.gatewayCapabilitySummaries);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnGateway(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnGateway_GatewayCapabilitySummaryProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnGateway_GatewayPlatformProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.greengrass))
            aws_cdk_lib_IResolvable(p.greengrass);
        if (!visitedObjects.has(p.greengrassV2))
            aws_cdk_lib_IResolvable(p.greengrassV2);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnGateway_GreengrassProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnGateway_GreengrassV2Property(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnPortalProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnPortal(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnPortal_AlarmsProperty(p) {
}
function aws_cdk_lib_aws_iotsitewise_CfnProjectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotsitewise_CfnProject(p) {
}
function aws_cdk_lib_aws_iotthingsgraph_CfnFlowTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.definition))
            aws_cdk_lib_IResolvable(p.definition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotthingsgraph_CfnFlowTemplate(p) {
}
function aws_cdk_lib_aws_iotthingsgraph_CfnFlowTemplate_DefinitionDocumentProperty(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentTypeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.functions))
            aws_cdk_lib_IResolvable(p.functions);
        if (!visitedObjects.has(p.propertyDefinitions))
            aws_cdk_lib_IResolvable(p.propertyDefinitions);
        if (!visitedObjects.has(p.propertyGroups))
            aws_cdk_lib_IResolvable(p.propertyGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentType(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentType_DataConnectorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambda))
            aws_cdk_lib_IResolvable(p.lambda);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentType_DataTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.allowedValues))
            aws_cdk_lib_IResolvable(p.allowedValues);
        if (!visitedObjects.has(p.nestedType))
            aws_cdk_lib_IResolvable(p.nestedType);
        if (!visitedObjects.has(p.relationship))
            aws_cdk_lib_IResolvable(p.relationship);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentType_DataValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listValue))
            aws_cdk_lib_IResolvable(p.listValue);
        if (!visitedObjects.has(p.mapValue))
            aws_cdk_lib_IResolvable(p.mapValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentType_ErrorProperty(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentType_FunctionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.implementedBy))
            aws_cdk_lib_IResolvable(p.implementedBy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentType_LambdaFunctionProperty(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentType_PropertyDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurations))
            aws_cdk_lib_IResolvable(p.configurations);
        if (!visitedObjects.has(p.dataType))
            aws_cdk_lib_IResolvable(p.dataType);
        if (!visitedObjects.has(p.defaultValue))
            aws_cdk_lib_IResolvable(p.defaultValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentType_PropertyGroupProperty(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentType_RelationshipProperty(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentType_RelationshipValueProperty(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnComponentType_StatusProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.error))
            aws_cdk_lib_IResolvable(p.error);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnEntityProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.components))
            aws_cdk_lib_IResolvable(p.components);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnEntity(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnEntity_ComponentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.properties))
            aws_cdk_lib_IResolvable(p.properties);
        if (!visitedObjects.has(p.propertyGroups))
            aws_cdk_lib_IResolvable(p.propertyGroups);
        if (!visitedObjects.has(p.status))
            aws_cdk_lib_IResolvable(p.status);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnEntity_DataTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.allowedValues))
            aws_cdk_lib_IResolvable(p.allowedValues);
        if (!visitedObjects.has(p.nestedType))
            aws_cdk_lib_IResolvable(p.nestedType);
        if (!visitedObjects.has(p.relationship))
            aws_cdk_lib_IResolvable(p.relationship);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnEntity_DataValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listValue))
            aws_cdk_lib_IResolvable(p.listValue);
        if (!visitedObjects.has(p.mapValue))
            aws_cdk_lib_IResolvable(p.mapValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnEntity_DefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
        if (!visitedObjects.has(p.dataType))
            aws_cdk_lib_IResolvable(p.dataType);
        if (!visitedObjects.has(p.defaultValue))
            aws_cdk_lib_IResolvable(p.defaultValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnEntity_ErrorProperty(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnEntity_PropertyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iottwinmaker_CfnEntity_PropertyGroupProperty(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnEntity_RelationshipProperty(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnEntity_RelationshipValueProperty(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnEntity_StatusProperty(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnSceneProps(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnScene(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnSyncJobProps(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnSyncJob(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnWorkspaceProps(p) {
}
function aws_cdk_lib_aws_iottwinmaker_CfnWorkspace(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnDestinationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnDestination(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnDeviceProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loRaWan))
            aws_cdk_lib_IResolvable(p.loRaWan);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnDeviceProfile(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnDeviceProfile_LoRaWANDeviceProfileProperty(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnFuotaTaskProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loRaWan))
            aws_cdk_lib_IResolvable(p.loRaWan);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnFuotaTask(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnFuotaTask_LoRaWANProperty(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnMulticastGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loRaWan))
            aws_cdk_lib_IResolvable(p.loRaWan);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnMulticastGroup(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnMulticastGroup_LoRaWANProperty(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnNetworkAnalyzerConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnNetworkAnalyzerConfiguration(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnNetworkAnalyzerConfiguration_TraceContentProperty(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnPartnerAccountProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sidewalk))
            aws_cdk_lib_IResolvable(p.sidewalk);
        if (!visitedObjects.has(p.sidewalkResponse))
            aws_cdk_lib_IResolvable(p.sidewalkResponse);
        if (!visitedObjects.has(p.sidewalkUpdate))
            aws_cdk_lib_IResolvable(p.sidewalkUpdate);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnPartnerAccount(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnPartnerAccount_SidewalkAccountInfoProperty(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnPartnerAccount_SidewalkAccountInfoWithFingerprintProperty(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnPartnerAccount_SidewalkUpdateAccountProperty(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnServiceProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loRaWan))
            aws_cdk_lib_IResolvable(p.loRaWan);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnServiceProfile(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnServiceProfile_LoRaWANServiceProfileProperty(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnTaskDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loRaWanUpdateGatewayTaskEntry))
            aws_cdk_lib_IResolvable(p.loRaWanUpdateGatewayTaskEntry);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.update))
            aws_cdk_lib_IResolvable(p.update);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnTaskDefinition(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnTaskDefinition_LoRaWANGatewayVersionProperty(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnTaskDefinition_LoRaWANUpdateGatewayTaskCreateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.currentVersion))
            aws_cdk_lib_IResolvable(p.currentVersion);
        if (!visitedObjects.has(p.updateVersion))
            aws_cdk_lib_IResolvable(p.updateVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnTaskDefinition_LoRaWANUpdateGatewayTaskEntryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.currentVersion))
            aws_cdk_lib_IResolvable(p.currentVersion);
        if (!visitedObjects.has(p.updateVersion))
            aws_cdk_lib_IResolvable(p.updateVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnTaskDefinition_UpdateWirelessGatewayTaskCreateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loRaWan))
            aws_cdk_lib_IResolvable(p.loRaWan);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnWirelessDeviceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loRaWan))
            aws_cdk_lib_IResolvable(p.loRaWan);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnWirelessDevice(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_AbpV10xProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sessionKeys))
            aws_cdk_lib_IResolvable(p.sessionKeys);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_AbpV11Property(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sessionKeys))
            aws_cdk_lib_IResolvable(p.sessionKeys);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_LoRaWANDeviceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.abpV10X))
            aws_cdk_lib_IResolvable(p.abpV10X);
        if (!visitedObjects.has(p.abpV11))
            aws_cdk_lib_IResolvable(p.abpV11);
        if (!visitedObjects.has(p.otaaV10X))
            aws_cdk_lib_IResolvable(p.otaaV10X);
        if (!visitedObjects.has(p.otaaV11))
            aws_cdk_lib_IResolvable(p.otaaV11);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_OtaaV10xProperty(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_OtaaV11Property(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_SessionKeysAbpV10xProperty(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_SessionKeysAbpV11Property(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnWirelessGatewayProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loRaWan))
            aws_cdk_lib_IResolvable(p.loRaWan);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_iotwireless_CfnWirelessGateway(p) {
}
function aws_cdk_lib_aws_iotwireless_CfnWirelessGateway_LoRaWANGatewayProperty(p) {
}
function aws_cdk_lib_aws_ivs_CfnChannelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ivs_CfnChannel(p) {
}
function aws_cdk_lib_aws_ivs_CfnPlaybackKeyPairProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ivs_CfnPlaybackKeyPair(p) {
}
function aws_cdk_lib_aws_ivs_CfnRecordingConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationConfiguration))
            aws_cdk_lib_IResolvable(p.destinationConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.thumbnailConfiguration))
            aws_cdk_lib_IResolvable(p.thumbnailConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ivs_CfnRecordingConfiguration(p) {
}
function aws_cdk_lib_aws_ivs_CfnRecordingConfiguration_DestinationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_IResolvable(p.s3);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ivs_CfnRecordingConfiguration_S3DestinationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ivs_CfnRecordingConfiguration_ThumbnailConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ivs_CfnStreamKeyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ivs_CfnStreamKey(p) {
}
function aws_cdk_lib_aws_ivschat_CfnLoggingConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationConfiguration))
            aws_cdk_lib_IResolvable(p.destinationConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ivschat_CfnLoggingConfiguration(p) {
}
function aws_cdk_lib_aws_ivschat_CfnLoggingConfiguration_CloudWatchLogsDestinationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ivschat_CfnLoggingConfiguration_DestinationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchLogs))
            aws_cdk_lib_IResolvable(p.cloudWatchLogs);
        if (!visitedObjects.has(p.firehose))
            aws_cdk_lib_IResolvable(p.firehose);
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_IResolvable(p.s3);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ivschat_CfnLoggingConfiguration_FirehoseDestinationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ivschat_CfnLoggingConfiguration_S3DestinationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ivschat_CfnRoomProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.messageReviewHandler))
            aws_cdk_lib_IResolvable(p.messageReviewHandler);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ivschat_CfnRoom(p) {
}
function aws_cdk_lib_aws_ivschat_CfnRoom_MessageReviewHandlerProperty(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnectorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capacity))
            aws_cdk_lib_IResolvable(p.capacity);
        if (!visitedObjects.has(p.connectorConfiguration))
            aws_cdk_lib_IResolvable(p.connectorConfiguration);
        if (!visitedObjects.has(p.kafkaCluster))
            aws_cdk_lib_IResolvable(p.kafkaCluster);
        if (!visitedObjects.has(p.kafkaClusterClientAuthentication))
            aws_cdk_lib_IResolvable(p.kafkaClusterClientAuthentication);
        if (!visitedObjects.has(p.kafkaClusterEncryptionInTransit))
            aws_cdk_lib_IResolvable(p.kafkaClusterEncryptionInTransit);
        if (!visitedObjects.has(p.plugins))
            aws_cdk_lib_IResolvable(p.plugins);
        if (!visitedObjects.has(p.logDelivery))
            aws_cdk_lib_IResolvable(p.logDelivery);
        if (!visitedObjects.has(p.workerConfiguration))
            aws_cdk_lib_IResolvable(p.workerConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_ApacheKafkaClusterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_IResolvable(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_AutoScalingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scaleInPolicy))
            aws_cdk_lib_IResolvable(p.scaleInPolicy);
        if (!visitedObjects.has(p.scaleOutPolicy))
            aws_cdk_lib_IResolvable(p.scaleOutPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_CapacityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScaling))
            aws_cdk_lib_IResolvable(p.autoScaling);
        if (!visitedObjects.has(p.provisionedCapacity))
            aws_cdk_lib_IResolvable(p.provisionedCapacity);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_CloudWatchLogsLogDeliveryProperty(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_CustomPluginProperty(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_FirehoseLogDeliveryProperty(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_KafkaClusterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.apacheKafkaCluster))
            aws_cdk_lib_IResolvable(p.apacheKafkaCluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_KafkaClusterClientAuthenticationProperty(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_KafkaClusterEncryptionInTransitProperty(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_LogDeliveryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.workerLogDelivery))
            aws_cdk_lib_IResolvable(p.workerLogDelivery);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_PluginProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customPlugin))
            aws_cdk_lib_IResolvable(p.customPlugin);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_ProvisionedCapacityProperty(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_S3LogDeliveryProperty(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_ScaleInPolicyProperty(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_ScaleOutPolicyProperty(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_VpcProperty(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_WorkerConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kafkaconnect_CfnConnector_WorkerLogDeliveryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchLogs))
            aws_cdk_lib_IResolvable(p.cloudWatchLogs);
        if (!visitedObjects.has(p.firehose))
            aws_cdk_lib_IResolvable(p.firehose);
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_IResolvable(p.s3);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customDocumentEnrichmentConfiguration))
            aws_cdk_lib_IResolvable(p.customDocumentEnrichmentConfiguration);
        if (!visitedObjects.has(p.dataSourceConfiguration))
            aws_cdk_lib_IResolvable(p.dataSourceConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_AccessControlListConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_AclConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ColumnConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldMappings))
            aws_cdk_lib_IResolvable(p.fieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceAttachmentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attachmentFieldMappings))
            aws_cdk_lib_IResolvable(p.attachmentFieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceAttachmentToIndexFieldMappingProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceBlogConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blogFieldMappings))
            aws_cdk_lib_IResolvable(p.blogFieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceBlogToIndexFieldMappingProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attachmentConfiguration))
            aws_cdk_lib_IResolvable(p.attachmentConfiguration);
        if (!visitedObjects.has(p.blogConfiguration))
            aws_cdk_lib_IResolvable(p.blogConfiguration);
        if (!visitedObjects.has(p.pageConfiguration))
            aws_cdk_lib_IResolvable(p.pageConfiguration);
        if (!visitedObjects.has(p.spaceConfiguration))
            aws_cdk_lib_IResolvable(p.spaceConfiguration);
        if (!visitedObjects.has(p.vpcConfiguration))
            aws_cdk_lib_IResolvable(p.vpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ConfluencePageConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pageFieldMappings))
            aws_cdk_lib_IResolvable(p.pageFieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ConfluencePageToIndexFieldMappingProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceSpaceConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spaceFieldMappings))
            aws_cdk_lib_IResolvable(p.spaceFieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceSpaceToIndexFieldMappingProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ConnectionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_CustomDocumentEnrichmentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inlineConfigurations))
            aws_cdk_lib_IResolvable(p.inlineConfigurations);
        if (!visitedObjects.has(p.postExtractionHookConfiguration))
            aws_cdk_lib_IResolvable(p.postExtractionHookConfiguration);
        if (!visitedObjects.has(p.preExtractionHookConfiguration))
            aws_cdk_lib_IResolvable(p.preExtractionHookConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_DataSourceConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.confluenceConfiguration))
            aws_cdk_lib_IResolvable(p.confluenceConfiguration);
        if (!visitedObjects.has(p.databaseConfiguration))
            aws_cdk_lib_IResolvable(p.databaseConfiguration);
        if (!visitedObjects.has(p.googleDriveConfiguration))
            aws_cdk_lib_IResolvable(p.googleDriveConfiguration);
        if (!visitedObjects.has(p.oneDriveConfiguration))
            aws_cdk_lib_IResolvable(p.oneDriveConfiguration);
        if (!visitedObjects.has(p.s3Configuration))
            aws_cdk_lib_IResolvable(p.s3Configuration);
        if (!visitedObjects.has(p.salesforceConfiguration))
            aws_cdk_lib_IResolvable(p.salesforceConfiguration);
        if (!visitedObjects.has(p.serviceNowConfiguration))
            aws_cdk_lib_IResolvable(p.serviceNowConfiguration);
        if (!visitedObjects.has(p.sharePointConfiguration))
            aws_cdk_lib_IResolvable(p.sharePointConfiguration);
        if (!visitedObjects.has(p.webCrawlerConfiguration))
            aws_cdk_lib_IResolvable(p.webCrawlerConfiguration);
        if (!visitedObjects.has(p.workDocsConfiguration))
            aws_cdk_lib_IResolvable(p.workDocsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_DataSourceToIndexFieldMappingProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_DataSourceVpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_DatabaseConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnConfiguration))
            aws_cdk_lib_IResolvable(p.columnConfiguration);
        if (!visitedObjects.has(p.connectionConfiguration))
            aws_cdk_lib_IResolvable(p.connectionConfiguration);
        if (!visitedObjects.has(p.aclConfiguration))
            aws_cdk_lib_IResolvable(p.aclConfiguration);
        if (!visitedObjects.has(p.sqlConfiguration))
            aws_cdk_lib_IResolvable(p.sqlConfiguration);
        if (!visitedObjects.has(p.vpcConfiguration))
            aws_cdk_lib_IResolvable(p.vpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_DocumentAttributeConditionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionOnValue))
            aws_cdk_lib_IResolvable(p.conditionOnValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_DocumentAttributeTargetProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetDocumentAttributeValue))
            aws_cdk_lib_IResolvable(p.targetDocumentAttributeValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_DocumentAttributeValueProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_DocumentsMetadataConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_GoogleDriveConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldMappings))
            aws_cdk_lib_IResolvable(p.fieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_HookConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.invocationCondition))
            aws_cdk_lib_IResolvable(p.invocationCondition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_InlineCustomDocumentEnrichmentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.condition))
            aws_cdk_lib_IResolvable(p.condition);
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_IResolvable(p.target);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_OneDriveConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.oneDriveUsers))
            aws_cdk_lib_IResolvable(p.oneDriveUsers);
        if (!visitedObjects.has(p.fieldMappings))
            aws_cdk_lib_IResolvable(p.fieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_OneDriveUsersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.oneDriveUserS3Path))
            aws_cdk_lib_IResolvable(p.oneDriveUserS3Path);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ProxyConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_S3DataSourceConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessControlListConfiguration))
            aws_cdk_lib_IResolvable(p.accessControlListConfiguration);
        if (!visitedObjects.has(p.documentsMetadataConfiguration))
            aws_cdk_lib_IResolvable(p.documentsMetadataConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_S3PathProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceChatterFeedConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldMappings))
            aws_cdk_lib_IResolvable(p.fieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.chatterFeedConfiguration))
            aws_cdk_lib_IResolvable(p.chatterFeedConfiguration);
        if (!visitedObjects.has(p.knowledgeArticleConfiguration))
            aws_cdk_lib_IResolvable(p.knowledgeArticleConfiguration);
        if (!visitedObjects.has(p.standardObjectAttachmentConfiguration))
            aws_cdk_lib_IResolvable(p.standardObjectAttachmentConfiguration);
        if (!visitedObjects.has(p.standardObjectConfigurations))
            aws_cdk_lib_IResolvable(p.standardObjectConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceCustomKnowledgeArticleTypeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldMappings))
            aws_cdk_lib_IResolvable(p.fieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceKnowledgeArticleConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customKnowledgeArticleTypeConfigurations))
            aws_cdk_lib_IResolvable(p.customKnowledgeArticleTypeConfigurations);
        if (!visitedObjects.has(p.standardKnowledgeArticleTypeConfiguration))
            aws_cdk_lib_IResolvable(p.standardKnowledgeArticleTypeConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceStandardKnowledgeArticleTypeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldMappings))
            aws_cdk_lib_IResolvable(p.fieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceStandardObjectAttachmentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldMappings))
            aws_cdk_lib_IResolvable(p.fieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceStandardObjectConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldMappings))
            aws_cdk_lib_IResolvable(p.fieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ServiceNowConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.knowledgeArticleConfiguration))
            aws_cdk_lib_IResolvable(p.knowledgeArticleConfiguration);
        if (!visitedObjects.has(p.serviceCatalogConfiguration))
            aws_cdk_lib_IResolvable(p.serviceCatalogConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ServiceNowKnowledgeArticleConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldMappings))
            aws_cdk_lib_IResolvable(p.fieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_ServiceNowServiceCatalogConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldMappings))
            aws_cdk_lib_IResolvable(p.fieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_SharePointConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldMappings))
            aws_cdk_lib_IResolvable(p.fieldMappings);
        if (!visitedObjects.has(p.sslCertificateS3Path))
            aws_cdk_lib_IResolvable(p.sslCertificateS3Path);
        if (!visitedObjects.has(p.vpcConfiguration))
            aws_cdk_lib_IResolvable(p.vpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_SqlConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_WebCrawlerAuthenticationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.basicAuthentication))
            aws_cdk_lib_IResolvable(p.basicAuthentication);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_WebCrawlerBasicAuthenticationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_WebCrawlerConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.urls))
            aws_cdk_lib_IResolvable(p.urls);
        if (!visitedObjects.has(p.authenticationConfiguration))
            aws_cdk_lib_IResolvable(p.authenticationConfiguration);
        if (!visitedObjects.has(p.proxyConfiguration))
            aws_cdk_lib_IResolvable(p.proxyConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_WebCrawlerSeedUrlConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_WebCrawlerSiteMapsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnDataSource_WebCrawlerUrlsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.seedUrlConfiguration))
            aws_cdk_lib_IResolvable(p.seedUrlConfiguration);
        if (!visitedObjects.has(p.siteMapsConfiguration))
            aws_cdk_lib_IResolvable(p.siteMapsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnDataSource_WorkDocsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldMappings))
            aws_cdk_lib_IResolvable(p.fieldMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnFaqProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Path))
            aws_cdk_lib_IResolvable(p.s3Path);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnFaq(p) {
}
function aws_cdk_lib_aws_kendra_CfnFaq_S3PathProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnIndexProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capacityUnits))
            aws_cdk_lib_IResolvable(p.capacityUnits);
        if (!visitedObjects.has(p.documentMetadataConfigurations))
            aws_cdk_lib_IResolvable(p.documentMetadataConfigurations);
        if (!visitedObjects.has(p.serverSideEncryptionConfiguration))
            aws_cdk_lib_IResolvable(p.serverSideEncryptionConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.userTokenConfigurations))
            aws_cdk_lib_IResolvable(p.userTokenConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnIndex(p) {
}
function aws_cdk_lib_aws_kendra_CfnIndex_CapacityUnitsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnIndex_DocumentMetadataConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.relevance))
            aws_cdk_lib_IResolvable(p.relevance);
        if (!visitedObjects.has(p.search))
            aws_cdk_lib_IResolvable(p.search);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnIndex_JsonTokenTypeConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnIndex_JwtTokenTypeConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnIndex_RelevanceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.valueImportanceItems))
            aws_cdk_lib_IResolvable(p.valueImportanceItems);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnIndex_SearchProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnIndex_ServerSideEncryptionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kendra_CfnIndex_UserTokenConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jsonTokenTypeConfiguration))
            aws_cdk_lib_IResolvable(p.jsonTokenTypeConfiguration);
        if (!visitedObjects.has(p.jwtTokenTypeConfiguration))
            aws_cdk_lib_IResolvable(p.jwtTokenTypeConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendra_CfnIndex_ValueImportanceItemProperty(p) {
}
function aws_cdk_lib_aws_kendraranking_CfnExecutionPlanProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capacityUnits))
            aws_cdk_lib_IResolvable(p.capacityUnits);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kendraranking_CfnExecutionPlan(p) {
}
function aws_cdk_lib_aws_kendraranking_CfnExecutionPlan_CapacityUnitsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesis_IStream(p) {
}
function aws_cdk_lib_aws_kinesis_StreamAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesis_StreamProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_aws_kinesis_StreamEncryption(p.encryption);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.retentionPeriod))
            aws_cdk_lib_Duration(p.retentionPeriod);
        if (!visitedObjects.has(p.streamMode))
            aws_cdk_lib_aws_kinesis_StreamMode(p.streamMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesis_Stream(p) {
}
function aws_cdk_lib_aws_kinesis_StreamEncryption(p) {
}
function aws_cdk_lib_aws_kinesis_StreamMode(p) {
}
function aws_cdk_lib_aws_kinesis_CfnStreamProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.streamEncryption))
            aws_cdk_lib_IResolvable(p.streamEncryption);
        if (!visitedObjects.has(p.streamModeDetails))
            aws_cdk_lib_IResolvable(p.streamModeDetails);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesis_CfnStream(p) {
}
function aws_cdk_lib_aws_kinesis_CfnStream_StreamEncryptionProperty(p) {
}
function aws_cdk_lib_aws_kinesis_CfnStream_StreamModeDetailsProperty(p) {
}
function aws_cdk_lib_aws_kinesis_CfnStreamConsumerProps(p) {
}
function aws_cdk_lib_aws_kinesis_CfnStreamConsumer(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputs))
            aws_cdk_lib_IResolvable(p.inputs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication_CSVMappingParametersProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication_InputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputSchema))
            aws_cdk_lib_IResolvable(p.inputSchema);
        if (!visitedObjects.has(p.inputParallelism))
            aws_cdk_lib_IResolvable(p.inputParallelism);
        if (!visitedObjects.has(p.inputProcessingConfiguration))
            aws_cdk_lib_IResolvable(p.inputProcessingConfiguration);
        if (!visitedObjects.has(p.kinesisFirehoseInput))
            aws_cdk_lib_IResolvable(p.kinesisFirehoseInput);
        if (!visitedObjects.has(p.kinesisStreamsInput))
            aws_cdk_lib_IResolvable(p.kinesisStreamsInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication_InputLambdaProcessorProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication_InputParallelismProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication_InputProcessingConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputLambdaProcessor))
            aws_cdk_lib_IResolvable(p.inputLambdaProcessor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication_InputSchemaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.recordColumns))
            aws_cdk_lib_IResolvable(p.recordColumns);
        if (!visitedObjects.has(p.recordFormat))
            aws_cdk_lib_IResolvable(p.recordFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication_JSONMappingParametersProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication_KinesisFirehoseInputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication_KinesisStreamsInputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication_MappingParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csvMappingParameters))
            aws_cdk_lib_IResolvable(p.csvMappingParameters);
        if (!visitedObjects.has(p.jsonMappingParameters))
            aws_cdk_lib_IResolvable(p.jsonMappingParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication_RecordColumnProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplication_RecordFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mappingParameters))
            aws_cdk_lib_IResolvable(p.mappingParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_IResolvable(p.output);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutput(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutput_DestinationSchemaProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutput_KinesisFirehoseOutputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutput_KinesisStreamsOutputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutput_LambdaOutputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutput_OutputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationSchema))
            aws_cdk_lib_IResolvable(p.destinationSchema);
        if (!visitedObjects.has(p.kinesisFirehoseOutput))
            aws_cdk_lib_IResolvable(p.kinesisFirehoseOutput);
        if (!visitedObjects.has(p.kinesisStreamsOutput))
            aws_cdk_lib_IResolvable(p.kinesisStreamsOutput);
        if (!visitedObjects.has(p.lambdaOutput))
            aws_cdk_lib_IResolvable(p.lambdaOutput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.referenceDataSource))
            aws_cdk_lib_IResolvable(p.referenceDataSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_CSVMappingParametersProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_JSONMappingParametersProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_MappingParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csvMappingParameters))
            aws_cdk_lib_IResolvable(p.csvMappingParameters);
        if (!visitedObjects.has(p.jsonMappingParameters))
            aws_cdk_lib_IResolvable(p.jsonMappingParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_RecordColumnProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_RecordFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mappingParameters))
            aws_cdk_lib_IResolvable(p.mappingParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_ReferenceDataSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.referenceSchema))
            aws_cdk_lib_IResolvable(p.referenceSchema);
        if (!visitedObjects.has(p.s3ReferenceDataSource))
            aws_cdk_lib_IResolvable(p.s3ReferenceDataSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_ReferenceSchemaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.recordColumns))
            aws_cdk_lib_IResolvable(p.recordColumns);
        if (!visitedObjects.has(p.recordFormat))
            aws_cdk_lib_IResolvable(p.recordFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_S3ReferenceDataSourceProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2Props(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.applicationConfiguration))
            aws_cdk_lib_IResolvable(p.applicationConfiguration);
        if (!visitedObjects.has(p.applicationMaintenanceConfiguration))
            aws_cdk_lib_IResolvable(p.applicationMaintenanceConfiguration);
        if (!visitedObjects.has(p.runConfiguration))
            aws_cdk_lib_IResolvable(p.runConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ApplicationCodeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.codeContent))
            aws_cdk_lib_IResolvable(p.codeContent);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ApplicationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.applicationCodeConfiguration))
            aws_cdk_lib_IResolvable(p.applicationCodeConfiguration);
        if (!visitedObjects.has(p.applicationSnapshotConfiguration))
            aws_cdk_lib_IResolvable(p.applicationSnapshotConfiguration);
        if (!visitedObjects.has(p.environmentProperties))
            aws_cdk_lib_IResolvable(p.environmentProperties);
        if (!visitedObjects.has(p.flinkApplicationConfiguration))
            aws_cdk_lib_IResolvable(p.flinkApplicationConfiguration);
        if (!visitedObjects.has(p.sqlApplicationConfiguration))
            aws_cdk_lib_IResolvable(p.sqlApplicationConfiguration);
        if (!visitedObjects.has(p.vpcConfigurations))
            aws_cdk_lib_IResolvable(p.vpcConfigurations);
        if (!visitedObjects.has(p.zeppelinApplicationConfiguration))
            aws_cdk_lib_IResolvable(p.zeppelinApplicationConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ApplicationMaintenanceConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ApplicationRestoreConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ApplicationSnapshotConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_CSVMappingParametersProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_CatalogConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.glueDataCatalogConfiguration))
            aws_cdk_lib_IResolvable(p.glueDataCatalogConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_CheckpointConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_CodeContentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3ContentLocation))
            aws_cdk_lib_IResolvable(p.s3ContentLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_CustomArtifactConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mavenReference))
            aws_cdk_lib_IResolvable(p.mavenReference);
        if (!visitedObjects.has(p.s3ContentLocation))
            aws_cdk_lib_IResolvable(p.s3ContentLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_DeployAsApplicationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3ContentLocation))
            aws_cdk_lib_IResolvable(p.s3ContentLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_EnvironmentPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.propertyGroups))
            aws_cdk_lib_IResolvable(p.propertyGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_FlinkApplicationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.checkpointConfiguration))
            aws_cdk_lib_IResolvable(p.checkpointConfiguration);
        if (!visitedObjects.has(p.monitoringConfiguration))
            aws_cdk_lib_IResolvable(p.monitoringConfiguration);
        if (!visitedObjects.has(p.parallelismConfiguration))
            aws_cdk_lib_IResolvable(p.parallelismConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_FlinkRunConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_GlueDataCatalogConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_InputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputSchema))
            aws_cdk_lib_IResolvable(p.inputSchema);
        if (!visitedObjects.has(p.inputParallelism))
            aws_cdk_lib_IResolvable(p.inputParallelism);
        if (!visitedObjects.has(p.inputProcessingConfiguration))
            aws_cdk_lib_IResolvable(p.inputProcessingConfiguration);
        if (!visitedObjects.has(p.kinesisFirehoseInput))
            aws_cdk_lib_IResolvable(p.kinesisFirehoseInput);
        if (!visitedObjects.has(p.kinesisStreamsInput))
            aws_cdk_lib_IResolvable(p.kinesisStreamsInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_InputLambdaProcessorProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_InputParallelismProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_InputProcessingConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputLambdaProcessor))
            aws_cdk_lib_IResolvable(p.inputLambdaProcessor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_InputSchemaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.recordColumns))
            aws_cdk_lib_IResolvable(p.recordColumns);
        if (!visitedObjects.has(p.recordFormat))
            aws_cdk_lib_IResolvable(p.recordFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_JSONMappingParametersProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_KinesisFirehoseInputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_KinesisStreamsInputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_MappingParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csvMappingParameters))
            aws_cdk_lib_IResolvable(p.csvMappingParameters);
        if (!visitedObjects.has(p.jsonMappingParameters))
            aws_cdk_lib_IResolvable(p.jsonMappingParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_MavenReferenceProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_MonitoringConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ParallelismConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_PropertyGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.propertyMap))
            aws_cdk_lib_IResolvable(p.propertyMap);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_RecordColumnProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_RecordFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mappingParameters))
            aws_cdk_lib_IResolvable(p.mappingParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_RunConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.applicationRestoreConfiguration))
            aws_cdk_lib_IResolvable(p.applicationRestoreConfiguration);
        if (!visitedObjects.has(p.flinkRunConfiguration))
            aws_cdk_lib_IResolvable(p.flinkRunConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_S3ContentBaseLocationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_S3ContentLocationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_SqlApplicationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputs))
            aws_cdk_lib_IResolvable(p.inputs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_VpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ZeppelinApplicationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.catalogConfiguration))
            aws_cdk_lib_IResolvable(p.catalogConfiguration);
        if (!visitedObjects.has(p.customArtifactsConfiguration))
            aws_cdk_lib_IResolvable(p.customArtifactsConfiguration);
        if (!visitedObjects.has(p.deployAsApplicationConfiguration))
            aws_cdk_lib_IResolvable(p.deployAsApplicationConfiguration);
        if (!visitedObjects.has(p.monitoringConfiguration))
            aws_cdk_lib_IResolvable(p.monitoringConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ZeppelinMonitoringConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationCloudWatchLoggingOptionV2Props(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchLoggingOption))
            aws_cdk_lib_IResolvable(p.cloudWatchLoggingOption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationCloudWatchLoggingOptionV2(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationCloudWatchLoggingOptionV2_CloudWatchLoggingOptionProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2Props(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_IResolvable(p.output);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2_DestinationSchemaProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2_KinesisFirehoseOutputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2_KinesisStreamsOutputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2_LambdaOutputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2_OutputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationSchema))
            aws_cdk_lib_IResolvable(p.destinationSchema);
        if (!visitedObjects.has(p.kinesisFirehoseOutput))
            aws_cdk_lib_IResolvable(p.kinesisFirehoseOutput);
        if (!visitedObjects.has(p.kinesisStreamsOutput))
            aws_cdk_lib_IResolvable(p.kinesisStreamsOutput);
        if (!visitedObjects.has(p.lambdaOutput))
            aws_cdk_lib_IResolvable(p.lambdaOutput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2Props(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.referenceDataSource))
            aws_cdk_lib_IResolvable(p.referenceDataSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_CSVMappingParametersProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_JSONMappingParametersProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_MappingParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csvMappingParameters))
            aws_cdk_lib_IResolvable(p.csvMappingParameters);
        if (!visitedObjects.has(p.jsonMappingParameters))
            aws_cdk_lib_IResolvable(p.jsonMappingParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_RecordColumnProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_RecordFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mappingParameters))
            aws_cdk_lib_IResolvable(p.mappingParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_ReferenceDataSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.referenceSchema))
            aws_cdk_lib_IResolvable(p.referenceSchema);
        if (!visitedObjects.has(p.s3ReferenceDataSource))
            aws_cdk_lib_IResolvable(p.s3ReferenceDataSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_ReferenceSchemaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.recordColumns))
            aws_cdk_lib_IResolvable(p.recordColumns);
        if (!visitedObjects.has(p.recordFormat))
            aws_cdk_lib_IResolvable(p.recordFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_S3ReferenceDataSourceProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.applicationConfiguration))
            aws_cdk_lib_IResolvable(p.applicationConfiguration);
        if (!visitedObjects.has(p.applicationMaintenanceConfiguration))
            aws_cdk_lib_IResolvable(p.applicationMaintenanceConfiguration);
        if (!visitedObjects.has(p.runConfiguration))
            aws_cdk_lib_IResolvable(p.runConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ApplicationCodeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.codeContent))
            aws_cdk_lib_IResolvable(p.codeContent);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ApplicationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.applicationCodeConfiguration))
            aws_cdk_lib_IResolvable(p.applicationCodeConfiguration);
        if (!visitedObjects.has(p.applicationSnapshotConfiguration))
            aws_cdk_lib_IResolvable(p.applicationSnapshotConfiguration);
        if (!visitedObjects.has(p.environmentProperties))
            aws_cdk_lib_IResolvable(p.environmentProperties);
        if (!visitedObjects.has(p.flinkApplicationConfiguration))
            aws_cdk_lib_IResolvable(p.flinkApplicationConfiguration);
        if (!visitedObjects.has(p.sqlApplicationConfiguration))
            aws_cdk_lib_IResolvable(p.sqlApplicationConfiguration);
        if (!visitedObjects.has(p.vpcConfigurations))
            aws_cdk_lib_IResolvable(p.vpcConfigurations);
        if (!visitedObjects.has(p.zeppelinApplicationConfiguration))
            aws_cdk_lib_IResolvable(p.zeppelinApplicationConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ApplicationMaintenanceConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ApplicationRestoreConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ApplicationSnapshotConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_CSVMappingParametersProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_CatalogConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.glueDataCatalogConfiguration))
            aws_cdk_lib_IResolvable(p.glueDataCatalogConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_CheckpointConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_CodeContentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3ContentLocation))
            aws_cdk_lib_IResolvable(p.s3ContentLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_CustomArtifactConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mavenReference))
            aws_cdk_lib_IResolvable(p.mavenReference);
        if (!visitedObjects.has(p.s3ContentLocation))
            aws_cdk_lib_IResolvable(p.s3ContentLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_DeployAsApplicationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3ContentLocation))
            aws_cdk_lib_IResolvable(p.s3ContentLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_EnvironmentPropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.propertyGroups))
            aws_cdk_lib_IResolvable(p.propertyGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_FlinkApplicationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.checkpointConfiguration))
            aws_cdk_lib_IResolvable(p.checkpointConfiguration);
        if (!visitedObjects.has(p.monitoringConfiguration))
            aws_cdk_lib_IResolvable(p.monitoringConfiguration);
        if (!visitedObjects.has(p.parallelismConfiguration))
            aws_cdk_lib_IResolvable(p.parallelismConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_FlinkRunConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_GlueDataCatalogConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_InputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputSchema))
            aws_cdk_lib_IResolvable(p.inputSchema);
        if (!visitedObjects.has(p.inputParallelism))
            aws_cdk_lib_IResolvable(p.inputParallelism);
        if (!visitedObjects.has(p.inputProcessingConfiguration))
            aws_cdk_lib_IResolvable(p.inputProcessingConfiguration);
        if (!visitedObjects.has(p.kinesisFirehoseInput))
            aws_cdk_lib_IResolvable(p.kinesisFirehoseInput);
        if (!visitedObjects.has(p.kinesisStreamsInput))
            aws_cdk_lib_IResolvable(p.kinesisStreamsInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_InputLambdaProcessorProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_InputParallelismProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_InputProcessingConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputLambdaProcessor))
            aws_cdk_lib_IResolvable(p.inputLambdaProcessor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_InputSchemaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.recordColumns))
            aws_cdk_lib_IResolvable(p.recordColumns);
        if (!visitedObjects.has(p.recordFormat))
            aws_cdk_lib_IResolvable(p.recordFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_JSONMappingParametersProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_KinesisFirehoseInputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_KinesisStreamsInputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_MappingParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csvMappingParameters))
            aws_cdk_lib_IResolvable(p.csvMappingParameters);
        if (!visitedObjects.has(p.jsonMappingParameters))
            aws_cdk_lib_IResolvable(p.jsonMappingParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_MavenReferenceProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_MonitoringConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ParallelismConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_PropertyGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.propertyMap))
            aws_cdk_lib_IResolvable(p.propertyMap);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_RecordColumnProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_RecordFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mappingParameters))
            aws_cdk_lib_IResolvable(p.mappingParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_RunConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.applicationRestoreConfiguration))
            aws_cdk_lib_IResolvable(p.applicationRestoreConfiguration);
        if (!visitedObjects.has(p.flinkRunConfiguration))
            aws_cdk_lib_IResolvable(p.flinkRunConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_S3ContentBaseLocationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_S3ContentLocationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_SqlApplicationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputs))
            aws_cdk_lib_IResolvable(p.inputs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_VpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ZeppelinApplicationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.catalogConfiguration))
            aws_cdk_lib_IResolvable(p.catalogConfiguration);
        if (!visitedObjects.has(p.customArtifactsConfiguration))
            aws_cdk_lib_IResolvable(p.customArtifactsConfiguration);
        if (!visitedObjects.has(p.deployAsApplicationConfiguration))
            aws_cdk_lib_IResolvable(p.deployAsApplicationConfiguration);
        if (!visitedObjects.has(p.monitoringConfiguration))
            aws_cdk_lib_IResolvable(p.monitoringConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ZeppelinMonitoringConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationCloudWatchLoggingOptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchLoggingOption))
            aws_cdk_lib_IResolvable(p.cloudWatchLoggingOption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationCloudWatchLoggingOption(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationCloudWatchLoggingOption_CloudWatchLoggingOptionProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutputProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.output))
            aws_cdk_lib_IResolvable(p.output);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutput(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutput_DestinationSchemaProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutput_KinesisFirehoseOutputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutput_KinesisStreamsOutputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutput_LambdaOutputProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutput_OutputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationSchema))
            aws_cdk_lib_IResolvable(p.destinationSchema);
        if (!visitedObjects.has(p.kinesisFirehoseOutput))
            aws_cdk_lib_IResolvable(p.kinesisFirehoseOutput);
        if (!visitedObjects.has(p.kinesisStreamsOutput))
            aws_cdk_lib_IResolvable(p.kinesisStreamsOutput);
        if (!visitedObjects.has(p.lambdaOutput))
            aws_cdk_lib_IResolvable(p.lambdaOutput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.referenceDataSource))
            aws_cdk_lib_IResolvable(p.referenceDataSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_CSVMappingParametersProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_JSONMappingParametersProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_MappingParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csvMappingParameters))
            aws_cdk_lib_IResolvable(p.csvMappingParameters);
        if (!visitedObjects.has(p.jsonMappingParameters))
            aws_cdk_lib_IResolvable(p.jsonMappingParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_RecordColumnProperty(p) {
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_RecordFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mappingParameters))
            aws_cdk_lib_IResolvable(p.mappingParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_ReferenceDataSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.referenceSchema))
            aws_cdk_lib_IResolvable(p.referenceSchema);
        if (!visitedObjects.has(p.s3ReferenceDataSource))
            aws_cdk_lib_IResolvable(p.s3ReferenceDataSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_ReferenceSchemaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.recordColumns))
            aws_cdk_lib_IResolvable(p.recordColumns);
        if (!visitedObjects.has(p.recordFormat))
            aws_cdk_lib_IResolvable(p.recordFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_S3ReferenceDataSourceProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStreamProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.amazonOpenSearchServerlessDestinationConfiguration))
            aws_cdk_lib_IResolvable(p.amazonOpenSearchServerlessDestinationConfiguration);
        if (!visitedObjects.has(p.amazonopensearchserviceDestinationConfiguration))
            aws_cdk_lib_IResolvable(p.amazonopensearchserviceDestinationConfiguration);
        if (!visitedObjects.has(p.deliveryStreamEncryptionConfigurationInput))
            aws_cdk_lib_IResolvable(p.deliveryStreamEncryptionConfigurationInput);
        if (!visitedObjects.has(p.elasticsearchDestinationConfiguration))
            aws_cdk_lib_IResolvable(p.elasticsearchDestinationConfiguration);
        if (!visitedObjects.has(p.extendedS3DestinationConfiguration))
            aws_cdk_lib_IResolvable(p.extendedS3DestinationConfiguration);
        if (!visitedObjects.has(p.httpEndpointDestinationConfiguration))
            aws_cdk_lib_IResolvable(p.httpEndpointDestinationConfiguration);
        if (!visitedObjects.has(p.kinesisStreamSourceConfiguration))
            aws_cdk_lib_IResolvable(p.kinesisStreamSourceConfiguration);
        if (!visitedObjects.has(p.redshiftDestinationConfiguration))
            aws_cdk_lib_IResolvable(p.redshiftDestinationConfiguration);
        if (!visitedObjects.has(p.s3DestinationConfiguration))
            aws_cdk_lib_IResolvable(p.s3DestinationConfiguration);
        if (!visitedObjects.has(p.splunkDestinationConfiguration))
            aws_cdk_lib_IResolvable(p.splunkDestinationConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_AmazonOpenSearchServerlessBufferingHintsProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_AmazonOpenSearchServerlessDestinationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Configuration))
            aws_cdk_lib_IResolvable(p.s3Configuration);
        if (!visitedObjects.has(p.bufferingHints))
            aws_cdk_lib_IResolvable(p.bufferingHints);
        if (!visitedObjects.has(p.cloudWatchLoggingOptions))
            aws_cdk_lib_IResolvable(p.cloudWatchLoggingOptions);
        if (!visitedObjects.has(p.processingConfiguration))
            aws_cdk_lib_IResolvable(p.processingConfiguration);
        if (!visitedObjects.has(p.retryOptions))
            aws_cdk_lib_IResolvable(p.retryOptions);
        if (!visitedObjects.has(p.vpcConfiguration))
            aws_cdk_lib_IResolvable(p.vpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_AmazonOpenSearchServerlessRetryOptionsProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_AmazonopensearchserviceBufferingHintsProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_AmazonopensearchserviceDestinationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Configuration))
            aws_cdk_lib_IResolvable(p.s3Configuration);
        if (!visitedObjects.has(p.bufferingHints))
            aws_cdk_lib_IResolvable(p.bufferingHints);
        if (!visitedObjects.has(p.cloudWatchLoggingOptions))
            aws_cdk_lib_IResolvable(p.cloudWatchLoggingOptions);
        if (!visitedObjects.has(p.processingConfiguration))
            aws_cdk_lib_IResolvable(p.processingConfiguration);
        if (!visitedObjects.has(p.retryOptions))
            aws_cdk_lib_IResolvable(p.retryOptions);
        if (!visitedObjects.has(p.vpcConfiguration))
            aws_cdk_lib_IResolvable(p.vpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_AmazonopensearchserviceRetryOptionsProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_BufferingHintsProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_CloudWatchLoggingOptionsProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_CopyCommandProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_DataFormatConversionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputFormatConfiguration))
            aws_cdk_lib_IResolvable(p.inputFormatConfiguration);
        if (!visitedObjects.has(p.outputFormatConfiguration))
            aws_cdk_lib_IResolvable(p.outputFormatConfiguration);
        if (!visitedObjects.has(p.schemaConfiguration))
            aws_cdk_lib_IResolvable(p.schemaConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_DeliveryStreamEncryptionConfigurationInputProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_DeserializerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hiveJsonSerDe))
            aws_cdk_lib_IResolvable(p.hiveJsonSerDe);
        if (!visitedObjects.has(p.openXJsonSerDe))
            aws_cdk_lib_IResolvable(p.openXJsonSerDe);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_DynamicPartitioningConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.retryOptions))
            aws_cdk_lib_IResolvable(p.retryOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ElasticsearchBufferingHintsProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ElasticsearchDestinationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Configuration))
            aws_cdk_lib_IResolvable(p.s3Configuration);
        if (!visitedObjects.has(p.bufferingHints))
            aws_cdk_lib_IResolvable(p.bufferingHints);
        if (!visitedObjects.has(p.cloudWatchLoggingOptions))
            aws_cdk_lib_IResolvable(p.cloudWatchLoggingOptions);
        if (!visitedObjects.has(p.processingConfiguration))
            aws_cdk_lib_IResolvable(p.processingConfiguration);
        if (!visitedObjects.has(p.retryOptions))
            aws_cdk_lib_IResolvable(p.retryOptions);
        if (!visitedObjects.has(p.vpcConfiguration))
            aws_cdk_lib_IResolvable(p.vpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ElasticsearchRetryOptionsProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_EncryptionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kmsEncryptionConfig))
            aws_cdk_lib_IResolvable(p.kmsEncryptionConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ExtendedS3DestinationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bufferingHints))
            aws_cdk_lib_IResolvable(p.bufferingHints);
        if (!visitedObjects.has(p.cloudWatchLoggingOptions))
            aws_cdk_lib_IResolvable(p.cloudWatchLoggingOptions);
        if (!visitedObjects.has(p.dataFormatConversionConfiguration))
            aws_cdk_lib_IResolvable(p.dataFormatConversionConfiguration);
        if (!visitedObjects.has(p.dynamicPartitioningConfiguration))
            aws_cdk_lib_IResolvable(p.dynamicPartitioningConfiguration);
        if (!visitedObjects.has(p.encryptionConfiguration))
            aws_cdk_lib_IResolvable(p.encryptionConfiguration);
        if (!visitedObjects.has(p.processingConfiguration))
            aws_cdk_lib_IResolvable(p.processingConfiguration);
        if (!visitedObjects.has(p.s3BackupConfiguration))
            aws_cdk_lib_IResolvable(p.s3BackupConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_HiveJsonSerDeProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_HttpEndpointCommonAttributeProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_HttpEndpointConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_HttpEndpointDestinationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.endpointConfiguration))
            aws_cdk_lib_IResolvable(p.endpointConfiguration);
        if (!visitedObjects.has(p.s3Configuration))
            aws_cdk_lib_IResolvable(p.s3Configuration);
        if (!visitedObjects.has(p.bufferingHints))
            aws_cdk_lib_IResolvable(p.bufferingHints);
        if (!visitedObjects.has(p.cloudWatchLoggingOptions))
            aws_cdk_lib_IResolvable(p.cloudWatchLoggingOptions);
        if (!visitedObjects.has(p.processingConfiguration))
            aws_cdk_lib_IResolvable(p.processingConfiguration);
        if (!visitedObjects.has(p.requestConfiguration))
            aws_cdk_lib_IResolvable(p.requestConfiguration);
        if (!visitedObjects.has(p.retryOptions))
            aws_cdk_lib_IResolvable(p.retryOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_HttpEndpointRequestConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.commonAttributes))
            aws_cdk_lib_IResolvable(p.commonAttributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_InputFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deserializer))
            aws_cdk_lib_IResolvable(p.deserializer);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_KMSEncryptionConfigProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_KinesisStreamSourceConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_OpenXJsonSerDeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnToJsonKeyMappings))
            aws_cdk_lib_IResolvable(p.columnToJsonKeyMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_OrcSerDeProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_OutputFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.serializer))
            aws_cdk_lib_IResolvable(p.serializer);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ParquetSerDeProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ProcessingConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.processors))
            aws_cdk_lib_IResolvable(p.processors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ProcessorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ProcessorParameterProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_RedshiftDestinationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.copyCommand))
            aws_cdk_lib_IResolvable(p.copyCommand);
        if (!visitedObjects.has(p.s3Configuration))
            aws_cdk_lib_IResolvable(p.s3Configuration);
        if (!visitedObjects.has(p.cloudWatchLoggingOptions))
            aws_cdk_lib_IResolvable(p.cloudWatchLoggingOptions);
        if (!visitedObjects.has(p.processingConfiguration))
            aws_cdk_lib_IResolvable(p.processingConfiguration);
        if (!visitedObjects.has(p.retryOptions))
            aws_cdk_lib_IResolvable(p.retryOptions);
        if (!visitedObjects.has(p.s3BackupConfiguration))
            aws_cdk_lib_IResolvable(p.s3BackupConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_RedshiftRetryOptionsProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_RetryOptionsProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_S3DestinationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bufferingHints))
            aws_cdk_lib_IResolvable(p.bufferingHints);
        if (!visitedObjects.has(p.cloudWatchLoggingOptions))
            aws_cdk_lib_IResolvable(p.cloudWatchLoggingOptions);
        if (!visitedObjects.has(p.encryptionConfiguration))
            aws_cdk_lib_IResolvable(p.encryptionConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_SchemaConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_SerializerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.orcSerDe))
            aws_cdk_lib_IResolvable(p.orcSerDe);
        if (!visitedObjects.has(p.parquetSerDe))
            aws_cdk_lib_IResolvable(p.parquetSerDe);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_SplunkDestinationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Configuration))
            aws_cdk_lib_IResolvable(p.s3Configuration);
        if (!visitedObjects.has(p.cloudWatchLoggingOptions))
            aws_cdk_lib_IResolvable(p.cloudWatchLoggingOptions);
        if (!visitedObjects.has(p.processingConfiguration))
            aws_cdk_lib_IResolvable(p.processingConfiguration);
        if (!visitedObjects.has(p.retryOptions))
            aws_cdk_lib_IResolvable(p.retryOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_SplunkRetryOptionsProperty(p) {
}
function aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_VpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_kinesisvideo_CfnSignalingChannelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisvideo_CfnSignalingChannel(p) {
}
function aws_cdk_lib_aws_kinesisvideo_CfnStreamProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kinesisvideo_CfnStream(p) {
}
function aws_cdk_lib_aws_kms_IKey(p) {
}
function aws_cdk_lib_aws_kms_KeySpec(p) {
}
function aws_cdk_lib_aws_kms_KeyUsage(p) {
}
function aws_cdk_lib_aws_kms_KeyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.admins != null)
            for (const o of p.admins)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IPrincipal(o);
        if (!visitedObjects.has(p.keySpec))
            aws_cdk_lib_aws_kms_KeySpec(p.keySpec);
        if (!visitedObjects.has(p.keyUsage))
            aws_cdk_lib_aws_kms_KeyUsage(p.keyUsage);
        if (!visitedObjects.has(p.pendingWindow))
            aws_cdk_lib_Duration(p.pendingWindow);
        if (!visitedObjects.has(p.policy))
            aws_cdk_lib_aws_iam_PolicyDocument(p.policy);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kms_Key(p) {
}
function aws_cdk_lib_aws_kms_KeyLookupOptions(p) {
}
function aws_cdk_lib_aws_kms_IAlias(p) {
}
function aws_cdk_lib_aws_kms_AliasProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetKey))
            aws_cdk_lib_aws_kms_IKey(p.targetKey);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kms_AliasAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aliasTargetKey))
            aws_cdk_lib_aws_kms_IKey(p.aliasTargetKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kms_Alias(p) {
}
function aws_cdk_lib_aws_kms_ViaServicePrincipal(p) {
}
function aws_cdk_lib_aws_kms_CfnAliasProps(p) {
}
function aws_cdk_lib_aws_kms_CfnAlias(p) {
}
function aws_cdk_lib_aws_kms_CfnKeyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kms_CfnKey(p) {
}
function aws_cdk_lib_aws_kms_CfnReplicaKeyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_kms_CfnReplicaKey(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnDataCellsFilterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnWildcard))
            aws_cdk_lib_IResolvable(p.columnWildcard);
        if (!visitedObjects.has(p.rowFilter))
            aws_cdk_lib_IResolvable(p.rowFilter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lakeformation_CfnDataCellsFilter(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnDataCellsFilter_ColumnWildcardProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnDataCellsFilter_RowFilterProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnDataLakeSettingsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.admins))
            aws_cdk_lib_IResolvable(p.admins);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lakeformation_CfnDataLakeSettings(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnDataLakeSettings_DataLakePrincipalProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPermissionsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLakePrincipal))
            aws_cdk_lib_IResolvable(p.dataLakePrincipal);
        if (!visitedObjects.has(p.resource))
            aws_cdk_lib_IResolvable(p.resource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lakeformation_CfnPermissions(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPermissions_ColumnWildcardProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPermissions_DataLakePrincipalProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPermissions_DataLocationResourceProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPermissions_DatabaseResourceProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPermissions_ResourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.databaseResource))
            aws_cdk_lib_IResolvable(p.databaseResource);
        if (!visitedObjects.has(p.dataLocationResource))
            aws_cdk_lib_IResolvable(p.dataLocationResource);
        if (!visitedObjects.has(p.tableResource))
            aws_cdk_lib_IResolvable(p.tableResource);
        if (!visitedObjects.has(p.tableWithColumnsResource))
            aws_cdk_lib_IResolvable(p.tableWithColumnsResource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lakeformation_CfnPermissions_TableResourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tableWildcard))
            aws_cdk_lib_IResolvable(p.tableWildcard);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lakeformation_CfnPermissions_TableWildcardProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPermissions_TableWithColumnsResourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnWildcard))
            aws_cdk_lib_IResolvable(p.columnWildcard);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissionsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.principal))
            aws_cdk_lib_IResolvable(p.principal);
        if (!visitedObjects.has(p.resource))
            aws_cdk_lib_IResolvable(p.resource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_ColumnWildcardProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_DataCellsFilterResourceProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_DataLakePrincipalProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_DataLocationResourceProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_DatabaseResourceProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_LFTagProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_LFTagKeyResourceProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_LFTagPolicyResourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.expression))
            aws_cdk_lib_IResolvable(p.expression);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_ResourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.database))
            aws_cdk_lib_IResolvable(p.database);
        if (!visitedObjects.has(p.dataCellsFilter))
            aws_cdk_lib_IResolvable(p.dataCellsFilter);
        if (!visitedObjects.has(p.dataLocation))
            aws_cdk_lib_IResolvable(p.dataLocation);
        if (!visitedObjects.has(p.lfTag))
            aws_cdk_lib_IResolvable(p.lfTag);
        if (!visitedObjects.has(p.lfTagPolicy))
            aws_cdk_lib_IResolvable(p.lfTagPolicy);
        if (!visitedObjects.has(p.table))
            aws_cdk_lib_IResolvable(p.table);
        if (!visitedObjects.has(p.tableWithColumns))
            aws_cdk_lib_IResolvable(p.tableWithColumns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_TableResourceProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_TableWithColumnsResourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnWildcard))
            aws_cdk_lib_IResolvable(p.columnWildcard);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lakeformation_CfnResourceProps(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnResource(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnTagProps(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnTag(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnTagAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lfTags))
            aws_cdk_lib_IResolvable(p.lfTags);
        if (!visitedObjects.has(p.resource))
            aws_cdk_lib_IResolvable(p.resource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lakeformation_CfnTagAssociation(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnTagAssociation_DatabaseResourceProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnTagAssociation_LFTagPairProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnTagAssociation_ResourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.database))
            aws_cdk_lib_IResolvable(p.database);
        if (!visitedObjects.has(p.table))
            aws_cdk_lib_IResolvable(p.table);
        if (!visitedObjects.has(p.tableWithColumns))
            aws_cdk_lib_IResolvable(p.tableWithColumns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lakeformation_CfnTagAssociation_TableResourceProperty(p) {
}
function aws_cdk_lib_aws_lakeformation_CfnTagAssociation_TableWithColumnsResourceProperty(p) {
}
function aws_cdk_lib_aws_lambda_AdotInstrumentationConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.execWrapper))
            aws_cdk_lib_aws_lambda_AdotLambdaExecWrapper(p.execWrapper);
        if (!visitedObjects.has(p.layerVersion))
            aws_cdk_lib_aws_lambda_AdotLayerVersion(p.layerVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_AdotLayerVersion(p) {
}
function aws_cdk_lib_aws_lambda_AdotLambdaExecWrapper(p) {
}
function aws_cdk_lib_aws_lambda_AdotLambdaLayerJavaSdkVersion(p) {
}
function aws_cdk_lib_aws_lambda_AdotLambdaLayerJavaAutoInstrumentationVersion(p) {
}
function aws_cdk_lib_aws_lambda_AdotLambdaLayerPythonSdkVersion(p) {
}
function aws_cdk_lib_aws_lambda_AdotLambdaLayerJavaScriptSdkVersion(p) {
}
function aws_cdk_lib_aws_lambda_AdotLambdaLayerGenericVersion(p) {
}
function aws_cdk_lib_aws_lambda_IAlias(p) {
}
function aws_cdk_lib_aws_lambda_AliasOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.additionalVersions != null)
            for (const o of p.additionalVersions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_VersionWeight(o);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_AliasProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_lambda_IVersion(p.version);
        if (p.additionalVersions != null)
            for (const o of p.additionalVersions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_VersionWeight(o);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_AliasAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aliasVersion))
            aws_cdk_lib_aws_lambda_IVersion(p.aliasVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_Alias(p) {
}
function aws_cdk_lib_aws_lambda_VersionWeight(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_lambda_IVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_DlqDestinationConfig(p) {
}
function aws_cdk_lib_aws_lambda_IEventSourceDlq(p) {
}
function aws_cdk_lib_aws_lambda_IFunction(p) {
}
function aws_cdk_lib_aws_lambda_FunctionAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.architecture))
            aws_cdk_lib_aws_lambda_Architecture(p.architecture);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_FunctionBase(p) {
}
function aws_cdk_lib_aws_lambda_QualifiedFunctionBase(p) {
}
function aws_cdk_lib_aws_lambda_Tracing(p) {
}
function aws_cdk_lib_aws_lambda_FunctionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.adotInstrumentation))
            aws_cdk_lib_aws_lambda_AdotInstrumentationConfig(p.adotInstrumentation);
        if (!visitedObjects.has(p.architecture))
            aws_cdk_lib_aws_lambda_Architecture(p.architecture);
        if (!visitedObjects.has(p.codeSigningConfig))
            aws_cdk_lib_aws_lambda_ICodeSigningConfig(p.codeSigningConfig);
        if (!visitedObjects.has(p.currentVersionOptions))
            aws_cdk_lib_aws_lambda_VersionOptions(p.currentVersionOptions);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.deadLetterTopic))
            aws_cdk_lib_aws_sns_ITopic(p.deadLetterTopic);
        if (!visitedObjects.has(p.environmentEncryption))
            aws_cdk_lib_aws_kms_IKey(p.environmentEncryption);
        if (!visitedObjects.has(p.ephemeralStorageSize))
            aws_cdk_lib_Size(p.ephemeralStorageSize);
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_IEventSource(o);
        if (!visitedObjects.has(p.filesystem))
            aws_cdk_lib_aws_lambda_FileSystem(p.filesystem);
        if (p.initialPolicy != null)
            for (const o of p.initialPolicy)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (!visitedObjects.has(p.insightsVersion))
            aws_cdk_lib_aws_lambda_LambdaInsightsVersion(p.insightsVersion);
        if (p.layers != null)
            for (const o of p.layers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_ILayerVersion(o);
        if (!visitedObjects.has(p.logRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.logRetention);
        if (!visitedObjects.has(p.logRetentionRetryOptions))
            aws_cdk_lib_aws_lambda_LogRetentionRetryOptions(p.logRetentionRetryOptions);
        if (!visitedObjects.has(p.logRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.logRetentionRole);
        if (!visitedObjects.has(p.profilingGroup))
            aws_cdk_lib_aws_codeguruprofiler_IProfilingGroup(p.profilingGroup);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.runtimeManagementMode))
            aws_cdk_lib_aws_lambda_RuntimeManagementMode(p.runtimeManagementMode);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.tracing))
            aws_cdk_lib_aws_lambda_Tracing(p.tracing);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_FunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_lambda_Code(p.code);
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_aws_lambda_Runtime(p.runtime);
        if (!visitedObjects.has(p.adotInstrumentation))
            aws_cdk_lib_aws_lambda_AdotInstrumentationConfig(p.adotInstrumentation);
        if (!visitedObjects.has(p.architecture))
            aws_cdk_lib_aws_lambda_Architecture(p.architecture);
        if (!visitedObjects.has(p.codeSigningConfig))
            aws_cdk_lib_aws_lambda_ICodeSigningConfig(p.codeSigningConfig);
        if (!visitedObjects.has(p.currentVersionOptions))
            aws_cdk_lib_aws_lambda_VersionOptions(p.currentVersionOptions);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.deadLetterTopic))
            aws_cdk_lib_aws_sns_ITopic(p.deadLetterTopic);
        if (!visitedObjects.has(p.environmentEncryption))
            aws_cdk_lib_aws_kms_IKey(p.environmentEncryption);
        if (!visitedObjects.has(p.ephemeralStorageSize))
            aws_cdk_lib_Size(p.ephemeralStorageSize);
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_IEventSource(o);
        if (!visitedObjects.has(p.filesystem))
            aws_cdk_lib_aws_lambda_FileSystem(p.filesystem);
        if (p.initialPolicy != null)
            for (const o of p.initialPolicy)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (!visitedObjects.has(p.insightsVersion))
            aws_cdk_lib_aws_lambda_LambdaInsightsVersion(p.insightsVersion);
        if (p.layers != null)
            for (const o of p.layers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_ILayerVersion(o);
        if (!visitedObjects.has(p.logRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.logRetention);
        if (!visitedObjects.has(p.logRetentionRetryOptions))
            aws_cdk_lib_aws_lambda_LogRetentionRetryOptions(p.logRetentionRetryOptions);
        if (!visitedObjects.has(p.logRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.logRetentionRole);
        if (!visitedObjects.has(p.profilingGroup))
            aws_cdk_lib_aws_codeguruprofiler_IProfilingGroup(p.profilingGroup);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.runtimeManagementMode))
            aws_cdk_lib_aws_lambda_RuntimeManagementMode(p.runtimeManagementMode);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.tracing))
            aws_cdk_lib_aws_lambda_Tracing(p.tracing);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_Function(p) {
}
function aws_cdk_lib_aws_lambda_EnvironmentOptions(p) {
}
function aws_cdk_lib_aws_lambda_FunctionVersionUpgrade(p) {
}
function aws_cdk_lib_aws_lambda_Handler(p) {
}
function aws_cdk_lib_aws_lambda_DockerImageFunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_lambda_DockerImageCode(p.code);
        if (!visitedObjects.has(p.adotInstrumentation))
            aws_cdk_lib_aws_lambda_AdotInstrumentationConfig(p.adotInstrumentation);
        if (!visitedObjects.has(p.architecture))
            aws_cdk_lib_aws_lambda_Architecture(p.architecture);
        if (!visitedObjects.has(p.codeSigningConfig))
            aws_cdk_lib_aws_lambda_ICodeSigningConfig(p.codeSigningConfig);
        if (!visitedObjects.has(p.currentVersionOptions))
            aws_cdk_lib_aws_lambda_VersionOptions(p.currentVersionOptions);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.deadLetterTopic))
            aws_cdk_lib_aws_sns_ITopic(p.deadLetterTopic);
        if (!visitedObjects.has(p.environmentEncryption))
            aws_cdk_lib_aws_kms_IKey(p.environmentEncryption);
        if (!visitedObjects.has(p.ephemeralStorageSize))
            aws_cdk_lib_Size(p.ephemeralStorageSize);
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_IEventSource(o);
        if (!visitedObjects.has(p.filesystem))
            aws_cdk_lib_aws_lambda_FileSystem(p.filesystem);
        if (p.initialPolicy != null)
            for (const o of p.initialPolicy)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (!visitedObjects.has(p.insightsVersion))
            aws_cdk_lib_aws_lambda_LambdaInsightsVersion(p.insightsVersion);
        if (p.layers != null)
            for (const o of p.layers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_ILayerVersion(o);
        if (!visitedObjects.has(p.logRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.logRetention);
        if (!visitedObjects.has(p.logRetentionRetryOptions))
            aws_cdk_lib_aws_lambda_LogRetentionRetryOptions(p.logRetentionRetryOptions);
        if (!visitedObjects.has(p.logRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.logRetentionRole);
        if (!visitedObjects.has(p.profilingGroup))
            aws_cdk_lib_aws_codeguruprofiler_IProfilingGroup(p.profilingGroup);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.runtimeManagementMode))
            aws_cdk_lib_aws_lambda_RuntimeManagementMode(p.runtimeManagementMode);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.tracing))
            aws_cdk_lib_aws_lambda_Tracing(p.tracing);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_DockerImageCode(p) {
}
function aws_cdk_lib_aws_lambda_DockerImageFunction(p) {
}
function aws_cdk_lib_aws_lambda_LayerVersionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_LayerVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_lambda_Code(p.code);
        if (p.compatibleArchitectures != null)
            for (const o of p.compatibleArchitectures)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_Architecture(o);
        if (p.compatibleRuntimes != null)
            for (const o of p.compatibleRuntimes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_Runtime(o);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_ILayerVersion(p) {
}
function aws_cdk_lib_aws_lambda_LayerVersionPermission(p) {
}
function aws_cdk_lib_aws_lambda_LayerVersionAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.compatibleRuntimes != null)
            for (const o of p.compatibleRuntimes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_Runtime(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_LayerVersion(p) {
}
function aws_cdk_lib_aws_lambda_Permission(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.principal))
            aws_cdk_lib_aws_iam_IPrincipal(p.principal);
        if (!visitedObjects.has(p.functionUrlAuthType))
            aws_cdk_lib_aws_lambda_FunctionUrlAuthType(p.functionUrlAuthType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_LambdaRuntimeProps(p) {
}
function aws_cdk_lib_aws_lambda_RuntimeFamily(p) {
}
function aws_cdk_lib_aws_lambda_Runtime(p) {
}
function aws_cdk_lib_aws_lambda_Code(p) {
}
function aws_cdk_lib_aws_lambda_CodeConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_lambda_CodeImageConfig(p.image);
        if (!visitedObjects.has(p.s3Location))
            aws_cdk_lib_aws_s3_Location(p.s3Location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CodeImageConfig(p) {
}
function aws_cdk_lib_aws_lambda_S3Code(p) {
}
function aws_cdk_lib_aws_lambda_InlineCode(p) {
}
function aws_cdk_lib_aws_lambda_AssetCode(p) {
}
function aws_cdk_lib_aws_lambda_ResourceBindOptions(p) {
}
function aws_cdk_lib_aws_lambda_CfnParametersCodeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucketNameParam))
            aws_cdk_lib_CfnParameter(p.bucketNameParam);
        if (!visitedObjects.has(p.objectKeyParam))
            aws_cdk_lib_CfnParameter(p.objectKeyParam);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnParametersCode(p) {
}
function aws_cdk_lib_aws_lambda_EcrImageCodeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("tag" in p)
            print("aws-cdk-lib.aws_lambda.EcrImageCodeProps#tag", "use `tagOrDigest`");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_EcrImageCode(p) {
}
function aws_cdk_lib_aws_lambda_AssetImageCodeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.cacheFrom != null)
            for (const o of p.cacheFrom)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecr_assets_DockerCacheOption(o);
        if (!visitedObjects.has(p.cacheTo))
            aws_cdk_lib_aws_ecr_assets_DockerCacheOption(p.cacheTo);
        if (!visitedObjects.has(p.invalidation))
            aws_cdk_lib_aws_ecr_assets_DockerImageAssetInvalidationOptions(p.invalidation);
        if (!visitedObjects.has(p.networkMode))
            aws_cdk_lib_aws_ecr_assets_NetworkMode(p.networkMode);
        if (!visitedObjects.has(p.platform))
            aws_cdk_lib_aws_ecr_assets_Platform(p.platform);
        if (!visitedObjects.has(p.followSymlinks))
            aws_cdk_lib_SymlinkFollowMode(p.followSymlinks);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_AssetImageCode(p) {
}
function aws_cdk_lib_aws_lambda_DockerBuildAssetOptions(p) {
}
function aws_cdk_lib_aws_lambda_FileSystemConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connections))
            aws_cdk_lib_aws_ec2_Connections(p.connections);
        if (p.policies != null)
            for (const o of p.policies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_FileSystem(p) {
}
function aws_cdk_lib_aws_lambda_IVersion(p) {
}
function aws_cdk_lib_aws_lambda_VersionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_VersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambda))
            aws_cdk_lib_aws_lambda_IFunction(p.lambda);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_VersionAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambda))
            aws_cdk_lib_aws_lambda_IFunction(p.lambda);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_Version(p) {
}
function aws_cdk_lib_aws_lambda_SingletonFunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_lambda_Code(p.code);
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_aws_lambda_Runtime(p.runtime);
        if (!visitedObjects.has(p.adotInstrumentation))
            aws_cdk_lib_aws_lambda_AdotInstrumentationConfig(p.adotInstrumentation);
        if (!visitedObjects.has(p.architecture))
            aws_cdk_lib_aws_lambda_Architecture(p.architecture);
        if (!visitedObjects.has(p.codeSigningConfig))
            aws_cdk_lib_aws_lambda_ICodeSigningConfig(p.codeSigningConfig);
        if (!visitedObjects.has(p.currentVersionOptions))
            aws_cdk_lib_aws_lambda_VersionOptions(p.currentVersionOptions);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.deadLetterTopic))
            aws_cdk_lib_aws_sns_ITopic(p.deadLetterTopic);
        if (!visitedObjects.has(p.environmentEncryption))
            aws_cdk_lib_aws_kms_IKey(p.environmentEncryption);
        if (!visitedObjects.has(p.ephemeralStorageSize))
            aws_cdk_lib_Size(p.ephemeralStorageSize);
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_IEventSource(o);
        if (!visitedObjects.has(p.filesystem))
            aws_cdk_lib_aws_lambda_FileSystem(p.filesystem);
        if (p.initialPolicy != null)
            for (const o of p.initialPolicy)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (!visitedObjects.has(p.insightsVersion))
            aws_cdk_lib_aws_lambda_LambdaInsightsVersion(p.insightsVersion);
        if (p.layers != null)
            for (const o of p.layers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_ILayerVersion(o);
        if (!visitedObjects.has(p.logRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.logRetention);
        if (!visitedObjects.has(p.logRetentionRetryOptions))
            aws_cdk_lib_aws_lambda_LogRetentionRetryOptions(p.logRetentionRetryOptions);
        if (!visitedObjects.has(p.logRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.logRetentionRole);
        if (!visitedObjects.has(p.profilingGroup))
            aws_cdk_lib_aws_codeguruprofiler_IProfilingGroup(p.profilingGroup);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.runtimeManagementMode))
            aws_cdk_lib_aws_lambda_RuntimeManagementMode(p.runtimeManagementMode);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.tracing))
            aws_cdk_lib_aws_lambda_Tracing(p.tracing);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_SingletonFunction(p) {
}
function aws_cdk_lib_aws_lambda_IEventSource(p) {
}
function aws_cdk_lib_aws_lambda_SourceAccessConfigurationType(p) {
}
function aws_cdk_lib_aws_lambda_SourceAccessConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_lambda_SourceAccessConfigurationType(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_EventSourceMappingOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxBatchingWindow))
            aws_cdk_lib_Duration(p.maxBatchingWindow);
        if (!visitedObjects.has(p.maxRecordAge))
            aws_cdk_lib_Duration(p.maxRecordAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IEventSourceDlq(p.onFailure);
        if (p.sourceAccessConfigurations != null)
            for (const o of p.sourceAccessConfigurations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_SourceAccessConfiguration(o);
        if (!visitedObjects.has(p.startingPosition))
            aws_cdk_lib_aws_lambda_StartingPosition(p.startingPosition);
        if (!visitedObjects.has(p.tumblingWindow))
            aws_cdk_lib_Duration(p.tumblingWindow);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_EventSourceMappingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_lambda_IFunction(p.target);
        if (!visitedObjects.has(p.maxBatchingWindow))
            aws_cdk_lib_Duration(p.maxBatchingWindow);
        if (!visitedObjects.has(p.maxRecordAge))
            aws_cdk_lib_Duration(p.maxRecordAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IEventSourceDlq(p.onFailure);
        if (p.sourceAccessConfigurations != null)
            for (const o of p.sourceAccessConfigurations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_SourceAccessConfiguration(o);
        if (!visitedObjects.has(p.startingPosition))
            aws_cdk_lib_aws_lambda_StartingPosition(p.startingPosition);
        if (!visitedObjects.has(p.tumblingWindow))
            aws_cdk_lib_Duration(p.tumblingWindow);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_IEventSourceMapping(p) {
}
function aws_cdk_lib_aws_lambda_EventSourceMapping(p) {
}
function aws_cdk_lib_aws_lambda_StartingPosition(p) {
}
function aws_cdk_lib_aws_lambda_FilterRule(p) {
}
function aws_cdk_lib_aws_lambda_FilterCriteria(p) {
}
function aws_cdk_lib_aws_lambda_DestinationConfig(p) {
}
function aws_cdk_lib_aws_lambda_DestinationType(p) {
}
function aws_cdk_lib_aws_lambda_DestinationOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_lambda_DestinationType(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_IDestination(p) {
}
function aws_cdk_lib_aws_lambda_EventInvokeConfigOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_EventInvokeConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.function))
            aws_cdk_lib_aws_lambda_IFunction(p.function);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_EventInvokeConfig(p) {
}
function aws_cdk_lib_aws_lambda_IScalableFunctionAttribute(p) {
}
function aws_cdk_lib_aws_lambda_UtilizationScalingOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scaleInCooldown))
            aws_cdk_lib_Duration(p.scaleInCooldown);
        if (!visitedObjects.has(p.scaleOutCooldown))
            aws_cdk_lib_Duration(p.scaleOutCooldown);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_AutoScalingOptions(p) {
}
function aws_cdk_lib_aws_lambda_UntrustedArtifactOnDeployment(p) {
}
function aws_cdk_lib_aws_lambda_ICodeSigningConfig(p) {
}
function aws_cdk_lib_aws_lambda_CodeSigningConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.signingProfiles != null)
            for (const o of p.signingProfiles)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_signer_ISigningProfile(o);
        if (!visitedObjects.has(p.untrustedArtifactOnDeployment))
            aws_cdk_lib_aws_lambda_UntrustedArtifactOnDeployment(p.untrustedArtifactOnDeployment);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CodeSigningConfig(p) {
}
function aws_cdk_lib_aws_lambda_LambdaInsightsVersion(p) {
}
function aws_cdk_lib_aws_lambda_LogRetentionRetryOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.base))
            aws_cdk_lib_Duration(p.base);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_Architecture(p) {
}
function aws_cdk_lib_aws_lambda_FunctionUrlAuthType(p) {
}
function aws_cdk_lib_aws_lambda_HttpMethod(p) {
}
function aws_cdk_lib_aws_lambda_FunctionUrlCorsOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.allowedMethods != null)
            for (const o of p.allowedMethods)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_HttpMethod(o);
        if (!visitedObjects.has(p.maxAge))
            aws_cdk_lib_Duration(p.maxAge);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_IFunctionUrl(p) {
}
function aws_cdk_lib_aws_lambda_FunctionUrlOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authType))
            aws_cdk_lib_aws_lambda_FunctionUrlAuthType(p.authType);
        if (!visitedObjects.has(p.cors))
            aws_cdk_lib_aws_lambda_FunctionUrlCorsOptions(p.cors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_FunctionUrlProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.function))
            aws_cdk_lib_aws_lambda_IFunction(p.function);
        if (!visitedObjects.has(p.authType))
            aws_cdk_lib_aws_lambda_FunctionUrlAuthType(p.authType);
        if (!visitedObjects.has(p.cors))
            aws_cdk_lib_aws_lambda_FunctionUrlCorsOptions(p.cors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_FunctionUrl(p) {
}
function aws_cdk_lib_aws_lambda_RuntimeManagementMode(p) {
}
function aws_cdk_lib_aws_lambda_CfnAliasProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.provisionedConcurrencyConfig))
            aws_cdk_lib_IResolvable(p.provisionedConcurrencyConfig);
        if (!visitedObjects.has(p.routingConfig))
            aws_cdk_lib_IResolvable(p.routingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnAlias(p) {
}
function aws_cdk_lib_aws_lambda_CfnAlias_AliasRoutingConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.additionalVersionWeights))
            aws_cdk_lib_IResolvable(p.additionalVersionWeights);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnAlias_ProvisionedConcurrencyConfigurationProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnAlias_VersionWeightProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnCodeSigningConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.allowedPublishers))
            aws_cdk_lib_IResolvable(p.allowedPublishers);
        if (!visitedObjects.has(p.codeSigningPolicies))
            aws_cdk_lib_IResolvable(p.codeSigningPolicies);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnCodeSigningConfig(p) {
}
function aws_cdk_lib_aws_lambda_CfnCodeSigningConfig_AllowedPublishersProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnCodeSigningConfig_CodeSigningPoliciesProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnEventInvokeConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationConfig))
            aws_cdk_lib_IResolvable(p.destinationConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnEventInvokeConfig(p) {
}
function aws_cdk_lib_aws_lambda_CfnEventInvokeConfig_DestinationConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_IResolvable(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_IResolvable(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnEventInvokeConfig_OnFailureProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnEventInvokeConfig_OnSuccessProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMappingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.amazonManagedKafkaEventSourceConfig))
            aws_cdk_lib_IResolvable(p.amazonManagedKafkaEventSourceConfig);
        if (!visitedObjects.has(p.destinationConfig))
            aws_cdk_lib_IResolvable(p.destinationConfig);
        if (!visitedObjects.has(p.documentDbEventSourceConfig))
            aws_cdk_lib_IResolvable(p.documentDbEventSourceConfig);
        if (!visitedObjects.has(p.filterCriteria))
            aws_cdk_lib_IResolvable(p.filterCriteria);
        if (!visitedObjects.has(p.scalingConfig))
            aws_cdk_lib_IResolvable(p.scalingConfig);
        if (!visitedObjects.has(p.selfManagedEventSource))
            aws_cdk_lib_IResolvable(p.selfManagedEventSource);
        if (!visitedObjects.has(p.selfManagedKafkaEventSourceConfig))
            aws_cdk_lib_IResolvable(p.selfManagedKafkaEventSourceConfig);
        if (!visitedObjects.has(p.sourceAccessConfigurations))
            aws_cdk_lib_IResolvable(p.sourceAccessConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMapping(p) {
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMapping_AmazonManagedKafkaEventSourceConfigProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMapping_DestinationConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_IResolvable(p.onFailure);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMapping_DocumentDBEventSourceConfigProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMapping_EndpointsProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMapping_FilterProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMapping_FilterCriteriaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filters))
            aws_cdk_lib_IResolvable(p.filters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMapping_OnFailureProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMapping_ScalingConfigProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMapping_SelfManagedEventSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.endpoints))
            aws_cdk_lib_IResolvable(p.endpoints);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMapping_SelfManagedKafkaEventSourceConfigProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnEventSourceMapping_SourceAccessConfigurationProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnFunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_IResolvable(p.code);
        if (!visitedObjects.has(p.deadLetterConfig))
            aws_cdk_lib_IResolvable(p.deadLetterConfig);
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
        if (!visitedObjects.has(p.ephemeralStorage))
            aws_cdk_lib_IResolvable(p.ephemeralStorage);
        if (!visitedObjects.has(p.fileSystemConfigs))
            aws_cdk_lib_IResolvable(p.fileSystemConfigs);
        if (!visitedObjects.has(p.imageConfig))
            aws_cdk_lib_IResolvable(p.imageConfig);
        if (!visitedObjects.has(p.runtimeManagementConfig))
            aws_cdk_lib_IResolvable(p.runtimeManagementConfig);
        if (!visitedObjects.has(p.snapStart))
            aws_cdk_lib_IResolvable(p.snapStart);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.tracingConfig))
            aws_cdk_lib_IResolvable(p.tracingConfig);
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnFunction(p) {
}
function aws_cdk_lib_aws_lambda_CfnFunction_CodeProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnFunction_DeadLetterConfigProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnFunction_EnvironmentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.variables))
            aws_cdk_lib_IResolvable(p.variables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnFunction_EphemeralStorageProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnFunction_FileSystemConfigProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnFunction_ImageConfigProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnFunction_RuntimeManagementConfigProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnFunction_SnapStartProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnFunction_SnapStartResponseProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnFunction_TracingConfigProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnFunction_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnLayerVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.content))
            aws_cdk_lib_IResolvable(p.content);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnLayerVersion(p) {
}
function aws_cdk_lib_aws_lambda_CfnLayerVersion_ContentProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnLayerVersionPermissionProps(p) {
}
function aws_cdk_lib_aws_lambda_CfnLayerVersionPermission(p) {
}
function aws_cdk_lib_aws_lambda_CfnPermissionProps(p) {
}
function aws_cdk_lib_aws_lambda_CfnPermission(p) {
}
function aws_cdk_lib_aws_lambda_CfnUrlProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cors))
            aws_cdk_lib_IResolvable(p.cors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnUrl(p) {
}
function aws_cdk_lib_aws_lambda_CfnUrl_CorsProperty(p) {
}
function aws_cdk_lib_aws_lambda_CfnVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.provisionedConcurrencyConfig))
            aws_cdk_lib_IResolvable(p.provisionedConcurrencyConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_CfnVersion(p) {
}
function aws_cdk_lib_aws_lambda_CfnVersion_ProvisionedConcurrencyConfigurationProperty(p) {
}
function aws_cdk_lib_aws_lambda_destinations_EventBridgeDestination(p) {
}
function aws_cdk_lib_aws_lambda_destinations_LambdaDestinationOptions(p) {
}
function aws_cdk_lib_aws_lambda_destinations_LambdaDestination(p) {
}
function aws_cdk_lib_aws_lambda_destinations_SnsDestination(p) {
}
function aws_cdk_lib_aws_lambda_destinations_SqsDestination(p) {
}
function aws_cdk_lib_aws_lambda_event_sources_ApiEventSource(p) {
}
function aws_cdk_lib_aws_lambda_event_sources_DynamoEventSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxRecordAge))
            aws_cdk_lib_Duration(p.maxRecordAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IEventSourceDlq(p.onFailure);
        if (!visitedObjects.has(p.tumblingWindow))
            aws_cdk_lib_Duration(p.tumblingWindow);
        if (!visitedObjects.has(p.startingPosition))
            aws_cdk_lib_aws_lambda_StartingPosition(p.startingPosition);
        if (!visitedObjects.has(p.maxBatchingWindow))
            aws_cdk_lib_Duration(p.maxBatchingWindow);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_event_sources_DynamoEventSource(p) {
}
function aws_cdk_lib_aws_lambda_event_sources_KafkaEventSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.secret);
        if (!visitedObjects.has(p.startingPosition))
            aws_cdk_lib_aws_lambda_StartingPosition(p.startingPosition);
        if (!visitedObjects.has(p.maxBatchingWindow))
            aws_cdk_lib_Duration(p.maxBatchingWindow);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_event_sources_ManagedKafkaEventSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.secret);
        if (!visitedObjects.has(p.startingPosition))
            aws_cdk_lib_aws_lambda_StartingPosition(p.startingPosition);
        if (!visitedObjects.has(p.maxBatchingWindow))
            aws_cdk_lib_Duration(p.maxBatchingWindow);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_event_sources_AuthenticationMethod(p) {
}
function aws_cdk_lib_aws_lambda_event_sources_SelfManagedKafkaEventSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authenticationMethod))
            aws_cdk_lib_aws_lambda_event_sources_AuthenticationMethod(p.authenticationMethod);
        if (!visitedObjects.has(p.rootCACertificate))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.rootCACertificate);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
        if (!visitedObjects.has(p.secret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.secret);
        if (!visitedObjects.has(p.startingPosition))
            aws_cdk_lib_aws_lambda_StartingPosition(p.startingPosition);
        if (!visitedObjects.has(p.maxBatchingWindow))
            aws_cdk_lib_Duration(p.maxBatchingWindow);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_event_sources_ManagedKafkaEventSource(p) {
}
function aws_cdk_lib_aws_lambda_event_sources_SelfManagedKafkaEventSource(p) {
}
function aws_cdk_lib_aws_lambda_event_sources_KinesisEventSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxRecordAge))
            aws_cdk_lib_Duration(p.maxRecordAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IEventSourceDlq(p.onFailure);
        if (!visitedObjects.has(p.tumblingWindow))
            aws_cdk_lib_Duration(p.tumblingWindow);
        if (!visitedObjects.has(p.startingPosition))
            aws_cdk_lib_aws_lambda_StartingPosition(p.startingPosition);
        if (!visitedObjects.has(p.maxBatchingWindow))
            aws_cdk_lib_Duration(p.maxBatchingWindow);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_event_sources_KinesisEventSource(p) {
}
function aws_cdk_lib_aws_lambda_event_sources_S3EventSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_EventType(o);
        if (p.filters != null)
            for (const o of p.filters)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_NotificationKeyFilter(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_event_sources_S3EventSource(p) {
}
function aws_cdk_lib_aws_lambda_event_sources_SnsEventSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (p.filterPolicy != null)
            for (const o of Object.values(p.filterPolicy))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_SubscriptionFilter(o);
        if (p.filterPolicyWithMessageBody != null)
            for (const o of Object.values(p.filterPolicyWithMessageBody))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_FilterOrPolicy(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_event_sources_SnsEventSource(p) {
}
function aws_cdk_lib_aws_lambda_event_sources_SnsDlq(p) {
}
function aws_cdk_lib_aws_lambda_event_sources_BaseStreamEventSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.startingPosition))
            aws_cdk_lib_aws_lambda_StartingPosition(p.startingPosition);
        if (!visitedObjects.has(p.maxBatchingWindow))
            aws_cdk_lib_Duration(p.maxBatchingWindow);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_event_sources_StreamEventSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxRecordAge))
            aws_cdk_lib_Duration(p.maxRecordAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IEventSourceDlq(p.onFailure);
        if (!visitedObjects.has(p.tumblingWindow))
            aws_cdk_lib_Duration(p.tumblingWindow);
        if (!visitedObjects.has(p.startingPosition))
            aws_cdk_lib_aws_lambda_StartingPosition(p.startingPosition);
        if (!visitedObjects.has(p.maxBatchingWindow))
            aws_cdk_lib_Duration(p.maxBatchingWindow);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_event_sources_StreamEventSource(p) {
}
function aws_cdk_lib_aws_lambda_event_sources_SqsEventSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxBatchingWindow))
            aws_cdk_lib_Duration(p.maxBatchingWindow);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_event_sources_SqsEventSource(p) {
}
function aws_cdk_lib_aws_lambda_event_sources_SqsDlq(p) {
}
function aws_cdk_lib_aws_lambda_nodejs_NodejsFunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bundling))
            aws_cdk_lib_aws_lambda_nodejs_BundlingOptions(p.bundling);
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_aws_lambda_Runtime(p.runtime);
        if (!visitedObjects.has(p.adotInstrumentation))
            aws_cdk_lib_aws_lambda_AdotInstrumentationConfig(p.adotInstrumentation);
        if (!visitedObjects.has(p.architecture))
            aws_cdk_lib_aws_lambda_Architecture(p.architecture);
        if (!visitedObjects.has(p.codeSigningConfig))
            aws_cdk_lib_aws_lambda_ICodeSigningConfig(p.codeSigningConfig);
        if (!visitedObjects.has(p.currentVersionOptions))
            aws_cdk_lib_aws_lambda_VersionOptions(p.currentVersionOptions);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.deadLetterTopic))
            aws_cdk_lib_aws_sns_ITopic(p.deadLetterTopic);
        if (!visitedObjects.has(p.environmentEncryption))
            aws_cdk_lib_aws_kms_IKey(p.environmentEncryption);
        if (!visitedObjects.has(p.ephemeralStorageSize))
            aws_cdk_lib_Size(p.ephemeralStorageSize);
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_IEventSource(o);
        if (!visitedObjects.has(p.filesystem))
            aws_cdk_lib_aws_lambda_FileSystem(p.filesystem);
        if (p.initialPolicy != null)
            for (const o of p.initialPolicy)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (!visitedObjects.has(p.insightsVersion))
            aws_cdk_lib_aws_lambda_LambdaInsightsVersion(p.insightsVersion);
        if (p.layers != null)
            for (const o of p.layers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_ILayerVersion(o);
        if (!visitedObjects.has(p.logRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.logRetention);
        if (!visitedObjects.has(p.logRetentionRetryOptions))
            aws_cdk_lib_aws_lambda_LogRetentionRetryOptions(p.logRetentionRetryOptions);
        if (!visitedObjects.has(p.logRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.logRetentionRole);
        if (!visitedObjects.has(p.profilingGroup))
            aws_cdk_lib_aws_codeguruprofiler_IProfilingGroup(p.profilingGroup);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.runtimeManagementMode))
            aws_cdk_lib_aws_lambda_RuntimeManagementMode(p.runtimeManagementMode);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.tracing))
            aws_cdk_lib_aws_lambda_Tracing(p.tracing);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_nodejs_NodejsFunction(p) {
}
function aws_cdk_lib_aws_lambda_nodejs_BundlingOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bundlingFileAccess))
            aws_cdk_lib_BundlingFileAccess(p.bundlingFileAccess);
        if (!visitedObjects.has(p.charset))
            aws_cdk_lib_aws_lambda_nodejs_Charset(p.charset);
        if (!visitedObjects.has(p.commandHooks))
            aws_cdk_lib_aws_lambda_nodejs_ICommandHooks(p.commandHooks);
        if (!visitedObjects.has(p.dockerImage))
            aws_cdk_lib_DockerImage(p.dockerImage);
        if (!visitedObjects.has(p.format))
            aws_cdk_lib_aws_lambda_nodejs_OutputFormat(p.format);
        if (!visitedObjects.has(p.logLevel))
            aws_cdk_lib_aws_lambda_nodejs_LogLevel(p.logLevel);
        if (!visitedObjects.has(p.sourceMapMode))
            aws_cdk_lib_aws_lambda_nodejs_SourceMapMode(p.sourceMapMode);
        if (p.volumes != null)
            for (const o of p.volumes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_DockerVolume(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lambda_nodejs_OutputFormat(p) {
}
function aws_cdk_lib_aws_lambda_nodejs_ICommandHooks(p) {
}
function aws_cdk_lib_aws_lambda_nodejs_LogLevel(p) {
}
function aws_cdk_lib_aws_lambda_nodejs_SourceMapMode(p) {
}
function aws_cdk_lib_aws_lambda_nodejs_Charset(p) {
}
function aws_cdk_lib_aws_lex_CfnBotProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.botFileS3Location))
            aws_cdk_lib_IResolvable(p.botFileS3Location);
        if (!visitedObjects.has(p.botLocales))
            aws_cdk_lib_IResolvable(p.botLocales);
        if (!visitedObjects.has(p.botTags))
            aws_cdk_lib_IResolvable(p.botTags);
        if (!visitedObjects.has(p.testBotAliasSettings))
            aws_cdk_lib_IResolvable(p.testBotAliasSettings);
        if (!visitedObjects.has(p.testBotAliasTags))
            aws_cdk_lib_IResolvable(p.testBotAliasTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_AdvancedRecognitionSettingProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_AllowedInputTypesProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_AudioAndDTMFInputSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.audioSpecification))
            aws_cdk_lib_IResolvable(p.audioSpecification);
        if (!visitedObjects.has(p.dtmfSpecification))
            aws_cdk_lib_IResolvable(p.dtmfSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_AudioLogDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Bucket))
            aws_cdk_lib_IResolvable(p.s3Bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_AudioLogSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_AudioSpecificationProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_BotAliasLocaleSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.codeHookSpecification))
            aws_cdk_lib_IResolvable(p.codeHookSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_BotAliasLocaleSettingsItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.botAliasLocaleSetting))
            aws_cdk_lib_IResolvable(p.botAliasLocaleSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_BotLocaleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customVocabulary))
            aws_cdk_lib_IResolvable(p.customVocabulary);
        if (!visitedObjects.has(p.intents))
            aws_cdk_lib_IResolvable(p.intents);
        if (!visitedObjects.has(p.slotTypes))
            aws_cdk_lib_IResolvable(p.slotTypes);
        if (!visitedObjects.has(p.voiceSettings))
            aws_cdk_lib_IResolvable(p.voiceSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_ButtonProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_CloudWatchLogGroupLogDestinationProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_CodeHookSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambdaCodeHook))
            aws_cdk_lib_IResolvable(p.lambdaCodeHook);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_ConditionProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_ConditionalBranchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.condition))
            aws_cdk_lib_IResolvable(p.condition);
        if (!visitedObjects.has(p.nextStep))
            aws_cdk_lib_IResolvable(p.nextStep);
        if (!visitedObjects.has(p.response))
            aws_cdk_lib_IResolvable(p.response);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_ConditionalSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalBranches))
            aws_cdk_lib_IResolvable(p.conditionalBranches);
        if (!visitedObjects.has(p.defaultBranch))
            aws_cdk_lib_IResolvable(p.defaultBranch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_ConversationLogSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.audioLogSettings))
            aws_cdk_lib_IResolvable(p.audioLogSettings);
        if (!visitedObjects.has(p.textLogSettings))
            aws_cdk_lib_IResolvable(p.textLogSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_CustomPayloadProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_CustomVocabularyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customVocabularyItems))
            aws_cdk_lib_IResolvable(p.customVocabularyItems);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_CustomVocabularyItemProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_DTMFSpecificationProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_DataPrivacyProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_DefaultConditionalBranchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nextStep))
            aws_cdk_lib_IResolvable(p.nextStep);
        if (!visitedObjects.has(p.response))
            aws_cdk_lib_IResolvable(p.response);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_DialogActionProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_DialogCodeHookInvocationSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.postCodeHookSpecification))
            aws_cdk_lib_IResolvable(p.postCodeHookSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_DialogCodeHookSettingProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_DialogStateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dialogAction))
            aws_cdk_lib_IResolvable(p.dialogAction);
        if (!visitedObjects.has(p.intent))
            aws_cdk_lib_IResolvable(p.intent);
        if (!visitedObjects.has(p.sessionAttributes))
            aws_cdk_lib_IResolvable(p.sessionAttributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_ElicitationCodeHookInvocationSettingProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_ExternalSourceSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.grammarSlotTypeSetting))
            aws_cdk_lib_IResolvable(p.grammarSlotTypeSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_FulfillmentCodeHookSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fulfillmentUpdatesSpecification))
            aws_cdk_lib_IResolvable(p.fulfillmentUpdatesSpecification);
        if (!visitedObjects.has(p.postFulfillmentStatusSpecification))
            aws_cdk_lib_IResolvable(p.postFulfillmentStatusSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_FulfillmentStartResponseSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.messageGroups))
            aws_cdk_lib_IResolvable(p.messageGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_FulfillmentUpdateResponseSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.messageGroups))
            aws_cdk_lib_IResolvable(p.messageGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_FulfillmentUpdatesSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.startResponse))
            aws_cdk_lib_IResolvable(p.startResponse);
        if (!visitedObjects.has(p.updateResponse))
            aws_cdk_lib_IResolvable(p.updateResponse);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_GrammarSlotTypeSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_IResolvable(p.source);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_GrammarSlotTypeSourceProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_ImageResponseCardProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.buttons))
            aws_cdk_lib_IResolvable(p.buttons);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_InitialResponseSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.codeHook))
            aws_cdk_lib_IResolvable(p.codeHook);
        if (!visitedObjects.has(p.conditional))
            aws_cdk_lib_IResolvable(p.conditional);
        if (!visitedObjects.has(p.initialResponse))
            aws_cdk_lib_IResolvable(p.initialResponse);
        if (!visitedObjects.has(p.nextStep))
            aws_cdk_lib_IResolvable(p.nextStep);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_InputContextProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_IntentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dialogCodeHook))
            aws_cdk_lib_IResolvable(p.dialogCodeHook);
        if (!visitedObjects.has(p.fulfillmentCodeHook))
            aws_cdk_lib_IResolvable(p.fulfillmentCodeHook);
        if (!visitedObjects.has(p.initialResponseSetting))
            aws_cdk_lib_IResolvable(p.initialResponseSetting);
        if (!visitedObjects.has(p.inputContexts))
            aws_cdk_lib_IResolvable(p.inputContexts);
        if (!visitedObjects.has(p.intentClosingSetting))
            aws_cdk_lib_IResolvable(p.intentClosingSetting);
        if (!visitedObjects.has(p.intentConfirmationSetting))
            aws_cdk_lib_IResolvable(p.intentConfirmationSetting);
        if (!visitedObjects.has(p.kendraConfiguration))
            aws_cdk_lib_IResolvable(p.kendraConfiguration);
        if (!visitedObjects.has(p.outputContexts))
            aws_cdk_lib_IResolvable(p.outputContexts);
        if (!visitedObjects.has(p.sampleUtterances))
            aws_cdk_lib_IResolvable(p.sampleUtterances);
        if (!visitedObjects.has(p.slotPriorities))
            aws_cdk_lib_IResolvable(p.slotPriorities);
        if (!visitedObjects.has(p.slots))
            aws_cdk_lib_IResolvable(p.slots);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_IntentClosingSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.closingResponse))
            aws_cdk_lib_IResolvable(p.closingResponse);
        if (!visitedObjects.has(p.conditional))
            aws_cdk_lib_IResolvable(p.conditional);
        if (!visitedObjects.has(p.nextStep))
            aws_cdk_lib_IResolvable(p.nextStep);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_IntentConfirmationSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.promptSpecification))
            aws_cdk_lib_IResolvable(p.promptSpecification);
        if (!visitedObjects.has(p.codeHook))
            aws_cdk_lib_IResolvable(p.codeHook);
        if (!visitedObjects.has(p.confirmationConditional))
            aws_cdk_lib_IResolvable(p.confirmationConditional);
        if (!visitedObjects.has(p.confirmationNextStep))
            aws_cdk_lib_IResolvable(p.confirmationNextStep);
        if (!visitedObjects.has(p.confirmationResponse))
            aws_cdk_lib_IResolvable(p.confirmationResponse);
        if (!visitedObjects.has(p.declinationConditional))
            aws_cdk_lib_IResolvable(p.declinationConditional);
        if (!visitedObjects.has(p.declinationNextStep))
            aws_cdk_lib_IResolvable(p.declinationNextStep);
        if (!visitedObjects.has(p.declinationResponse))
            aws_cdk_lib_IResolvable(p.declinationResponse);
        if (!visitedObjects.has(p.elicitationCodeHook))
            aws_cdk_lib_IResolvable(p.elicitationCodeHook);
        if (!visitedObjects.has(p.failureConditional))
            aws_cdk_lib_IResolvable(p.failureConditional);
        if (!visitedObjects.has(p.failureNextStep))
            aws_cdk_lib_IResolvable(p.failureNextStep);
        if (!visitedObjects.has(p.failureResponse))
            aws_cdk_lib_IResolvable(p.failureResponse);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_IntentOverrideProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.slots))
            aws_cdk_lib_IResolvable(p.slots);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_KendraConfigurationProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_LambdaCodeHookProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_MessageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customPayload))
            aws_cdk_lib_IResolvable(p.customPayload);
        if (!visitedObjects.has(p.imageResponseCard))
            aws_cdk_lib_IResolvable(p.imageResponseCard);
        if (!visitedObjects.has(p.plainTextMessage))
            aws_cdk_lib_IResolvable(p.plainTextMessage);
        if (!visitedObjects.has(p.ssmlMessage))
            aws_cdk_lib_IResolvable(p.ssmlMessage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_MessageGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.message))
            aws_cdk_lib_IResolvable(p.message);
        if (!visitedObjects.has(p.variations))
            aws_cdk_lib_IResolvable(p.variations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_MultipleValuesSettingProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_ObfuscationSettingProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_OutputContextProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_PlainTextMessageProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_PostDialogCodeHookInvocationSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.failureConditional))
            aws_cdk_lib_IResolvable(p.failureConditional);
        if (!visitedObjects.has(p.failureNextStep))
            aws_cdk_lib_IResolvable(p.failureNextStep);
        if (!visitedObjects.has(p.failureResponse))
            aws_cdk_lib_IResolvable(p.failureResponse);
        if (!visitedObjects.has(p.successConditional))
            aws_cdk_lib_IResolvable(p.successConditional);
        if (!visitedObjects.has(p.successNextStep))
            aws_cdk_lib_IResolvable(p.successNextStep);
        if (!visitedObjects.has(p.successResponse))
            aws_cdk_lib_IResolvable(p.successResponse);
        if (!visitedObjects.has(p.timeoutConditional))
            aws_cdk_lib_IResolvable(p.timeoutConditional);
        if (!visitedObjects.has(p.timeoutNextStep))
            aws_cdk_lib_IResolvable(p.timeoutNextStep);
        if (!visitedObjects.has(p.timeoutResponse))
            aws_cdk_lib_IResolvable(p.timeoutResponse);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_PostFulfillmentStatusSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.failureConditional))
            aws_cdk_lib_IResolvable(p.failureConditional);
        if (!visitedObjects.has(p.failureNextStep))
            aws_cdk_lib_IResolvable(p.failureNextStep);
        if (!visitedObjects.has(p.failureResponse))
            aws_cdk_lib_IResolvable(p.failureResponse);
        if (!visitedObjects.has(p.successConditional))
            aws_cdk_lib_IResolvable(p.successConditional);
        if (!visitedObjects.has(p.successNextStep))
            aws_cdk_lib_IResolvable(p.successNextStep);
        if (!visitedObjects.has(p.successResponse))
            aws_cdk_lib_IResolvable(p.successResponse);
        if (!visitedObjects.has(p.timeoutConditional))
            aws_cdk_lib_IResolvable(p.timeoutConditional);
        if (!visitedObjects.has(p.timeoutNextStep))
            aws_cdk_lib_IResolvable(p.timeoutNextStep);
        if (!visitedObjects.has(p.timeoutResponse))
            aws_cdk_lib_IResolvable(p.timeoutResponse);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_PromptAttemptSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.allowedInputTypes))
            aws_cdk_lib_IResolvable(p.allowedInputTypes);
        if (!visitedObjects.has(p.audioAndDtmfInputSpecification))
            aws_cdk_lib_IResolvable(p.audioAndDtmfInputSpecification);
        if (!visitedObjects.has(p.textInputSpecification))
            aws_cdk_lib_IResolvable(p.textInputSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_PromptSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.messageGroupsList))
            aws_cdk_lib_IResolvable(p.messageGroupsList);
        if (!visitedObjects.has(p.promptAttemptsSpecification))
            aws_cdk_lib_IResolvable(p.promptAttemptsSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_ResponseSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.messageGroupsList))
            aws_cdk_lib_IResolvable(p.messageGroupsList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_S3BucketLogDestinationProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_SSMLMessageProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_SampleUtteranceProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_SampleValueProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_SentimentAnalysisSettingsProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_SessionAttributeProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_SlotProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.valueElicitationSetting))
            aws_cdk_lib_IResolvable(p.valueElicitationSetting);
        if (!visitedObjects.has(p.multipleValuesSetting))
            aws_cdk_lib_IResolvable(p.multipleValuesSetting);
        if (!visitedObjects.has(p.obfuscationSetting))
            aws_cdk_lib_IResolvable(p.obfuscationSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_SlotCaptureSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.captureConditional))
            aws_cdk_lib_IResolvable(p.captureConditional);
        if (!visitedObjects.has(p.captureNextStep))
            aws_cdk_lib_IResolvable(p.captureNextStep);
        if (!visitedObjects.has(p.captureResponse))
            aws_cdk_lib_IResolvable(p.captureResponse);
        if (!visitedObjects.has(p.codeHook))
            aws_cdk_lib_IResolvable(p.codeHook);
        if (!visitedObjects.has(p.elicitationCodeHook))
            aws_cdk_lib_IResolvable(p.elicitationCodeHook);
        if (!visitedObjects.has(p.failureConditional))
            aws_cdk_lib_IResolvable(p.failureConditional);
        if (!visitedObjects.has(p.failureNextStep))
            aws_cdk_lib_IResolvable(p.failureNextStep);
        if (!visitedObjects.has(p.failureResponse))
            aws_cdk_lib_IResolvable(p.failureResponse);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_SlotDefaultValueProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_SlotDefaultValueSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValueList))
            aws_cdk_lib_IResolvable(p.defaultValueList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_SlotPriorityProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_SlotTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.externalSourceSetting))
            aws_cdk_lib_IResolvable(p.externalSourceSetting);
        if (!visitedObjects.has(p.slotTypeValues))
            aws_cdk_lib_IResolvable(p.slotTypeValues);
        if (!visitedObjects.has(p.valueSelectionSetting))
            aws_cdk_lib_IResolvable(p.valueSelectionSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_SlotTypeValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sampleValue))
            aws_cdk_lib_IResolvable(p.sampleValue);
        if (!visitedObjects.has(p.synonyms))
            aws_cdk_lib_IResolvable(p.synonyms);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_SlotValueProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_SlotValueElicitationSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValueSpecification))
            aws_cdk_lib_IResolvable(p.defaultValueSpecification);
        if (!visitedObjects.has(p.promptSpecification))
            aws_cdk_lib_IResolvable(p.promptSpecification);
        if (!visitedObjects.has(p.sampleUtterances))
            aws_cdk_lib_IResolvable(p.sampleUtterances);
        if (!visitedObjects.has(p.slotCaptureSetting))
            aws_cdk_lib_IResolvable(p.slotCaptureSetting);
        if (!visitedObjects.has(p.waitAndContinueSpecification))
            aws_cdk_lib_IResolvable(p.waitAndContinueSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_SlotValueOverrideProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_SlotValueOverrideMapProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.slotValueOverride))
            aws_cdk_lib_IResolvable(p.slotValueOverride);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_SlotValueRegexFilterProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_SlotValueSelectionSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.advancedRecognitionSetting))
            aws_cdk_lib_IResolvable(p.advancedRecognitionSetting);
        if (!visitedObjects.has(p.regexFilter))
            aws_cdk_lib_IResolvable(p.regexFilter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_StillWaitingResponseSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.messageGroupsList))
            aws_cdk_lib_IResolvable(p.messageGroupsList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_TestBotAliasSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.botAliasLocaleSettings))
            aws_cdk_lib_IResolvable(p.botAliasLocaleSettings);
        if (!visitedObjects.has(p.conversationLogSettings))
            aws_cdk_lib_IResolvable(p.conversationLogSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_TextInputSpecificationProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_TextLogDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatch))
            aws_cdk_lib_IResolvable(p.cloudWatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_TextLogSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBot_VoiceSettingsProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBot_WaitAndContinueSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.continueResponse))
            aws_cdk_lib_IResolvable(p.continueResponse);
        if (!visitedObjects.has(p.waitingResponse))
            aws_cdk_lib_IResolvable(p.waitingResponse);
        if (!visitedObjects.has(p.stillWaitingResponse))
            aws_cdk_lib_IResolvable(p.stillWaitingResponse);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBotAliasProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.botAliasLocaleSettings))
            aws_cdk_lib_IResolvable(p.botAliasLocaleSettings);
        if (!visitedObjects.has(p.botAliasTags))
            aws_cdk_lib_IResolvable(p.botAliasTags);
        if (!visitedObjects.has(p.conversationLogSettings))
            aws_cdk_lib_IResolvable(p.conversationLogSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBotAlias(p) {
}
function aws_cdk_lib_aws_lex_CfnBotAlias_AudioLogDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Bucket))
            aws_cdk_lib_IResolvable(p.s3Bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBotAlias_AudioLogSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBotAlias_BotAliasLocaleSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.codeHookSpecification))
            aws_cdk_lib_IResolvable(p.codeHookSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBotAlias_BotAliasLocaleSettingsItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.botAliasLocaleSetting))
            aws_cdk_lib_IResolvable(p.botAliasLocaleSetting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBotAlias_CloudWatchLogGroupLogDestinationProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBotAlias_CodeHookSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambdaCodeHook))
            aws_cdk_lib_IResolvable(p.lambdaCodeHook);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBotAlias_ConversationLogSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.audioLogSettings))
            aws_cdk_lib_IResolvable(p.audioLogSettings);
        if (!visitedObjects.has(p.textLogSettings))
            aws_cdk_lib_IResolvable(p.textLogSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBotAlias_LambdaCodeHookProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBotAlias_S3BucketLogDestinationProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBotAlias_SentimentAnalysisSettingsProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBotAlias_TextLogDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatch))
            aws_cdk_lib_IResolvable(p.cloudWatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBotAlias_TextLogSettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBotVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.botVersionLocaleSpecification))
            aws_cdk_lib_IResolvable(p.botVersionLocaleSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnBotVersion(p) {
}
function aws_cdk_lib_aws_lex_CfnBotVersion_BotVersionLocaleDetailsProperty(p) {
}
function aws_cdk_lib_aws_lex_CfnBotVersion_BotVersionLocaleSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.botVersionLocaleDetails))
            aws_cdk_lib_IResolvable(p.botVersionLocaleDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lex_CfnResourcePolicyProps(p) {
}
function aws_cdk_lib_aws_lex_CfnResourcePolicy(p) {
}
function aws_cdk_lib_aws_licensemanager_CfnGrantProps(p) {
}
function aws_cdk_lib_aws_licensemanager_CfnGrant(p) {
}
function aws_cdk_lib_aws_licensemanager_CfnLicenseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.consumptionConfiguration))
            aws_cdk_lib_IResolvable(p.consumptionConfiguration);
        if (!visitedObjects.has(p.entitlements))
            aws_cdk_lib_IResolvable(p.entitlements);
        if (!visitedObjects.has(p.issuer))
            aws_cdk_lib_IResolvable(p.issuer);
        if (!visitedObjects.has(p.validity))
            aws_cdk_lib_IResolvable(p.validity);
        if (!visitedObjects.has(p.licenseMetadata))
            aws_cdk_lib_IResolvable(p.licenseMetadata);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_licensemanager_CfnLicense(p) {
}
function aws_cdk_lib_aws_licensemanager_CfnLicense_BorrowConfigurationProperty(p) {
}
function aws_cdk_lib_aws_licensemanager_CfnLicense_ConsumptionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.borrowConfiguration))
            aws_cdk_lib_IResolvable(p.borrowConfiguration);
        if (!visitedObjects.has(p.provisionalConfiguration))
            aws_cdk_lib_IResolvable(p.provisionalConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_licensemanager_CfnLicense_EntitlementProperty(p) {
}
function aws_cdk_lib_aws_licensemanager_CfnLicense_IssuerDataProperty(p) {
}
function aws_cdk_lib_aws_licensemanager_CfnLicense_MetadataProperty(p) {
}
function aws_cdk_lib_aws_licensemanager_CfnLicense_ProvisionalConfigurationProperty(p) {
}
function aws_cdk_lib_aws_licensemanager_CfnLicense_ValidityDateFormatProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnAlarmProps(p) {
}
function aws_cdk_lib_aws_lightsail_CfnAlarm(p) {
}
function aws_cdk_lib_aws_lightsail_CfnBucketProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessRules))
            aws_cdk_lib_IResolvable(p.accessRules);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnBucket(p) {
}
function aws_cdk_lib_aws_lightsail_CfnBucket_AccessRulesProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnCertificateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnCertificate(p) {
}
function aws_cdk_lib_aws_lightsail_CfnContainerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containerServiceDeployment))
            aws_cdk_lib_IResolvable(p.containerServiceDeployment);
        if (!visitedObjects.has(p.publicDomainNames))
            aws_cdk_lib_IResolvable(p.publicDomainNames);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnContainer(p) {
}
function aws_cdk_lib_aws_lightsail_CfnContainer_ContainerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
        if (!visitedObjects.has(p.ports))
            aws_cdk_lib_IResolvable(p.ports);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnContainer_ContainerServiceDeploymentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containers))
            aws_cdk_lib_IResolvable(p.containers);
        if (!visitedObjects.has(p.publicEndpoint))
            aws_cdk_lib_IResolvable(p.publicEndpoint);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnContainer_EnvironmentVariableProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnContainer_HealthCheckConfigProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnContainer_PortInfoProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnContainer_PublicDomainNameProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnContainer_PublicEndpointProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.healthCheckConfig))
            aws_cdk_lib_IResolvable(p.healthCheckConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnDatabaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.relationalDatabaseParameters))
            aws_cdk_lib_IResolvable(p.relationalDatabaseParameters);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnDatabase(p) {
}
function aws_cdk_lib_aws_lightsail_CfnDatabase_RelationalDatabaseParameterProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnDiskProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.addOns))
            aws_cdk_lib_IResolvable(p.addOns);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnDisk(p) {
}
function aws_cdk_lib_aws_lightsail_CfnDisk_AddOnProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoSnapshotAddOnRequest))
            aws_cdk_lib_IResolvable(p.autoSnapshotAddOnRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnDisk_AutoSnapshotAddOnProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnDisk_LocationProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnDistributionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultCacheBehavior))
            aws_cdk_lib_IResolvable(p.defaultCacheBehavior);
        if (!visitedObjects.has(p.origin))
            aws_cdk_lib_IResolvable(p.origin);
        if (!visitedObjects.has(p.cacheBehaviors))
            aws_cdk_lib_IResolvable(p.cacheBehaviors);
        if (!visitedObjects.has(p.cacheBehaviorSettings))
            aws_cdk_lib_IResolvable(p.cacheBehaviorSettings);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnDistribution(p) {
}
function aws_cdk_lib_aws_lightsail_CfnDistribution_CacheBehaviorProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnDistribution_CacheBehaviorPerPathProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnDistribution_CacheSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forwardedCookies))
            aws_cdk_lib_IResolvable(p.forwardedCookies);
        if (!visitedObjects.has(p.forwardedHeaders))
            aws_cdk_lib_IResolvable(p.forwardedHeaders);
        if (!visitedObjects.has(p.forwardedQueryStrings))
            aws_cdk_lib_IResolvable(p.forwardedQueryStrings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnDistribution_CookieObjectProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnDistribution_HeaderObjectProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnDistribution_InputOriginProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnDistribution_QueryStringObjectProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.addOns))
            aws_cdk_lib_IResolvable(p.addOns);
        if (!visitedObjects.has(p.hardware))
            aws_cdk_lib_IResolvable(p.hardware);
        if (!visitedObjects.has(p.location))
            aws_cdk_lib_IResolvable(p.location);
        if (!visitedObjects.has(p.networking))
            aws_cdk_lib_IResolvable(p.networking);
        if (!visitedObjects.has(p.state))
            aws_cdk_lib_IResolvable(p.state);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnInstance(p) {
}
function aws_cdk_lib_aws_lightsail_CfnInstance_AddOnProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoSnapshotAddOnRequest))
            aws_cdk_lib_IResolvable(p.autoSnapshotAddOnRequest);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnInstance_AutoSnapshotAddOnProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnInstance_DiskProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnInstance_HardwareProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.disks))
            aws_cdk_lib_IResolvable(p.disks);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnInstance_LocationProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnInstance_MonthlyTransferProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnInstance_NetworkingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ports))
            aws_cdk_lib_IResolvable(p.ports);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnInstance_PortProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnInstance_StateProperty(p) {
}
function aws_cdk_lib_aws_lightsail_CfnLoadBalancerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lightsail_CfnLoadBalancer(p) {
}
function aws_cdk_lib_aws_lightsail_CfnLoadBalancerTlsCertificateProps(p) {
}
function aws_cdk_lib_aws_lightsail_CfnLoadBalancerTlsCertificate(p) {
}
function aws_cdk_lib_aws_lightsail_CfnStaticIpProps(p) {
}
function aws_cdk_lib_aws_lightsail_CfnStaticIp(p) {
}
function aws_cdk_lib_aws_location_CfnGeofenceCollectionProps(p) {
}
function aws_cdk_lib_aws_location_CfnGeofenceCollection(p) {
}
function aws_cdk_lib_aws_location_CfnMapProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_location_CfnMap(p) {
}
function aws_cdk_lib_aws_location_CfnMap_MapConfigurationProperty(p) {
}
function aws_cdk_lib_aws_location_CfnPlaceIndexProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSourceConfiguration))
            aws_cdk_lib_IResolvable(p.dataSourceConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_location_CfnPlaceIndex(p) {
}
function aws_cdk_lib_aws_location_CfnPlaceIndex_DataSourceConfigurationProperty(p) {
}
function aws_cdk_lib_aws_location_CfnRouteCalculatorProps(p) {
}
function aws_cdk_lib_aws_location_CfnRouteCalculator(p) {
}
function aws_cdk_lib_aws_location_CfnTrackerProps(p) {
}
function aws_cdk_lib_aws_location_CfnTracker(p) {
}
function aws_cdk_lib_aws_location_CfnTrackerConsumerProps(p) {
}
function aws_cdk_lib_aws_location_CfnTrackerConsumer(p) {
}
function aws_cdk_lib_aws_logs_CrossAccountDestinationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_CrossAccountDestination(p) {
}
function aws_cdk_lib_aws_logs_ILogGroup(p) {
}
function aws_cdk_lib_aws_logs_RetentionDays(p) {
}
function aws_cdk_lib_aws_logs_LogGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.retention))
            aws_cdk_lib_aws_logs_RetentionDays(p.retention);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_LogGroup(p) {
}
function aws_cdk_lib_aws_logs_StreamOptions(p) {
}
function aws_cdk_lib_aws_logs_SubscriptionFilterOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_aws_logs_ILogSubscriptionDestination(p.destination);
        if (!visitedObjects.has(p.filterPattern))
            aws_cdk_lib_aws_logs_IFilterPattern(p.filterPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_MetricFilterOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filterPattern))
            aws_cdk_lib_aws_logs_IFilterPattern(p.filterPattern);
        if (!visitedObjects.has(p.unit))
            aws_cdk_lib_aws_cloudwatch_Unit(p.unit);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_ILogStream(p) {
}
function aws_cdk_lib_aws_logs_LogStreamProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.logGroup);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_LogStream(p) {
}
function aws_cdk_lib_aws_logs_MetricFilterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.logGroup);
        if (!visitedObjects.has(p.filterPattern))
            aws_cdk_lib_aws_logs_IFilterPattern(p.filterPattern);
        if (!visitedObjects.has(p.unit))
            aws_cdk_lib_aws_cloudwatch_Unit(p.unit);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_MetricFilter(p) {
}
function aws_cdk_lib_aws_logs_IFilterPattern(p) {
}
function aws_cdk_lib_aws_logs_JsonPattern(p) {
}
function aws_cdk_lib_aws_logs_FilterPattern(p) {
}
function aws_cdk_lib_aws_logs_SpaceDelimitedTextPattern(p) {
}
function aws_cdk_lib_aws_logs_ColumnRestriction(p) {
}
function aws_cdk_lib_aws_logs_ILogSubscriptionDestination(p) {
}
function aws_cdk_lib_aws_logs_LogSubscriptionDestinationConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_SubscriptionFilterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.logGroup);
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_aws_logs_ILogSubscriptionDestination(p.destination);
        if (!visitedObjects.has(p.filterPattern))
            aws_cdk_lib_aws_logs_IFilterPattern(p.filterPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_SubscriptionFilter(p) {
}
function aws_cdk_lib_aws_logs_LogRetentionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.retention))
            aws_cdk_lib_aws_logs_RetentionDays(p.retention);
        if (!visitedObjects.has(p.logRetentionRetryOptions))
            aws_cdk_lib_aws_logs_LogRetentionRetryOptions(p.logRetentionRetryOptions);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_LogRetentionRetryOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.base))
            aws_cdk_lib_Duration(p.base);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_LogRetention(p) {
}
function aws_cdk_lib_aws_logs_ResourcePolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.policyStatements != null)
            for (const o of p.policyStatements)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_ResourcePolicy(p) {
}
function aws_cdk_lib_aws_logs_QueryStringProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("filter" in p)
            print("aws-cdk-lib.aws_logs.QueryStringProps#filter", "Use `filterStatements` instead");
        if ("parse" in p)
            print("aws-cdk-lib.aws_logs.QueryStringProps#parse", "Use `parseStatements` instead");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_QueryString(p) {
}
function aws_cdk_lib_aws_logs_QueryDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.queryString))
            aws_cdk_lib_aws_logs_QueryString(p.queryString);
        if (p.logGroups != null)
            for (const o of p.logGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_logs_ILogGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_QueryDefinition(p) {
}
function aws_cdk_lib_aws_logs_CfnDestinationProps(p) {
}
function aws_cdk_lib_aws_logs_CfnDestination(p) {
}
function aws_cdk_lib_aws_logs_CfnLogGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_CfnLogGroup(p) {
}
function aws_cdk_lib_aws_logs_CfnLogStreamProps(p) {
}
function aws_cdk_lib_aws_logs_CfnLogStream(p) {
}
function aws_cdk_lib_aws_logs_CfnMetricFilterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricTransformations))
            aws_cdk_lib_IResolvable(p.metricTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_CfnMetricFilter(p) {
}
function aws_cdk_lib_aws_logs_CfnMetricFilter_DimensionProperty(p) {
}
function aws_cdk_lib_aws_logs_CfnMetricFilter_MetricTransformationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_CfnQueryDefinitionProps(p) {
}
function aws_cdk_lib_aws_logs_CfnQueryDefinition(p) {
}
function aws_cdk_lib_aws_logs_CfnResourcePolicyProps(p) {
}
function aws_cdk_lib_aws_logs_CfnResourcePolicy(p) {
}
function aws_cdk_lib_aws_logs_CfnSubscriptionFilterProps(p) {
}
function aws_cdk_lib_aws_logs_CfnSubscriptionFilter(p) {
}
function aws_cdk_lib_aws_logs_destinations_LambdaDestinationOptions(p) {
}
function aws_cdk_lib_aws_logs_destinations_LambdaDestination(p) {
}
function aws_cdk_lib_aws_logs_destinations_KinesisDestinationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_logs_destinations_KinesisDestination(p) {
}
function aws_cdk_lib_aws_lookoutequipment_CfnInferenceSchedulerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lookoutequipment_CfnInferenceScheduler(p) {
}
function aws_cdk_lib_aws_lookoutequipment_CfnInferenceScheduler_DataInputConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3InputConfiguration))
            aws_cdk_lib_IResolvable(p.s3InputConfiguration);
        if (!visitedObjects.has(p.inferenceInputNameConfiguration))
            aws_cdk_lib_IResolvable(p.inferenceInputNameConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lookoutequipment_CfnInferenceScheduler_DataOutputConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3OutputConfiguration))
            aws_cdk_lib_IResolvable(p.s3OutputConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lookoutequipment_CfnInferenceScheduler_InputNameConfigurationProperty(p) {
}
function aws_cdk_lib_aws_lookoutequipment_CfnInferenceScheduler_S3InputConfigurationProperty(p) {
}
function aws_cdk_lib_aws_lookoutequipment_CfnInferenceScheduler_S3OutputConfigurationProperty(p) {
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAlertProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAlert(p) {
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAlert_ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambdaConfiguration))
            aws_cdk_lib_IResolvable(p.lambdaConfiguration);
        if (!visitedObjects.has(p.snsConfiguration))
            aws_cdk_lib_IResolvable(p.snsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAlert_LambdaConfigurationProperty(p) {
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAlert_SNSConfigurationProperty(p) {
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetectorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.anomalyDetectorConfig))
            aws_cdk_lib_IResolvable(p.anomalyDetectorConfig);
        if (!visitedObjects.has(p.metricSetList))
            aws_cdk_lib_IResolvable(p.metricSetList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector(p) {
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_AnomalyDetectorConfigProperty(p) {
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_AppFlowConfigProperty(p) {
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_CloudwatchConfigProperty(p) {
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_CsvFormatDescriptorProperty(p) {
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_FileFormatDescriptorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csvFormatDescriptor))
            aws_cdk_lib_IResolvable(p.csvFormatDescriptor);
        if (!visitedObjects.has(p.jsonFormatDescriptor))
            aws_cdk_lib_IResolvable(p.jsonFormatDescriptor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_JsonFormatDescriptorProperty(p) {
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_MetricProperty(p) {
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_MetricSetProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricList))
            aws_cdk_lib_IResolvable(p.metricList);
        if (!visitedObjects.has(p.metricSource))
            aws_cdk_lib_IResolvable(p.metricSource);
        if (!visitedObjects.has(p.timestampColumn))
            aws_cdk_lib_IResolvable(p.timestampColumn);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_MetricSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.appFlowConfig))
            aws_cdk_lib_IResolvable(p.appFlowConfig);
        if (!visitedObjects.has(p.cloudwatchConfig))
            aws_cdk_lib_IResolvable(p.cloudwatchConfig);
        if (!visitedObjects.has(p.rdsSourceConfig))
            aws_cdk_lib_IResolvable(p.rdsSourceConfig);
        if (!visitedObjects.has(p.redshiftSourceConfig))
            aws_cdk_lib_IResolvable(p.redshiftSourceConfig);
        if (!visitedObjects.has(p.s3SourceConfig))
            aws_cdk_lib_IResolvable(p.s3SourceConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_RDSSourceConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpcConfiguration))
            aws_cdk_lib_IResolvable(p.vpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_RedshiftSourceConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpcConfiguration))
            aws_cdk_lib_IResolvable(p.vpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_S3SourceConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fileFormatDescriptor))
            aws_cdk_lib_IResolvable(p.fileFormatDescriptor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_TimestampColumnProperty(p) {
}
function aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_VpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_lookoutvision_CfnProjectProps(p) {
}
function aws_cdk_lib_aws_lookoutvision_CfnProject(p) {
}
function aws_cdk_lib_aws_m2_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.definition))
            aws_cdk_lib_IResolvable(p.definition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_m2_CfnApplication(p) {
}
function aws_cdk_lib_aws_m2_CfnApplication_DefinitionProperty(p) {
}
function aws_cdk_lib_aws_m2_CfnEnvironmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.highAvailabilityConfig))
            aws_cdk_lib_IResolvable(p.highAvailabilityConfig);
        if (!visitedObjects.has(p.storageConfigurations))
            aws_cdk_lib_IResolvable(p.storageConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_m2_CfnEnvironment(p) {
}
function aws_cdk_lib_aws_m2_CfnEnvironment_EfsStorageConfigurationProperty(p) {
}
function aws_cdk_lib_aws_m2_CfnEnvironment_FsxStorageConfigurationProperty(p) {
}
function aws_cdk_lib_aws_m2_CfnEnvironment_HighAvailabilityConfigProperty(p) {
}
function aws_cdk_lib_aws_m2_CfnEnvironment_StorageConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.efs))
            aws_cdk_lib_IResolvable(p.efs);
        if (!visitedObjects.has(p.fsx))
            aws_cdk_lib_IResolvable(p.fsx);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_macie_CfnAllowListProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.criteria))
            aws_cdk_lib_IResolvable(p.criteria);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_macie_CfnAllowList(p) {
}
function aws_cdk_lib_aws_macie_CfnAllowList_CriteriaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3WordsList))
            aws_cdk_lib_IResolvable(p.s3WordsList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_macie_CfnAllowList_S3WordsListProperty(p) {
}
function aws_cdk_lib_aws_macie_CfnCustomDataIdentifierProps(p) {
}
function aws_cdk_lib_aws_macie_CfnCustomDataIdentifier(p) {
}
function aws_cdk_lib_aws_macie_CfnFindingsFilterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.findingCriteria))
            aws_cdk_lib_IResolvable(p.findingCriteria);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_macie_CfnFindingsFilter(p) {
}
function aws_cdk_lib_aws_macie_CfnFindingsFilter_CriterionAdditionalPropertiesProperty(p) {
}
function aws_cdk_lib_aws_macie_CfnFindingsFilter_FindingCriteriaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.criterion))
            aws_cdk_lib_IResolvable(p.criterion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_macie_CfnFindingsFilter_FindingsFilterListItemProperty(p) {
}
function aws_cdk_lib_aws_macie_CfnSessionProps(p) {
}
function aws_cdk_lib_aws_macie_CfnSession(p) {
}
function aws_cdk_lib_aws_managedblockchain_CfnAccessorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_managedblockchain_CfnAccessor(p) {
}
function aws_cdk_lib_aws_managedblockchain_CfnMemberProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.memberConfiguration))
            aws_cdk_lib_IResolvable(p.memberConfiguration);
        if (!visitedObjects.has(p.networkConfiguration))
            aws_cdk_lib_IResolvable(p.networkConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_managedblockchain_CfnMember(p) {
}
function aws_cdk_lib_aws_managedblockchain_CfnMember_ApprovalThresholdPolicyProperty(p) {
}
function aws_cdk_lib_aws_managedblockchain_CfnMember_MemberConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.memberFrameworkConfiguration))
            aws_cdk_lib_IResolvable(p.memberFrameworkConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_managedblockchain_CfnMember_MemberFabricConfigurationProperty(p) {
}
function aws_cdk_lib_aws_managedblockchain_CfnMember_MemberFrameworkConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.memberFabricConfiguration))
            aws_cdk_lib_IResolvable(p.memberFabricConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_managedblockchain_CfnMember_NetworkConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.votingPolicy))
            aws_cdk_lib_IResolvable(p.votingPolicy);
        if (!visitedObjects.has(p.networkFrameworkConfiguration))
            aws_cdk_lib_IResolvable(p.networkFrameworkConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_managedblockchain_CfnMember_NetworkFabricConfigurationProperty(p) {
}
function aws_cdk_lib_aws_managedblockchain_CfnMember_NetworkFrameworkConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.networkFabricConfiguration))
            aws_cdk_lib_IResolvable(p.networkFabricConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_managedblockchain_CfnMember_VotingPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.approvalThresholdPolicy))
            aws_cdk_lib_IResolvable(p.approvalThresholdPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_managedblockchain_CfnNodeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nodeConfiguration))
            aws_cdk_lib_IResolvable(p.nodeConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_managedblockchain_CfnNode(p) {
}
function aws_cdk_lib_aws_managedblockchain_CfnNode_NodeConfigurationProperty(p) {
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_IResolvable(p.source);
        if (!visitedObjects.has(p.sourceFailoverConfig))
            aws_cdk_lib_IResolvable(p.sourceFailoverConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediaconnect_CfnFlow(p) {
}
function aws_cdk_lib_aws_mediaconnect_CfnFlow_EncryptionProperty(p) {
}
function aws_cdk_lib_aws_mediaconnect_CfnFlow_FailoverConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourcePriority))
            aws_cdk_lib_IResolvable(p.sourcePriority);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediaconnect_CfnFlow_SourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decryption))
            aws_cdk_lib_IResolvable(p.decryption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediaconnect_CfnFlow_SourcePriorityProperty(p) {
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowEntitlementProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_IResolvable(p.encryption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowEntitlement(p) {
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowEntitlement_EncryptionProperty(p) {
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowOutputProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_IResolvable(p.encryption);
        if (!visitedObjects.has(p.vpcInterfaceAttachment))
            aws_cdk_lib_IResolvable(p.vpcInterfaceAttachment);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowOutput(p) {
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowOutput_EncryptionProperty(p) {
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowOutput_VpcInterfaceAttachmentProperty(p) {
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decryption))
            aws_cdk_lib_IResolvable(p.decryption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowSource(p) {
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowSource_EncryptionProperty(p) {
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowVpcInterfaceProps(p) {
}
function aws_cdk_lib_aws_mediaconnect_CfnFlowVpcInterface(p) {
}
function aws_cdk_lib_aws_mediaconvert_CfnJobTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accelerationSettings))
            aws_cdk_lib_IResolvable(p.accelerationSettings);
        if (!visitedObjects.has(p.hopDestinations))
            aws_cdk_lib_IResolvable(p.hopDestinations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediaconvert_CfnJobTemplate(p) {
}
function aws_cdk_lib_aws_mediaconvert_CfnJobTemplate_AccelerationSettingsProperty(p) {
}
function aws_cdk_lib_aws_mediaconvert_CfnJobTemplate_HopDestinationProperty(p) {
}
function aws_cdk_lib_aws_mediaconvert_CfnPresetProps(p) {
}
function aws_cdk_lib_aws_mediaconvert_CfnPreset(p) {
}
function aws_cdk_lib_aws_mediaconvert_CfnQueueProps(p) {
}
function aws_cdk_lib_aws_mediaconvert_CfnQueue(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cdiInputSpecification))
            aws_cdk_lib_IResolvable(p.cdiInputSpecification);
        if (!visitedObjects.has(p.destinations))
            aws_cdk_lib_IResolvable(p.destinations);
        if (!visitedObjects.has(p.encoderSettings))
            aws_cdk_lib_IResolvable(p.encoderSettings);
        if (!visitedObjects.has(p.inputAttachments))
            aws_cdk_lib_IResolvable(p.inputAttachments);
        if (!visitedObjects.has(p.inputSpecification))
            aws_cdk_lib_IResolvable(p.inputSpecification);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_IResolvable(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_AacSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_Ac3SettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_AncillarySourceSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_ArchiveCdnSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.archiveS3Settings))
            aws_cdk_lib_IResolvable(p.archiveS3Settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_ArchiveContainerSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.m2TsSettings))
            aws_cdk_lib_IResolvable(p.m2TsSettings);
        if (!visitedObjects.has(p.rawSettings))
            aws_cdk_lib_IResolvable(p.rawSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_ArchiveGroupSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.archiveCdnSettings))
            aws_cdk_lib_IResolvable(p.archiveCdnSettings);
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_ArchiveOutputSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containerSettings))
            aws_cdk_lib_IResolvable(p.containerSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_ArchiveS3SettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_AribDestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_AribSourceSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioChannelMappingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputChannelLevels))
            aws_cdk_lib_IResolvable(p.inputChannelLevels);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioCodecSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aacSettings))
            aws_cdk_lib_IResolvable(p.aacSettings);
        if (!visitedObjects.has(p.ac3Settings))
            aws_cdk_lib_IResolvable(p.ac3Settings);
        if (!visitedObjects.has(p.eac3Settings))
            aws_cdk_lib_IResolvable(p.eac3Settings);
        if (!visitedObjects.has(p.mp2Settings))
            aws_cdk_lib_IResolvable(p.mp2Settings);
        if (!visitedObjects.has(p.passThroughSettings))
            aws_cdk_lib_IResolvable(p.passThroughSettings);
        if (!visitedObjects.has(p.wavSettings))
            aws_cdk_lib_IResolvable(p.wavSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioDescriptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.audioNormalizationSettings))
            aws_cdk_lib_IResolvable(p.audioNormalizationSettings);
        if (!visitedObjects.has(p.audioWatermarkingSettings))
            aws_cdk_lib_IResolvable(p.audioWatermarkingSettings);
        if (!visitedObjects.has(p.codecSettings))
            aws_cdk_lib_IResolvable(p.codecSettings);
        if (!visitedObjects.has(p.remixSettings))
            aws_cdk_lib_IResolvable(p.remixSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioHlsRenditionSelectionProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioLanguageSelectionProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioNormalizationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioOnlyHlsSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.audioOnlyImage))
            aws_cdk_lib_IResolvable(p.audioOnlyImage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioPidSelectionProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioSelectorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectorSettings))
            aws_cdk_lib_IResolvable(p.selectorSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioSelectorSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.audioHlsRenditionSelection))
            aws_cdk_lib_IResolvable(p.audioHlsRenditionSelection);
        if (!visitedObjects.has(p.audioLanguageSelection))
            aws_cdk_lib_IResolvable(p.audioLanguageSelection);
        if (!visitedObjects.has(p.audioPidSelection))
            aws_cdk_lib_IResolvable(p.audioPidSelection);
        if (!visitedObjects.has(p.audioTrackSelection))
            aws_cdk_lib_IResolvable(p.audioTrackSelection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioSilenceFailoverSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioTrackProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioTrackSelectionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tracks))
            aws_cdk_lib_IResolvable(p.tracks);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_AudioWatermarkSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nielsenWatermarksSettings))
            aws_cdk_lib_IResolvable(p.nielsenWatermarksSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_AutomaticInputFailoverSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.failoverConditions))
            aws_cdk_lib_IResolvable(p.failoverConditions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_AvailBlankingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.availBlankingImage))
            aws_cdk_lib_IResolvable(p.availBlankingImage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_AvailConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.availSettings))
            aws_cdk_lib_IResolvable(p.availSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_AvailSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scte35SpliceInsert))
            aws_cdk_lib_IResolvable(p.scte35SpliceInsert);
        if (!visitedObjects.has(p.scte35TimeSignalApos))
            aws_cdk_lib_IResolvable(p.scte35TimeSignalApos);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_BlackoutSlateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blackoutSlateImage))
            aws_cdk_lib_IResolvable(p.blackoutSlateImage);
        if (!visitedObjects.has(p.networkEndBlackoutImage))
            aws_cdk_lib_IResolvable(p.networkEndBlackoutImage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_BurnInDestinationSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.font))
            aws_cdk_lib_IResolvable(p.font);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_CaptionDescriptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationSettings))
            aws_cdk_lib_IResolvable(p.destinationSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_CaptionDestinationSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aribDestinationSettings))
            aws_cdk_lib_IResolvable(p.aribDestinationSettings);
        if (!visitedObjects.has(p.burnInDestinationSettings))
            aws_cdk_lib_IResolvable(p.burnInDestinationSettings);
        if (!visitedObjects.has(p.dvbSubDestinationSettings))
            aws_cdk_lib_IResolvable(p.dvbSubDestinationSettings);
        if (!visitedObjects.has(p.ebuTtDDestinationSettings))
            aws_cdk_lib_IResolvable(p.ebuTtDDestinationSettings);
        if (!visitedObjects.has(p.embeddedDestinationSettings))
            aws_cdk_lib_IResolvable(p.embeddedDestinationSettings);
        if (!visitedObjects.has(p.embeddedPlusScte20DestinationSettings))
            aws_cdk_lib_IResolvable(p.embeddedPlusScte20DestinationSettings);
        if (!visitedObjects.has(p.rtmpCaptionInfoDestinationSettings))
            aws_cdk_lib_IResolvable(p.rtmpCaptionInfoDestinationSettings);
        if (!visitedObjects.has(p.scte20PlusEmbeddedDestinationSettings))
            aws_cdk_lib_IResolvable(p.scte20PlusEmbeddedDestinationSettings);
        if (!visitedObjects.has(p.scte27DestinationSettings))
            aws_cdk_lib_IResolvable(p.scte27DestinationSettings);
        if (!visitedObjects.has(p.smpteTtDestinationSettings))
            aws_cdk_lib_IResolvable(p.smpteTtDestinationSettings);
        if (!visitedObjects.has(p.teletextDestinationSettings))
            aws_cdk_lib_IResolvable(p.teletextDestinationSettings);
        if (!visitedObjects.has(p.ttmlDestinationSettings))
            aws_cdk_lib_IResolvable(p.ttmlDestinationSettings);
        if (!visitedObjects.has(p.webvttDestinationSettings))
            aws_cdk_lib_IResolvable(p.webvttDestinationSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_CaptionLanguageMappingProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_CaptionRectangleProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_CaptionSelectorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectorSettings))
            aws_cdk_lib_IResolvable(p.selectorSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_CaptionSelectorSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ancillarySourceSettings))
            aws_cdk_lib_IResolvable(p.ancillarySourceSettings);
        if (!visitedObjects.has(p.aribSourceSettings))
            aws_cdk_lib_IResolvable(p.aribSourceSettings);
        if (!visitedObjects.has(p.dvbSubSourceSettings))
            aws_cdk_lib_IResolvable(p.dvbSubSourceSettings);
        if (!visitedObjects.has(p.embeddedSourceSettings))
            aws_cdk_lib_IResolvable(p.embeddedSourceSettings);
        if (!visitedObjects.has(p.scte20SourceSettings))
            aws_cdk_lib_IResolvable(p.scte20SourceSettings);
        if (!visitedObjects.has(p.scte27SourceSettings))
            aws_cdk_lib_IResolvable(p.scte27SourceSettings);
        if (!visitedObjects.has(p.teletextSourceSettings))
            aws_cdk_lib_IResolvable(p.teletextSourceSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_CdiInputSpecificationProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_ColorSpacePassthroughSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_DvbNitSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_DvbSdtSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_DvbSubDestinationSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.font))
            aws_cdk_lib_IResolvable(p.font);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_DvbSubSourceSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_DvbTdtSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_Eac3SettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_EbuTtDDestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_EmbeddedDestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_EmbeddedPlusScte20DestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_EmbeddedSourceSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_EncoderSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.audioDescriptions))
            aws_cdk_lib_IResolvable(p.audioDescriptions);
        if (!visitedObjects.has(p.availBlanking))
            aws_cdk_lib_IResolvable(p.availBlanking);
        if (!visitedObjects.has(p.availConfiguration))
            aws_cdk_lib_IResolvable(p.availConfiguration);
        if (!visitedObjects.has(p.blackoutSlate))
            aws_cdk_lib_IResolvable(p.blackoutSlate);
        if (!visitedObjects.has(p.captionDescriptions))
            aws_cdk_lib_IResolvable(p.captionDescriptions);
        if (!visitedObjects.has(p.featureActivations))
            aws_cdk_lib_IResolvable(p.featureActivations);
        if (!visitedObjects.has(p.globalConfiguration))
            aws_cdk_lib_IResolvable(p.globalConfiguration);
        if (!visitedObjects.has(p.motionGraphicsConfiguration))
            aws_cdk_lib_IResolvable(p.motionGraphicsConfiguration);
        if (!visitedObjects.has(p.nielsenConfiguration))
            aws_cdk_lib_IResolvable(p.nielsenConfiguration);
        if (!visitedObjects.has(p.outputGroups))
            aws_cdk_lib_IResolvable(p.outputGroups);
        if (!visitedObjects.has(p.timecodeConfig))
            aws_cdk_lib_IResolvable(p.timecodeConfig);
        if (!visitedObjects.has(p.videoDescriptions))
            aws_cdk_lib_IResolvable(p.videoDescriptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_FailoverConditionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.failoverConditionSettings))
            aws_cdk_lib_IResolvable(p.failoverConditionSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_FailoverConditionSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.audioSilenceSettings))
            aws_cdk_lib_IResolvable(p.audioSilenceSettings);
        if (!visitedObjects.has(p.inputLossSettings))
            aws_cdk_lib_IResolvable(p.inputLossSettings);
        if (!visitedObjects.has(p.videoBlackSettings))
            aws_cdk_lib_IResolvable(p.videoBlackSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_FeatureActivationsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_FecOutputSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_Fmp4HlsSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_FrameCaptureCdnSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.frameCaptureS3Settings))
            aws_cdk_lib_IResolvable(p.frameCaptureS3Settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_FrameCaptureGroupSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
        if (!visitedObjects.has(p.frameCaptureCdnSettings))
            aws_cdk_lib_IResolvable(p.frameCaptureCdnSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_FrameCaptureHlsSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_FrameCaptureOutputSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_FrameCaptureS3SettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_FrameCaptureSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_GlobalConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputLossBehavior))
            aws_cdk_lib_IResolvable(p.inputLossBehavior);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_H264ColorSpaceSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorSpacePassthroughSettings))
            aws_cdk_lib_IResolvable(p.colorSpacePassthroughSettings);
        if (!visitedObjects.has(p.rec601Settings))
            aws_cdk_lib_IResolvable(p.rec601Settings);
        if (!visitedObjects.has(p.rec709Settings))
            aws_cdk_lib_IResolvable(p.rec709Settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_H264FilterSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.temporalFilterSettings))
            aws_cdk_lib_IResolvable(p.temporalFilterSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_H264SettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorSpaceSettings))
            aws_cdk_lib_IResolvable(p.colorSpaceSettings);
        if (!visitedObjects.has(p.filterSettings))
            aws_cdk_lib_IResolvable(p.filterSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_H265ColorSpaceSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorSpacePassthroughSettings))
            aws_cdk_lib_IResolvable(p.colorSpacePassthroughSettings);
        if (!visitedObjects.has(p.hdr10Settings))
            aws_cdk_lib_IResolvable(p.hdr10Settings);
        if (!visitedObjects.has(p.rec601Settings))
            aws_cdk_lib_IResolvable(p.rec601Settings);
        if (!visitedObjects.has(p.rec709Settings))
            aws_cdk_lib_IResolvable(p.rec709Settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_H265FilterSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.temporalFilterSettings))
            aws_cdk_lib_IResolvable(p.temporalFilterSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_H265SettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorSpaceSettings))
            aws_cdk_lib_IResolvable(p.colorSpaceSettings);
        if (!visitedObjects.has(p.filterSettings))
            aws_cdk_lib_IResolvable(p.filterSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_Hdr10SettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_HlsAkamaiSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_HlsBasicPutSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_HlsCdnSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hlsAkamaiSettings))
            aws_cdk_lib_IResolvable(p.hlsAkamaiSettings);
        if (!visitedObjects.has(p.hlsBasicPutSettings))
            aws_cdk_lib_IResolvable(p.hlsBasicPutSettings);
        if (!visitedObjects.has(p.hlsMediaStoreSettings))
            aws_cdk_lib_IResolvable(p.hlsMediaStoreSettings);
        if (!visitedObjects.has(p.hlsS3Settings))
            aws_cdk_lib_IResolvable(p.hlsS3Settings);
        if (!visitedObjects.has(p.hlsWebdavSettings))
            aws_cdk_lib_IResolvable(p.hlsWebdavSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_HlsGroupSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.captionLanguageMappings))
            aws_cdk_lib_IResolvable(p.captionLanguageMappings);
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
        if (!visitedObjects.has(p.hlsCdnSettings))
            aws_cdk_lib_IResolvable(p.hlsCdnSettings);
        if (!visitedObjects.has(p.keyProviderSettings))
            aws_cdk_lib_IResolvable(p.keyProviderSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_HlsInputSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_HlsMediaStoreSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_HlsOutputSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hlsSettings))
            aws_cdk_lib_IResolvable(p.hlsSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_HlsS3SettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_HlsSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.audioOnlyHlsSettings))
            aws_cdk_lib_IResolvable(p.audioOnlyHlsSettings);
        if (!visitedObjects.has(p.fmp4HlsSettings))
            aws_cdk_lib_IResolvable(p.fmp4HlsSettings);
        if (!visitedObjects.has(p.frameCaptureHlsSettings))
            aws_cdk_lib_IResolvable(p.frameCaptureHlsSettings);
        if (!visitedObjects.has(p.standardHlsSettings))
            aws_cdk_lib_IResolvable(p.standardHlsSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_HlsWebdavSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_HtmlMotionGraphicsSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_InputAttachmentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.automaticInputFailoverSettings))
            aws_cdk_lib_IResolvable(p.automaticInputFailoverSettings);
        if (!visitedObjects.has(p.inputSettings))
            aws_cdk_lib_IResolvable(p.inputSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_InputChannelLevelProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_InputLocationProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_InputLossBehaviorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputLossImageSlate))
            aws_cdk_lib_IResolvable(p.inputLossImageSlate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_InputLossFailoverSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_InputSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.audioSelectors))
            aws_cdk_lib_IResolvable(p.audioSelectors);
        if (!visitedObjects.has(p.captionSelectors))
            aws_cdk_lib_IResolvable(p.captionSelectors);
        if (!visitedObjects.has(p.networkInputSettings))
            aws_cdk_lib_IResolvable(p.networkInputSettings);
        if (!visitedObjects.has(p.videoSelector))
            aws_cdk_lib_IResolvable(p.videoSelector);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_InputSpecificationProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_KeyProviderSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.staticKeySettings))
            aws_cdk_lib_IResolvable(p.staticKeySettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_M2tsSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dvbNitSettings))
            aws_cdk_lib_IResolvable(p.dvbNitSettings);
        if (!visitedObjects.has(p.dvbSdtSettings))
            aws_cdk_lib_IResolvable(p.dvbSdtSettings);
        if (!visitedObjects.has(p.dvbTdtSettings))
            aws_cdk_lib_IResolvable(p.dvbTdtSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_M3u8SettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_MediaPackageGroupSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_MediaPackageOutputDestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_MediaPackageOutputSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_MotionGraphicsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.motionGraphicsSettings))
            aws_cdk_lib_IResolvable(p.motionGraphicsSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_MotionGraphicsSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.htmlMotionGraphicsSettings))
            aws_cdk_lib_IResolvable(p.htmlMotionGraphicsSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_Mp2SettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_Mpeg2FilterSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.temporalFilterSettings))
            aws_cdk_lib_IResolvable(p.temporalFilterSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_Mpeg2SettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filterSettings))
            aws_cdk_lib_IResolvable(p.filterSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_MsSmoothGroupSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_MsSmoothOutputSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_MultiplexGroupSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_MultiplexOutputSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_MultiplexProgramChannelDestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_NetworkInputSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hlsInputSettings))
            aws_cdk_lib_IResolvable(p.hlsInputSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_NielsenCBETProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_NielsenConfigurationProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_NielsenNaesIiNwProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_NielsenWatermarksSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nielsenCbetSettings))
            aws_cdk_lib_IResolvable(p.nielsenCbetSettings);
        if (!visitedObjects.has(p.nielsenNaesIiNwSettings))
            aws_cdk_lib_IResolvable(p.nielsenNaesIiNwSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_OutputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.outputSettings))
            aws_cdk_lib_IResolvable(p.outputSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_OutputDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mediaPackageSettings))
            aws_cdk_lib_IResolvable(p.mediaPackageSettings);
        if (!visitedObjects.has(p.multiplexSettings))
            aws_cdk_lib_IResolvable(p.multiplexSettings);
        if (!visitedObjects.has(p.settings))
            aws_cdk_lib_IResolvable(p.settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_OutputDestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_OutputGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.outputGroupSettings))
            aws_cdk_lib_IResolvable(p.outputGroupSettings);
        if (!visitedObjects.has(p.outputs))
            aws_cdk_lib_IResolvable(p.outputs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_OutputGroupSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.archiveGroupSettings))
            aws_cdk_lib_IResolvable(p.archiveGroupSettings);
        if (!visitedObjects.has(p.frameCaptureGroupSettings))
            aws_cdk_lib_IResolvable(p.frameCaptureGroupSettings);
        if (!visitedObjects.has(p.hlsGroupSettings))
            aws_cdk_lib_IResolvable(p.hlsGroupSettings);
        if (!visitedObjects.has(p.mediaPackageGroupSettings))
            aws_cdk_lib_IResolvable(p.mediaPackageGroupSettings);
        if (!visitedObjects.has(p.msSmoothGroupSettings))
            aws_cdk_lib_IResolvable(p.msSmoothGroupSettings);
        if (!visitedObjects.has(p.multiplexGroupSettings))
            aws_cdk_lib_IResolvable(p.multiplexGroupSettings);
        if (!visitedObjects.has(p.rtmpGroupSettings))
            aws_cdk_lib_IResolvable(p.rtmpGroupSettings);
        if (!visitedObjects.has(p.udpGroupSettings))
            aws_cdk_lib_IResolvable(p.udpGroupSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_OutputLocationRefProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_OutputSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.archiveOutputSettings))
            aws_cdk_lib_IResolvable(p.archiveOutputSettings);
        if (!visitedObjects.has(p.frameCaptureOutputSettings))
            aws_cdk_lib_IResolvable(p.frameCaptureOutputSettings);
        if (!visitedObjects.has(p.hlsOutputSettings))
            aws_cdk_lib_IResolvable(p.hlsOutputSettings);
        if (!visitedObjects.has(p.mediaPackageOutputSettings))
            aws_cdk_lib_IResolvable(p.mediaPackageOutputSettings);
        if (!visitedObjects.has(p.msSmoothOutputSettings))
            aws_cdk_lib_IResolvable(p.msSmoothOutputSettings);
        if (!visitedObjects.has(p.multiplexOutputSettings))
            aws_cdk_lib_IResolvable(p.multiplexOutputSettings);
        if (!visitedObjects.has(p.rtmpOutputSettings))
            aws_cdk_lib_IResolvable(p.rtmpOutputSettings);
        if (!visitedObjects.has(p.udpOutputSettings))
            aws_cdk_lib_IResolvable(p.udpOutputSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_PassThroughSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_RawSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_Rec601SettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_Rec709SettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_RemixSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.channelMappings))
            aws_cdk_lib_IResolvable(p.channelMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_RtmpCaptionInfoDestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_RtmpGroupSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_RtmpOutputSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_Scte20PlusEmbeddedDestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_Scte20SourceSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_Scte27DestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_Scte27SourceSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_Scte35SpliceInsertProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_Scte35TimeSignalAposProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_SmpteTtDestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_StandardHlsSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.m3U8Settings))
            aws_cdk_lib_IResolvable(p.m3U8Settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_StaticKeySettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.keyProviderServer))
            aws_cdk_lib_IResolvable(p.keyProviderServer);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_TeletextDestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_TeletextSourceSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.outputRectangle))
            aws_cdk_lib_IResolvable(p.outputRectangle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_TemporalFilterSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_TimecodeConfigProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_TtmlDestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_UdpContainerSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.m2TsSettings))
            aws_cdk_lib_IResolvable(p.m2TsSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_UdpGroupSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_UdpOutputSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containerSettings))
            aws_cdk_lib_IResolvable(p.containerSettings);
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
        if (!visitedObjects.has(p.fecOutputSettings))
            aws_cdk_lib_IResolvable(p.fecOutputSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_VideoBlackFailoverSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_VideoCodecSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.frameCaptureSettings))
            aws_cdk_lib_IResolvable(p.frameCaptureSettings);
        if (!visitedObjects.has(p.h264Settings))
            aws_cdk_lib_IResolvable(p.h264Settings);
        if (!visitedObjects.has(p.h265Settings))
            aws_cdk_lib_IResolvable(p.h265Settings);
        if (!visitedObjects.has(p.mpeg2Settings))
            aws_cdk_lib_IResolvable(p.mpeg2Settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_VideoDescriptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.codecSettings))
            aws_cdk_lib_IResolvable(p.codecSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_VideoSelectorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorSpaceSettings))
            aws_cdk_lib_IResolvable(p.colorSpaceSettings);
        if (!visitedObjects.has(p.selectorSettings))
            aws_cdk_lib_IResolvable(p.selectorSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_VideoSelectorColorSpaceSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hdr10Settings))
            aws_cdk_lib_IResolvable(p.hdr10Settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_VideoSelectorPidProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_VideoSelectorProgramIdProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_VideoSelectorSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.videoSelectorPid))
            aws_cdk_lib_IResolvable(p.videoSelectorPid);
        if (!visitedObjects.has(p.videoSelectorProgramId))
            aws_cdk_lib_IResolvable(p.videoSelectorProgramId);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnChannel_VpcOutputSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_WavSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnChannel_WebvttDestinationSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnInputProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinations))
            aws_cdk_lib_IResolvable(p.destinations);
        if (!visitedObjects.has(p.inputDevices))
            aws_cdk_lib_IResolvable(p.inputDevices);
        if (!visitedObjects.has(p.mediaConnectFlows))
            aws_cdk_lib_IResolvable(p.mediaConnectFlows);
        if (!visitedObjects.has(p.sources))
            aws_cdk_lib_IResolvable(p.sources);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_IResolvable(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnInput(p) {
}
function aws_cdk_lib_aws_medialive_CfnInput_InputDestinationRequestProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnInput_InputDeviceRequestProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnInput_InputDeviceSettingsProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnInput_InputSourceRequestProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnInput_InputVpcRequestProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnInput_MediaConnectFlowRequestProperty(p) {
}
function aws_cdk_lib_aws_medialive_CfnInputSecurityGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.whitelistRules))
            aws_cdk_lib_IResolvable(p.whitelistRules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_medialive_CfnInputSecurityGroup(p) {
}
function aws_cdk_lib_aws_medialive_CfnInputSecurityGroup_InputWhitelistRuleCidrProperty(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnAssetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.egressEndpoints))
            aws_cdk_lib_IResolvable(p.egressEndpoints);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnAsset(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnAsset_EgressEndpointProperty(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnChannelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.egressAccessLogs))
            aws_cdk_lib_IResolvable(p.egressAccessLogs);
        if (!visitedObjects.has(p.hlsIngest))
            aws_cdk_lib_IResolvable(p.hlsIngest);
        if (!visitedObjects.has(p.ingressAccessLogs))
            aws_cdk_lib_IResolvable(p.ingressAccessLogs);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnChannel(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnChannel_HlsIngestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ingestEndpoints))
            aws_cdk_lib_IResolvable(p.ingestEndpoints);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnChannel_IngestEndpointProperty(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnChannel_LogConfigurationProperty(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authorization))
            aws_cdk_lib_IResolvable(p.authorization);
        if (!visitedObjects.has(p.cmafPackage))
            aws_cdk_lib_IResolvable(p.cmafPackage);
        if (!visitedObjects.has(p.dashPackage))
            aws_cdk_lib_IResolvable(p.dashPackage);
        if (!visitedObjects.has(p.hlsPackage))
            aws_cdk_lib_IResolvable(p.hlsPackage);
        if (!visitedObjects.has(p.mssPackage))
            aws_cdk_lib_IResolvable(p.mssPackage);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_AuthorizationProperty(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_CmafEncryptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spekeKeyProvider))
            aws_cdk_lib_IResolvable(p.spekeKeyProvider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_CmafPackageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_IResolvable(p.encryption);
        if (!visitedObjects.has(p.hlsManifests))
            aws_cdk_lib_IResolvable(p.hlsManifests);
        if (!visitedObjects.has(p.streamSelection))
            aws_cdk_lib_IResolvable(p.streamSelection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_DashEncryptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spekeKeyProvider))
            aws_cdk_lib_IResolvable(p.spekeKeyProvider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_DashPackageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_IResolvable(p.encryption);
        if (!visitedObjects.has(p.streamSelection))
            aws_cdk_lib_IResolvable(p.streamSelection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_EncryptionContractConfigurationProperty(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_HlsEncryptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spekeKeyProvider))
            aws_cdk_lib_IResolvable(p.spekeKeyProvider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_HlsManifestProperty(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_HlsPackageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_IResolvable(p.encryption);
        if (!visitedObjects.has(p.streamSelection))
            aws_cdk_lib_IResolvable(p.streamSelection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_MssEncryptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spekeKeyProvider))
            aws_cdk_lib_IResolvable(p.spekeKeyProvider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_MssPackageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_IResolvable(p.encryption);
        if (!visitedObjects.has(p.streamSelection))
            aws_cdk_lib_IResolvable(p.streamSelection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_SpekeKeyProviderProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionContractConfiguration))
            aws_cdk_lib_IResolvable(p.encryptionContractConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_StreamSelectionProperty(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cmafPackage))
            aws_cdk_lib_IResolvable(p.cmafPackage);
        if (!visitedObjects.has(p.dashPackage))
            aws_cdk_lib_IResolvable(p.dashPackage);
        if (!visitedObjects.has(p.hlsPackage))
            aws_cdk_lib_IResolvable(p.hlsPackage);
        if (!visitedObjects.has(p.mssPackage))
            aws_cdk_lib_IResolvable(p.mssPackage);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_CmafEncryptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spekeKeyProvider))
            aws_cdk_lib_IResolvable(p.spekeKeyProvider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_CmafPackageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hlsManifests))
            aws_cdk_lib_IResolvable(p.hlsManifests);
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_IResolvable(p.encryption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_DashEncryptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spekeKeyProvider))
            aws_cdk_lib_IResolvable(p.spekeKeyProvider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_DashManifestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.streamSelection))
            aws_cdk_lib_IResolvable(p.streamSelection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_DashPackageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dashManifests))
            aws_cdk_lib_IResolvable(p.dashManifests);
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_IResolvable(p.encryption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_EncryptionContractConfigurationProperty(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_HlsEncryptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spekeKeyProvider))
            aws_cdk_lib_IResolvable(p.spekeKeyProvider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_HlsManifestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.streamSelection))
            aws_cdk_lib_IResolvable(p.streamSelection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_HlsPackageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hlsManifests))
            aws_cdk_lib_IResolvable(p.hlsManifests);
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_IResolvable(p.encryption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_MssEncryptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spekeKeyProvider))
            aws_cdk_lib_IResolvable(p.spekeKeyProvider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_MssManifestProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.streamSelection))
            aws_cdk_lib_IResolvable(p.streamSelection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_MssPackageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mssManifests))
            aws_cdk_lib_IResolvable(p.mssManifests);
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_IResolvable(p.encryption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_SpekeKeyProviderProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionContractConfiguration))
            aws_cdk_lib_IResolvable(p.encryptionContractConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_StreamSelectionProperty(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authorization))
            aws_cdk_lib_IResolvable(p.authorization);
        if (!visitedObjects.has(p.egressAccessLogs))
            aws_cdk_lib_IResolvable(p.egressAccessLogs);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingGroup(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingGroup_AuthorizationProperty(p) {
}
function aws_cdk_lib_aws_mediapackage_CfnPackagingGroup_LogConfigurationProperty(p) {
}
function aws_cdk_lib_aws_mediastore_CfnContainerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.corsPolicy))
            aws_cdk_lib_IResolvable(p.corsPolicy);
        if (!visitedObjects.has(p.metricPolicy))
            aws_cdk_lib_IResolvable(p.metricPolicy);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediastore_CfnContainer(p) {
}
function aws_cdk_lib_aws_mediastore_CfnContainer_CorsRuleProperty(p) {
}
function aws_cdk_lib_aws_mediastore_CfnContainer_MetricPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricPolicyRules))
            aws_cdk_lib_IResolvable(p.metricPolicyRules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediastore_CfnContainer_MetricPolicyRuleProperty(p) {
}
function aws_cdk_lib_aws_mediatailor_CfnPlaybackConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.availSuppression))
            aws_cdk_lib_IResolvable(p.availSuppression);
        if (!visitedObjects.has(p.bumper))
            aws_cdk_lib_IResolvable(p.bumper);
        if (!visitedObjects.has(p.cdnConfiguration))
            aws_cdk_lib_IResolvable(p.cdnConfiguration);
        if (!visitedObjects.has(p.configurationAliases))
            aws_cdk_lib_IResolvable(p.configurationAliases);
        if (!visitedObjects.has(p.dashConfiguration))
            aws_cdk_lib_IResolvable(p.dashConfiguration);
        if (!visitedObjects.has(p.hlsConfiguration))
            aws_cdk_lib_IResolvable(p.hlsConfiguration);
        if (!visitedObjects.has(p.livePreRollConfiguration))
            aws_cdk_lib_IResolvable(p.livePreRollConfiguration);
        if (!visitedObjects.has(p.manifestProcessingRules))
            aws_cdk_lib_IResolvable(p.manifestProcessingRules);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration(p) {
}
function aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_AdMarkerPassthroughProperty(p) {
}
function aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_AvailSuppressionProperty(p) {
}
function aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_BumperProperty(p) {
}
function aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_CdnConfigurationProperty(p) {
}
function aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_DashConfigurationProperty(p) {
}
function aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_HlsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_LivePreRollConfigurationProperty(p) {
}
function aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_ManifestProcessingRulesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.adMarkerPassthrough))
            aws_cdk_lib_IResolvable(p.adMarkerPassthrough);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_memorydb_CfnACLProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_memorydb_CfnACL(p) {
}
function aws_cdk_lib_aws_memorydb_CfnClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterEndpoint))
            aws_cdk_lib_IResolvable(p.clusterEndpoint);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_memorydb_CfnCluster(p) {
}
function aws_cdk_lib_aws_memorydb_CfnCluster_EndpointProperty(p) {
}
function aws_cdk_lib_aws_memorydb_CfnParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_memorydb_CfnParameterGroup(p) {
}
function aws_cdk_lib_aws_memorydb_CfnSubnetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_memorydb_CfnSubnetGroup(p) {
}
function aws_cdk_lib_aws_memorydb_CfnUserProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_memorydb_CfnUser(p) {
}
function aws_cdk_lib_aws_memorydb_CfnUser_AuthenticationModeProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnBatchScramSecretProps(p) {
}
function aws_cdk_lib_aws_msk_CfnBatchScramSecret(p) {
}
function aws_cdk_lib_aws_msk_CfnClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.brokerNodeGroupInfo))
            aws_cdk_lib_IResolvable(p.brokerNodeGroupInfo);
        if (!visitedObjects.has(p.clientAuthentication))
            aws_cdk_lib_IResolvable(p.clientAuthentication);
        if (!visitedObjects.has(p.configurationInfo))
            aws_cdk_lib_IResolvable(p.configurationInfo);
        if (!visitedObjects.has(p.encryptionInfo))
            aws_cdk_lib_IResolvable(p.encryptionInfo);
        if (!visitedObjects.has(p.loggingInfo))
            aws_cdk_lib_IResolvable(p.loggingInfo);
        if (!visitedObjects.has(p.openMonitoring))
            aws_cdk_lib_IResolvable(p.openMonitoring);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_BrokerLogsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchLogs))
            aws_cdk_lib_IResolvable(p.cloudWatchLogs);
        if (!visitedObjects.has(p.firehose))
            aws_cdk_lib_IResolvable(p.firehose);
        if (!visitedObjects.has(p.s3))
            aws_cdk_lib_IResolvable(p.s3);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_BrokerNodeGroupInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectivityInfo))
            aws_cdk_lib_IResolvable(p.connectivityInfo);
        if (!visitedObjects.has(p.storageInfo))
            aws_cdk_lib_IResolvable(p.storageInfo);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_ClientAuthenticationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sasl))
            aws_cdk_lib_IResolvable(p.sasl);
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_IResolvable(p.tls);
        if (!visitedObjects.has(p.unauthenticated))
            aws_cdk_lib_IResolvable(p.unauthenticated);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_CloudWatchLogsProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_ConfigurationInfoProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_ConnectivityInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.publicAccess))
            aws_cdk_lib_IResolvable(p.publicAccess);
        if (!visitedObjects.has(p.vpcConnectivity))
            aws_cdk_lib_IResolvable(p.vpcConnectivity);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_EBSStorageInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.provisionedThroughput))
            aws_cdk_lib_IResolvable(p.provisionedThroughput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_EncryptionAtRestProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_EncryptionInTransitProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_EncryptionInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionAtRest))
            aws_cdk_lib_IResolvable(p.encryptionAtRest);
        if (!visitedObjects.has(p.encryptionInTransit))
            aws_cdk_lib_IResolvable(p.encryptionInTransit);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_FirehoseProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_IamProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_JmxExporterProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_LoggingInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.brokerLogs))
            aws_cdk_lib_IResolvable(p.brokerLogs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_NodeExporterProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_OpenMonitoringProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.prometheus))
            aws_cdk_lib_IResolvable(p.prometheus);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_PrometheusProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jmxExporter))
            aws_cdk_lib_IResolvable(p.jmxExporter);
        if (!visitedObjects.has(p.nodeExporter))
            aws_cdk_lib_IResolvable(p.nodeExporter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_ProvisionedThroughputProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_PublicAccessProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_S3Property(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_SaslProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.iam))
            aws_cdk_lib_IResolvable(p.iam);
        if (!visitedObjects.has(p.scram))
            aws_cdk_lib_IResolvable(p.scram);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_ScramProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_StorageInfoProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ebsStorageInfo))
            aws_cdk_lib_IResolvable(p.ebsStorageInfo);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_TlsProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_UnauthenticatedProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_VpcConnectivityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientAuthentication))
            aws_cdk_lib_IResolvable(p.clientAuthentication);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_VpcConnectivityClientAuthenticationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sasl))
            aws_cdk_lib_IResolvable(p.sasl);
        if (!visitedObjects.has(p.tls))
            aws_cdk_lib_IResolvable(p.tls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_VpcConnectivityIamProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_VpcConnectivitySaslProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.iam))
            aws_cdk_lib_IResolvable(p.iam);
        if (!visitedObjects.has(p.scram))
            aws_cdk_lib_IResolvable(p.scram);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnCluster_VpcConnectivityScramProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnCluster_VpcConnectivityTlsProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnConfigurationProps(p) {
}
function aws_cdk_lib_aws_msk_CfnConfiguration(p) {
}
function aws_cdk_lib_aws_msk_CfnServerlessClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clientAuthentication))
            aws_cdk_lib_IResolvable(p.clientAuthentication);
        if (!visitedObjects.has(p.vpcConfigs))
            aws_cdk_lib_IResolvable(p.vpcConfigs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnServerlessCluster(p) {
}
function aws_cdk_lib_aws_msk_CfnServerlessCluster_ClientAuthenticationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sasl))
            aws_cdk_lib_IResolvable(p.sasl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnServerlessCluster_IamProperty(p) {
}
function aws_cdk_lib_aws_msk_CfnServerlessCluster_SaslProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.iam))
            aws_cdk_lib_IResolvable(p.iam);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_msk_CfnServerlessCluster_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_mwaa_CfnEnvironmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loggingConfiguration))
            aws_cdk_lib_IResolvable(p.loggingConfiguration);
        if (!visitedObjects.has(p.networkConfiguration))
            aws_cdk_lib_IResolvable(p.networkConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mwaa_CfnEnvironment(p) {
}
function aws_cdk_lib_aws_mwaa_CfnEnvironment_LoggingConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dagProcessingLogs))
            aws_cdk_lib_IResolvable(p.dagProcessingLogs);
        if (!visitedObjects.has(p.schedulerLogs))
            aws_cdk_lib_IResolvable(p.schedulerLogs);
        if (!visitedObjects.has(p.taskLogs))
            aws_cdk_lib_IResolvable(p.taskLogs);
        if (!visitedObjects.has(p.webserverLogs))
            aws_cdk_lib_IResolvable(p.webserverLogs);
        if (!visitedObjects.has(p.workerLogs))
            aws_cdk_lib_IResolvable(p.workerLogs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_mwaa_CfnEnvironment_ModuleLoggingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_mwaa_CfnEnvironment_NetworkConfigurationProperty(p) {
}
function aws_cdk_lib_aws_neptune_CfnDBClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.associatedRoles))
            aws_cdk_lib_IResolvable(p.associatedRoles);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_neptune_CfnDBCluster(p) {
}
function aws_cdk_lib_aws_neptune_CfnDBCluster_DBClusterRoleProperty(p) {
}
function aws_cdk_lib_aws_neptune_CfnDBClusterParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_neptune_CfnDBClusterParameterGroup(p) {
}
function aws_cdk_lib_aws_neptune_CfnDBInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_neptune_CfnDBInstance(p) {
}
function aws_cdk_lib_aws_neptune_CfnDBParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_neptune_CfnDBParameterGroup(p) {
}
function aws_cdk_lib_aws_neptune_CfnDBSubnetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_neptune_CfnDBSubnetGroup(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewallProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.subnetMappings))
            aws_cdk_lib_IResolvable(p.subnetMappings);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewall(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewall_SubnetMappingProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.firewallPolicy))
            aws_cdk_lib_IResolvable(p.firewallPolicy);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_ActionDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.publishMetricAction))
            aws_cdk_lib_IResolvable(p.publishMetricAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_CustomActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actionDefinition))
            aws_cdk_lib_IResolvable(p.actionDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_DimensionProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_FirewallPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.statefulEngineOptions))
            aws_cdk_lib_IResolvable(p.statefulEngineOptions);
        if (!visitedObjects.has(p.statefulRuleGroupReferences))
            aws_cdk_lib_IResolvable(p.statefulRuleGroupReferences);
        if (!visitedObjects.has(p.statelessCustomActions))
            aws_cdk_lib_IResolvable(p.statelessCustomActions);
        if (!visitedObjects.has(p.statelessRuleGroupReferences))
            aws_cdk_lib_IResolvable(p.statelessRuleGroupReferences);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_PublishMetricActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_StatefulEngineOptionsProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_StatefulRuleGroupOverrideProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_StatefulRuleGroupReferenceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.override))
            aws_cdk_lib_IResolvable(p.override);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_StatelessRuleGroupReferenceProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnLoggingConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loggingConfiguration))
            aws_cdk_lib_IResolvable(p.loggingConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnLoggingConfiguration(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnLoggingConfiguration_LogDestinationConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logDestination))
            aws_cdk_lib_IResolvable(p.logDestination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnLoggingConfiguration_LoggingConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logDestinationConfigs))
            aws_cdk_lib_IResolvable(p.logDestinationConfigs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ruleGroup))
            aws_cdk_lib_IResolvable(p.ruleGroup);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_ActionDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.publishMetricAction))
            aws_cdk_lib_IResolvable(p.publishMetricAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_AddressProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_CustomActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actionDefinition))
            aws_cdk_lib_IResolvable(p.actionDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_DimensionProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_HeaderProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_IPSetProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_IPSetReferenceProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_MatchAttributesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationPorts))
            aws_cdk_lib_IResolvable(p.destinationPorts);
        if (!visitedObjects.has(p.destinations))
            aws_cdk_lib_IResolvable(p.destinations);
        if (!visitedObjects.has(p.sourcePorts))
            aws_cdk_lib_IResolvable(p.sourcePorts);
        if (!visitedObjects.has(p.sources))
            aws_cdk_lib_IResolvable(p.sources);
        if (!visitedObjects.has(p.tcpFlags))
            aws_cdk_lib_IResolvable(p.tcpFlags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_PortRangeProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_PortSetProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_PublishMetricActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_ReferenceSetsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipSetReferences))
            aws_cdk_lib_IResolvable(p.ipSetReferences);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_RuleDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matchAttributes))
            aws_cdk_lib_IResolvable(p.matchAttributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_RuleGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rulesSource))
            aws_cdk_lib_IResolvable(p.rulesSource);
        if (!visitedObjects.has(p.referenceSets))
            aws_cdk_lib_IResolvable(p.referenceSets);
        if (!visitedObjects.has(p.ruleVariables))
            aws_cdk_lib_IResolvable(p.ruleVariables);
        if (!visitedObjects.has(p.statefulRuleOptions))
            aws_cdk_lib_IResolvable(p.statefulRuleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_RuleOptionProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_RuleVariablesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipSets))
            aws_cdk_lib_IResolvable(p.ipSets);
        if (!visitedObjects.has(p.portSets))
            aws_cdk_lib_IResolvable(p.portSets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_RulesSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rulesSourceList))
            aws_cdk_lib_IResolvable(p.rulesSourceList);
        if (!visitedObjects.has(p.statefulRules))
            aws_cdk_lib_IResolvable(p.statefulRules);
        if (!visitedObjects.has(p.statelessRulesAndCustomActions))
            aws_cdk_lib_IResolvable(p.statelessRulesAndCustomActions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_RulesSourceListProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_StatefulRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.header))
            aws_cdk_lib_IResolvable(p.header);
        if (!visitedObjects.has(p.ruleOptions))
            aws_cdk_lib_IResolvable(p.ruleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_StatefulRuleOptionsProperty(p) {
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_StatelessRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ruleDefinition))
            aws_cdk_lib_IResolvable(p.ruleDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_StatelessRulesAndCustomActionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.statelessRules))
            aws_cdk_lib_IResolvable(p.statelessRules);
        if (!visitedObjects.has(p.customActions))
            aws_cdk_lib_IResolvable(p.customActions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_TCPFlagFieldProperty(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnConnectAttachmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_IResolvable(p.options);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnConnectAttachment(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnConnectAttachment_ConnectAttachmentOptionsProperty(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnConnectAttachment_ProposedSegmentChangeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnConnectPeerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bgpOptions))
            aws_cdk_lib_IResolvable(p.bgpOptions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnConnectPeer(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnConnectPeer_BgpOptionsProperty(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnConnectPeer_ConnectPeerBgpConfigurationProperty(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnConnectPeer_ConnectPeerConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bgpConfigurations))
            aws_cdk_lib_IResolvable(p.bgpConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnCoreNetworkProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnCoreNetwork(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnCoreNetwork_CoreNetworkEdgeProperty(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnCoreNetwork_CoreNetworkSegmentProperty(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnCustomerGatewayAssociationProps(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnCustomerGatewayAssociation(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnDeviceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.location))
            aws_cdk_lib_IResolvable(p.location);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnDevice(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnDevice_LocationProperty(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnGlobalNetworkProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnGlobalNetwork(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnLinkProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bandwidth))
            aws_cdk_lib_IResolvable(p.bandwidth);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnLink(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnLink_BandwidthProperty(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnLinkAssociationProps(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnLinkAssociation(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnSiteProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.location))
            aws_cdk_lib_IResolvable(p.location);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnSite(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnSite_LocationProperty(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnSiteToSiteVpnAttachmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnSiteToSiteVpnAttachment(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnSiteToSiteVpnAttachment_ProposedSegmentChangeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnTransitGatewayPeeringProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnTransitGatewayPeering(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRegistrationProps(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRegistration(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRouteTableAttachmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.proposedSegmentChange))
            aws_cdk_lib_IResolvable(p.proposedSegmentChange);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRouteTableAttachment(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRouteTableAttachment_ProposedSegmentChangeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnVpcAttachmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.options))
            aws_cdk_lib_IResolvable(p.options);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnVpcAttachment(p) {
}
function aws_cdk_lib_aws_networkmanager_CfnVpcAttachment_ProposedSegmentChangeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_networkmanager_CfnVpcAttachment_VpcOptionsProperty(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnLaunchProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.streamConfiguration))
            aws_cdk_lib_IResolvable(p.streamConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_nimblestudio_CfnLaunchProfile(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnLaunchProfile_StreamConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sessionBackup))
            aws_cdk_lib_IResolvable(p.sessionBackup);
        if (!visitedObjects.has(p.sessionStorage))
            aws_cdk_lib_IResolvable(p.sessionStorage);
        if (!visitedObjects.has(p.volumeConfiguration))
            aws_cdk_lib_IResolvable(p.volumeConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_nimblestudio_CfnLaunchProfile_StreamConfigurationSessionBackupProperty(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnLaunchProfile_StreamConfigurationSessionStorageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.root))
            aws_cdk_lib_IResolvable(p.root);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_nimblestudio_CfnLaunchProfile_StreamingSessionStorageRootProperty(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnLaunchProfile_VolumeConfigurationProperty(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnStreamingImageProps(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnStreamingImage(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnStreamingImage_StreamingImageEncryptionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnStudioProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.studioEncryptionConfiguration))
            aws_cdk_lib_IResolvable(p.studioEncryptionConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_nimblestudio_CfnStudio(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnStudio_StudioEncryptionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnStudioComponentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
        if (!visitedObjects.has(p.initializationScripts))
            aws_cdk_lib_IResolvable(p.initializationScripts);
        if (!visitedObjects.has(p.scriptParameters))
            aws_cdk_lib_IResolvable(p.scriptParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_nimblestudio_CfnStudioComponent(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_ActiveDirectoryComputerAttributeProperty(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_ActiveDirectoryConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.computerAttributes))
            aws_cdk_lib_IResolvable(p.computerAttributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_ComputeFarmConfigurationProperty(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_LicenseServiceConfigurationProperty(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_ScriptParameterKeyValueProperty(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_SharedFileSystemConfigurationProperty(p) {
}
function aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_StudioComponentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.activeDirectoryConfiguration))
            aws_cdk_lib_IResolvable(p.activeDirectoryConfiguration);
        if (!visitedObjects.has(p.computeFarmConfiguration))
            aws_cdk_lib_IResolvable(p.computeFarmConfiguration);
        if (!visitedObjects.has(p.licenseServiceConfiguration))
            aws_cdk_lib_IResolvable(p.licenseServiceConfiguration);
        if (!visitedObjects.has(p.sharedFileSystemConfiguration))
            aws_cdk_lib_IResolvable(p.sharedFileSystemConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_StudioComponentInitializationScriptProperty(p) {
}
function aws_cdk_lib_aws_oam_CfnLinkProps(p) {
}
function aws_cdk_lib_aws_oam_CfnLink(p) {
}
function aws_cdk_lib_aws_oam_CfnSinkProps(p) {
}
function aws_cdk_lib_aws_oam_CfnSink(p) {
}
function aws_cdk_lib_aws_omics_CfnAnnotationStoreProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.reference))
            aws_cdk_lib_IResolvable(p.reference);
        if (!visitedObjects.has(p.sseConfig))
            aws_cdk_lib_IResolvable(p.sseConfig);
        if (!visitedObjects.has(p.storeOptions))
            aws_cdk_lib_IResolvable(p.storeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_omics_CfnAnnotationStore(p) {
}
function aws_cdk_lib_aws_omics_CfnAnnotationStore_ReferenceItemProperty(p) {
}
function aws_cdk_lib_aws_omics_CfnAnnotationStore_SseConfigProperty(p) {
}
function aws_cdk_lib_aws_omics_CfnAnnotationStore_StoreOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tsvStoreOptions))
            aws_cdk_lib_IResolvable(p.tsvStoreOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_omics_CfnAnnotationStore_TsvStoreOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatToHeader))
            aws_cdk_lib_IResolvable(p.formatToHeader);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_omics_CfnReferenceStoreProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sseConfig))
            aws_cdk_lib_IResolvable(p.sseConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_omics_CfnReferenceStore(p) {
}
function aws_cdk_lib_aws_omics_CfnReferenceStore_SseConfigProperty(p) {
}
function aws_cdk_lib_aws_omics_CfnRunGroupProps(p) {
}
function aws_cdk_lib_aws_omics_CfnRunGroup(p) {
}
function aws_cdk_lib_aws_omics_CfnSequenceStoreProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sseConfig))
            aws_cdk_lib_IResolvable(p.sseConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_omics_CfnSequenceStore(p) {
}
function aws_cdk_lib_aws_omics_CfnSequenceStore_SseConfigProperty(p) {
}
function aws_cdk_lib_aws_omics_CfnVariantStoreProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.reference))
            aws_cdk_lib_IResolvable(p.reference);
        if (!visitedObjects.has(p.sseConfig))
            aws_cdk_lib_IResolvable(p.sseConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_omics_CfnVariantStore(p) {
}
function aws_cdk_lib_aws_omics_CfnVariantStore_ReferenceItemProperty(p) {
}
function aws_cdk_lib_aws_omics_CfnVariantStore_SseConfigProperty(p) {
}
function aws_cdk_lib_aws_omics_CfnWorkflowProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameterTemplate))
            aws_cdk_lib_IResolvable(p.parameterTemplate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_omics_CfnWorkflow(p) {
}
function aws_cdk_lib_aws_omics_CfnWorkflow_WorkflowParameterProperty(p) {
}
function aws_cdk_lib_aws_opensearchserverless_CfnAccessPolicyProps(p) {
}
function aws_cdk_lib_aws_opensearchserverless_CfnAccessPolicy(p) {
}
function aws_cdk_lib_aws_opensearchserverless_CfnCollectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchserverless_CfnCollection(p) {
}
function aws_cdk_lib_aws_opensearchserverless_CfnSecurityConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.samlOptions))
            aws_cdk_lib_IResolvable(p.samlOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchserverless_CfnSecurityConfig(p) {
}
function aws_cdk_lib_aws_opensearchserverless_CfnSecurityConfig_SamlConfigOptionsProperty(p) {
}
function aws_cdk_lib_aws_opensearchserverless_CfnSecurityPolicyProps(p) {
}
function aws_cdk_lib_aws_opensearchserverless_CfnSecurityPolicy(p) {
}
function aws_cdk_lib_aws_opensearchserverless_CfnVpcEndpointProps(p) {
}
function aws_cdk_lib_aws_opensearchserverless_CfnVpcEndpoint(p) {
}
function aws_cdk_lib_aws_opensearchservice_CapacityConfig(p) {
}
function aws_cdk_lib_aws_opensearchservice_ZoneAwarenessConfig(p) {
}
function aws_cdk_lib_aws_opensearchservice_EbsOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeType))
            aws_cdk_lib_aws_ec2_EbsDeviceVolumeType(p.volumeType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_LoggingOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.appLogGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.appLogGroup);
        if (!visitedObjects.has(p.auditLogGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.auditLogGroup);
        if (!visitedObjects.has(p.slowIndexLogGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.slowIndexLogGroup);
        if (!visitedObjects.has(p.slowSearchLogGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.slowSearchLogGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_EncryptionAtRestOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kmsKey))
            aws_cdk_lib_aws_kms_IKey(p.kmsKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_CognitoOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_TLSSecurityPolicy(p) {
}
function aws_cdk_lib_aws_opensearchservice_AdvancedSecurityOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.masterUserPassword))
            aws_cdk_lib_SecretValue(p.masterUserPassword);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_CustomEndpointOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_certificatemanager_ICertificate(p.certificate);
        if (!visitedObjects.has(p.hostedZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.hostedZone);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_DomainProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_opensearchservice_EngineVersion(p.version);
        if (p.accessPolicies != null)
            for (const o of p.accessPolicies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (!visitedObjects.has(p.capacity))
            aws_cdk_lib_aws_opensearchservice_CapacityConfig(p.capacity);
        if (!visitedObjects.has(p.cognitoDashboardsAuth))
            aws_cdk_lib_aws_opensearchservice_CognitoOptions(p.cognitoDashboardsAuth);
        if (!visitedObjects.has(p.customEndpoint))
            aws_cdk_lib_aws_opensearchservice_CustomEndpointOptions(p.customEndpoint);
        if (!visitedObjects.has(p.ebs))
            aws_cdk_lib_aws_opensearchservice_EbsOptions(p.ebs);
        if (!visitedObjects.has(p.encryptionAtRest))
            aws_cdk_lib_aws_opensearchservice_EncryptionAtRestOptions(p.encryptionAtRest);
        if (!visitedObjects.has(p.fineGrainedAccessControl))
            aws_cdk_lib_aws_opensearchservice_AdvancedSecurityOptions(p.fineGrainedAccessControl);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_aws_opensearchservice_LoggingOptions(p.logging);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.tlsSecurityPolicy))
            aws_cdk_lib_aws_opensearchservice_TLSSecurityPolicy(p.tlsSecurityPolicy);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (p.vpcSubnets != null)
            for (const o of p.vpcSubnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_SubnetSelection(o);
        if (!visitedObjects.has(p.zoneAwareness))
            aws_cdk_lib_aws_opensearchservice_ZoneAwarenessConfig(p.zoneAwareness);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_IDomain(p) {
}
function aws_cdk_lib_aws_opensearchservice_DomainAttributes(p) {
}
function aws_cdk_lib_aws_opensearchservice_Domain(p) {
}
function aws_cdk_lib_aws_opensearchservice_EngineVersion(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomainProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.advancedOptions))
            aws_cdk_lib_IResolvable(p.advancedOptions);
        if (!visitedObjects.has(p.advancedSecurityOptions))
            aws_cdk_lib_IResolvable(p.advancedSecurityOptions);
        if (!visitedObjects.has(p.clusterConfig))
            aws_cdk_lib_IResolvable(p.clusterConfig);
        if (!visitedObjects.has(p.cognitoOptions))
            aws_cdk_lib_IResolvable(p.cognitoOptions);
        if (!visitedObjects.has(p.domainEndpointOptions))
            aws_cdk_lib_IResolvable(p.domainEndpointOptions);
        if (!visitedObjects.has(p.ebsOptions))
            aws_cdk_lib_IResolvable(p.ebsOptions);
        if (!visitedObjects.has(p.encryptionAtRestOptions))
            aws_cdk_lib_IResolvable(p.encryptionAtRestOptions);
        if (!visitedObjects.has(p.logPublishingOptions))
            aws_cdk_lib_IResolvable(p.logPublishingOptions);
        if (!visitedObjects.has(p.nodeToNodeEncryptionOptions))
            aws_cdk_lib_IResolvable(p.nodeToNodeEncryptionOptions);
        if (!visitedObjects.has(p.offPeakWindowOptions))
            aws_cdk_lib_IResolvable(p.offPeakWindowOptions);
        if (!visitedObjects.has(p.snapshotOptions))
            aws_cdk_lib_IResolvable(p.snapshotOptions);
        if (!visitedObjects.has(p.softwareUpdateOptions))
            aws_cdk_lib_IResolvable(p.softwareUpdateOptions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.vpcOptions))
            aws_cdk_lib_IResolvable(p.vpcOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_AdvancedSecurityOptionsInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.masterUserOptions))
            aws_cdk_lib_IResolvable(p.masterUserOptions);
        if (!visitedObjects.has(p.samlOptions))
            aws_cdk_lib_IResolvable(p.samlOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_ClusterConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.zoneAwarenessConfig))
            aws_cdk_lib_IResolvable(p.zoneAwarenessConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_CognitoOptionsProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_DomainEndpointOptionsProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_EBSOptionsProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_EncryptionAtRestOptionsProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_IdpProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_LogPublishingOptionProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_MasterUserOptionsProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_NodeToNodeEncryptionOptionsProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_OffPeakWindowProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.windowStartTime))
            aws_cdk_lib_IResolvable(p.windowStartTime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_OffPeakWindowOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.offPeakWindow))
            aws_cdk_lib_IResolvable(p.offPeakWindow);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_SAMLOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.idp))
            aws_cdk_lib_IResolvable(p.idp);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_ServiceSoftwareOptionsProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_SnapshotOptionsProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_SoftwareUpdateOptionsProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_VPCOptionsProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_WindowStartTimeProperty(p) {
}
function aws_cdk_lib_aws_opensearchservice_CfnDomain_ZoneAwarenessConfigProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnAppProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.appSource))
            aws_cdk_lib_IResolvable(p.appSource);
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
        if (!visitedObjects.has(p.dataSources))
            aws_cdk_lib_IResolvable(p.dataSources);
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
        if (!visitedObjects.has(p.sslConfiguration))
            aws_cdk_lib_IResolvable(p.sslConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opsworks_CfnApp(p) {
}
function aws_cdk_lib_aws_opsworks_CfnApp_DataSourceProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnApp_EnvironmentVariableProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnApp_SourceProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnApp_SslConfigurationProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnElasticLoadBalancerAttachmentProps(p) {
}
function aws_cdk_lib_aws_opsworks_CfnElasticLoadBalancerAttachment(p) {
}
function aws_cdk_lib_aws_opsworks_CfnInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blockDeviceMappings))
            aws_cdk_lib_IResolvable(p.blockDeviceMappings);
        if (!visitedObjects.has(p.timeBasedAutoScaling))
            aws_cdk_lib_IResolvable(p.timeBasedAutoScaling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opsworks_CfnInstance(p) {
}
function aws_cdk_lib_aws_opsworks_CfnInstance_BlockDeviceMappingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ebs))
            aws_cdk_lib_IResolvable(p.ebs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opsworks_CfnInstance_EbsBlockDeviceProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnInstance_TimeBasedAutoScalingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.friday))
            aws_cdk_lib_IResolvable(p.friday);
        if (!visitedObjects.has(p.monday))
            aws_cdk_lib_IResolvable(p.monday);
        if (!visitedObjects.has(p.saturday))
            aws_cdk_lib_IResolvable(p.saturday);
        if (!visitedObjects.has(p.sunday))
            aws_cdk_lib_IResolvable(p.sunday);
        if (!visitedObjects.has(p.thursday))
            aws_cdk_lib_IResolvable(p.thursday);
        if (!visitedObjects.has(p.tuesday))
            aws_cdk_lib_IResolvable(p.tuesday);
        if (!visitedObjects.has(p.wednesday))
            aws_cdk_lib_IResolvable(p.wednesday);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opsworks_CfnLayerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
        if (!visitedObjects.has(p.customRecipes))
            aws_cdk_lib_IResolvable(p.customRecipes);
        if (!visitedObjects.has(p.lifecycleEventConfiguration))
            aws_cdk_lib_IResolvable(p.lifecycleEventConfiguration);
        if (!visitedObjects.has(p.loadBasedAutoScaling))
            aws_cdk_lib_IResolvable(p.loadBasedAutoScaling);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.volumeConfigurations))
            aws_cdk_lib_IResolvable(p.volumeConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opsworks_CfnLayer(p) {
}
function aws_cdk_lib_aws_opsworks_CfnLayer_AutoScalingThresholdsProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnLayer_LifecycleEventConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.shutdownEventConfiguration))
            aws_cdk_lib_IResolvable(p.shutdownEventConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opsworks_CfnLayer_LoadBasedAutoScalingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.downScaling))
            aws_cdk_lib_IResolvable(p.downScaling);
        if (!visitedObjects.has(p.upScaling))
            aws_cdk_lib_IResolvable(p.upScaling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opsworks_CfnLayer_RecipesProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnLayer_ShutdownEventConfigurationProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnLayer_VolumeConfigurationProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnStackProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
        if (!visitedObjects.has(p.chefConfiguration))
            aws_cdk_lib_IResolvable(p.chefConfiguration);
        if (!visitedObjects.has(p.configurationManager))
            aws_cdk_lib_IResolvable(p.configurationManager);
        if (!visitedObjects.has(p.customCookbooksSource))
            aws_cdk_lib_IResolvable(p.customCookbooksSource);
        if (!visitedObjects.has(p.elasticIps))
            aws_cdk_lib_IResolvable(p.elasticIps);
        if (!visitedObjects.has(p.rdsDbInstances))
            aws_cdk_lib_IResolvable(p.rdsDbInstances);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opsworks_CfnStack(p) {
}
function aws_cdk_lib_aws_opsworks_CfnStack_ChefConfigurationProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnStack_ElasticIpProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnStack_RdsDbInstanceProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnStack_SourceProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnStack_StackConfigurationManagerProperty(p) {
}
function aws_cdk_lib_aws_opsworks_CfnUserProfileProps(p) {
}
function aws_cdk_lib_aws_opsworks_CfnUserProfile(p) {
}
function aws_cdk_lib_aws_opsworks_CfnVolumeProps(p) {
}
function aws_cdk_lib_aws_opsworks_CfnVolume(p) {
}
function aws_cdk_lib_aws_opsworkscm_CfnServerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engineAttributes))
            aws_cdk_lib_IResolvable(p.engineAttributes);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_opsworkscm_CfnServer(p) {
}
function aws_cdk_lib_aws_opsworkscm_CfnServer_EngineAttributeProperty(p) {
}
function aws_cdk_lib_aws_organizations_CfnAccountProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_organizations_CfnAccount(p) {
}
function aws_cdk_lib_aws_organizations_CfnOrganizationalUnitProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_organizations_CfnOrganizationalUnit(p) {
}
function aws_cdk_lib_aws_organizations_CfnPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_organizations_CfnPolicy(p) {
}
function aws_cdk_lib_aws_organizations_CfnResourcePolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_organizations_CfnResourcePolicy(p) {
}
function aws_cdk_lib_aws_panorama_CfnApplicationInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.manifestPayload))
            aws_cdk_lib_IResolvable(p.manifestPayload);
        if (!visitedObjects.has(p.manifestOverridesPayload))
            aws_cdk_lib_IResolvable(p.manifestOverridesPayload);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_panorama_CfnApplicationInstance(p) {
}
function aws_cdk_lib_aws_panorama_CfnApplicationInstance_ManifestOverridesPayloadProperty(p) {
}
function aws_cdk_lib_aws_panorama_CfnApplicationInstance_ManifestPayloadProperty(p) {
}
function aws_cdk_lib_aws_panorama_CfnPackageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.storageLocation))
            aws_cdk_lib_IResolvable(p.storageLocation);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_panorama_CfnPackage(p) {
}
function aws_cdk_lib_aws_panorama_CfnPackage_StorageLocationProperty(p) {
}
function aws_cdk_lib_aws_panorama_CfnPackageVersionProps(p) {
}
function aws_cdk_lib_aws_panorama_CfnPackageVersion(p) {
}
function aws_cdk_lib_aws_personalize_CfnDatasetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.datasetImportJob))
            aws_cdk_lib_IResolvable(p.datasetImportJob);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_personalize_CfnDataset(p) {
}
function aws_cdk_lib_aws_personalize_CfnDataset_DataSourceProperty(p) {
}
function aws_cdk_lib_aws_personalize_CfnDataset_DatasetImportJobProperty(p) {
}
function aws_cdk_lib_aws_personalize_CfnDatasetGroupProps(p) {
}
function aws_cdk_lib_aws_personalize_CfnDatasetGroup(p) {
}
function aws_cdk_lib_aws_personalize_CfnSchemaProps(p) {
}
function aws_cdk_lib_aws_personalize_CfnSchema(p) {
}
function aws_cdk_lib_aws_personalize_CfnSolutionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.solutionConfig))
            aws_cdk_lib_IResolvable(p.solutionConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_personalize_CfnSolution(p) {
}
function aws_cdk_lib_aws_personalize_CfnSolution_AlgorithmHyperParameterRangesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoricalHyperParameterRanges))
            aws_cdk_lib_IResolvable(p.categoricalHyperParameterRanges);
        if (!visitedObjects.has(p.continuousHyperParameterRanges))
            aws_cdk_lib_IResolvable(p.continuousHyperParameterRanges);
        if (!visitedObjects.has(p.integerHyperParameterRanges))
            aws_cdk_lib_IResolvable(p.integerHyperParameterRanges);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_personalize_CfnSolution_AutoMLConfigProperty(p) {
}
function aws_cdk_lib_aws_personalize_CfnSolution_CategoricalHyperParameterRangeProperty(p) {
}
function aws_cdk_lib_aws_personalize_CfnSolution_ContinuousHyperParameterRangeProperty(p) {
}
function aws_cdk_lib_aws_personalize_CfnSolution_HpoConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.algorithmHyperParameterRanges))
            aws_cdk_lib_IResolvable(p.algorithmHyperParameterRanges);
        if (!visitedObjects.has(p.hpoObjective))
            aws_cdk_lib_IResolvable(p.hpoObjective);
        if (!visitedObjects.has(p.hpoResourceConfig))
            aws_cdk_lib_IResolvable(p.hpoResourceConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_personalize_CfnSolution_HpoObjectiveProperty(p) {
}
function aws_cdk_lib_aws_personalize_CfnSolution_HpoResourceConfigProperty(p) {
}
function aws_cdk_lib_aws_personalize_CfnSolution_IntegerHyperParameterRangeProperty(p) {
}
function aws_cdk_lib_aws_personalize_CfnSolution_SolutionConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.algorithmHyperParameters))
            aws_cdk_lib_IResolvable(p.algorithmHyperParameters);
        if (!visitedObjects.has(p.featureTransformationParameters))
            aws_cdk_lib_IResolvable(p.featureTransformationParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnADMChannelProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnADMChannel(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnAPNSChannelProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnAPNSChannel(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnAPNSSandboxChannelProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnAPNSSandboxChannel(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnAPNSVoipChannelProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnAPNSVoipChannel(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnAPNSVoipSandboxChannelProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnAPNSVoipSandboxChannel(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnAppProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnApp(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnApplicationSettingsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.campaignHook))
            aws_cdk_lib_IResolvable(p.campaignHook);
        if (!visitedObjects.has(p.limits))
            aws_cdk_lib_IResolvable(p.limits);
        if (!visitedObjects.has(p.quietTime))
            aws_cdk_lib_IResolvable(p.quietTime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnApplicationSettings(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnApplicationSettings_CampaignHookProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnApplicationSettings_LimitsProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnApplicationSettings_QuietTimeProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnBaiduChannelProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnBaiduChannel(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaignProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_IResolvable(p.schedule);
        if (!visitedObjects.has(p.additionalTreatments))
            aws_cdk_lib_IResolvable(p.additionalTreatments);
        if (!visitedObjects.has(p.campaignHook))
            aws_cdk_lib_IResolvable(p.campaignHook);
        if (!visitedObjects.has(p.customDeliveryConfiguration))
            aws_cdk_lib_IResolvable(p.customDeliveryConfiguration);
        if (!visitedObjects.has(p.limits))
            aws_cdk_lib_IResolvable(p.limits);
        if (!visitedObjects.has(p.messageConfiguration))
            aws_cdk_lib_IResolvable(p.messageConfiguration);
        if (!visitedObjects.has(p.templateConfiguration))
            aws_cdk_lib_IResolvable(p.templateConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_AttributeDimensionProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_CampaignCustomMessageProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_CampaignEmailMessageProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_CampaignEventFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_CampaignHookProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_CampaignInAppMessageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.content))
            aws_cdk_lib_IResolvable(p.content);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_CampaignSmsMessageProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_CustomDeliveryConfigurationProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_DefaultButtonConfigurationProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_EventDimensionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventType))
            aws_cdk_lib_IResolvable(p.eventType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_InAppMessageBodyConfigProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_InAppMessageButtonProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.android))
            aws_cdk_lib_IResolvable(p.android);
        if (!visitedObjects.has(p.defaultConfig))
            aws_cdk_lib_IResolvable(p.defaultConfig);
        if (!visitedObjects.has(p.ios))
            aws_cdk_lib_IResolvable(p.ios);
        if (!visitedObjects.has(p.web))
            aws_cdk_lib_IResolvable(p.web);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_InAppMessageContentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bodyConfig))
            aws_cdk_lib_IResolvable(p.bodyConfig);
        if (!visitedObjects.has(p.headerConfig))
            aws_cdk_lib_IResolvable(p.headerConfig);
        if (!visitedObjects.has(p.primaryBtn))
            aws_cdk_lib_IResolvable(p.primaryBtn);
        if (!visitedObjects.has(p.secondaryBtn))
            aws_cdk_lib_IResolvable(p.secondaryBtn);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_InAppMessageHeaderConfigProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_LimitsProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_MessageProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_MessageConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.admMessage))
            aws_cdk_lib_IResolvable(p.admMessage);
        if (!visitedObjects.has(p.apnsMessage))
            aws_cdk_lib_IResolvable(p.apnsMessage);
        if (!visitedObjects.has(p.baiduMessage))
            aws_cdk_lib_IResolvable(p.baiduMessage);
        if (!visitedObjects.has(p.customMessage))
            aws_cdk_lib_IResolvable(p.customMessage);
        if (!visitedObjects.has(p.defaultMessage))
            aws_cdk_lib_IResolvable(p.defaultMessage);
        if (!visitedObjects.has(p.emailMessage))
            aws_cdk_lib_IResolvable(p.emailMessage);
        if (!visitedObjects.has(p.gcmMessage))
            aws_cdk_lib_IResolvable(p.gcmMessage);
        if (!visitedObjects.has(p.inAppMessage))
            aws_cdk_lib_IResolvable(p.inAppMessage);
        if (!visitedObjects.has(p.smsMessage))
            aws_cdk_lib_IResolvable(p.smsMessage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_MetricDimensionProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_OverrideButtonConfigurationProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_QuietTimeProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_ScheduleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventFilter))
            aws_cdk_lib_IResolvable(p.eventFilter);
        if (!visitedObjects.has(p.quietTime))
            aws_cdk_lib_IResolvable(p.quietTime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_SetDimensionProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_TemplateProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_TemplateConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.emailTemplate))
            aws_cdk_lib_IResolvable(p.emailTemplate);
        if (!visitedObjects.has(p.pushTemplate))
            aws_cdk_lib_IResolvable(p.pushTemplate);
        if (!visitedObjects.has(p.smsTemplate))
            aws_cdk_lib_IResolvable(p.smsTemplate);
        if (!visitedObjects.has(p.voiceTemplate))
            aws_cdk_lib_IResolvable(p.voiceTemplate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnCampaign_WriteTreatmentResourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customDeliveryConfiguration))
            aws_cdk_lib_IResolvable(p.customDeliveryConfiguration);
        if (!visitedObjects.has(p.messageConfiguration))
            aws_cdk_lib_IResolvable(p.messageConfiguration);
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_IResolvable(p.schedule);
        if (!visitedObjects.has(p.templateConfiguration))
            aws_cdk_lib_IResolvable(p.templateConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnEmailChannelProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnEmailChannel(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnEmailTemplateProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnEmailTemplate(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnEventStreamProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnEventStream(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnGCMChannelProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnGCMChannel(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnInAppTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.content))
            aws_cdk_lib_IResolvable(p.content);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnInAppTemplate(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnInAppTemplate_BodyConfigProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnInAppTemplate_ButtonConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.android))
            aws_cdk_lib_IResolvable(p.android);
        if (!visitedObjects.has(p.defaultConfig))
            aws_cdk_lib_IResolvable(p.defaultConfig);
        if (!visitedObjects.has(p.ios))
            aws_cdk_lib_IResolvable(p.ios);
        if (!visitedObjects.has(p.web))
            aws_cdk_lib_IResolvable(p.web);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnInAppTemplate_DefaultButtonConfigurationProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnInAppTemplate_HeaderConfigProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnInAppTemplate_InAppMessageContentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bodyConfig))
            aws_cdk_lib_IResolvable(p.bodyConfig);
        if (!visitedObjects.has(p.headerConfig))
            aws_cdk_lib_IResolvable(p.headerConfig);
        if (!visitedObjects.has(p.primaryBtn))
            aws_cdk_lib_IResolvable(p.primaryBtn);
        if (!visitedObjects.has(p.secondaryBtn))
            aws_cdk_lib_IResolvable(p.secondaryBtn);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnInAppTemplate_OverrideButtonConfigurationProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnPushTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.adm))
            aws_cdk_lib_IResolvable(p.adm);
        if (!visitedObjects.has(p.apns))
            aws_cdk_lib_IResolvable(p.apns);
        if (!visitedObjects.has(p.baidu))
            aws_cdk_lib_IResolvable(p.baidu);
        if (!visitedObjects.has(p.default))
            aws_cdk_lib_IResolvable(p.default);
        if (!visitedObjects.has(p.gcm))
            aws_cdk_lib_IResolvable(p.gcm);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnPushTemplate(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnPushTemplate_APNSPushNotificationTemplateProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnPushTemplate_AndroidPushNotificationTemplateProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnPushTemplate_DefaultPushNotificationTemplateProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnSMSChannelProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnSMSChannel(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnSegmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
        if (!visitedObjects.has(p.segmentGroups))
            aws_cdk_lib_IResolvable(p.segmentGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnSegment(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnSegment_AttributeDimensionProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnSegment_BehaviorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.recency))
            aws_cdk_lib_IResolvable(p.recency);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnSegment_CoordinatesProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnSegment_DemographicProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.appVersion))
            aws_cdk_lib_IResolvable(p.appVersion);
        if (!visitedObjects.has(p.channel))
            aws_cdk_lib_IResolvable(p.channel);
        if (!visitedObjects.has(p.deviceType))
            aws_cdk_lib_IResolvable(p.deviceType);
        if (!visitedObjects.has(p.make))
            aws_cdk_lib_IResolvable(p.make);
        if (!visitedObjects.has(p.model))
            aws_cdk_lib_IResolvable(p.model);
        if (!visitedObjects.has(p.platform))
            aws_cdk_lib_IResolvable(p.platform);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnSegment_GPSPointProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.coordinates))
            aws_cdk_lib_IResolvable(p.coordinates);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnSegment_GroupsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensions))
            aws_cdk_lib_IResolvable(p.dimensions);
        if (!visitedObjects.has(p.sourceSegments))
            aws_cdk_lib_IResolvable(p.sourceSegments);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnSegment_LocationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.country))
            aws_cdk_lib_IResolvable(p.country);
        if (!visitedObjects.has(p.gpsPoint))
            aws_cdk_lib_IResolvable(p.gpsPoint);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnSegment_RecencyProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnSegment_SegmentDimensionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.behavior))
            aws_cdk_lib_IResolvable(p.behavior);
        if (!visitedObjects.has(p.demographic))
            aws_cdk_lib_IResolvable(p.demographic);
        if (!visitedObjects.has(p.location))
            aws_cdk_lib_IResolvable(p.location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnSegment_SegmentGroupsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groups))
            aws_cdk_lib_IResolvable(p.groups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpoint_CfnSegment_SetDimensionProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnSegment_SourceSegmentsProperty(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnSmsTemplateProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnSmsTemplate(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnVoiceChannelProps(p) {
}
function aws_cdk_lib_aws_pinpoint_CfnVoiceChannel(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deliveryOptions))
            aws_cdk_lib_IResolvable(p.deliveryOptions);
        if (!visitedObjects.has(p.reputationOptions))
            aws_cdk_lib_IResolvable(p.reputationOptions);
        if (!visitedObjects.has(p.sendingOptions))
            aws_cdk_lib_IResolvable(p.sendingOptions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet_TagsProperty(o);
        if (!visitedObjects.has(p.trackingOptions))
            aws_cdk_lib_IResolvable(p.trackingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet_DeliveryOptionsProperty(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet_ReputationOptionsProperty(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet_SendingOptionsProperty(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet_TagsProperty(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet_TrackingOptionsProperty(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestinationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventDestination))
            aws_cdk_lib_IResolvable(p.eventDestination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination_CloudWatchDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensionConfigurations))
            aws_cdk_lib_IResolvable(p.dimensionConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination_DimensionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination_EventDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchDestination))
            aws_cdk_lib_IResolvable(p.cloudWatchDestination);
        if (!visitedObjects.has(p.kinesisFirehoseDestination))
            aws_cdk_lib_IResolvable(p.kinesisFirehoseDestination);
        if (!visitedObjects.has(p.pinpointDestination))
            aws_cdk_lib_IResolvable(p.pinpointDestination);
        if (!visitedObjects.has(p.snsDestination))
            aws_cdk_lib_IResolvable(p.snsDestination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination_KinesisFirehoseDestinationProperty(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination_PinpointDestinationProperty(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination_SnsDestinationProperty(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnDedicatedIpPoolProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_pinpointemail_CfnDedicatedIpPool_TagsProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpointemail_CfnDedicatedIpPool(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnDedicatedIpPool_TagsProperty(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnIdentityProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mailFromAttributes))
            aws_cdk_lib_IResolvable(p.mailFromAttributes);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_pinpointemail_CfnIdentity_TagsProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pinpointemail_CfnIdentity(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnIdentity_MailFromAttributesProperty(p) {
}
function aws_cdk_lib_aws_pinpointemail_CfnIdentity_TagsProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.enrichmentParameters))
            aws_cdk_lib_IResolvable(p.enrichmentParameters);
        if (!visitedObjects.has(p.sourceParameters))
            aws_cdk_lib_IResolvable(p.sourceParameters);
        if (!visitedObjects.has(p.targetParameters))
            aws_cdk_lib_IResolvable(p.targetParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_AwsVpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_BatchArrayPropertiesProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_BatchContainerOverridesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
        if (!visitedObjects.has(p.resourceRequirements))
            aws_cdk_lib_IResolvable(p.resourceRequirements);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_BatchEnvironmentVariableProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_BatchJobDependencyProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_BatchResourceRequirementProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_BatchRetryStrategyProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_CapacityProviderStrategyItemProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_DeadLetterConfigProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_EcsContainerOverrideProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
        if (!visitedObjects.has(p.environmentFiles))
            aws_cdk_lib_IResolvable(p.environmentFiles);
        if (!visitedObjects.has(p.resourceRequirements))
            aws_cdk_lib_IResolvable(p.resourceRequirements);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_EcsEnvironmentFileProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_EcsEnvironmentVariableProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_EcsEphemeralStorageProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_EcsInferenceAcceleratorOverrideProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_EcsResourceRequirementProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_EcsTaskOverrideProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containerOverrides))
            aws_cdk_lib_IResolvable(p.containerOverrides);
        if (!visitedObjects.has(p.ephemeralStorage))
            aws_cdk_lib_IResolvable(p.ephemeralStorage);
        if (!visitedObjects.has(p.inferenceAcceleratorOverrides))
            aws_cdk_lib_IResolvable(p.inferenceAcceleratorOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_FilterProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_FilterCriteriaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filters))
            aws_cdk_lib_IResolvable(p.filters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_MQBrokerAccessCredentialsProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_MSKAccessCredentialsProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_NetworkConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awsvpcConfiguration))
            aws_cdk_lib_IResolvable(p.awsvpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeEnrichmentHttpParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.headerParameters))
            aws_cdk_lib_IResolvable(p.headerParameters);
        if (!visitedObjects.has(p.queryStringParameters))
            aws_cdk_lib_IResolvable(p.queryStringParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeEnrichmentParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.httpParameters))
            aws_cdk_lib_IResolvable(p.httpParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceActiveMQBrokerParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_IResolvable(p.credentials);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceDynamoDBStreamParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deadLetterConfig))
            aws_cdk_lib_IResolvable(p.deadLetterConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceKinesisStreamParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deadLetterConfig))
            aws_cdk_lib_IResolvable(p.deadLetterConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceManagedStreamingKafkaParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_IResolvable(p.credentials);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.activeMqBrokerParameters))
            aws_cdk_lib_IResolvable(p.activeMqBrokerParameters);
        if (!visitedObjects.has(p.dynamoDbStreamParameters))
            aws_cdk_lib_IResolvable(p.dynamoDbStreamParameters);
        if (!visitedObjects.has(p.filterCriteria))
            aws_cdk_lib_IResolvable(p.filterCriteria);
        if (!visitedObjects.has(p.kinesisStreamParameters))
            aws_cdk_lib_IResolvable(p.kinesisStreamParameters);
        if (!visitedObjects.has(p.managedStreamingKafkaParameters))
            aws_cdk_lib_IResolvable(p.managedStreamingKafkaParameters);
        if (!visitedObjects.has(p.rabbitMqBrokerParameters))
            aws_cdk_lib_IResolvable(p.rabbitMqBrokerParameters);
        if (!visitedObjects.has(p.selfManagedKafkaParameters))
            aws_cdk_lib_IResolvable(p.selfManagedKafkaParameters);
        if (!visitedObjects.has(p.sqsQueueParameters))
            aws_cdk_lib_IResolvable(p.sqsQueueParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceRabbitMQBrokerParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_IResolvable(p.credentials);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceSelfManagedKafkaParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_IResolvable(p.credentials);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_IResolvable(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceSqsQueueParametersProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetBatchJobParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arrayProperties))
            aws_cdk_lib_IResolvable(p.arrayProperties);
        if (!visitedObjects.has(p.containerOverrides))
            aws_cdk_lib_IResolvable(p.containerOverrides);
        if (!visitedObjects.has(p.dependsOn))
            aws_cdk_lib_IResolvable(p.dependsOn);
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (!visitedObjects.has(p.retryStrategy))
            aws_cdk_lib_IResolvable(p.retryStrategy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetCloudWatchLogsParametersProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetEcsTaskParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capacityProviderStrategy))
            aws_cdk_lib_IResolvable(p.capacityProviderStrategy);
        if (!visitedObjects.has(p.networkConfiguration))
            aws_cdk_lib_IResolvable(p.networkConfiguration);
        if (!visitedObjects.has(p.overrides))
            aws_cdk_lib_IResolvable(p.overrides);
        if (!visitedObjects.has(p.placementConstraints))
            aws_cdk_lib_IResolvable(p.placementConstraints);
        if (!visitedObjects.has(p.placementStrategy))
            aws_cdk_lib_IResolvable(p.placementStrategy);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetEventBridgeEventBusParametersProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetHttpParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.headerParameters))
            aws_cdk_lib_IResolvable(p.headerParameters);
        if (!visitedObjects.has(p.queryStringParameters))
            aws_cdk_lib_IResolvable(p.queryStringParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetKinesisStreamParametersProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetLambdaFunctionParametersProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.batchJobParameters))
            aws_cdk_lib_IResolvable(p.batchJobParameters);
        if (!visitedObjects.has(p.cloudWatchLogsParameters))
            aws_cdk_lib_IResolvable(p.cloudWatchLogsParameters);
        if (!visitedObjects.has(p.ecsTaskParameters))
            aws_cdk_lib_IResolvable(p.ecsTaskParameters);
        if (!visitedObjects.has(p.eventBridgeEventBusParameters))
            aws_cdk_lib_IResolvable(p.eventBridgeEventBusParameters);
        if (!visitedObjects.has(p.httpParameters))
            aws_cdk_lib_IResolvable(p.httpParameters);
        if (!visitedObjects.has(p.kinesisStreamParameters))
            aws_cdk_lib_IResolvable(p.kinesisStreamParameters);
        if (!visitedObjects.has(p.lambdaFunctionParameters))
            aws_cdk_lib_IResolvable(p.lambdaFunctionParameters);
        if (!visitedObjects.has(p.redshiftDataParameters))
            aws_cdk_lib_IResolvable(p.redshiftDataParameters);
        if (!visitedObjects.has(p.sageMakerPipelineParameters))
            aws_cdk_lib_IResolvable(p.sageMakerPipelineParameters);
        if (!visitedObjects.has(p.sqsQueueParameters))
            aws_cdk_lib_IResolvable(p.sqsQueueParameters);
        if (!visitedObjects.has(p.stepFunctionStateMachineParameters))
            aws_cdk_lib_IResolvable(p.stepFunctionStateMachineParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetRedshiftDataParametersProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetSageMakerPipelineParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pipelineParameterList))
            aws_cdk_lib_IResolvable(p.pipelineParameterList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetSqsQueueParametersProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetStateMachineParametersProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_PlacementConstraintProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_PlacementStrategyProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_SageMakerPipelineParameterProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_SelfManagedKafkaAccessConfigurationCredentialsProperty(p) {
}
function aws_cdk_lib_aws_pipes_CfnPipe_SelfManagedKafkaAccessConfigurationVpcProperty(p) {
}
function aws_cdk_lib_aws_qldb_CfnLedgerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_qldb_CfnLedger(p) {
}
function aws_cdk_lib_aws_qldb_CfnStreamProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kinesisConfiguration))
            aws_cdk_lib_IResolvable(p.kinesisConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_qldb_CfnStream(p) {
}
function aws_cdk_lib_aws_qldb_CfnStream_KinesisConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysisProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.definition))
            aws_cdk_lib_IResolvable(p.definition);
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (!visitedObjects.has(p.permissions))
            aws_cdk_lib_IResolvable(p.permissions);
        if (!visitedObjects.has(p.sourceEntity))
            aws_cdk_lib_IResolvable(p.sourceEntity);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AggregationFunctionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.numericalAggregationFunction))
            aws_cdk_lib_IResolvable(p.numericalAggregationFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AggregationSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AnalysisDefaultsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultNewSheetConfiguration))
            aws_cdk_lib_IResolvable(p.defaultNewSheetConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AnalysisDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSetIdentifierDeclarations))
            aws_cdk_lib_IResolvable(p.dataSetIdentifierDeclarations);
        if (!visitedObjects.has(p.analysisDefaults))
            aws_cdk_lib_IResolvable(p.analysisDefaults);
        if (!visitedObjects.has(p.calculatedFields))
            aws_cdk_lib_IResolvable(p.calculatedFields);
        if (!visitedObjects.has(p.columnConfigurations))
            aws_cdk_lib_IResolvable(p.columnConfigurations);
        if (!visitedObjects.has(p.filterGroups))
            aws_cdk_lib_IResolvable(p.filterGroups);
        if (!visitedObjects.has(p.parameterDeclarations))
            aws_cdk_lib_IResolvable(p.parameterDeclarations);
        if (!visitedObjects.has(p.sheets))
            aws_cdk_lib_IResolvable(p.sheets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AnalysisErrorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.violatedEntities))
            aws_cdk_lib_IResolvable(p.violatedEntities);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AnalysisSourceEntityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceTemplate))
            aws_cdk_lib_IResolvable(p.sourceTemplate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AnalysisSourceTemplateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSetReferences))
            aws_cdk_lib_IResolvable(p.dataSetReferences);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AnchorDateConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ArcAxisConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.range))
            aws_cdk_lib_IResolvable(p.range);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ArcAxisDisplayRangeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ArcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ArcOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisDataOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateAxisOptions))
            aws_cdk_lib_IResolvable(p.dateAxisOptions);
        if (!visitedObjects.has(p.numericAxisOptions))
            aws_cdk_lib_IResolvable(p.numericAxisOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisDisplayMinMaxRangeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataOptions))
            aws_cdk_lib_IResolvable(p.dataOptions);
        if (!visitedObjects.has(p.scrollbarOptions))
            aws_cdk_lib_IResolvable(p.scrollbarOptions);
        if (!visitedObjects.has(p.tickLabelOptions))
            aws_cdk_lib_IResolvable(p.tickLabelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisDisplayRangeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.minMax))
            aws_cdk_lib_IResolvable(p.minMax);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.applyTo))
            aws_cdk_lib_IResolvable(p.applyTo);
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisLabelReferenceOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisLinearScaleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisLogarithmicScaleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisScaleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.linear))
            aws_cdk_lib_IResolvable(p.linear);
        if (!visitedObjects.has(p.logarithmic))
            aws_cdk_lib_IResolvable(p.logarithmic);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisTickLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.labelOptions))
            aws_cdk_lib_IResolvable(p.labelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BarChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.smallMultiples))
            aws_cdk_lib_IResolvable(p.smallMultiples);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BarChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryAxis))
            aws_cdk_lib_IResolvable(p.categoryAxis);
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.colorLabelOptions))
            aws_cdk_lib_IResolvable(p.colorLabelOptions);
        if (!visitedObjects.has(p.contributionAnalysisDefaults))
            aws_cdk_lib_IResolvable(p.contributionAnalysisDefaults);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.referenceLines))
            aws_cdk_lib_IResolvable(p.referenceLines);
        if (!visitedObjects.has(p.smallMultiplesOptions))
            aws_cdk_lib_IResolvable(p.smallMultiplesOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.valueAxis))
            aws_cdk_lib_IResolvable(p.valueAxis);
        if (!visitedObjects.has(p.valueLabelOptions))
            aws_cdk_lib_IResolvable(p.valueLabelOptions);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BarChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.barChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.barChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BarChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.colorItemsLimit))
            aws_cdk_lib_IResolvable(p.colorItemsLimit);
        if (!visitedObjects.has(p.colorSort))
            aws_cdk_lib_IResolvable(p.colorSort);
        if (!visitedObjects.has(p.smallMultiplesLimitConfiguration))
            aws_cdk_lib_IResolvable(p.smallMultiplesLimitConfiguration);
        if (!visitedObjects.has(p.smallMultiplesSort))
            aws_cdk_lib_IResolvable(p.smallMultiplesSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BarChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BinCountOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BinWidthOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BodySectionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.content))
            aws_cdk_lib_IResolvable(p.content);
        if (!visitedObjects.has(p.pageBreakConfiguration))
            aws_cdk_lib_IResolvable(p.pageBreakConfiguration);
        if (!visitedObjects.has(p.style))
            aws_cdk_lib_IResolvable(p.style);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BodySectionContentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.layout))
            aws_cdk_lib_IResolvable(p.layout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupBy))
            aws_cdk_lib_IResolvable(p.groupBy);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.boxPlotOptions))
            aws_cdk_lib_IResolvable(p.boxPlotOptions);
        if (!visitedObjects.has(p.categoryAxis))
            aws_cdk_lib_IResolvable(p.categoryAxis);
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.primaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.primaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisLabelOptions);
        if (!visitedObjects.has(p.referenceLines))
            aws_cdk_lib_IResolvable(p.referenceLines);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.boxPlotAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.boxPlotAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.styleOptions))
            aws_cdk_lib_IResolvable(p.styleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.paginationConfiguration))
            aws_cdk_lib_IResolvable(p.paginationConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotStyleOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CalculatedFieldProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CalculatedMeasureFieldProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CascadingControlConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceControls))
            aws_cdk_lib_IResolvable(p.sourceControls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CascadingControlSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnToMatch))
            aws_cdk_lib_IResolvable(p.columnToMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CategoricalDimensionFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CategoricalMeasureFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CategoryDrillDownFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CategoryFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CategoryFilterConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customFilterConfiguration))
            aws_cdk_lib_IResolvable(p.customFilterConfiguration);
        if (!visitedObjects.has(p.customFilterListConfiguration))
            aws_cdk_lib_IResolvable(p.customFilterListConfiguration);
        if (!visitedObjects.has(p.filterListConfiguration))
            aws_cdk_lib_IResolvable(p.filterListConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ChartAxisLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.axisLabelOptions))
            aws_cdk_lib_IResolvable(p.axisLabelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ClusterMarkerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.simpleClusterMarker))
            aws_cdk_lib_IResolvable(p.simpleClusterMarker);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ClusterMarkerConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterMarker))
            aws_cdk_lib_IResolvable(p.clusterMarker);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ColorScaleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.nullValueColor))
            aws_cdk_lib_IResolvable(p.nullValueColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ColorsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customColors))
            aws_cdk_lib_IResolvable(p.customColors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ColumnConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.colorsConfiguration))
            aws_cdk_lib_IResolvable(p.colorsConfiguration);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ColumnHierarchyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimeHierarchy))
            aws_cdk_lib_IResolvable(p.dateTimeHierarchy);
        if (!visitedObjects.has(p.explicitHierarchy))
            aws_cdk_lib_IResolvable(p.explicitHierarchy);
        if (!visitedObjects.has(p.predefinedHierarchy))
            aws_cdk_lib_IResolvable(p.predefinedHierarchy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ColumnIdentifierProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ColumnSortProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sortBy))
            aws_cdk_lib_IResolvable(p.sortBy);
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ColumnTooltipItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.aggregation))
            aws_cdk_lib_IResolvable(p.aggregation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ComboChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.barValues))
            aws_cdk_lib_IResolvable(p.barValues);
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.lineValues))
            aws_cdk_lib_IResolvable(p.lineValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ComboChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.barDataLabels))
            aws_cdk_lib_IResolvable(p.barDataLabels);
        if (!visitedObjects.has(p.categoryAxis))
            aws_cdk_lib_IResolvable(p.categoryAxis);
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.colorLabelOptions))
            aws_cdk_lib_IResolvable(p.colorLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.lineDataLabels))
            aws_cdk_lib_IResolvable(p.lineDataLabels);
        if (!visitedObjects.has(p.primaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.primaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisLabelOptions);
        if (!visitedObjects.has(p.referenceLines))
            aws_cdk_lib_IResolvable(p.referenceLines);
        if (!visitedObjects.has(p.secondaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.secondaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.secondaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.secondaryYAxisLabelOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ComboChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.comboChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.comboChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ComboChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.colorItemsLimit))
            aws_cdk_lib_IResolvable(p.colorItemsLimit);
        if (!visitedObjects.has(p.colorSort))
            aws_cdk_lib_IResolvable(p.colorSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ComboChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ComparisonConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.comparisonFormat))
            aws_cdk_lib_IResolvable(p.comparisonFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ComparisonFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.numberDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numberDisplayFormatConfiguration);
        if (!visitedObjects.has(p.percentageDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.percentageDisplayFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forecast))
            aws_cdk_lib_IResolvable(p.forecast);
        if (!visitedObjects.has(p.growthRate))
            aws_cdk_lib_IResolvable(p.growthRate);
        if (!visitedObjects.has(p.maximumMinimum))
            aws_cdk_lib_IResolvable(p.maximumMinimum);
        if (!visitedObjects.has(p.metricComparison))
            aws_cdk_lib_IResolvable(p.metricComparison);
        if (!visitedObjects.has(p.periodOverPeriod))
            aws_cdk_lib_IResolvable(p.periodOverPeriod);
        if (!visitedObjects.has(p.periodToDate))
            aws_cdk_lib_IResolvable(p.periodToDate);
        if (!visitedObjects.has(p.topBottomMovers))
            aws_cdk_lib_IResolvable(p.topBottomMovers);
        if (!visitedObjects.has(p.topBottomRanked))
            aws_cdk_lib_IResolvable(p.topBottomRanked);
        if (!visitedObjects.has(p.totalAggregation))
            aws_cdk_lib_IResolvable(p.totalAggregation);
        if (!visitedObjects.has(p.uniqueValues))
            aws_cdk_lib_IResolvable(p.uniqueValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingColorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.gradient))
            aws_cdk_lib_IResolvable(p.gradient);
        if (!visitedObjects.has(p.solid))
            aws_cdk_lib_IResolvable(p.solid);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingCustomIconConditionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.iconOptions))
            aws_cdk_lib_IResolvable(p.iconOptions);
        if (!visitedObjects.has(p.displayConfiguration))
            aws_cdk_lib_IResolvable(p.displayConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingCustomIconOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingGradientColorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.color))
            aws_cdk_lib_IResolvable(p.color);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingIconProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customCondition))
            aws_cdk_lib_IResolvable(p.customCondition);
        if (!visitedObjects.has(p.iconSet))
            aws_cdk_lib_IResolvable(p.iconSet);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingIconDisplayConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingIconSetProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingSolidColorProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ContributionAnalysisDefaultProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.contributorDimensions))
            aws_cdk_lib_IResolvable(p.contributorDimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CurrencyDisplayFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decimalPlacesConfiguration))
            aws_cdk_lib_IResolvable(p.decimalPlacesConfiguration);
        if (!visitedObjects.has(p.negativeValueConfiguration))
            aws_cdk_lib_IResolvable(p.negativeValueConfiguration);
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.separatorConfiguration))
            aws_cdk_lib_IResolvable(p.separatorConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomActionFilterOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectedFieldsConfiguration))
            aws_cdk_lib_IResolvable(p.selectedFieldsConfiguration);
        if (!visitedObjects.has(p.targetVisualsConfiguration))
            aws_cdk_lib_IResolvable(p.targetVisualsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomActionNavigationOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.localNavigationConfiguration))
            aws_cdk_lib_IResolvable(p.localNavigationConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomActionSetParametersOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameterValueConfigurations))
            aws_cdk_lib_IResolvable(p.parameterValueConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomActionURLOperationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomColorProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomContentConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomContentVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomFilterConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomFilterListConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomNarrativeOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomParameterValuesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomValuesConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customValues))
            aws_cdk_lib_IResolvable(p.customValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DataBarsOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DataColorProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DataFieldSeriesItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.settings))
            aws_cdk_lib_IResolvable(p.settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DataLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLabelTypes))
            aws_cdk_lib_IResolvable(p.dataLabelTypes);
        if (!visitedObjects.has(p.labelFontConfiguration))
            aws_cdk_lib_IResolvable(p.labelFontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DataLabelTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataPathLabelType))
            aws_cdk_lib_IResolvable(p.dataPathLabelType);
        if (!visitedObjects.has(p.fieldLabelType))
            aws_cdk_lib_IResolvable(p.fieldLabelType);
        if (!visitedObjects.has(p.maximumLabelType))
            aws_cdk_lib_IResolvable(p.maximumLabelType);
        if (!visitedObjects.has(p.minimumLabelType))
            aws_cdk_lib_IResolvable(p.minimumLabelType);
        if (!visitedObjects.has(p.rangeEndsLabelType))
            aws_cdk_lib_IResolvable(p.rangeEndsLabelType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DataPathColorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.element))
            aws_cdk_lib_IResolvable(p.element);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DataPathLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DataPathSortProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sortPaths))
            aws_cdk_lib_IResolvable(p.sortPaths);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DataPathValueProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DataSetIdentifierDeclarationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DataSetReferenceProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DateAxisOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DateDimensionFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DateMeasureFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimeDefaultValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicValue))
            aws_cdk_lib_IResolvable(p.dynamicValue);
        if (!visitedObjects.has(p.rollingDate))
            aws_cdk_lib_IResolvable(p.rollingDate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimeFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.numericFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numericFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimeHierarchyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.drillDownFilters))
            aws_cdk_lib_IResolvable(p.drillDownFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimeParameterProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimeParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValues))
            aws_cdk_lib_IResolvable(p.defaultValues);
        if (!visitedObjects.has(p.mappedDataSetParameters))
            aws_cdk_lib_IResolvable(p.mappedDataSetParameters);
        if (!visitedObjects.has(p.valueWhenUnset))
            aws_cdk_lib_IResolvable(p.valueWhenUnset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimePickerControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimeValueWhenUnsetConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DecimalDefaultValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicValue))
            aws_cdk_lib_IResolvable(p.dynamicValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DecimalParameterProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DecimalParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValues))
            aws_cdk_lib_IResolvable(p.defaultValues);
        if (!visitedObjects.has(p.mappedDataSetParameters))
            aws_cdk_lib_IResolvable(p.mappedDataSetParameters);
        if (!visitedObjects.has(p.valueWhenUnset))
            aws_cdk_lib_IResolvable(p.valueWhenUnset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DecimalPlacesConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DecimalValueWhenUnsetConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DefaultFreeFormLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DefaultGridLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DefaultInteractiveLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.freeForm))
            aws_cdk_lib_IResolvable(p.freeForm);
        if (!visitedObjects.has(p.grid))
            aws_cdk_lib_IResolvable(p.grid);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DefaultNewSheetConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interactiveLayoutConfiguration))
            aws_cdk_lib_IResolvable(p.interactiveLayoutConfiguration);
        if (!visitedObjects.has(p.paginatedLayoutConfiguration))
            aws_cdk_lib_IResolvable(p.paginatedLayoutConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DefaultPaginatedLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sectionBased))
            aws_cdk_lib_IResolvable(p.sectionBased);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DefaultSectionBasedLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DestinationParameterValueConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customValuesConfiguration))
            aws_cdk_lib_IResolvable(p.customValuesConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DimensionFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoricalDimensionField))
            aws_cdk_lib_IResolvable(p.categoricalDimensionField);
        if (!visitedObjects.has(p.dateDimensionField))
            aws_cdk_lib_IResolvable(p.dateDimensionField);
        if (!visitedObjects.has(p.numericalDimensionField))
            aws_cdk_lib_IResolvable(p.numericalDimensionField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DonutCenterOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DonutOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arcOptions))
            aws_cdk_lib_IResolvable(p.arcOptions);
        if (!visitedObjects.has(p.donutCenterOptions))
            aws_cdk_lib_IResolvable(p.donutCenterOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DrillDownFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryFilter))
            aws_cdk_lib_IResolvable(p.categoryFilter);
        if (!visitedObjects.has(p.numericEqualityFilter))
            aws_cdk_lib_IResolvable(p.numericEqualityFilter);
        if (!visitedObjects.has(p.timeRangeFilter))
            aws_cdk_lib_IResolvable(p.timeRangeFilter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DropDownControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectAllOptions))
            aws_cdk_lib_IResolvable(p.selectAllOptions);
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_DynamicDefaultValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValueColumn))
            aws_cdk_lib_IResolvable(p.defaultValueColumn);
        if (!visitedObjects.has(p.groupNameColumn))
            aws_cdk_lib_IResolvable(p.groupNameColumn);
        if (!visitedObjects.has(p.userNameColumn))
            aws_cdk_lib_IResolvable(p.userNameColumn);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_EmptyVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_EntityProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ExcludePeriodConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ExplicitHierarchyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.drillDownFilters))
            aws_cdk_lib_IResolvable(p.drillDownFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FieldBasedTooltipProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tooltipFields))
            aws_cdk_lib_IResolvable(p.tooltipFields);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FieldLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FieldSeriesItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.settings))
            aws_cdk_lib_IResolvable(p.settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FieldSortProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FieldSortOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnSort))
            aws_cdk_lib_IResolvable(p.columnSort);
        if (!visitedObjects.has(p.fieldSort))
            aws_cdk_lib_IResolvable(p.fieldSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FieldTooltipItemProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.geospatial))
            aws_cdk_lib_IResolvable(p.geospatial);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.shape))
            aws_cdk_lib_IResolvable(p.shape);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.mapStyleOptions))
            aws_cdk_lib_IResolvable(p.mapStyleOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.windowOptions))
            aws_cdk_lib_IResolvable(p.windowOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filledMapAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.filledMapAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapShapeConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.format))
            aws_cdk_lib_IResolvable(p.format);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryFilter))
            aws_cdk_lib_IResolvable(p.categoryFilter);
        if (!visitedObjects.has(p.numericEqualityFilter))
            aws_cdk_lib_IResolvable(p.numericEqualityFilter);
        if (!visitedObjects.has(p.numericRangeFilter))
            aws_cdk_lib_IResolvable(p.numericRangeFilter);
        if (!visitedObjects.has(p.relativeDatesFilter))
            aws_cdk_lib_IResolvable(p.relativeDatesFilter);
        if (!visitedObjects.has(p.timeEqualityFilter))
            aws_cdk_lib_IResolvable(p.timeEqualityFilter);
        if (!visitedObjects.has(p.timeRangeFilter))
            aws_cdk_lib_IResolvable(p.timeRangeFilter);
        if (!visitedObjects.has(p.topBottomFilter))
            aws_cdk_lib_IResolvable(p.topBottomFilter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimePicker))
            aws_cdk_lib_IResolvable(p.dateTimePicker);
        if (!visitedObjects.has(p.dropdown))
            aws_cdk_lib_IResolvable(p.dropdown);
        if (!visitedObjects.has(p.list))
            aws_cdk_lib_IResolvable(p.list);
        if (!visitedObjects.has(p.relativeDateTime))
            aws_cdk_lib_IResolvable(p.relativeDateTime);
        if (!visitedObjects.has(p.slider))
            aws_cdk_lib_IResolvable(p.slider);
        if (!visitedObjects.has(p.textArea))
            aws_cdk_lib_IResolvable(p.textArea);
        if (!visitedObjects.has(p.textField))
            aws_cdk_lib_IResolvable(p.textField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterDateTimePickerControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterDropDownControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cascadingControlConfiguration))
            aws_cdk_lib_IResolvable(p.cascadingControlConfiguration);
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
        if (!visitedObjects.has(p.selectableValues))
            aws_cdk_lib_IResolvable(p.selectableValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filters))
            aws_cdk_lib_IResolvable(p.filters);
        if (!visitedObjects.has(p.scopeConfiguration))
            aws_cdk_lib_IResolvable(p.scopeConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterListConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterListControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cascadingControlConfiguration))
            aws_cdk_lib_IResolvable(p.cascadingControlConfiguration);
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
        if (!visitedObjects.has(p.selectableValues))
            aws_cdk_lib_IResolvable(p.selectableValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterOperationSelectedFieldsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterOperationTargetVisualsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sameSheetTargetVisualConfiguration))
            aws_cdk_lib_IResolvable(p.sameSheetTargetVisualConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterRelativeDateTimeControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterScopeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectedSheets))
            aws_cdk_lib_IResolvable(p.selectedSheets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterSelectableValuesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterSliderControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterTextAreaControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterTextFieldControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FontConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontSize))
            aws_cdk_lib_IResolvable(p.fontSize);
        if (!visitedObjects.has(p.fontWeight))
            aws_cdk_lib_IResolvable(p.fontWeight);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FontSizeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FontWeightProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ForecastComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ForecastConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forecastProperties))
            aws_cdk_lib_IResolvable(p.forecastProperties);
        if (!visitedObjects.has(p.scenario))
            aws_cdk_lib_IResolvable(p.scenario);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ForecastScenarioProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.whatIfPointScenario))
            aws_cdk_lib_IResolvable(p.whatIfPointScenario);
        if (!visitedObjects.has(p.whatIfRangeScenario))
            aws_cdk_lib_IResolvable(p.whatIfRangeScenario);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimeFormatConfiguration))
            aws_cdk_lib_IResolvable(p.dateTimeFormatConfiguration);
        if (!visitedObjects.has(p.numberFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numberFormatConfiguration);
        if (!visitedObjects.has(p.stringFormatConfiguration))
            aws_cdk_lib_IResolvable(p.stringFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormLayoutCanvasSizeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.screenCanvasSizeOptions))
            aws_cdk_lib_IResolvable(p.screenCanvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.elements))
            aws_cdk_lib_IResolvable(p.elements);
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormLayoutElementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backgroundStyle))
            aws_cdk_lib_IResolvable(p.backgroundStyle);
        if (!visitedObjects.has(p.borderStyle))
            aws_cdk_lib_IResolvable(p.borderStyle);
        if (!visitedObjects.has(p.loadingAnimation))
            aws_cdk_lib_IResolvable(p.loadingAnimation);
        if (!visitedObjects.has(p.renderingRules))
            aws_cdk_lib_IResolvable(p.renderingRules);
        if (!visitedObjects.has(p.selectedBorderStyle))
            aws_cdk_lib_IResolvable(p.selectedBorderStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormLayoutElementBackgroundStyleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormLayoutElementBorderStyleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormLayoutScreenCanvasSizeOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormSectionLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.elements))
            aws_cdk_lib_IResolvable(p.elements);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FunnelChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FunnelChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.dataLabelOptions))
            aws_cdk_lib_IResolvable(p.dataLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.valueLabelOptions))
            aws_cdk_lib_IResolvable(p.valueLabelOptions);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FunnelChartDataLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.labelFontConfiguration))
            aws_cdk_lib_IResolvable(p.labelFontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FunnelChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.funnelChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.funnelChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FunnelChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_FunnelChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartArcConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.foregroundColor))
            aws_cdk_lib_IResolvable(p.foregroundColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arc))
            aws_cdk_lib_IResolvable(p.arc);
        if (!visitedObjects.has(p.primaryValue))
            aws_cdk_lib_IResolvable(p.primaryValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.gaugeChartOptions))
            aws_cdk_lib_IResolvable(p.gaugeChartOptions);
        if (!visitedObjects.has(p.tooltipOptions))
            aws_cdk_lib_IResolvable(p.tooltipOptions);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetValues))
            aws_cdk_lib_IResolvable(p.targetValues);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arc))
            aws_cdk_lib_IResolvable(p.arc);
        if (!visitedObjects.has(p.arcAxis))
            aws_cdk_lib_IResolvable(p.arcAxis);
        if (!visitedObjects.has(p.comparison))
            aws_cdk_lib_IResolvable(p.comparison);
        if (!visitedObjects.has(p.primaryValueFontConfiguration))
            aws_cdk_lib_IResolvable(p.primaryValueFontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartPrimaryValueConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.icon))
            aws_cdk_lib_IResolvable(p.icon);
        if (!visitedObjects.has(p.textColor))
            aws_cdk_lib_IResolvable(p.textColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialCoordinateBoundsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialMapAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.geospatial))
            aws_cdk_lib_IResolvable(p.geospatial);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialMapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.mapStyleOptions))
            aws_cdk_lib_IResolvable(p.mapStyleOptions);
        if (!visitedObjects.has(p.pointStyleOptions))
            aws_cdk_lib_IResolvable(p.pointStyleOptions);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.windowOptions))
            aws_cdk_lib_IResolvable(p.windowOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialMapFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.geospatialMapAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.geospatialMapAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialMapStyleOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialMapVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialPointStyleOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterMarkerConfiguration))
            aws_cdk_lib_IResolvable(p.clusterMarkerConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialWindowOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bounds))
            aws_cdk_lib_IResolvable(p.bounds);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GlobalTableBorderOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sideSpecificBorder))
            aws_cdk_lib_IResolvable(p.sideSpecificBorder);
        if (!visitedObjects.has(p.uniformBorder))
            aws_cdk_lib_IResolvable(p.uniformBorder);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GradientColorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stops))
            aws_cdk_lib_IResolvable(p.stops);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GradientStopProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GridLayoutCanvasSizeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.screenCanvasSizeOptions))
            aws_cdk_lib_IResolvable(p.screenCanvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GridLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.elements))
            aws_cdk_lib_IResolvable(p.elements);
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GridLayoutElementProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GridLayoutScreenCanvasSizeOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_GrowthRateComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_HeaderFooterSectionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.layout))
            aws_cdk_lib_IResolvable(p.layout);
        if (!visitedObjects.has(p.style))
            aws_cdk_lib_IResolvable(p.style);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_HeatMapAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.rows))
            aws_cdk_lib_IResolvable(p.rows);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_HeatMapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorScale))
            aws_cdk_lib_IResolvable(p.colorScale);
        if (!visitedObjects.has(p.columnLabelOptions))
            aws_cdk_lib_IResolvable(p.columnLabelOptions);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.rowLabelOptions))
            aws_cdk_lib_IResolvable(p.rowLabelOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_HeatMapFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.heatMapAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.heatMapAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_HeatMapSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.heatMapColumnItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.heatMapColumnItemsLimitConfiguration);
        if (!visitedObjects.has(p.heatMapColumnSort))
            aws_cdk_lib_IResolvable(p.heatMapColumnSort);
        if (!visitedObjects.has(p.heatMapRowItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.heatMapRowItemsLimitConfiguration);
        if (!visitedObjects.has(p.heatMapRowSort))
            aws_cdk_lib_IResolvable(p.heatMapRowSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_HeatMapVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_HistogramAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_HistogramBinOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.binCount))
            aws_cdk_lib_IResolvable(p.binCount);
        if (!visitedObjects.has(p.binWidth))
            aws_cdk_lib_IResolvable(p.binWidth);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_HistogramConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.binOptions))
            aws_cdk_lib_IResolvable(p.binOptions);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.xAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.xAxisDisplayOptions);
        if (!visitedObjects.has(p.xAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.xAxisLabelOptions);
        if (!visitedObjects.has(p.yAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.yAxisDisplayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_HistogramFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.histogramAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.histogramAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_HistogramVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_InsightConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.computations))
            aws_cdk_lib_IResolvable(p.computations);
        if (!visitedObjects.has(p.customNarrative))
            aws_cdk_lib_IResolvable(p.customNarrative);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_InsightVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.insightConfiguration))
            aws_cdk_lib_IResolvable(p.insightConfiguration);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_IntegerDefaultValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicValue))
            aws_cdk_lib_IResolvable(p.dynamicValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_IntegerParameterProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_IntegerParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValues))
            aws_cdk_lib_IResolvable(p.defaultValues);
        if (!visitedObjects.has(p.mappedDataSetParameters))
            aws_cdk_lib_IResolvable(p.mappedDataSetParameters);
        if (!visitedObjects.has(p.valueWhenUnset))
            aws_cdk_lib_IResolvable(p.valueWhenUnset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_IntegerValueWhenUnsetConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ItemsLimitConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.primaryValue))
            aws_cdk_lib_IResolvable(p.primaryValue);
        if (!visitedObjects.has(p.progressBar))
            aws_cdk_lib_IResolvable(p.progressBar);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.kpiOptions))
            aws_cdk_lib_IResolvable(p.kpiOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetValues))
            aws_cdk_lib_IResolvable(p.targetValues);
        if (!visitedObjects.has(p.trendGroups))
            aws_cdk_lib_IResolvable(p.trendGroups);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.comparison))
            aws_cdk_lib_IResolvable(p.comparison);
        if (!visitedObjects.has(p.primaryValueFontConfiguration))
            aws_cdk_lib_IResolvable(p.primaryValueFontConfiguration);
        if (!visitedObjects.has(p.progressBar))
            aws_cdk_lib_IResolvable(p.progressBar);
        if (!visitedObjects.has(p.secondaryValue))
            aws_cdk_lib_IResolvable(p.secondaryValue);
        if (!visitedObjects.has(p.secondaryValueFontConfiguration))
            aws_cdk_lib_IResolvable(p.secondaryValueFontConfiguration);
        if (!visitedObjects.has(p.trendArrows))
            aws_cdk_lib_IResolvable(p.trendArrows);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIPrimaryValueConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.icon))
            aws_cdk_lib_IResolvable(p.icon);
        if (!visitedObjects.has(p.textColor))
            aws_cdk_lib_IResolvable(p.textColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIProgressBarConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.foregroundColor))
            aws_cdk_lib_IResolvable(p.foregroundColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_KPISortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trendGroupSort))
            aws_cdk_lib_IResolvable(p.trendGroupSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LayoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.freeFormLayout))
            aws_cdk_lib_IResolvable(p.freeFormLayout);
        if (!visitedObjects.has(p.gridLayout))
            aws_cdk_lib_IResolvable(p.gridLayout);
        if (!visitedObjects.has(p.sectionBasedLayout))
            aws_cdk_lib_IResolvable(p.sectionBasedLayout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LegendOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.smallMultiples))
            aws_cdk_lib_IResolvable(p.smallMultiples);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.contributionAnalysisDefaults))
            aws_cdk_lib_IResolvable(p.contributionAnalysisDefaults);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.defaultSeriesSettings))
            aws_cdk_lib_IResolvable(p.defaultSeriesSettings);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.forecastConfigurations))
            aws_cdk_lib_IResolvable(p.forecastConfigurations);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.primaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.primaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisLabelOptions);
        if (!visitedObjects.has(p.referenceLines))
            aws_cdk_lib_IResolvable(p.referenceLines);
        if (!visitedObjects.has(p.secondaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.secondaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.secondaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.secondaryYAxisLabelOptions);
        if (!visitedObjects.has(p.series))
            aws_cdk_lib_IResolvable(p.series);
        if (!visitedObjects.has(p.smallMultiplesOptions))
            aws_cdk_lib_IResolvable(p.smallMultiplesOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.xAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.xAxisDisplayOptions);
        if (!visitedObjects.has(p.xAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.xAxisLabelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartDefaultSeriesSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lineStyleSettings))
            aws_cdk_lib_IResolvable(p.lineStyleSettings);
        if (!visitedObjects.has(p.markerStyleSettings))
            aws_cdk_lib_IResolvable(p.markerStyleSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lineChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.lineChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartLineStyleSettingsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartMarkerStyleSettingsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartSeriesSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lineStyleSettings))
            aws_cdk_lib_IResolvable(p.lineStyleSettings);
        if (!visitedObjects.has(p.markerStyleSettings))
            aws_cdk_lib_IResolvable(p.markerStyleSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.categoryItemsLimitConfiguration);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.colorItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.colorItemsLimitConfiguration);
        if (!visitedObjects.has(p.smallMultiplesLimitConfiguration))
            aws_cdk_lib_IResolvable(p.smallMultiplesLimitConfiguration);
        if (!visitedObjects.has(p.smallMultiplesSort))
            aws_cdk_lib_IResolvable(p.smallMultiplesSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LineSeriesAxisDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.axisOptions))
            aws_cdk_lib_IResolvable(p.axisOptions);
        if (!visitedObjects.has(p.missingDataConfigurations))
            aws_cdk_lib_IResolvable(p.missingDataConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ListControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.searchOptions))
            aws_cdk_lib_IResolvable(p.searchOptions);
        if (!visitedObjects.has(p.selectAllOptions))
            aws_cdk_lib_IResolvable(p.selectAllOptions);
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ListControlSearchOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ListControlSelectAllOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LoadingAnimationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LocalNavigationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_LongFormatTextProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_MappedDataSetParameterProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_MaximumLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_MaximumMinimumComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_MeasureFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.calculatedMeasureField))
            aws_cdk_lib_IResolvable(p.calculatedMeasureField);
        if (!visitedObjects.has(p.categoricalMeasureField))
            aws_cdk_lib_IResolvable(p.categoricalMeasureField);
        if (!visitedObjects.has(p.dateMeasureField))
            aws_cdk_lib_IResolvable(p.dateMeasureField);
        if (!visitedObjects.has(p.numericalMeasureField))
            aws_cdk_lib_IResolvable(p.numericalMeasureField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_MetricComparisonComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fromValue))
            aws_cdk_lib_IResolvable(p.fromValue);
        if (!visitedObjects.has(p.targetValue))
            aws_cdk_lib_IResolvable(p.targetValue);
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_MinimumLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_MissingDataConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NegativeValueConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NullValueFormatConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NumberDisplayFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decimalPlacesConfiguration))
            aws_cdk_lib_IResolvable(p.decimalPlacesConfiguration);
        if (!visitedObjects.has(p.negativeValueConfiguration))
            aws_cdk_lib_IResolvable(p.negativeValueConfiguration);
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.separatorConfiguration))
            aws_cdk_lib_IResolvable(p.separatorConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NumberFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericAxisOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.range))
            aws_cdk_lib_IResolvable(p.range);
        if (!visitedObjects.has(p.scale))
            aws_cdk_lib_IResolvable(p.scale);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericEqualityDrillDownFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericEqualityFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.currencyDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.currencyDisplayFormatConfiguration);
        if (!visitedObjects.has(p.numberDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numberDisplayFormatConfiguration);
        if (!visitedObjects.has(p.percentageDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.percentageDisplayFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericRangeFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
        if (!visitedObjects.has(p.rangeMaximum))
            aws_cdk_lib_IResolvable(p.rangeMaximum);
        if (!visitedObjects.has(p.rangeMinimum))
            aws_cdk_lib_IResolvable(p.rangeMinimum);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericRangeFilterValueProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericSeparatorConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.thousandsSeparator))
            aws_cdk_lib_IResolvable(p.thousandsSeparator);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericalAggregationFunctionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.percentileAggregation))
            aws_cdk_lib_IResolvable(p.percentileAggregation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericalDimensionFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericalMeasureFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PaginationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PanelConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PanelTitleOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimePicker))
            aws_cdk_lib_IResolvable(p.dateTimePicker);
        if (!visitedObjects.has(p.dropdown))
            aws_cdk_lib_IResolvable(p.dropdown);
        if (!visitedObjects.has(p.list))
            aws_cdk_lib_IResolvable(p.list);
        if (!visitedObjects.has(p.slider))
            aws_cdk_lib_IResolvable(p.slider);
        if (!visitedObjects.has(p.textArea))
            aws_cdk_lib_IResolvable(p.textArea);
        if (!visitedObjects.has(p.textField))
            aws_cdk_lib_IResolvable(p.textField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterDateTimePickerControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimeParameterDeclaration))
            aws_cdk_lib_IResolvable(p.dateTimeParameterDeclaration);
        if (!visitedObjects.has(p.decimalParameterDeclaration))
            aws_cdk_lib_IResolvable(p.decimalParameterDeclaration);
        if (!visitedObjects.has(p.integerParameterDeclaration))
            aws_cdk_lib_IResolvable(p.integerParameterDeclaration);
        if (!visitedObjects.has(p.stringParameterDeclaration))
            aws_cdk_lib_IResolvable(p.stringParameterDeclaration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterDropDownControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cascadingControlConfiguration))
            aws_cdk_lib_IResolvable(p.cascadingControlConfiguration);
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
        if (!visitedObjects.has(p.selectableValues))
            aws_cdk_lib_IResolvable(p.selectableValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterListControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cascadingControlConfiguration))
            aws_cdk_lib_IResolvable(p.cascadingControlConfiguration);
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
        if (!visitedObjects.has(p.selectableValues))
            aws_cdk_lib_IResolvable(p.selectableValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterSelectableValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.linkToDataSetColumn))
            aws_cdk_lib_IResolvable(p.linkToDataSetColumn);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterSliderControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterTextAreaControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterTextFieldControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimeParameters))
            aws_cdk_lib_IResolvable(p.dateTimeParameters);
        if (!visitedObjects.has(p.decimalParameters))
            aws_cdk_lib_IResolvable(p.decimalParameters);
        if (!visitedObjects.has(p.integerParameters))
            aws_cdk_lib_IResolvable(p.integerParameters);
        if (!visitedObjects.has(p.stringParameters))
            aws_cdk_lib_IResolvable(p.stringParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PercentVisibleRangeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PercentageDisplayFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decimalPlacesConfiguration))
            aws_cdk_lib_IResolvable(p.decimalPlacesConfiguration);
        if (!visitedObjects.has(p.negativeValueConfiguration))
            aws_cdk_lib_IResolvable(p.negativeValueConfiguration);
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.separatorConfiguration))
            aws_cdk_lib_IResolvable(p.separatorConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PercentileAggregationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PeriodOverPeriodComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PeriodToDateComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PieChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.smallMultiples))
            aws_cdk_lib_IResolvable(p.smallMultiples);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PieChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.contributionAnalysisDefaults))
            aws_cdk_lib_IResolvable(p.contributionAnalysisDefaults);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.donutOptions))
            aws_cdk_lib_IResolvable(p.donutOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.smallMultiplesOptions))
            aws_cdk_lib_IResolvable(p.smallMultiplesOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.valueLabelOptions))
            aws_cdk_lib_IResolvable(p.valueLabelOptions);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PieChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pieChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.pieChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PieChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.smallMultiplesLimitConfiguration))
            aws_cdk_lib_IResolvable(p.smallMultiplesLimitConfiguration);
        if (!visitedObjects.has(p.smallMultiplesSort))
            aws_cdk_lib_IResolvable(p.smallMultiplesSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PieChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotFieldSortOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sortBy))
            aws_cdk_lib_IResolvable(p.sortBy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.rows))
            aws_cdk_lib_IResolvable(p.rows);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableCellConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scope))
            aws_cdk_lib_IResolvable(p.scope);
        if (!visitedObjects.has(p.textFormat))
            aws_cdk_lib_IResolvable(p.textFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cell))
            aws_cdk_lib_IResolvable(p.cell);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableConditionalFormattingScopeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldOptions))
            aws_cdk_lib_IResolvable(p.fieldOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.paginatedReportOptions))
            aws_cdk_lib_IResolvable(p.paginatedReportOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tableOptions))
            aws_cdk_lib_IResolvable(p.tableOptions);
        if (!visitedObjects.has(p.totalOptions))
            aws_cdk_lib_IResolvable(p.totalOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableDataPathOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataPathList))
            aws_cdk_lib_IResolvable(p.dataPathList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableFieldOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableFieldOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataPathOptions))
            aws_cdk_lib_IResolvable(p.dataPathOptions);
        if (!visitedObjects.has(p.selectedFieldOptions))
            aws_cdk_lib_IResolvable(p.selectedFieldOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableFieldSubtotalOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pivotTableAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.pivotTableAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cellStyle))
            aws_cdk_lib_IResolvable(p.cellStyle);
        if (!visitedObjects.has(p.columnHeaderStyle))
            aws_cdk_lib_IResolvable(p.columnHeaderStyle);
        if (!visitedObjects.has(p.rowAlternateColorOptions))
            aws_cdk_lib_IResolvable(p.rowAlternateColorOptions);
        if (!visitedObjects.has(p.rowFieldNamesStyle))
            aws_cdk_lib_IResolvable(p.rowFieldNamesStyle);
        if (!visitedObjects.has(p.rowHeaderStyle))
            aws_cdk_lib_IResolvable(p.rowHeaderStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTablePaginatedReportOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableSortByProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.dataPath))
            aws_cdk_lib_IResolvable(p.dataPath);
        if (!visitedObjects.has(p.field))
            aws_cdk_lib_IResolvable(p.field);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldSortOptions))
            aws_cdk_lib_IResolvable(p.fieldSortOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableTotalOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnSubtotalOptions))
            aws_cdk_lib_IResolvable(p.columnSubtotalOptions);
        if (!visitedObjects.has(p.columnTotalOptions))
            aws_cdk_lib_IResolvable(p.columnTotalOptions);
        if (!visitedObjects.has(p.rowSubtotalOptions))
            aws_cdk_lib_IResolvable(p.rowSubtotalOptions);
        if (!visitedObjects.has(p.rowTotalOptions))
            aws_cdk_lib_IResolvable(p.rowTotalOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTotalOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricHeaderCellStyle))
            aws_cdk_lib_IResolvable(p.metricHeaderCellStyle);
        if (!visitedObjects.has(p.totalCellStyle))
            aws_cdk_lib_IResolvable(p.totalCellStyle);
        if (!visitedObjects.has(p.valueCellStyle))
            aws_cdk_lib_IResolvable(p.valueCellStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_PredefinedHierarchyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.drillDownFilters))
            aws_cdk_lib_IResolvable(p.drillDownFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ProgressBarOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.color))
            aws_cdk_lib_IResolvable(p.color);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartAreaStyleSettingsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.baseSeriesSettings))
            aws_cdk_lib_IResolvable(p.baseSeriesSettings);
        if (!visitedObjects.has(p.categoryAxis))
            aws_cdk_lib_IResolvable(p.categoryAxis);
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.colorAxis))
            aws_cdk_lib_IResolvable(p.colorAxis);
        if (!visitedObjects.has(p.colorLabelOptions))
            aws_cdk_lib_IResolvable(p.colorLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.radarChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.radarChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartSeriesSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.areaStyleSettings))
            aws_cdk_lib_IResolvable(p.areaStyleSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.colorItemsLimit))
            aws_cdk_lib_IResolvable(p.colorItemsLimit);
        if (!visitedObjects.has(p.colorSort))
            aws_cdk_lib_IResolvable(p.colorSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_RangeEndsLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataConfiguration))
            aws_cdk_lib_IResolvable(p.dataConfiguration);
        if (!visitedObjects.has(p.labelConfiguration))
            aws_cdk_lib_IResolvable(p.labelConfiguration);
        if (!visitedObjects.has(p.styleConfiguration))
            aws_cdk_lib_IResolvable(p.styleConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineCustomLabelConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineDataConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicConfiguration))
            aws_cdk_lib_IResolvable(p.dynamicConfiguration);
        if (!visitedObjects.has(p.staticConfiguration))
            aws_cdk_lib_IResolvable(p.staticConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineDynamicDataConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.calculation))
            aws_cdk_lib_IResolvable(p.calculation);
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.measureAggregationFunction))
            aws_cdk_lib_IResolvable(p.measureAggregationFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineLabelConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customLabelConfiguration))
            aws_cdk_lib_IResolvable(p.customLabelConfiguration);
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
        if (!visitedObjects.has(p.valueLabelConfiguration))
            aws_cdk_lib_IResolvable(p.valueLabelConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineStaticDataConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineStyleConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineValueLabelConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_RelativeDateTimeControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_RelativeDatesFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.anchorDateConfiguration))
            aws_cdk_lib_IResolvable(p.anchorDateConfiguration);
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.excludePeriodConfiguration))
            aws_cdk_lib_IResolvable(p.excludePeriodConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ResourcePermissionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_RollingDateConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_RowAlternateColorOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SameSheetTargetVisualConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SankeyDiagramAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_IResolvable(p.source);
        if (!visitedObjects.has(p.weight))
            aws_cdk_lib_IResolvable(p.weight);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SankeyDiagramChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SankeyDiagramFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sankeyDiagramAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.sankeyDiagramAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SankeyDiagramSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationItemsLimit))
            aws_cdk_lib_IResolvable(p.destinationItemsLimit);
        if (!visitedObjects.has(p.sourceItemsLimit))
            aws_cdk_lib_IResolvable(p.sourceItemsLimit);
        if (!visitedObjects.has(p.weightSort))
            aws_cdk_lib_IResolvable(p.weightSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SankeyDiagramVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ScatterPlotCategoricallyAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.size))
            aws_cdk_lib_IResolvable(p.size);
        if (!visitedObjects.has(p.xAxis))
            aws_cdk_lib_IResolvable(p.xAxis);
        if (!visitedObjects.has(p.yAxis))
            aws_cdk_lib_IResolvable(p.yAxis);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ScatterPlotConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.xAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.xAxisDisplayOptions);
        if (!visitedObjects.has(p.xAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.xAxisLabelOptions);
        if (!visitedObjects.has(p.yAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.yAxisDisplayOptions);
        if (!visitedObjects.has(p.yAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.yAxisLabelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ScatterPlotFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scatterPlotCategoricallyAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.scatterPlotCategoricallyAggregatedFieldWells);
        if (!visitedObjects.has(p.scatterPlotUnaggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.scatterPlotUnaggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ScatterPlotUnaggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.size))
            aws_cdk_lib_IResolvable(p.size);
        if (!visitedObjects.has(p.xAxis))
            aws_cdk_lib_IResolvable(p.xAxis);
        if (!visitedObjects.has(p.yAxis))
            aws_cdk_lib_IResolvable(p.yAxis);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ScatterPlotVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ScrollBarOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.visibleRange))
            aws_cdk_lib_IResolvable(p.visibleRange);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SecondaryValueOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionAfterPageBreakProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionBasedLayoutCanvasSizeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.paperCanvasSizeOptions))
            aws_cdk_lib_IResolvable(p.paperCanvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionBasedLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bodySections))
            aws_cdk_lib_IResolvable(p.bodySections);
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
        if (!visitedObjects.has(p.footerSections))
            aws_cdk_lib_IResolvable(p.footerSections);
        if (!visitedObjects.has(p.headerSections))
            aws_cdk_lib_IResolvable(p.headerSections);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionBasedLayoutPaperCanvasSizeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.paperMargin))
            aws_cdk_lib_IResolvable(p.paperMargin);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.freeFormLayout))
            aws_cdk_lib_IResolvable(p.freeFormLayout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionPageBreakConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.after))
            aws_cdk_lib_IResolvable(p.after);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionStyleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.padding))
            aws_cdk_lib_IResolvable(p.padding);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SelectedSheetsFilterScopeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sheetVisualScopingConfigurations))
            aws_cdk_lib_IResolvable(p.sheetVisualScopingConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SeriesItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataFieldSeriesItem))
            aws_cdk_lib_IResolvable(p.dataFieldSeriesItem);
        if (!visitedObjects.has(p.fieldSeriesItem))
            aws_cdk_lib_IResolvable(p.fieldSeriesItem);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SetParameterValueConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ShapeConditionalFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backgroundColor))
            aws_cdk_lib_IResolvable(p.backgroundColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetControlLayoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetControlLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.gridLayout))
            aws_cdk_lib_IResolvable(p.gridLayout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filterControls))
            aws_cdk_lib_IResolvable(p.filterControls);
        if (!visitedObjects.has(p.layouts))
            aws_cdk_lib_IResolvable(p.layouts);
        if (!visitedObjects.has(p.parameterControls))
            aws_cdk_lib_IResolvable(p.parameterControls);
        if (!visitedObjects.has(p.sheetControlLayouts))
            aws_cdk_lib_IResolvable(p.sheetControlLayouts);
        if (!visitedObjects.has(p.textBoxes))
            aws_cdk_lib_IResolvable(p.textBoxes);
        if (!visitedObjects.has(p.visuals))
            aws_cdk_lib_IResolvable(p.visuals);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetElementConfigurationOverridesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetElementRenderingRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurationOverrides))
            aws_cdk_lib_IResolvable(p.configurationOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetTextBoxProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetVisualScopingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ShortFormatTextProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SimpleClusterMarkerProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SliderControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SmallMultiplesOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.panelConfiguration))
            aws_cdk_lib_IResolvable(p.panelConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SpacingProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_StringDefaultValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicValue))
            aws_cdk_lib_IResolvable(p.dynamicValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_StringFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.numericFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numericFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_StringParameterProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_StringParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValues))
            aws_cdk_lib_IResolvable(p.defaultValues);
        if (!visitedObjects.has(p.mappedDataSetParameters))
            aws_cdk_lib_IResolvable(p.mappedDataSetParameters);
        if (!visitedObjects.has(p.valueWhenUnset))
            aws_cdk_lib_IResolvable(p.valueWhenUnset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_StringValueWhenUnsetConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_SubtotalOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldLevelOptions))
            aws_cdk_lib_IResolvable(p.fieldLevelOptions);
        if (!visitedObjects.has(p.metricHeaderCellStyle))
            aws_cdk_lib_IResolvable(p.metricHeaderCellStyle);
        if (!visitedObjects.has(p.totalCellStyle))
            aws_cdk_lib_IResolvable(p.totalCellStyle);
        if (!visitedObjects.has(p.valueCellStyle))
            aws_cdk_lib_IResolvable(p.valueCellStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupBy))
            aws_cdk_lib_IResolvable(p.groupBy);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableBorderOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableCellConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.textFormat))
            aws_cdk_lib_IResolvable(p.textFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableCellImageSizingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableCellStyleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.border))
            aws_cdk_lib_IResolvable(p.border);
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cell))
            aws_cdk_lib_IResolvable(p.cell);
        if (!visitedObjects.has(p.row))
            aws_cdk_lib_IResolvable(p.row);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldOptions))
            aws_cdk_lib_IResolvable(p.fieldOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.paginatedReportOptions))
            aws_cdk_lib_IResolvable(p.paginatedReportOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tableInlineVisualizations))
            aws_cdk_lib_IResolvable(p.tableInlineVisualizations);
        if (!visitedObjects.has(p.tableOptions))
            aws_cdk_lib_IResolvable(p.tableOptions);
        if (!visitedObjects.has(p.totalOptions))
            aws_cdk_lib_IResolvable(p.totalOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldCustomIconContentProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldCustomTextContentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldImageConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sizingOptions))
            aws_cdk_lib_IResolvable(p.sizingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldLinkConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.content))
            aws_cdk_lib_IResolvable(p.content);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldLinkContentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customIconContent))
            aws_cdk_lib_IResolvable(p.customIconContent);
        if (!visitedObjects.has(p.customTextContent))
            aws_cdk_lib_IResolvable(p.customTextContent);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.urlStyling))
            aws_cdk_lib_IResolvable(p.urlStyling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectedFieldOptions))
            aws_cdk_lib_IResolvable(p.selectedFieldOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldURLConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.imageConfiguration))
            aws_cdk_lib_IResolvable(p.imageConfiguration);
        if (!visitedObjects.has(p.linkConfiguration))
            aws_cdk_lib_IResolvable(p.linkConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tableAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.tableAggregatedFieldWells);
        if (!visitedObjects.has(p.tableUnaggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.tableUnaggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableInlineVisualizationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataBars))
            aws_cdk_lib_IResolvable(p.dataBars);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cellStyle))
            aws_cdk_lib_IResolvable(p.cellStyle);
        if (!visitedObjects.has(p.headerStyle))
            aws_cdk_lib_IResolvable(p.headerStyle);
        if (!visitedObjects.has(p.rowAlternateColorOptions))
            aws_cdk_lib_IResolvable(p.rowAlternateColorOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TablePaginatedReportOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableRowConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backgroundColor))
            aws_cdk_lib_IResolvable(p.backgroundColor);
        if (!visitedObjects.has(p.textColor))
            aws_cdk_lib_IResolvable(p.textColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableSideBorderOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bottom))
            aws_cdk_lib_IResolvable(p.bottom);
        if (!visitedObjects.has(p.innerHorizontal))
            aws_cdk_lib_IResolvable(p.innerHorizontal);
        if (!visitedObjects.has(p.innerVertical))
            aws_cdk_lib_IResolvable(p.innerVertical);
        if (!visitedObjects.has(p.left))
            aws_cdk_lib_IResolvable(p.left);
        if (!visitedObjects.has(p.right))
            aws_cdk_lib_IResolvable(p.right);
        if (!visitedObjects.has(p.top))
            aws_cdk_lib_IResolvable(p.top);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.paginationConfiguration))
            aws_cdk_lib_IResolvable(p.paginationConfiguration);
        if (!visitedObjects.has(p.rowSort))
            aws_cdk_lib_IResolvable(p.rowSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableUnaggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TableVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TextAreaControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.placeholderOptions))
            aws_cdk_lib_IResolvable(p.placeholderOptions);
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TextConditionalFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backgroundColor))
            aws_cdk_lib_IResolvable(p.backgroundColor);
        if (!visitedObjects.has(p.icon))
            aws_cdk_lib_IResolvable(p.icon);
        if (!visitedObjects.has(p.textColor))
            aws_cdk_lib_IResolvable(p.textColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TextControlPlaceholderOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TextFieldControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.placeholderOptions))
            aws_cdk_lib_IResolvable(p.placeholderOptions);
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_ThousandSeparatorOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TimeBasedForecastPropertiesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TimeEqualityFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TimeRangeDrillDownFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TimeRangeFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.excludePeriodConfiguration))
            aws_cdk_lib_IResolvable(p.excludePeriodConfiguration);
        if (!visitedObjects.has(p.rangeMaximumValue))
            aws_cdk_lib_IResolvable(p.rangeMaximumValue);
        if (!visitedObjects.has(p.rangeMinimumValue))
            aws_cdk_lib_IResolvable(p.rangeMinimumValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TimeRangeFilterValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rollingDate))
            aws_cdk_lib_IResolvable(p.rollingDate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TooltipItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnTooltipItem))
            aws_cdk_lib_IResolvable(p.columnTooltipItem);
        if (!visitedObjects.has(p.fieldTooltipItem))
            aws_cdk_lib_IResolvable(p.fieldTooltipItem);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TooltipOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldBasedTooltip))
            aws_cdk_lib_IResolvable(p.fieldBasedTooltip);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TopBottomFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aggregationSortConfigurations))
            aws_cdk_lib_IResolvable(p.aggregationSortConfigurations);
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TopBottomMoversComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TopBottomRankedComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TotalAggregationComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TotalOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.totalCellStyle))
            aws_cdk_lib_IResolvable(p.totalCellStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TreeMapAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.groups))
            aws_cdk_lib_IResolvable(p.groups);
        if (!visitedObjects.has(p.sizes))
            aws_cdk_lib_IResolvable(p.sizes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TreeMapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorLabelOptions))
            aws_cdk_lib_IResolvable(p.colorLabelOptions);
        if (!visitedObjects.has(p.colorScale))
            aws_cdk_lib_IResolvable(p.colorScale);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.groupLabelOptions))
            aws_cdk_lib_IResolvable(p.groupLabelOptions);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.sizeLabelOptions))
            aws_cdk_lib_IResolvable(p.sizeLabelOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TreeMapFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.treeMapAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.treeMapAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TreeMapSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.treeMapGroupItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.treeMapGroupItemsLimitConfiguration);
        if (!visitedObjects.has(p.treeMapSort))
            aws_cdk_lib_IResolvable(p.treeMapSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TreeMapVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_TrendArrowOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_UnaggregatedFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_UniqueValuesComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_VisibleRangeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.percentRange))
            aws_cdk_lib_IResolvable(p.percentRange);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_VisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.barChartVisual))
            aws_cdk_lib_IResolvable(p.barChartVisual);
        if (!visitedObjects.has(p.boxPlotVisual))
            aws_cdk_lib_IResolvable(p.boxPlotVisual);
        if (!visitedObjects.has(p.comboChartVisual))
            aws_cdk_lib_IResolvable(p.comboChartVisual);
        if (!visitedObjects.has(p.customContentVisual))
            aws_cdk_lib_IResolvable(p.customContentVisual);
        if (!visitedObjects.has(p.emptyVisual))
            aws_cdk_lib_IResolvable(p.emptyVisual);
        if (!visitedObjects.has(p.filledMapVisual))
            aws_cdk_lib_IResolvable(p.filledMapVisual);
        if (!visitedObjects.has(p.funnelChartVisual))
            aws_cdk_lib_IResolvable(p.funnelChartVisual);
        if (!visitedObjects.has(p.gaugeChartVisual))
            aws_cdk_lib_IResolvable(p.gaugeChartVisual);
        if (!visitedObjects.has(p.geospatialMapVisual))
            aws_cdk_lib_IResolvable(p.geospatialMapVisual);
        if (!visitedObjects.has(p.heatMapVisual))
            aws_cdk_lib_IResolvable(p.heatMapVisual);
        if (!visitedObjects.has(p.histogramVisual))
            aws_cdk_lib_IResolvable(p.histogramVisual);
        if (!visitedObjects.has(p.insightVisual))
            aws_cdk_lib_IResolvable(p.insightVisual);
        if (!visitedObjects.has(p.kpiVisual))
            aws_cdk_lib_IResolvable(p.kpiVisual);
        if (!visitedObjects.has(p.lineChartVisual))
            aws_cdk_lib_IResolvable(p.lineChartVisual);
        if (!visitedObjects.has(p.pieChartVisual))
            aws_cdk_lib_IResolvable(p.pieChartVisual);
        if (!visitedObjects.has(p.pivotTableVisual))
            aws_cdk_lib_IResolvable(p.pivotTableVisual);
        if (!visitedObjects.has(p.radarChartVisual))
            aws_cdk_lib_IResolvable(p.radarChartVisual);
        if (!visitedObjects.has(p.sankeyDiagramVisual))
            aws_cdk_lib_IResolvable(p.sankeyDiagramVisual);
        if (!visitedObjects.has(p.scatterPlotVisual))
            aws_cdk_lib_IResolvable(p.scatterPlotVisual);
        if (!visitedObjects.has(p.tableVisual))
            aws_cdk_lib_IResolvable(p.tableVisual);
        if (!visitedObjects.has(p.treeMapVisual))
            aws_cdk_lib_IResolvable(p.treeMapVisual);
        if (!visitedObjects.has(p.waterfallVisual))
            aws_cdk_lib_IResolvable(p.waterfallVisual);
        if (!visitedObjects.has(p.wordCloudVisual))
            aws_cdk_lib_IResolvable(p.wordCloudVisual);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_VisualCustomActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actionOperations))
            aws_cdk_lib_IResolvable(p.actionOperations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_VisualCustomActionOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filterOperation))
            aws_cdk_lib_IResolvable(p.filterOperation);
        if (!visitedObjects.has(p.navigationOperation))
            aws_cdk_lib_IResolvable(p.navigationOperation);
        if (!visitedObjects.has(p.setParametersOperation))
            aws_cdk_lib_IResolvable(p.setParametersOperation);
        if (!visitedObjects.has(p.urlOperation))
            aws_cdk_lib_IResolvable(p.urlOperation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_VisualPaletteProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorMap))
            aws_cdk_lib_IResolvable(p.colorMap);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_VisualSubtitleLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatText))
            aws_cdk_lib_IResolvable(p.formatText);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_VisualTitleLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatText))
            aws_cdk_lib_IResolvable(p.formatText);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WaterfallChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.breakdowns))
            aws_cdk_lib_IResolvable(p.breakdowns);
        if (!visitedObjects.has(p.categories))
            aws_cdk_lib_IResolvable(p.categories);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WaterfallChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.categoryAxisDisplayOptions);
        if (!visitedObjects.has(p.categoryAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryAxisLabelOptions);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.primaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.primaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisLabelOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.waterfallChartOptions))
            aws_cdk_lib_IResolvable(p.waterfallChartOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WaterfallChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.waterfallChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.waterfallChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WaterfallChartOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WaterfallChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.breakdownItemsLimit))
            aws_cdk_lib_IResolvable(p.breakdownItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WaterfallVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WhatIfPointScenarioProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WhatIfRangeScenarioProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WordCloudAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupBy))
            aws_cdk_lib_IResolvable(p.groupBy);
        if (!visitedObjects.has(p.size))
            aws_cdk_lib_IResolvable(p.size);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WordCloudChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.wordCloudOptions))
            aws_cdk_lib_IResolvable(p.wordCloudOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WordCloudFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.wordCloudAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.wordCloudAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WordCloudOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WordCloudSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnAnalysis_WordCloudVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboardProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dashboardPublishOptions))
            aws_cdk_lib_IResolvable(p.dashboardPublishOptions);
        if (!visitedObjects.has(p.definition))
            aws_cdk_lib_IResolvable(p.definition);
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (!visitedObjects.has(p.permissions))
            aws_cdk_lib_IResolvable(p.permissions);
        if (!visitedObjects.has(p.sourceEntity))
            aws_cdk_lib_IResolvable(p.sourceEntity);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AdHocFilteringOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AggregationFunctionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.numericalAggregationFunction))
            aws_cdk_lib_IResolvable(p.numericalAggregationFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AggregationSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AnalysisDefaultsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultNewSheetConfiguration))
            aws_cdk_lib_IResolvable(p.defaultNewSheetConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AnchorDateConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ArcAxisConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.range))
            aws_cdk_lib_IResolvable(p.range);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ArcAxisDisplayRangeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ArcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ArcOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AxisDataOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateAxisOptions))
            aws_cdk_lib_IResolvable(p.dateAxisOptions);
        if (!visitedObjects.has(p.numericAxisOptions))
            aws_cdk_lib_IResolvable(p.numericAxisOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AxisDisplayMinMaxRangeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AxisDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataOptions))
            aws_cdk_lib_IResolvable(p.dataOptions);
        if (!visitedObjects.has(p.scrollbarOptions))
            aws_cdk_lib_IResolvable(p.scrollbarOptions);
        if (!visitedObjects.has(p.tickLabelOptions))
            aws_cdk_lib_IResolvable(p.tickLabelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AxisDisplayRangeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.minMax))
            aws_cdk_lib_IResolvable(p.minMax);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AxisLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.applyTo))
            aws_cdk_lib_IResolvable(p.applyTo);
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AxisLabelReferenceOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AxisLinearScaleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AxisLogarithmicScaleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AxisScaleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.linear))
            aws_cdk_lib_IResolvable(p.linear);
        if (!visitedObjects.has(p.logarithmic))
            aws_cdk_lib_IResolvable(p.logarithmic);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_AxisTickLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.labelOptions))
            aws_cdk_lib_IResolvable(p.labelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BarChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.smallMultiples))
            aws_cdk_lib_IResolvable(p.smallMultiples);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BarChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryAxis))
            aws_cdk_lib_IResolvable(p.categoryAxis);
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.colorLabelOptions))
            aws_cdk_lib_IResolvable(p.colorLabelOptions);
        if (!visitedObjects.has(p.contributionAnalysisDefaults))
            aws_cdk_lib_IResolvable(p.contributionAnalysisDefaults);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.referenceLines))
            aws_cdk_lib_IResolvable(p.referenceLines);
        if (!visitedObjects.has(p.smallMultiplesOptions))
            aws_cdk_lib_IResolvable(p.smallMultiplesOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.valueAxis))
            aws_cdk_lib_IResolvable(p.valueAxis);
        if (!visitedObjects.has(p.valueLabelOptions))
            aws_cdk_lib_IResolvable(p.valueLabelOptions);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BarChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.barChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.barChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BarChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.colorItemsLimit))
            aws_cdk_lib_IResolvable(p.colorItemsLimit);
        if (!visitedObjects.has(p.colorSort))
            aws_cdk_lib_IResolvable(p.colorSort);
        if (!visitedObjects.has(p.smallMultiplesLimitConfiguration))
            aws_cdk_lib_IResolvable(p.smallMultiplesLimitConfiguration);
        if (!visitedObjects.has(p.smallMultiplesSort))
            aws_cdk_lib_IResolvable(p.smallMultiplesSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BarChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BinCountOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BinWidthOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BodySectionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.content))
            aws_cdk_lib_IResolvable(p.content);
        if (!visitedObjects.has(p.pageBreakConfiguration))
            aws_cdk_lib_IResolvable(p.pageBreakConfiguration);
        if (!visitedObjects.has(p.style))
            aws_cdk_lib_IResolvable(p.style);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BodySectionContentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.layout))
            aws_cdk_lib_IResolvable(p.layout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupBy))
            aws_cdk_lib_IResolvable(p.groupBy);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.boxPlotOptions))
            aws_cdk_lib_IResolvable(p.boxPlotOptions);
        if (!visitedObjects.has(p.categoryAxis))
            aws_cdk_lib_IResolvable(p.categoryAxis);
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.primaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.primaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisLabelOptions);
        if (!visitedObjects.has(p.referenceLines))
            aws_cdk_lib_IResolvable(p.referenceLines);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.boxPlotAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.boxPlotAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.styleOptions))
            aws_cdk_lib_IResolvable(p.styleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.paginationConfiguration))
            aws_cdk_lib_IResolvable(p.paginationConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotStyleOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CalculatedFieldProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CalculatedMeasureFieldProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CascadingControlConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceControls))
            aws_cdk_lib_IResolvable(p.sourceControls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CascadingControlSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnToMatch))
            aws_cdk_lib_IResolvable(p.columnToMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CategoricalDimensionFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CategoricalMeasureFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CategoryDrillDownFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CategoryFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CategoryFilterConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customFilterConfiguration))
            aws_cdk_lib_IResolvable(p.customFilterConfiguration);
        if (!visitedObjects.has(p.customFilterListConfiguration))
            aws_cdk_lib_IResolvable(p.customFilterListConfiguration);
        if (!visitedObjects.has(p.filterListConfiguration))
            aws_cdk_lib_IResolvable(p.filterListConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ChartAxisLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.axisLabelOptions))
            aws_cdk_lib_IResolvable(p.axisLabelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ClusterMarkerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.simpleClusterMarker))
            aws_cdk_lib_IResolvable(p.simpleClusterMarker);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ClusterMarkerConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterMarker))
            aws_cdk_lib_IResolvable(p.clusterMarker);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ColorScaleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.nullValueColor))
            aws_cdk_lib_IResolvable(p.nullValueColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ColorsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customColors))
            aws_cdk_lib_IResolvable(p.customColors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ColumnConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.colorsConfiguration))
            aws_cdk_lib_IResolvable(p.colorsConfiguration);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ColumnHierarchyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimeHierarchy))
            aws_cdk_lib_IResolvable(p.dateTimeHierarchy);
        if (!visitedObjects.has(p.explicitHierarchy))
            aws_cdk_lib_IResolvable(p.explicitHierarchy);
        if (!visitedObjects.has(p.predefinedHierarchy))
            aws_cdk_lib_IResolvable(p.predefinedHierarchy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ColumnIdentifierProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ColumnSortProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sortBy))
            aws_cdk_lib_IResolvable(p.sortBy);
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ColumnTooltipItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.aggregation))
            aws_cdk_lib_IResolvable(p.aggregation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ComboChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.barValues))
            aws_cdk_lib_IResolvable(p.barValues);
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.lineValues))
            aws_cdk_lib_IResolvable(p.lineValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ComboChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.barDataLabels))
            aws_cdk_lib_IResolvable(p.barDataLabels);
        if (!visitedObjects.has(p.categoryAxis))
            aws_cdk_lib_IResolvable(p.categoryAxis);
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.colorLabelOptions))
            aws_cdk_lib_IResolvable(p.colorLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.lineDataLabels))
            aws_cdk_lib_IResolvable(p.lineDataLabels);
        if (!visitedObjects.has(p.primaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.primaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisLabelOptions);
        if (!visitedObjects.has(p.referenceLines))
            aws_cdk_lib_IResolvable(p.referenceLines);
        if (!visitedObjects.has(p.secondaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.secondaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.secondaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.secondaryYAxisLabelOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ComboChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.comboChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.comboChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ComboChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.colorItemsLimit))
            aws_cdk_lib_IResolvable(p.colorItemsLimit);
        if (!visitedObjects.has(p.colorSort))
            aws_cdk_lib_IResolvable(p.colorSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ComboChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ComparisonConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.comparisonFormat))
            aws_cdk_lib_IResolvable(p.comparisonFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ComparisonFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.numberDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numberDisplayFormatConfiguration);
        if (!visitedObjects.has(p.percentageDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.percentageDisplayFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forecast))
            aws_cdk_lib_IResolvable(p.forecast);
        if (!visitedObjects.has(p.growthRate))
            aws_cdk_lib_IResolvable(p.growthRate);
        if (!visitedObjects.has(p.maximumMinimum))
            aws_cdk_lib_IResolvable(p.maximumMinimum);
        if (!visitedObjects.has(p.metricComparison))
            aws_cdk_lib_IResolvable(p.metricComparison);
        if (!visitedObjects.has(p.periodOverPeriod))
            aws_cdk_lib_IResolvable(p.periodOverPeriod);
        if (!visitedObjects.has(p.periodToDate))
            aws_cdk_lib_IResolvable(p.periodToDate);
        if (!visitedObjects.has(p.topBottomMovers))
            aws_cdk_lib_IResolvable(p.topBottomMovers);
        if (!visitedObjects.has(p.topBottomRanked))
            aws_cdk_lib_IResolvable(p.topBottomRanked);
        if (!visitedObjects.has(p.totalAggregation))
            aws_cdk_lib_IResolvable(p.totalAggregation);
        if (!visitedObjects.has(p.uniqueValues))
            aws_cdk_lib_IResolvable(p.uniqueValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingColorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.gradient))
            aws_cdk_lib_IResolvable(p.gradient);
        if (!visitedObjects.has(p.solid))
            aws_cdk_lib_IResolvable(p.solid);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingCustomIconConditionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.iconOptions))
            aws_cdk_lib_IResolvable(p.iconOptions);
        if (!visitedObjects.has(p.displayConfiguration))
            aws_cdk_lib_IResolvable(p.displayConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingCustomIconOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingGradientColorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.color))
            aws_cdk_lib_IResolvable(p.color);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingIconProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customCondition))
            aws_cdk_lib_IResolvable(p.customCondition);
        if (!visitedObjects.has(p.iconSet))
            aws_cdk_lib_IResolvable(p.iconSet);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingIconDisplayConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingIconSetProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingSolidColorProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ContributionAnalysisDefaultProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.contributorDimensions))
            aws_cdk_lib_IResolvable(p.contributorDimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CurrencyDisplayFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decimalPlacesConfiguration))
            aws_cdk_lib_IResolvable(p.decimalPlacesConfiguration);
        if (!visitedObjects.has(p.negativeValueConfiguration))
            aws_cdk_lib_IResolvable(p.negativeValueConfiguration);
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.separatorConfiguration))
            aws_cdk_lib_IResolvable(p.separatorConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CustomActionFilterOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectedFieldsConfiguration))
            aws_cdk_lib_IResolvable(p.selectedFieldsConfiguration);
        if (!visitedObjects.has(p.targetVisualsConfiguration))
            aws_cdk_lib_IResolvable(p.targetVisualsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CustomActionNavigationOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.localNavigationConfiguration))
            aws_cdk_lib_IResolvable(p.localNavigationConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CustomActionSetParametersOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameterValueConfigurations))
            aws_cdk_lib_IResolvable(p.parameterValueConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CustomActionURLOperationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CustomColorProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CustomContentConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CustomContentVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CustomFilterConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CustomFilterListConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CustomNarrativeOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CustomParameterValuesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_CustomValuesConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customValues))
            aws_cdk_lib_IResolvable(p.customValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardErrorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.violatedEntities))
            aws_cdk_lib_IResolvable(p.violatedEntities);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardPublishOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.adHocFilteringOption))
            aws_cdk_lib_IResolvable(p.adHocFilteringOption);
        if (!visitedObjects.has(p.dataPointDrillUpDownOption))
            aws_cdk_lib_IResolvable(p.dataPointDrillUpDownOption);
        if (!visitedObjects.has(p.dataPointMenuLabelOption))
            aws_cdk_lib_IResolvable(p.dataPointMenuLabelOption);
        if (!visitedObjects.has(p.dataPointTooltipOption))
            aws_cdk_lib_IResolvable(p.dataPointTooltipOption);
        if (!visitedObjects.has(p.exportToCsvOption))
            aws_cdk_lib_IResolvable(p.exportToCsvOption);
        if (!visitedObjects.has(p.exportWithHiddenFieldsOption))
            aws_cdk_lib_IResolvable(p.exportWithHiddenFieldsOption);
        if (!visitedObjects.has(p.sheetControlsOption))
            aws_cdk_lib_IResolvable(p.sheetControlsOption);
        if (!visitedObjects.has(p.sheetLayoutElementMaximizationOption))
            aws_cdk_lib_IResolvable(p.sheetLayoutElementMaximizationOption);
        if (!visitedObjects.has(p.visualAxisSortOption))
            aws_cdk_lib_IResolvable(p.visualAxisSortOption);
        if (!visitedObjects.has(p.visualMenuOption))
            aws_cdk_lib_IResolvable(p.visualMenuOption);
        if (!visitedObjects.has(p.visualPublishOptions))
            aws_cdk_lib_IResolvable(p.visualPublishOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardSourceEntityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceTemplate))
            aws_cdk_lib_IResolvable(p.sourceTemplate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardSourceTemplateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSetReferences))
            aws_cdk_lib_IResolvable(p.dataSetReferences);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardVersionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.errors))
            aws_cdk_lib_IResolvable(p.errors);
        if (!visitedObjects.has(p.sheets))
            aws_cdk_lib_IResolvable(p.sheets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardVersionDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSetIdentifierDeclarations))
            aws_cdk_lib_IResolvable(p.dataSetIdentifierDeclarations);
        if (!visitedObjects.has(p.analysisDefaults))
            aws_cdk_lib_IResolvable(p.analysisDefaults);
        if (!visitedObjects.has(p.calculatedFields))
            aws_cdk_lib_IResolvable(p.calculatedFields);
        if (!visitedObjects.has(p.columnConfigurations))
            aws_cdk_lib_IResolvable(p.columnConfigurations);
        if (!visitedObjects.has(p.filterGroups))
            aws_cdk_lib_IResolvable(p.filterGroups);
        if (!visitedObjects.has(p.parameterDeclarations))
            aws_cdk_lib_IResolvable(p.parameterDeclarations);
        if (!visitedObjects.has(p.sheets))
            aws_cdk_lib_IResolvable(p.sheets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardVisualPublishOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.exportHiddenFieldsOption))
            aws_cdk_lib_IResolvable(p.exportHiddenFieldsOption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataBarsOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataColorProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataFieldSeriesItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.settings))
            aws_cdk_lib_IResolvable(p.settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLabelTypes))
            aws_cdk_lib_IResolvable(p.dataLabelTypes);
        if (!visitedObjects.has(p.labelFontConfiguration))
            aws_cdk_lib_IResolvable(p.labelFontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataLabelTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataPathLabelType))
            aws_cdk_lib_IResolvable(p.dataPathLabelType);
        if (!visitedObjects.has(p.fieldLabelType))
            aws_cdk_lib_IResolvable(p.fieldLabelType);
        if (!visitedObjects.has(p.maximumLabelType))
            aws_cdk_lib_IResolvable(p.maximumLabelType);
        if (!visitedObjects.has(p.minimumLabelType))
            aws_cdk_lib_IResolvable(p.minimumLabelType);
        if (!visitedObjects.has(p.rangeEndsLabelType))
            aws_cdk_lib_IResolvable(p.rangeEndsLabelType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataPathColorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.element))
            aws_cdk_lib_IResolvable(p.element);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataPathLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataPathSortProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sortPaths))
            aws_cdk_lib_IResolvable(p.sortPaths);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataPathValueProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataPointDrillUpDownOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataPointMenuLabelOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataPointTooltipOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataSetIdentifierDeclarationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DataSetReferenceProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DateAxisOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DateDimensionFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DateMeasureFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimeDefaultValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicValue))
            aws_cdk_lib_IResolvable(p.dynamicValue);
        if (!visitedObjects.has(p.rollingDate))
            aws_cdk_lib_IResolvable(p.rollingDate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimeFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.numericFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numericFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimeHierarchyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.drillDownFilters))
            aws_cdk_lib_IResolvable(p.drillDownFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimeParameterProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimeParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValues))
            aws_cdk_lib_IResolvable(p.defaultValues);
        if (!visitedObjects.has(p.mappedDataSetParameters))
            aws_cdk_lib_IResolvable(p.mappedDataSetParameters);
        if (!visitedObjects.has(p.valueWhenUnset))
            aws_cdk_lib_IResolvable(p.valueWhenUnset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimePickerControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimeValueWhenUnsetConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DecimalDefaultValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicValue))
            aws_cdk_lib_IResolvable(p.dynamicValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DecimalParameterProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DecimalParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValues))
            aws_cdk_lib_IResolvable(p.defaultValues);
        if (!visitedObjects.has(p.mappedDataSetParameters))
            aws_cdk_lib_IResolvable(p.mappedDataSetParameters);
        if (!visitedObjects.has(p.valueWhenUnset))
            aws_cdk_lib_IResolvable(p.valueWhenUnset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DecimalPlacesConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DecimalValueWhenUnsetConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DefaultFreeFormLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DefaultGridLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DefaultInteractiveLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.freeForm))
            aws_cdk_lib_IResolvable(p.freeForm);
        if (!visitedObjects.has(p.grid))
            aws_cdk_lib_IResolvable(p.grid);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DefaultNewSheetConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interactiveLayoutConfiguration))
            aws_cdk_lib_IResolvable(p.interactiveLayoutConfiguration);
        if (!visitedObjects.has(p.paginatedLayoutConfiguration))
            aws_cdk_lib_IResolvable(p.paginatedLayoutConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DefaultPaginatedLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sectionBased))
            aws_cdk_lib_IResolvable(p.sectionBased);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DefaultSectionBasedLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DestinationParameterValueConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customValuesConfiguration))
            aws_cdk_lib_IResolvable(p.customValuesConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DimensionFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoricalDimensionField))
            aws_cdk_lib_IResolvable(p.categoricalDimensionField);
        if (!visitedObjects.has(p.dateDimensionField))
            aws_cdk_lib_IResolvable(p.dateDimensionField);
        if (!visitedObjects.has(p.numericalDimensionField))
            aws_cdk_lib_IResolvable(p.numericalDimensionField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DonutCenterOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DonutOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arcOptions))
            aws_cdk_lib_IResolvable(p.arcOptions);
        if (!visitedObjects.has(p.donutCenterOptions))
            aws_cdk_lib_IResolvable(p.donutCenterOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DrillDownFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryFilter))
            aws_cdk_lib_IResolvable(p.categoryFilter);
        if (!visitedObjects.has(p.numericEqualityFilter))
            aws_cdk_lib_IResolvable(p.numericEqualityFilter);
        if (!visitedObjects.has(p.timeRangeFilter))
            aws_cdk_lib_IResolvable(p.timeRangeFilter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DropDownControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectAllOptions))
            aws_cdk_lib_IResolvable(p.selectAllOptions);
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_DynamicDefaultValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValueColumn))
            aws_cdk_lib_IResolvable(p.defaultValueColumn);
        if (!visitedObjects.has(p.groupNameColumn))
            aws_cdk_lib_IResolvable(p.groupNameColumn);
        if (!visitedObjects.has(p.userNameColumn))
            aws_cdk_lib_IResolvable(p.userNameColumn);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_EmptyVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_EntityProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ExcludePeriodConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ExplicitHierarchyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.drillDownFilters))
            aws_cdk_lib_IResolvable(p.drillDownFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ExportHiddenFieldsOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ExportToCSVOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ExportWithHiddenFieldsOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FieldBasedTooltipProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tooltipFields))
            aws_cdk_lib_IResolvable(p.tooltipFields);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FieldLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FieldSeriesItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.settings))
            aws_cdk_lib_IResolvable(p.settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FieldSortProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FieldSortOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnSort))
            aws_cdk_lib_IResolvable(p.columnSort);
        if (!visitedObjects.has(p.fieldSort))
            aws_cdk_lib_IResolvable(p.fieldSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FieldTooltipItemProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.geospatial))
            aws_cdk_lib_IResolvable(p.geospatial);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.shape))
            aws_cdk_lib_IResolvable(p.shape);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.mapStyleOptions))
            aws_cdk_lib_IResolvable(p.mapStyleOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.windowOptions))
            aws_cdk_lib_IResolvable(p.windowOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filledMapAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.filledMapAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapShapeConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.format))
            aws_cdk_lib_IResolvable(p.format);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryFilter))
            aws_cdk_lib_IResolvable(p.categoryFilter);
        if (!visitedObjects.has(p.numericEqualityFilter))
            aws_cdk_lib_IResolvable(p.numericEqualityFilter);
        if (!visitedObjects.has(p.numericRangeFilter))
            aws_cdk_lib_IResolvable(p.numericRangeFilter);
        if (!visitedObjects.has(p.relativeDatesFilter))
            aws_cdk_lib_IResolvable(p.relativeDatesFilter);
        if (!visitedObjects.has(p.timeEqualityFilter))
            aws_cdk_lib_IResolvable(p.timeEqualityFilter);
        if (!visitedObjects.has(p.timeRangeFilter))
            aws_cdk_lib_IResolvable(p.timeRangeFilter);
        if (!visitedObjects.has(p.topBottomFilter))
            aws_cdk_lib_IResolvable(p.topBottomFilter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimePicker))
            aws_cdk_lib_IResolvable(p.dateTimePicker);
        if (!visitedObjects.has(p.dropdown))
            aws_cdk_lib_IResolvable(p.dropdown);
        if (!visitedObjects.has(p.list))
            aws_cdk_lib_IResolvable(p.list);
        if (!visitedObjects.has(p.relativeDateTime))
            aws_cdk_lib_IResolvable(p.relativeDateTime);
        if (!visitedObjects.has(p.slider))
            aws_cdk_lib_IResolvable(p.slider);
        if (!visitedObjects.has(p.textArea))
            aws_cdk_lib_IResolvable(p.textArea);
        if (!visitedObjects.has(p.textField))
            aws_cdk_lib_IResolvable(p.textField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterDateTimePickerControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterDropDownControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cascadingControlConfiguration))
            aws_cdk_lib_IResolvable(p.cascadingControlConfiguration);
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
        if (!visitedObjects.has(p.selectableValues))
            aws_cdk_lib_IResolvable(p.selectableValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filters))
            aws_cdk_lib_IResolvable(p.filters);
        if (!visitedObjects.has(p.scopeConfiguration))
            aws_cdk_lib_IResolvable(p.scopeConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterListConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterListControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cascadingControlConfiguration))
            aws_cdk_lib_IResolvable(p.cascadingControlConfiguration);
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
        if (!visitedObjects.has(p.selectableValues))
            aws_cdk_lib_IResolvable(p.selectableValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterOperationSelectedFieldsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterOperationTargetVisualsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sameSheetTargetVisualConfiguration))
            aws_cdk_lib_IResolvable(p.sameSheetTargetVisualConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterRelativeDateTimeControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterScopeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectedSheets))
            aws_cdk_lib_IResolvable(p.selectedSheets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterSelectableValuesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterSliderControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterTextAreaControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FilterTextFieldControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FontConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontSize))
            aws_cdk_lib_IResolvable(p.fontSize);
        if (!visitedObjects.has(p.fontWeight))
            aws_cdk_lib_IResolvable(p.fontWeight);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FontSizeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FontWeightProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ForecastComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ForecastConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forecastProperties))
            aws_cdk_lib_IResolvable(p.forecastProperties);
        if (!visitedObjects.has(p.scenario))
            aws_cdk_lib_IResolvable(p.scenario);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ForecastScenarioProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.whatIfPointScenario))
            aws_cdk_lib_IResolvable(p.whatIfPointScenario);
        if (!visitedObjects.has(p.whatIfRangeScenario))
            aws_cdk_lib_IResolvable(p.whatIfRangeScenario);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimeFormatConfiguration))
            aws_cdk_lib_IResolvable(p.dateTimeFormatConfiguration);
        if (!visitedObjects.has(p.numberFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numberFormatConfiguration);
        if (!visitedObjects.has(p.stringFormatConfiguration))
            aws_cdk_lib_IResolvable(p.stringFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormLayoutCanvasSizeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.screenCanvasSizeOptions))
            aws_cdk_lib_IResolvable(p.screenCanvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.elements))
            aws_cdk_lib_IResolvable(p.elements);
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormLayoutElementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backgroundStyle))
            aws_cdk_lib_IResolvable(p.backgroundStyle);
        if (!visitedObjects.has(p.borderStyle))
            aws_cdk_lib_IResolvable(p.borderStyle);
        if (!visitedObjects.has(p.loadingAnimation))
            aws_cdk_lib_IResolvable(p.loadingAnimation);
        if (!visitedObjects.has(p.renderingRules))
            aws_cdk_lib_IResolvable(p.renderingRules);
        if (!visitedObjects.has(p.selectedBorderStyle))
            aws_cdk_lib_IResolvable(p.selectedBorderStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormLayoutElementBackgroundStyleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormLayoutElementBorderStyleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormLayoutScreenCanvasSizeOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormSectionLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.elements))
            aws_cdk_lib_IResolvable(p.elements);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FunnelChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FunnelChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.dataLabelOptions))
            aws_cdk_lib_IResolvable(p.dataLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.valueLabelOptions))
            aws_cdk_lib_IResolvable(p.valueLabelOptions);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FunnelChartDataLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.labelFontConfiguration))
            aws_cdk_lib_IResolvable(p.labelFontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FunnelChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.funnelChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.funnelChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FunnelChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_FunnelChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartArcConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.foregroundColor))
            aws_cdk_lib_IResolvable(p.foregroundColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arc))
            aws_cdk_lib_IResolvable(p.arc);
        if (!visitedObjects.has(p.primaryValue))
            aws_cdk_lib_IResolvable(p.primaryValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.gaugeChartOptions))
            aws_cdk_lib_IResolvable(p.gaugeChartOptions);
        if (!visitedObjects.has(p.tooltipOptions))
            aws_cdk_lib_IResolvable(p.tooltipOptions);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetValues))
            aws_cdk_lib_IResolvable(p.targetValues);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arc))
            aws_cdk_lib_IResolvable(p.arc);
        if (!visitedObjects.has(p.arcAxis))
            aws_cdk_lib_IResolvable(p.arcAxis);
        if (!visitedObjects.has(p.comparison))
            aws_cdk_lib_IResolvable(p.comparison);
        if (!visitedObjects.has(p.primaryValueFontConfiguration))
            aws_cdk_lib_IResolvable(p.primaryValueFontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartPrimaryValueConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.icon))
            aws_cdk_lib_IResolvable(p.icon);
        if (!visitedObjects.has(p.textColor))
            aws_cdk_lib_IResolvable(p.textColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialCoordinateBoundsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialMapAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.geospatial))
            aws_cdk_lib_IResolvable(p.geospatial);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialMapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.mapStyleOptions))
            aws_cdk_lib_IResolvable(p.mapStyleOptions);
        if (!visitedObjects.has(p.pointStyleOptions))
            aws_cdk_lib_IResolvable(p.pointStyleOptions);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.windowOptions))
            aws_cdk_lib_IResolvable(p.windowOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialMapFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.geospatialMapAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.geospatialMapAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialMapStyleOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialMapVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialPointStyleOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterMarkerConfiguration))
            aws_cdk_lib_IResolvable(p.clusterMarkerConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialWindowOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bounds))
            aws_cdk_lib_IResolvable(p.bounds);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GlobalTableBorderOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sideSpecificBorder))
            aws_cdk_lib_IResolvable(p.sideSpecificBorder);
        if (!visitedObjects.has(p.uniformBorder))
            aws_cdk_lib_IResolvable(p.uniformBorder);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GradientColorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stops))
            aws_cdk_lib_IResolvable(p.stops);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GradientStopProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GridLayoutCanvasSizeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.screenCanvasSizeOptions))
            aws_cdk_lib_IResolvable(p.screenCanvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GridLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.elements))
            aws_cdk_lib_IResolvable(p.elements);
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GridLayoutElementProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GridLayoutScreenCanvasSizeOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_GrowthRateComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_HeaderFooterSectionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.layout))
            aws_cdk_lib_IResolvable(p.layout);
        if (!visitedObjects.has(p.style))
            aws_cdk_lib_IResolvable(p.style);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_HeatMapAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.rows))
            aws_cdk_lib_IResolvable(p.rows);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_HeatMapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorScale))
            aws_cdk_lib_IResolvable(p.colorScale);
        if (!visitedObjects.has(p.columnLabelOptions))
            aws_cdk_lib_IResolvable(p.columnLabelOptions);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.rowLabelOptions))
            aws_cdk_lib_IResolvable(p.rowLabelOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_HeatMapFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.heatMapAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.heatMapAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_HeatMapSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.heatMapColumnItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.heatMapColumnItemsLimitConfiguration);
        if (!visitedObjects.has(p.heatMapColumnSort))
            aws_cdk_lib_IResolvable(p.heatMapColumnSort);
        if (!visitedObjects.has(p.heatMapRowItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.heatMapRowItemsLimitConfiguration);
        if (!visitedObjects.has(p.heatMapRowSort))
            aws_cdk_lib_IResolvable(p.heatMapRowSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_HeatMapVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_HistogramAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_HistogramBinOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.binCount))
            aws_cdk_lib_IResolvable(p.binCount);
        if (!visitedObjects.has(p.binWidth))
            aws_cdk_lib_IResolvable(p.binWidth);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_HistogramConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.binOptions))
            aws_cdk_lib_IResolvable(p.binOptions);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.xAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.xAxisDisplayOptions);
        if (!visitedObjects.has(p.xAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.xAxisLabelOptions);
        if (!visitedObjects.has(p.yAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.yAxisDisplayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_HistogramFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.histogramAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.histogramAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_HistogramVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_InsightConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.computations))
            aws_cdk_lib_IResolvable(p.computations);
        if (!visitedObjects.has(p.customNarrative))
            aws_cdk_lib_IResolvable(p.customNarrative);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_InsightVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.insightConfiguration))
            aws_cdk_lib_IResolvable(p.insightConfiguration);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_IntegerDefaultValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicValue))
            aws_cdk_lib_IResolvable(p.dynamicValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_IntegerParameterProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_IntegerParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValues))
            aws_cdk_lib_IResolvable(p.defaultValues);
        if (!visitedObjects.has(p.mappedDataSetParameters))
            aws_cdk_lib_IResolvable(p.mappedDataSetParameters);
        if (!visitedObjects.has(p.valueWhenUnset))
            aws_cdk_lib_IResolvable(p.valueWhenUnset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_IntegerValueWhenUnsetConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ItemsLimitConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_KPIConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_KPIConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.primaryValue))
            aws_cdk_lib_IResolvable(p.primaryValue);
        if (!visitedObjects.has(p.progressBar))
            aws_cdk_lib_IResolvable(p.progressBar);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_KPIConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.kpiOptions))
            aws_cdk_lib_IResolvable(p.kpiOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_KPIFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetValues))
            aws_cdk_lib_IResolvable(p.targetValues);
        if (!visitedObjects.has(p.trendGroups))
            aws_cdk_lib_IResolvable(p.trendGroups);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_KPIOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.comparison))
            aws_cdk_lib_IResolvable(p.comparison);
        if (!visitedObjects.has(p.primaryValueFontConfiguration))
            aws_cdk_lib_IResolvable(p.primaryValueFontConfiguration);
        if (!visitedObjects.has(p.progressBar))
            aws_cdk_lib_IResolvable(p.progressBar);
        if (!visitedObjects.has(p.secondaryValue))
            aws_cdk_lib_IResolvable(p.secondaryValue);
        if (!visitedObjects.has(p.secondaryValueFontConfiguration))
            aws_cdk_lib_IResolvable(p.secondaryValueFontConfiguration);
        if (!visitedObjects.has(p.trendArrows))
            aws_cdk_lib_IResolvable(p.trendArrows);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_KPIPrimaryValueConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.icon))
            aws_cdk_lib_IResolvable(p.icon);
        if (!visitedObjects.has(p.textColor))
            aws_cdk_lib_IResolvable(p.textColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_KPIProgressBarConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.foregroundColor))
            aws_cdk_lib_IResolvable(p.foregroundColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_KPISortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trendGroupSort))
            aws_cdk_lib_IResolvable(p.trendGroupSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_KPIVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LayoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.freeFormLayout))
            aws_cdk_lib_IResolvable(p.freeFormLayout);
        if (!visitedObjects.has(p.gridLayout))
            aws_cdk_lib_IResolvable(p.gridLayout);
        if (!visitedObjects.has(p.sectionBasedLayout))
            aws_cdk_lib_IResolvable(p.sectionBasedLayout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LegendOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.smallMultiples))
            aws_cdk_lib_IResolvable(p.smallMultiples);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.contributionAnalysisDefaults))
            aws_cdk_lib_IResolvable(p.contributionAnalysisDefaults);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.defaultSeriesSettings))
            aws_cdk_lib_IResolvable(p.defaultSeriesSettings);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.forecastConfigurations))
            aws_cdk_lib_IResolvable(p.forecastConfigurations);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.primaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.primaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisLabelOptions);
        if (!visitedObjects.has(p.referenceLines))
            aws_cdk_lib_IResolvable(p.referenceLines);
        if (!visitedObjects.has(p.secondaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.secondaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.secondaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.secondaryYAxisLabelOptions);
        if (!visitedObjects.has(p.series))
            aws_cdk_lib_IResolvable(p.series);
        if (!visitedObjects.has(p.smallMultiplesOptions))
            aws_cdk_lib_IResolvable(p.smallMultiplesOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.xAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.xAxisDisplayOptions);
        if (!visitedObjects.has(p.xAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.xAxisLabelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartDefaultSeriesSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lineStyleSettings))
            aws_cdk_lib_IResolvable(p.lineStyleSettings);
        if (!visitedObjects.has(p.markerStyleSettings))
            aws_cdk_lib_IResolvable(p.markerStyleSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lineChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.lineChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartLineStyleSettingsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartMarkerStyleSettingsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartSeriesSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lineStyleSettings))
            aws_cdk_lib_IResolvable(p.lineStyleSettings);
        if (!visitedObjects.has(p.markerStyleSettings))
            aws_cdk_lib_IResolvable(p.markerStyleSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.categoryItemsLimitConfiguration);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.colorItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.colorItemsLimitConfiguration);
        if (!visitedObjects.has(p.smallMultiplesLimitConfiguration))
            aws_cdk_lib_IResolvable(p.smallMultiplesLimitConfiguration);
        if (!visitedObjects.has(p.smallMultiplesSort))
            aws_cdk_lib_IResolvable(p.smallMultiplesSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LineSeriesAxisDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.axisOptions))
            aws_cdk_lib_IResolvable(p.axisOptions);
        if (!visitedObjects.has(p.missingDataConfigurations))
            aws_cdk_lib_IResolvable(p.missingDataConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ListControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.searchOptions))
            aws_cdk_lib_IResolvable(p.searchOptions);
        if (!visitedObjects.has(p.selectAllOptions))
            aws_cdk_lib_IResolvable(p.selectAllOptions);
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ListControlSearchOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ListControlSelectAllOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LoadingAnimationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LocalNavigationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_LongFormatTextProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_MappedDataSetParameterProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_MaximumLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_MaximumMinimumComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_MeasureFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.calculatedMeasureField))
            aws_cdk_lib_IResolvable(p.calculatedMeasureField);
        if (!visitedObjects.has(p.categoricalMeasureField))
            aws_cdk_lib_IResolvable(p.categoricalMeasureField);
        if (!visitedObjects.has(p.dateMeasureField))
            aws_cdk_lib_IResolvable(p.dateMeasureField);
        if (!visitedObjects.has(p.numericalMeasureField))
            aws_cdk_lib_IResolvable(p.numericalMeasureField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_MetricComparisonComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fromValue))
            aws_cdk_lib_IResolvable(p.fromValue);
        if (!visitedObjects.has(p.targetValue))
            aws_cdk_lib_IResolvable(p.targetValue);
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_MinimumLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_MissingDataConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NegativeValueConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NullValueFormatConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NumberDisplayFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decimalPlacesConfiguration))
            aws_cdk_lib_IResolvable(p.decimalPlacesConfiguration);
        if (!visitedObjects.has(p.negativeValueConfiguration))
            aws_cdk_lib_IResolvable(p.negativeValueConfiguration);
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.separatorConfiguration))
            aws_cdk_lib_IResolvable(p.separatorConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NumberFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NumericAxisOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.range))
            aws_cdk_lib_IResolvable(p.range);
        if (!visitedObjects.has(p.scale))
            aws_cdk_lib_IResolvable(p.scale);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NumericEqualityDrillDownFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NumericEqualityFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NumericFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.currencyDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.currencyDisplayFormatConfiguration);
        if (!visitedObjects.has(p.numberDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numberDisplayFormatConfiguration);
        if (!visitedObjects.has(p.percentageDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.percentageDisplayFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NumericRangeFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
        if (!visitedObjects.has(p.rangeMaximum))
            aws_cdk_lib_IResolvable(p.rangeMaximum);
        if (!visitedObjects.has(p.rangeMinimum))
            aws_cdk_lib_IResolvable(p.rangeMinimum);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NumericRangeFilterValueProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NumericSeparatorConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.thousandsSeparator))
            aws_cdk_lib_IResolvable(p.thousandsSeparator);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NumericalAggregationFunctionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.percentileAggregation))
            aws_cdk_lib_IResolvable(p.percentileAggregation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NumericalDimensionFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_NumericalMeasureFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PaginationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PanelConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PanelTitleOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimePicker))
            aws_cdk_lib_IResolvable(p.dateTimePicker);
        if (!visitedObjects.has(p.dropdown))
            aws_cdk_lib_IResolvable(p.dropdown);
        if (!visitedObjects.has(p.list))
            aws_cdk_lib_IResolvable(p.list);
        if (!visitedObjects.has(p.slider))
            aws_cdk_lib_IResolvable(p.slider);
        if (!visitedObjects.has(p.textArea))
            aws_cdk_lib_IResolvable(p.textArea);
        if (!visitedObjects.has(p.textField))
            aws_cdk_lib_IResolvable(p.textField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterDateTimePickerControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimeParameterDeclaration))
            aws_cdk_lib_IResolvable(p.dateTimeParameterDeclaration);
        if (!visitedObjects.has(p.decimalParameterDeclaration))
            aws_cdk_lib_IResolvable(p.decimalParameterDeclaration);
        if (!visitedObjects.has(p.integerParameterDeclaration))
            aws_cdk_lib_IResolvable(p.integerParameterDeclaration);
        if (!visitedObjects.has(p.stringParameterDeclaration))
            aws_cdk_lib_IResolvable(p.stringParameterDeclaration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterDropDownControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cascadingControlConfiguration))
            aws_cdk_lib_IResolvable(p.cascadingControlConfiguration);
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
        if (!visitedObjects.has(p.selectableValues))
            aws_cdk_lib_IResolvable(p.selectableValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterListControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cascadingControlConfiguration))
            aws_cdk_lib_IResolvable(p.cascadingControlConfiguration);
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
        if (!visitedObjects.has(p.selectableValues))
            aws_cdk_lib_IResolvable(p.selectableValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterSelectableValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.linkToDataSetColumn))
            aws_cdk_lib_IResolvable(p.linkToDataSetColumn);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterSliderControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterTextAreaControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterTextFieldControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimeParameters))
            aws_cdk_lib_IResolvable(p.dateTimeParameters);
        if (!visitedObjects.has(p.decimalParameters))
            aws_cdk_lib_IResolvable(p.decimalParameters);
        if (!visitedObjects.has(p.integerParameters))
            aws_cdk_lib_IResolvable(p.integerParameters);
        if (!visitedObjects.has(p.stringParameters))
            aws_cdk_lib_IResolvable(p.stringParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PercentVisibleRangeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PercentageDisplayFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decimalPlacesConfiguration))
            aws_cdk_lib_IResolvable(p.decimalPlacesConfiguration);
        if (!visitedObjects.has(p.negativeValueConfiguration))
            aws_cdk_lib_IResolvable(p.negativeValueConfiguration);
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.separatorConfiguration))
            aws_cdk_lib_IResolvable(p.separatorConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PercentileAggregationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PeriodOverPeriodComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PeriodToDateComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PieChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.smallMultiples))
            aws_cdk_lib_IResolvable(p.smallMultiples);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PieChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.contributionAnalysisDefaults))
            aws_cdk_lib_IResolvable(p.contributionAnalysisDefaults);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.donutOptions))
            aws_cdk_lib_IResolvable(p.donutOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.smallMultiplesOptions))
            aws_cdk_lib_IResolvable(p.smallMultiplesOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.valueLabelOptions))
            aws_cdk_lib_IResolvable(p.valueLabelOptions);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PieChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pieChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.pieChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PieChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.smallMultiplesLimitConfiguration))
            aws_cdk_lib_IResolvable(p.smallMultiplesLimitConfiguration);
        if (!visitedObjects.has(p.smallMultiplesSort))
            aws_cdk_lib_IResolvable(p.smallMultiplesSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PieChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotFieldSortOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sortBy))
            aws_cdk_lib_IResolvable(p.sortBy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.rows))
            aws_cdk_lib_IResolvable(p.rows);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableCellConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scope))
            aws_cdk_lib_IResolvable(p.scope);
        if (!visitedObjects.has(p.textFormat))
            aws_cdk_lib_IResolvable(p.textFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cell))
            aws_cdk_lib_IResolvable(p.cell);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableConditionalFormattingScopeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldOptions))
            aws_cdk_lib_IResolvable(p.fieldOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.paginatedReportOptions))
            aws_cdk_lib_IResolvable(p.paginatedReportOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tableOptions))
            aws_cdk_lib_IResolvable(p.tableOptions);
        if (!visitedObjects.has(p.totalOptions))
            aws_cdk_lib_IResolvable(p.totalOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableDataPathOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataPathList))
            aws_cdk_lib_IResolvable(p.dataPathList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableFieldOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableFieldOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataPathOptions))
            aws_cdk_lib_IResolvable(p.dataPathOptions);
        if (!visitedObjects.has(p.selectedFieldOptions))
            aws_cdk_lib_IResolvable(p.selectedFieldOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableFieldSubtotalOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pivotTableAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.pivotTableAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cellStyle))
            aws_cdk_lib_IResolvable(p.cellStyle);
        if (!visitedObjects.has(p.columnHeaderStyle))
            aws_cdk_lib_IResolvable(p.columnHeaderStyle);
        if (!visitedObjects.has(p.rowAlternateColorOptions))
            aws_cdk_lib_IResolvable(p.rowAlternateColorOptions);
        if (!visitedObjects.has(p.rowFieldNamesStyle))
            aws_cdk_lib_IResolvable(p.rowFieldNamesStyle);
        if (!visitedObjects.has(p.rowHeaderStyle))
            aws_cdk_lib_IResolvable(p.rowHeaderStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTablePaginatedReportOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableSortByProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.dataPath))
            aws_cdk_lib_IResolvable(p.dataPath);
        if (!visitedObjects.has(p.field))
            aws_cdk_lib_IResolvable(p.field);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldSortOptions))
            aws_cdk_lib_IResolvable(p.fieldSortOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableTotalOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnSubtotalOptions))
            aws_cdk_lib_IResolvable(p.columnSubtotalOptions);
        if (!visitedObjects.has(p.columnTotalOptions))
            aws_cdk_lib_IResolvable(p.columnTotalOptions);
        if (!visitedObjects.has(p.rowSubtotalOptions))
            aws_cdk_lib_IResolvable(p.rowSubtotalOptions);
        if (!visitedObjects.has(p.rowTotalOptions))
            aws_cdk_lib_IResolvable(p.rowTotalOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTotalOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricHeaderCellStyle))
            aws_cdk_lib_IResolvable(p.metricHeaderCellStyle);
        if (!visitedObjects.has(p.totalCellStyle))
            aws_cdk_lib_IResolvable(p.totalCellStyle);
        if (!visitedObjects.has(p.valueCellStyle))
            aws_cdk_lib_IResolvable(p.valueCellStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_PredefinedHierarchyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.drillDownFilters))
            aws_cdk_lib_IResolvable(p.drillDownFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ProgressBarOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.color))
            aws_cdk_lib_IResolvable(p.color);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartAreaStyleSettingsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.baseSeriesSettings))
            aws_cdk_lib_IResolvable(p.baseSeriesSettings);
        if (!visitedObjects.has(p.categoryAxis))
            aws_cdk_lib_IResolvable(p.categoryAxis);
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.colorAxis))
            aws_cdk_lib_IResolvable(p.colorAxis);
        if (!visitedObjects.has(p.colorLabelOptions))
            aws_cdk_lib_IResolvable(p.colorLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.radarChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.radarChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartSeriesSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.areaStyleSettings))
            aws_cdk_lib_IResolvable(p.areaStyleSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.colorItemsLimit))
            aws_cdk_lib_IResolvable(p.colorItemsLimit);
        if (!visitedObjects.has(p.colorSort))
            aws_cdk_lib_IResolvable(p.colorSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_RangeEndsLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataConfiguration))
            aws_cdk_lib_IResolvable(p.dataConfiguration);
        if (!visitedObjects.has(p.labelConfiguration))
            aws_cdk_lib_IResolvable(p.labelConfiguration);
        if (!visitedObjects.has(p.styleConfiguration))
            aws_cdk_lib_IResolvable(p.styleConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineCustomLabelConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineDataConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicConfiguration))
            aws_cdk_lib_IResolvable(p.dynamicConfiguration);
        if (!visitedObjects.has(p.staticConfiguration))
            aws_cdk_lib_IResolvable(p.staticConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineDynamicDataConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.calculation))
            aws_cdk_lib_IResolvable(p.calculation);
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.measureAggregationFunction))
            aws_cdk_lib_IResolvable(p.measureAggregationFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineLabelConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customLabelConfiguration))
            aws_cdk_lib_IResolvable(p.customLabelConfiguration);
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
        if (!visitedObjects.has(p.valueLabelConfiguration))
            aws_cdk_lib_IResolvable(p.valueLabelConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineStaticDataConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineStyleConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineValueLabelConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_RelativeDateTimeControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_RelativeDatesFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.anchorDateConfiguration))
            aws_cdk_lib_IResolvable(p.anchorDateConfiguration);
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.excludePeriodConfiguration))
            aws_cdk_lib_IResolvable(p.excludePeriodConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ResourcePermissionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_RollingDateConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_RowAlternateColorOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SameSheetTargetVisualConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SankeyDiagramAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_IResolvable(p.source);
        if (!visitedObjects.has(p.weight))
            aws_cdk_lib_IResolvable(p.weight);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SankeyDiagramChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SankeyDiagramFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sankeyDiagramAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.sankeyDiagramAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SankeyDiagramSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationItemsLimit))
            aws_cdk_lib_IResolvable(p.destinationItemsLimit);
        if (!visitedObjects.has(p.sourceItemsLimit))
            aws_cdk_lib_IResolvable(p.sourceItemsLimit);
        if (!visitedObjects.has(p.weightSort))
            aws_cdk_lib_IResolvable(p.weightSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SankeyDiagramVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ScatterPlotCategoricallyAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.size))
            aws_cdk_lib_IResolvable(p.size);
        if (!visitedObjects.has(p.xAxis))
            aws_cdk_lib_IResolvable(p.xAxis);
        if (!visitedObjects.has(p.yAxis))
            aws_cdk_lib_IResolvable(p.yAxis);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ScatterPlotConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.xAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.xAxisDisplayOptions);
        if (!visitedObjects.has(p.xAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.xAxisLabelOptions);
        if (!visitedObjects.has(p.yAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.yAxisDisplayOptions);
        if (!visitedObjects.has(p.yAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.yAxisLabelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ScatterPlotFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scatterPlotCategoricallyAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.scatterPlotCategoricallyAggregatedFieldWells);
        if (!visitedObjects.has(p.scatterPlotUnaggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.scatterPlotUnaggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ScatterPlotUnaggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.size))
            aws_cdk_lib_IResolvable(p.size);
        if (!visitedObjects.has(p.xAxis))
            aws_cdk_lib_IResolvable(p.xAxis);
        if (!visitedObjects.has(p.yAxis))
            aws_cdk_lib_IResolvable(p.yAxis);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ScatterPlotVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ScrollBarOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.visibleRange))
            aws_cdk_lib_IResolvable(p.visibleRange);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SecondaryValueOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SectionAfterPageBreakProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SectionBasedLayoutCanvasSizeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.paperCanvasSizeOptions))
            aws_cdk_lib_IResolvable(p.paperCanvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SectionBasedLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bodySections))
            aws_cdk_lib_IResolvable(p.bodySections);
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
        if (!visitedObjects.has(p.footerSections))
            aws_cdk_lib_IResolvable(p.footerSections);
        if (!visitedObjects.has(p.headerSections))
            aws_cdk_lib_IResolvable(p.headerSections);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SectionBasedLayoutPaperCanvasSizeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.paperMargin))
            aws_cdk_lib_IResolvable(p.paperMargin);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SectionLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.freeFormLayout))
            aws_cdk_lib_IResolvable(p.freeFormLayout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SectionPageBreakConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.after))
            aws_cdk_lib_IResolvable(p.after);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SectionStyleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.padding))
            aws_cdk_lib_IResolvable(p.padding);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SelectedSheetsFilterScopeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sheetVisualScopingConfigurations))
            aws_cdk_lib_IResolvable(p.sheetVisualScopingConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SeriesItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataFieldSeriesItem))
            aws_cdk_lib_IResolvable(p.dataFieldSeriesItem);
        if (!visitedObjects.has(p.fieldSeriesItem))
            aws_cdk_lib_IResolvable(p.fieldSeriesItem);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SetParameterValueConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ShapeConditionalFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backgroundColor))
            aws_cdk_lib_IResolvable(p.backgroundColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SheetProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SheetControlLayoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SheetControlLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.gridLayout))
            aws_cdk_lib_IResolvable(p.gridLayout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SheetControlsOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SheetDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filterControls))
            aws_cdk_lib_IResolvable(p.filterControls);
        if (!visitedObjects.has(p.layouts))
            aws_cdk_lib_IResolvable(p.layouts);
        if (!visitedObjects.has(p.parameterControls))
            aws_cdk_lib_IResolvable(p.parameterControls);
        if (!visitedObjects.has(p.sheetControlLayouts))
            aws_cdk_lib_IResolvable(p.sheetControlLayouts);
        if (!visitedObjects.has(p.textBoxes))
            aws_cdk_lib_IResolvable(p.textBoxes);
        if (!visitedObjects.has(p.visuals))
            aws_cdk_lib_IResolvable(p.visuals);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SheetElementConfigurationOverridesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SheetElementRenderingRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurationOverrides))
            aws_cdk_lib_IResolvable(p.configurationOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SheetLayoutElementMaximizationOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SheetTextBoxProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SheetVisualScopingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ShortFormatTextProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SimpleClusterMarkerProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SliderControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SmallMultiplesOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.panelConfiguration))
            aws_cdk_lib_IResolvable(p.panelConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SpacingProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_StringDefaultValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicValue))
            aws_cdk_lib_IResolvable(p.dynamicValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_StringFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.numericFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numericFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_StringParameterProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_StringParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValues))
            aws_cdk_lib_IResolvable(p.defaultValues);
        if (!visitedObjects.has(p.mappedDataSetParameters))
            aws_cdk_lib_IResolvable(p.mappedDataSetParameters);
        if (!visitedObjects.has(p.valueWhenUnset))
            aws_cdk_lib_IResolvable(p.valueWhenUnset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_StringValueWhenUnsetConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_SubtotalOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldLevelOptions))
            aws_cdk_lib_IResolvable(p.fieldLevelOptions);
        if (!visitedObjects.has(p.metricHeaderCellStyle))
            aws_cdk_lib_IResolvable(p.metricHeaderCellStyle);
        if (!visitedObjects.has(p.totalCellStyle))
            aws_cdk_lib_IResolvable(p.totalCellStyle);
        if (!visitedObjects.has(p.valueCellStyle))
            aws_cdk_lib_IResolvable(p.valueCellStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupBy))
            aws_cdk_lib_IResolvable(p.groupBy);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableBorderOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableCellConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.textFormat))
            aws_cdk_lib_IResolvable(p.textFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableCellImageSizingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableCellStyleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.border))
            aws_cdk_lib_IResolvable(p.border);
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cell))
            aws_cdk_lib_IResolvable(p.cell);
        if (!visitedObjects.has(p.row))
            aws_cdk_lib_IResolvable(p.row);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldOptions))
            aws_cdk_lib_IResolvable(p.fieldOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.paginatedReportOptions))
            aws_cdk_lib_IResolvable(p.paginatedReportOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tableInlineVisualizations))
            aws_cdk_lib_IResolvable(p.tableInlineVisualizations);
        if (!visitedObjects.has(p.tableOptions))
            aws_cdk_lib_IResolvable(p.tableOptions);
        if (!visitedObjects.has(p.totalOptions))
            aws_cdk_lib_IResolvable(p.totalOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldCustomIconContentProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldCustomTextContentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldImageConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sizingOptions))
            aws_cdk_lib_IResolvable(p.sizingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldLinkConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.content))
            aws_cdk_lib_IResolvable(p.content);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldLinkContentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customIconContent))
            aws_cdk_lib_IResolvable(p.customIconContent);
        if (!visitedObjects.has(p.customTextContent))
            aws_cdk_lib_IResolvable(p.customTextContent);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.urlStyling))
            aws_cdk_lib_IResolvable(p.urlStyling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectedFieldOptions))
            aws_cdk_lib_IResolvable(p.selectedFieldOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldURLConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.imageConfiguration))
            aws_cdk_lib_IResolvable(p.imageConfiguration);
        if (!visitedObjects.has(p.linkConfiguration))
            aws_cdk_lib_IResolvable(p.linkConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tableAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.tableAggregatedFieldWells);
        if (!visitedObjects.has(p.tableUnaggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.tableUnaggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableInlineVisualizationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataBars))
            aws_cdk_lib_IResolvable(p.dataBars);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cellStyle))
            aws_cdk_lib_IResolvable(p.cellStyle);
        if (!visitedObjects.has(p.headerStyle))
            aws_cdk_lib_IResolvable(p.headerStyle);
        if (!visitedObjects.has(p.rowAlternateColorOptions))
            aws_cdk_lib_IResolvable(p.rowAlternateColorOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TablePaginatedReportOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableRowConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backgroundColor))
            aws_cdk_lib_IResolvable(p.backgroundColor);
        if (!visitedObjects.has(p.textColor))
            aws_cdk_lib_IResolvable(p.textColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableSideBorderOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bottom))
            aws_cdk_lib_IResolvable(p.bottom);
        if (!visitedObjects.has(p.innerHorizontal))
            aws_cdk_lib_IResolvable(p.innerHorizontal);
        if (!visitedObjects.has(p.innerVertical))
            aws_cdk_lib_IResolvable(p.innerVertical);
        if (!visitedObjects.has(p.left))
            aws_cdk_lib_IResolvable(p.left);
        if (!visitedObjects.has(p.right))
            aws_cdk_lib_IResolvable(p.right);
        if (!visitedObjects.has(p.top))
            aws_cdk_lib_IResolvable(p.top);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.paginationConfiguration))
            aws_cdk_lib_IResolvable(p.paginationConfiguration);
        if (!visitedObjects.has(p.rowSort))
            aws_cdk_lib_IResolvable(p.rowSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableUnaggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TableVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TextAreaControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.placeholderOptions))
            aws_cdk_lib_IResolvable(p.placeholderOptions);
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TextConditionalFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backgroundColor))
            aws_cdk_lib_IResolvable(p.backgroundColor);
        if (!visitedObjects.has(p.icon))
            aws_cdk_lib_IResolvable(p.icon);
        if (!visitedObjects.has(p.textColor))
            aws_cdk_lib_IResolvable(p.textColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TextControlPlaceholderOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TextFieldControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.placeholderOptions))
            aws_cdk_lib_IResolvable(p.placeholderOptions);
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_ThousandSeparatorOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TimeBasedForecastPropertiesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TimeEqualityFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TimeRangeDrillDownFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TimeRangeFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.excludePeriodConfiguration))
            aws_cdk_lib_IResolvable(p.excludePeriodConfiguration);
        if (!visitedObjects.has(p.rangeMaximumValue))
            aws_cdk_lib_IResolvable(p.rangeMaximumValue);
        if (!visitedObjects.has(p.rangeMinimumValue))
            aws_cdk_lib_IResolvable(p.rangeMinimumValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TimeRangeFilterValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rollingDate))
            aws_cdk_lib_IResolvable(p.rollingDate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TooltipItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnTooltipItem))
            aws_cdk_lib_IResolvable(p.columnTooltipItem);
        if (!visitedObjects.has(p.fieldTooltipItem))
            aws_cdk_lib_IResolvable(p.fieldTooltipItem);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TooltipOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldBasedTooltip))
            aws_cdk_lib_IResolvable(p.fieldBasedTooltip);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TopBottomFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aggregationSortConfigurations))
            aws_cdk_lib_IResolvable(p.aggregationSortConfigurations);
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TopBottomMoversComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TopBottomRankedComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TotalAggregationComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TotalOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.totalCellStyle))
            aws_cdk_lib_IResolvable(p.totalCellStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TreeMapAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.groups))
            aws_cdk_lib_IResolvable(p.groups);
        if (!visitedObjects.has(p.sizes))
            aws_cdk_lib_IResolvable(p.sizes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TreeMapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorLabelOptions))
            aws_cdk_lib_IResolvable(p.colorLabelOptions);
        if (!visitedObjects.has(p.colorScale))
            aws_cdk_lib_IResolvable(p.colorScale);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.groupLabelOptions))
            aws_cdk_lib_IResolvable(p.groupLabelOptions);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.sizeLabelOptions))
            aws_cdk_lib_IResolvable(p.sizeLabelOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TreeMapFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.treeMapAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.treeMapAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TreeMapSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.treeMapGroupItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.treeMapGroupItemsLimitConfiguration);
        if (!visitedObjects.has(p.treeMapSort))
            aws_cdk_lib_IResolvable(p.treeMapSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TreeMapVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_TrendArrowOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_UnaggregatedFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_UniqueValuesComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_VisibleRangeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.percentRange))
            aws_cdk_lib_IResolvable(p.percentRange);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_VisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.barChartVisual))
            aws_cdk_lib_IResolvable(p.barChartVisual);
        if (!visitedObjects.has(p.boxPlotVisual))
            aws_cdk_lib_IResolvable(p.boxPlotVisual);
        if (!visitedObjects.has(p.comboChartVisual))
            aws_cdk_lib_IResolvable(p.comboChartVisual);
        if (!visitedObjects.has(p.customContentVisual))
            aws_cdk_lib_IResolvable(p.customContentVisual);
        if (!visitedObjects.has(p.emptyVisual))
            aws_cdk_lib_IResolvable(p.emptyVisual);
        if (!visitedObjects.has(p.filledMapVisual))
            aws_cdk_lib_IResolvable(p.filledMapVisual);
        if (!visitedObjects.has(p.funnelChartVisual))
            aws_cdk_lib_IResolvable(p.funnelChartVisual);
        if (!visitedObjects.has(p.gaugeChartVisual))
            aws_cdk_lib_IResolvable(p.gaugeChartVisual);
        if (!visitedObjects.has(p.geospatialMapVisual))
            aws_cdk_lib_IResolvable(p.geospatialMapVisual);
        if (!visitedObjects.has(p.heatMapVisual))
            aws_cdk_lib_IResolvable(p.heatMapVisual);
        if (!visitedObjects.has(p.histogramVisual))
            aws_cdk_lib_IResolvable(p.histogramVisual);
        if (!visitedObjects.has(p.insightVisual))
            aws_cdk_lib_IResolvable(p.insightVisual);
        if (!visitedObjects.has(p.kpiVisual))
            aws_cdk_lib_IResolvable(p.kpiVisual);
        if (!visitedObjects.has(p.lineChartVisual))
            aws_cdk_lib_IResolvable(p.lineChartVisual);
        if (!visitedObjects.has(p.pieChartVisual))
            aws_cdk_lib_IResolvable(p.pieChartVisual);
        if (!visitedObjects.has(p.pivotTableVisual))
            aws_cdk_lib_IResolvable(p.pivotTableVisual);
        if (!visitedObjects.has(p.radarChartVisual))
            aws_cdk_lib_IResolvable(p.radarChartVisual);
        if (!visitedObjects.has(p.sankeyDiagramVisual))
            aws_cdk_lib_IResolvable(p.sankeyDiagramVisual);
        if (!visitedObjects.has(p.scatterPlotVisual))
            aws_cdk_lib_IResolvable(p.scatterPlotVisual);
        if (!visitedObjects.has(p.tableVisual))
            aws_cdk_lib_IResolvable(p.tableVisual);
        if (!visitedObjects.has(p.treeMapVisual))
            aws_cdk_lib_IResolvable(p.treeMapVisual);
        if (!visitedObjects.has(p.waterfallVisual))
            aws_cdk_lib_IResolvable(p.waterfallVisual);
        if (!visitedObjects.has(p.wordCloudVisual))
            aws_cdk_lib_IResolvable(p.wordCloudVisual);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_VisualAxisSortOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_VisualCustomActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actionOperations))
            aws_cdk_lib_IResolvable(p.actionOperations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_VisualCustomActionOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filterOperation))
            aws_cdk_lib_IResolvable(p.filterOperation);
        if (!visitedObjects.has(p.navigationOperation))
            aws_cdk_lib_IResolvable(p.navigationOperation);
        if (!visitedObjects.has(p.setParametersOperation))
            aws_cdk_lib_IResolvable(p.setParametersOperation);
        if (!visitedObjects.has(p.urlOperation))
            aws_cdk_lib_IResolvable(p.urlOperation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_VisualMenuOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_VisualPaletteProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorMap))
            aws_cdk_lib_IResolvable(p.colorMap);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_VisualSubtitleLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatText))
            aws_cdk_lib_IResolvable(p.formatText);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_VisualTitleLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatText))
            aws_cdk_lib_IResolvable(p.formatText);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WaterfallChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.breakdowns))
            aws_cdk_lib_IResolvable(p.breakdowns);
        if (!visitedObjects.has(p.categories))
            aws_cdk_lib_IResolvable(p.categories);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WaterfallChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.categoryAxisDisplayOptions);
        if (!visitedObjects.has(p.categoryAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryAxisLabelOptions);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.primaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.primaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisLabelOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.waterfallChartOptions))
            aws_cdk_lib_IResolvable(p.waterfallChartOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WaterfallChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.waterfallChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.waterfallChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WaterfallChartOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WaterfallChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.breakdownItemsLimit))
            aws_cdk_lib_IResolvable(p.breakdownItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WaterfallVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WhatIfPointScenarioProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WhatIfRangeScenarioProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WordCloudAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupBy))
            aws_cdk_lib_IResolvable(p.groupBy);
        if (!visitedObjects.has(p.size))
            aws_cdk_lib_IResolvable(p.size);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WordCloudChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.wordCloudOptions))
            aws_cdk_lib_IResolvable(p.wordCloudOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WordCloudFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.wordCloudAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.wordCloudAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WordCloudOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WordCloudSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDashboard_WordCloudVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnGroups))
            aws_cdk_lib_IResolvable(p.columnGroups);
        if (!visitedObjects.has(p.columnLevelPermissionRules))
            aws_cdk_lib_IResolvable(p.columnLevelPermissionRules);
        if (!visitedObjects.has(p.dataSetUsageConfiguration))
            aws_cdk_lib_IResolvable(p.dataSetUsageConfiguration);
        if (!visitedObjects.has(p.fieldFolders))
            aws_cdk_lib_IResolvable(p.fieldFolders);
        if (!visitedObjects.has(p.ingestionWaitPolicy))
            aws_cdk_lib_IResolvable(p.ingestionWaitPolicy);
        if (!visitedObjects.has(p.logicalTableMap))
            aws_cdk_lib_IResolvable(p.logicalTableMap);
        if (!visitedObjects.has(p.permissions))
            aws_cdk_lib_IResolvable(p.permissions);
        if (!visitedObjects.has(p.physicalTableMap))
            aws_cdk_lib_IResolvable(p.physicalTableMap);
        if (!visitedObjects.has(p.rowLevelPermissionDataSet))
            aws_cdk_lib_IResolvable(p.rowLevelPermissionDataSet);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_CalculatedColumnProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_CastColumnTypeOperationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_ColumnDescriptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_ColumnGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.geoSpatialColumnGroup))
            aws_cdk_lib_IResolvable(p.geoSpatialColumnGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_ColumnLevelPermissionRuleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_ColumnTagProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnDescription))
            aws_cdk_lib_IResolvable(p.columnDescription);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_CreateColumnsOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_CustomSqlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_DataSetUsageConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_FieldFolderProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_FilterOperationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_GeoSpatialColumnGroupProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_IngestionWaitPolicyProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_InputColumnProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_JoinInstructionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.leftJoinKeyProperties))
            aws_cdk_lib_IResolvable(p.leftJoinKeyProperties);
        if (!visitedObjects.has(p.rightJoinKeyProperties))
            aws_cdk_lib_IResolvable(p.rightJoinKeyProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_JoinKeyPropertiesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_LogicalTableProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_IResolvable(p.source);
        if (!visitedObjects.has(p.dataTransforms))
            aws_cdk_lib_IResolvable(p.dataTransforms);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_LogicalTableSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.joinInstruction))
            aws_cdk_lib_IResolvable(p.joinInstruction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_OutputColumnProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_PhysicalTableProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customSql))
            aws_cdk_lib_IResolvable(p.customSql);
        if (!visitedObjects.has(p.relationalTable))
            aws_cdk_lib_IResolvable(p.relationalTable);
        if (!visitedObjects.has(p.s3Source))
            aws_cdk_lib_IResolvable(p.s3Source);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_ProjectOperationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_RelationalTableProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputColumns))
            aws_cdk_lib_IResolvable(p.inputColumns);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_RenameColumnOperationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_ResourcePermissionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_RowLevelPermissionDataSetProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_S3SourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inputColumns))
            aws_cdk_lib_IResolvable(p.inputColumns);
        if (!visitedObjects.has(p.uploadSettings))
            aws_cdk_lib_IResolvable(p.uploadSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_TagColumnOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_quicksight_CfnDataSet_ColumnTagProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_TransformOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.castColumnTypeOperation))
            aws_cdk_lib_IResolvable(p.castColumnTypeOperation);
        if (!visitedObjects.has(p.createColumnsOperation))
            aws_cdk_lib_IResolvable(p.createColumnsOperation);
        if (!visitedObjects.has(p.filterOperation))
            aws_cdk_lib_IResolvable(p.filterOperation);
        if (!visitedObjects.has(p.projectOperation))
            aws_cdk_lib_IResolvable(p.projectOperation);
        if (!visitedObjects.has(p.renameColumnOperation))
            aws_cdk_lib_IResolvable(p.renameColumnOperation);
        if (!visitedObjects.has(p.tagColumnOperation))
            aws_cdk_lib_IResolvable(p.tagColumnOperation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSet_UploadSettingsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alternateDataSourceParameters))
            aws_cdk_lib_IResolvable(p.alternateDataSourceParameters);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_IResolvable(p.credentials);
        if (!visitedObjects.has(p.dataSourceParameters))
            aws_cdk_lib_IResolvable(p.dataSourceParameters);
        if (!visitedObjects.has(p.errorInfo))
            aws_cdk_lib_IResolvable(p.errorInfo);
        if (!visitedObjects.has(p.permissions))
            aws_cdk_lib_IResolvable(p.permissions);
        if (!visitedObjects.has(p.sslProperties))
            aws_cdk_lib_IResolvable(p.sslProperties);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.vpcConnectionProperties))
            aws_cdk_lib_IResolvable(p.vpcConnectionProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSource(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_AmazonElasticsearchParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_AmazonOpenSearchParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_AthenaParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_AuroraParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_AuroraPostgreSqlParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_CredentialPairProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alternateDataSourceParameters))
            aws_cdk_lib_IResolvable(p.alternateDataSourceParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_DataSourceCredentialsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentialPair))
            aws_cdk_lib_IResolvable(p.credentialPair);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_DataSourceErrorInfoProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_DataSourceParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.amazonElasticsearchParameters))
            aws_cdk_lib_IResolvable(p.amazonElasticsearchParameters);
        if (!visitedObjects.has(p.amazonOpenSearchParameters))
            aws_cdk_lib_IResolvable(p.amazonOpenSearchParameters);
        if (!visitedObjects.has(p.athenaParameters))
            aws_cdk_lib_IResolvable(p.athenaParameters);
        if (!visitedObjects.has(p.auroraParameters))
            aws_cdk_lib_IResolvable(p.auroraParameters);
        if (!visitedObjects.has(p.auroraPostgreSqlParameters))
            aws_cdk_lib_IResolvable(p.auroraPostgreSqlParameters);
        if (!visitedObjects.has(p.databricksParameters))
            aws_cdk_lib_IResolvable(p.databricksParameters);
        if (!visitedObjects.has(p.mariaDbParameters))
            aws_cdk_lib_IResolvable(p.mariaDbParameters);
        if (!visitedObjects.has(p.mySqlParameters))
            aws_cdk_lib_IResolvable(p.mySqlParameters);
        if (!visitedObjects.has(p.oracleParameters))
            aws_cdk_lib_IResolvable(p.oracleParameters);
        if (!visitedObjects.has(p.postgreSqlParameters))
            aws_cdk_lib_IResolvable(p.postgreSqlParameters);
        if (!visitedObjects.has(p.prestoParameters))
            aws_cdk_lib_IResolvable(p.prestoParameters);
        if (!visitedObjects.has(p.rdsParameters))
            aws_cdk_lib_IResolvable(p.rdsParameters);
        if (!visitedObjects.has(p.redshiftParameters))
            aws_cdk_lib_IResolvable(p.redshiftParameters);
        if (!visitedObjects.has(p.s3Parameters))
            aws_cdk_lib_IResolvable(p.s3Parameters);
        if (!visitedObjects.has(p.snowflakeParameters))
            aws_cdk_lib_IResolvable(p.snowflakeParameters);
        if (!visitedObjects.has(p.sparkParameters))
            aws_cdk_lib_IResolvable(p.sparkParameters);
        if (!visitedObjects.has(p.sqlServerParameters))
            aws_cdk_lib_IResolvable(p.sqlServerParameters);
        if (!visitedObjects.has(p.teradataParameters))
            aws_cdk_lib_IResolvable(p.teradataParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_DatabricksParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_ManifestFileLocationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_MariaDbParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_MySqlParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_OracleParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_PostgreSqlParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_PrestoParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_RdsParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_RedshiftParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_ResourcePermissionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_S3ParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.manifestFileLocation))
            aws_cdk_lib_IResolvable(p.manifestFileLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_SnowflakeParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_SparkParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_SqlServerParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_SslPropertiesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_TeradataParametersProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnDataSource_VpcConnectionPropertiesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.definition))
            aws_cdk_lib_IResolvable(p.definition);
        if (!visitedObjects.has(p.permissions))
            aws_cdk_lib_IResolvable(p.permissions);
        if (!visitedObjects.has(p.sourceEntity))
            aws_cdk_lib_IResolvable(p.sourceEntity);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AggregationFunctionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.numericalAggregationFunction))
            aws_cdk_lib_IResolvable(p.numericalAggregationFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AggregationSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AnalysisDefaultsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultNewSheetConfiguration))
            aws_cdk_lib_IResolvable(p.defaultNewSheetConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AnchorDateConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ArcAxisConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.range))
            aws_cdk_lib_IResolvable(p.range);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ArcAxisDisplayRangeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ArcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ArcOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AxisDataOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateAxisOptions))
            aws_cdk_lib_IResolvable(p.dateAxisOptions);
        if (!visitedObjects.has(p.numericAxisOptions))
            aws_cdk_lib_IResolvable(p.numericAxisOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AxisDisplayMinMaxRangeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AxisDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataOptions))
            aws_cdk_lib_IResolvable(p.dataOptions);
        if (!visitedObjects.has(p.scrollbarOptions))
            aws_cdk_lib_IResolvable(p.scrollbarOptions);
        if (!visitedObjects.has(p.tickLabelOptions))
            aws_cdk_lib_IResolvable(p.tickLabelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AxisDisplayRangeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.minMax))
            aws_cdk_lib_IResolvable(p.minMax);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AxisLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.applyTo))
            aws_cdk_lib_IResolvable(p.applyTo);
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AxisLabelReferenceOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AxisLinearScaleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AxisLogarithmicScaleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AxisScaleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.linear))
            aws_cdk_lib_IResolvable(p.linear);
        if (!visitedObjects.has(p.logarithmic))
            aws_cdk_lib_IResolvable(p.logarithmic);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_AxisTickLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.labelOptions))
            aws_cdk_lib_IResolvable(p.labelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BarChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.smallMultiples))
            aws_cdk_lib_IResolvable(p.smallMultiples);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BarChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryAxis))
            aws_cdk_lib_IResolvable(p.categoryAxis);
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.colorLabelOptions))
            aws_cdk_lib_IResolvable(p.colorLabelOptions);
        if (!visitedObjects.has(p.contributionAnalysisDefaults))
            aws_cdk_lib_IResolvable(p.contributionAnalysisDefaults);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.referenceLines))
            aws_cdk_lib_IResolvable(p.referenceLines);
        if (!visitedObjects.has(p.smallMultiplesOptions))
            aws_cdk_lib_IResolvable(p.smallMultiplesOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.valueAxis))
            aws_cdk_lib_IResolvable(p.valueAxis);
        if (!visitedObjects.has(p.valueLabelOptions))
            aws_cdk_lib_IResolvable(p.valueLabelOptions);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BarChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.barChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.barChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BarChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.colorItemsLimit))
            aws_cdk_lib_IResolvable(p.colorItemsLimit);
        if (!visitedObjects.has(p.colorSort))
            aws_cdk_lib_IResolvable(p.colorSort);
        if (!visitedObjects.has(p.smallMultiplesLimitConfiguration))
            aws_cdk_lib_IResolvable(p.smallMultiplesLimitConfiguration);
        if (!visitedObjects.has(p.smallMultiplesSort))
            aws_cdk_lib_IResolvable(p.smallMultiplesSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BarChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BinCountOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BinWidthOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BodySectionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.content))
            aws_cdk_lib_IResolvable(p.content);
        if (!visitedObjects.has(p.pageBreakConfiguration))
            aws_cdk_lib_IResolvable(p.pageBreakConfiguration);
        if (!visitedObjects.has(p.style))
            aws_cdk_lib_IResolvable(p.style);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BodySectionContentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.layout))
            aws_cdk_lib_IResolvable(p.layout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupBy))
            aws_cdk_lib_IResolvable(p.groupBy);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.boxPlotOptions))
            aws_cdk_lib_IResolvable(p.boxPlotOptions);
        if (!visitedObjects.has(p.categoryAxis))
            aws_cdk_lib_IResolvable(p.categoryAxis);
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.primaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.primaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisLabelOptions);
        if (!visitedObjects.has(p.referenceLines))
            aws_cdk_lib_IResolvable(p.referenceLines);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.boxPlotAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.boxPlotAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.styleOptions))
            aws_cdk_lib_IResolvable(p.styleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.paginationConfiguration))
            aws_cdk_lib_IResolvable(p.paginationConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotStyleOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CalculatedFieldProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CalculatedMeasureFieldProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CascadingControlConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceControls))
            aws_cdk_lib_IResolvable(p.sourceControls);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CascadingControlSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnToMatch))
            aws_cdk_lib_IResolvable(p.columnToMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CategoricalDimensionFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CategoricalMeasureFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CategoryDrillDownFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CategoryFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CategoryFilterConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customFilterConfiguration))
            aws_cdk_lib_IResolvable(p.customFilterConfiguration);
        if (!visitedObjects.has(p.customFilterListConfiguration))
            aws_cdk_lib_IResolvable(p.customFilterListConfiguration);
        if (!visitedObjects.has(p.filterListConfiguration))
            aws_cdk_lib_IResolvable(p.filterListConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ChartAxisLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.axisLabelOptions))
            aws_cdk_lib_IResolvable(p.axisLabelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ClusterMarkerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.simpleClusterMarker))
            aws_cdk_lib_IResolvable(p.simpleClusterMarker);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ClusterMarkerConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterMarker))
            aws_cdk_lib_IResolvable(p.clusterMarker);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ColorScaleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.nullValueColor))
            aws_cdk_lib_IResolvable(p.nullValueColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ColorsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customColors))
            aws_cdk_lib_IResolvable(p.customColors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.colorsConfiguration))
            aws_cdk_lib_IResolvable(p.colorsConfiguration);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnGroupColumnSchemaProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnGroupSchemaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnGroupColumnSchemaList))
            aws_cdk_lib_IResolvable(p.columnGroupColumnSchemaList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnHierarchyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimeHierarchy))
            aws_cdk_lib_IResolvable(p.dateTimeHierarchy);
        if (!visitedObjects.has(p.explicitHierarchy))
            aws_cdk_lib_IResolvable(p.explicitHierarchy);
        if (!visitedObjects.has(p.predefinedHierarchy))
            aws_cdk_lib_IResolvable(p.predefinedHierarchy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnIdentifierProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnSchemaProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnSortProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sortBy))
            aws_cdk_lib_IResolvable(p.sortBy);
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnTooltipItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.aggregation))
            aws_cdk_lib_IResolvable(p.aggregation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ComboChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.barValues))
            aws_cdk_lib_IResolvable(p.barValues);
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.lineValues))
            aws_cdk_lib_IResolvable(p.lineValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ComboChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.barDataLabels))
            aws_cdk_lib_IResolvable(p.barDataLabels);
        if (!visitedObjects.has(p.categoryAxis))
            aws_cdk_lib_IResolvable(p.categoryAxis);
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.colorLabelOptions))
            aws_cdk_lib_IResolvable(p.colorLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.lineDataLabels))
            aws_cdk_lib_IResolvable(p.lineDataLabels);
        if (!visitedObjects.has(p.primaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.primaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisLabelOptions);
        if (!visitedObjects.has(p.referenceLines))
            aws_cdk_lib_IResolvable(p.referenceLines);
        if (!visitedObjects.has(p.secondaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.secondaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.secondaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.secondaryYAxisLabelOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ComboChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.comboChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.comboChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ComboChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.colorItemsLimit))
            aws_cdk_lib_IResolvable(p.colorItemsLimit);
        if (!visitedObjects.has(p.colorSort))
            aws_cdk_lib_IResolvable(p.colorSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ComboChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ComparisonConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.comparisonFormat))
            aws_cdk_lib_IResolvable(p.comparisonFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ComparisonFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.numberDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numberDisplayFormatConfiguration);
        if (!visitedObjects.has(p.percentageDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.percentageDisplayFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forecast))
            aws_cdk_lib_IResolvable(p.forecast);
        if (!visitedObjects.has(p.growthRate))
            aws_cdk_lib_IResolvable(p.growthRate);
        if (!visitedObjects.has(p.maximumMinimum))
            aws_cdk_lib_IResolvable(p.maximumMinimum);
        if (!visitedObjects.has(p.metricComparison))
            aws_cdk_lib_IResolvable(p.metricComparison);
        if (!visitedObjects.has(p.periodOverPeriod))
            aws_cdk_lib_IResolvable(p.periodOverPeriod);
        if (!visitedObjects.has(p.periodToDate))
            aws_cdk_lib_IResolvable(p.periodToDate);
        if (!visitedObjects.has(p.topBottomMovers))
            aws_cdk_lib_IResolvable(p.topBottomMovers);
        if (!visitedObjects.has(p.topBottomRanked))
            aws_cdk_lib_IResolvable(p.topBottomRanked);
        if (!visitedObjects.has(p.totalAggregation))
            aws_cdk_lib_IResolvable(p.totalAggregation);
        if (!visitedObjects.has(p.uniqueValues))
            aws_cdk_lib_IResolvable(p.uniqueValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingColorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.gradient))
            aws_cdk_lib_IResolvable(p.gradient);
        if (!visitedObjects.has(p.solid))
            aws_cdk_lib_IResolvable(p.solid);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingCustomIconConditionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.iconOptions))
            aws_cdk_lib_IResolvable(p.iconOptions);
        if (!visitedObjects.has(p.displayConfiguration))
            aws_cdk_lib_IResolvable(p.displayConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingCustomIconOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingGradientColorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.color))
            aws_cdk_lib_IResolvable(p.color);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingIconProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customCondition))
            aws_cdk_lib_IResolvable(p.customCondition);
        if (!visitedObjects.has(p.iconSet))
            aws_cdk_lib_IResolvable(p.iconSet);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingIconDisplayConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingIconSetProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingSolidColorProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ContributionAnalysisDefaultProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.contributorDimensions))
            aws_cdk_lib_IResolvable(p.contributorDimensions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CurrencyDisplayFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decimalPlacesConfiguration))
            aws_cdk_lib_IResolvable(p.decimalPlacesConfiguration);
        if (!visitedObjects.has(p.negativeValueConfiguration))
            aws_cdk_lib_IResolvable(p.negativeValueConfiguration);
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.separatorConfiguration))
            aws_cdk_lib_IResolvable(p.separatorConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CustomActionFilterOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectedFieldsConfiguration))
            aws_cdk_lib_IResolvable(p.selectedFieldsConfiguration);
        if (!visitedObjects.has(p.targetVisualsConfiguration))
            aws_cdk_lib_IResolvable(p.targetVisualsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CustomActionNavigationOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.localNavigationConfiguration))
            aws_cdk_lib_IResolvable(p.localNavigationConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CustomActionSetParametersOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameterValueConfigurations))
            aws_cdk_lib_IResolvable(p.parameterValueConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CustomActionURLOperationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CustomColorProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CustomContentConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CustomContentVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CustomFilterConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CustomFilterListConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CustomNarrativeOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CustomParameterValuesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_CustomValuesConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customValues))
            aws_cdk_lib_IResolvable(p.customValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DataBarsOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DataColorProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DataFieldSeriesItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.settings))
            aws_cdk_lib_IResolvable(p.settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DataLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLabelTypes))
            aws_cdk_lib_IResolvable(p.dataLabelTypes);
        if (!visitedObjects.has(p.labelFontConfiguration))
            aws_cdk_lib_IResolvable(p.labelFontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DataLabelTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataPathLabelType))
            aws_cdk_lib_IResolvable(p.dataPathLabelType);
        if (!visitedObjects.has(p.fieldLabelType))
            aws_cdk_lib_IResolvable(p.fieldLabelType);
        if (!visitedObjects.has(p.maximumLabelType))
            aws_cdk_lib_IResolvable(p.maximumLabelType);
        if (!visitedObjects.has(p.minimumLabelType))
            aws_cdk_lib_IResolvable(p.minimumLabelType);
        if (!visitedObjects.has(p.rangeEndsLabelType))
            aws_cdk_lib_IResolvable(p.rangeEndsLabelType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DataPathColorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.element))
            aws_cdk_lib_IResolvable(p.element);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DataPathLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DataPathSortProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sortPaths))
            aws_cdk_lib_IResolvable(p.sortPaths);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DataPathValueProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DataSetConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnGroupSchemaList))
            aws_cdk_lib_IResolvable(p.columnGroupSchemaList);
        if (!visitedObjects.has(p.dataSetSchema))
            aws_cdk_lib_IResolvable(p.dataSetSchema);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DataSetReferenceProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DataSetSchemaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnSchemaList))
            aws_cdk_lib_IResolvable(p.columnSchemaList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DateAxisOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DateDimensionFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DateMeasureFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DateTimeDefaultValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicValue))
            aws_cdk_lib_IResolvable(p.dynamicValue);
        if (!visitedObjects.has(p.rollingDate))
            aws_cdk_lib_IResolvable(p.rollingDate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DateTimeFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.numericFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numericFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DateTimeHierarchyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.drillDownFilters))
            aws_cdk_lib_IResolvable(p.drillDownFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DateTimeParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValues))
            aws_cdk_lib_IResolvable(p.defaultValues);
        if (!visitedObjects.has(p.mappedDataSetParameters))
            aws_cdk_lib_IResolvable(p.mappedDataSetParameters);
        if (!visitedObjects.has(p.valueWhenUnset))
            aws_cdk_lib_IResolvable(p.valueWhenUnset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DateTimePickerControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DateTimeValueWhenUnsetConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DecimalDefaultValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicValue))
            aws_cdk_lib_IResolvable(p.dynamicValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DecimalParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValues))
            aws_cdk_lib_IResolvable(p.defaultValues);
        if (!visitedObjects.has(p.mappedDataSetParameters))
            aws_cdk_lib_IResolvable(p.mappedDataSetParameters);
        if (!visitedObjects.has(p.valueWhenUnset))
            aws_cdk_lib_IResolvable(p.valueWhenUnset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DecimalPlacesConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DecimalValueWhenUnsetConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DefaultFreeFormLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DefaultGridLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DefaultInteractiveLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.freeForm))
            aws_cdk_lib_IResolvable(p.freeForm);
        if (!visitedObjects.has(p.grid))
            aws_cdk_lib_IResolvable(p.grid);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DefaultNewSheetConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interactiveLayoutConfiguration))
            aws_cdk_lib_IResolvable(p.interactiveLayoutConfiguration);
        if (!visitedObjects.has(p.paginatedLayoutConfiguration))
            aws_cdk_lib_IResolvable(p.paginatedLayoutConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DefaultPaginatedLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sectionBased))
            aws_cdk_lib_IResolvable(p.sectionBased);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DefaultSectionBasedLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DestinationParameterValueConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customValuesConfiguration))
            aws_cdk_lib_IResolvable(p.customValuesConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DimensionFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoricalDimensionField))
            aws_cdk_lib_IResolvable(p.categoricalDimensionField);
        if (!visitedObjects.has(p.dateDimensionField))
            aws_cdk_lib_IResolvable(p.dateDimensionField);
        if (!visitedObjects.has(p.numericalDimensionField))
            aws_cdk_lib_IResolvable(p.numericalDimensionField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DonutCenterOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DonutOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arcOptions))
            aws_cdk_lib_IResolvable(p.arcOptions);
        if (!visitedObjects.has(p.donutCenterOptions))
            aws_cdk_lib_IResolvable(p.donutCenterOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DrillDownFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryFilter))
            aws_cdk_lib_IResolvable(p.categoryFilter);
        if (!visitedObjects.has(p.numericEqualityFilter))
            aws_cdk_lib_IResolvable(p.numericEqualityFilter);
        if (!visitedObjects.has(p.timeRangeFilter))
            aws_cdk_lib_IResolvable(p.timeRangeFilter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DropDownControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectAllOptions))
            aws_cdk_lib_IResolvable(p.selectAllOptions);
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_DynamicDefaultValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValueColumn))
            aws_cdk_lib_IResolvable(p.defaultValueColumn);
        if (!visitedObjects.has(p.groupNameColumn))
            aws_cdk_lib_IResolvable(p.groupNameColumn);
        if (!visitedObjects.has(p.userNameColumn))
            aws_cdk_lib_IResolvable(p.userNameColumn);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_EmptyVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_EntityProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ExcludePeriodConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ExplicitHierarchyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.drillDownFilters))
            aws_cdk_lib_IResolvable(p.drillDownFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FieldBasedTooltipProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tooltipFields))
            aws_cdk_lib_IResolvable(p.tooltipFields);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FieldLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FieldSeriesItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.settings))
            aws_cdk_lib_IResolvable(p.settings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FieldSortProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FieldSortOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnSort))
            aws_cdk_lib_IResolvable(p.columnSort);
        if (!visitedObjects.has(p.fieldSort))
            aws_cdk_lib_IResolvable(p.fieldSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FieldTooltipItemProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.geospatial))
            aws_cdk_lib_IResolvable(p.geospatial);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.shape))
            aws_cdk_lib_IResolvable(p.shape);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.mapStyleOptions))
            aws_cdk_lib_IResolvable(p.mapStyleOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.windowOptions))
            aws_cdk_lib_IResolvable(p.windowOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filledMapAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.filledMapAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapShapeConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.format))
            aws_cdk_lib_IResolvable(p.format);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryFilter))
            aws_cdk_lib_IResolvable(p.categoryFilter);
        if (!visitedObjects.has(p.numericEqualityFilter))
            aws_cdk_lib_IResolvable(p.numericEqualityFilter);
        if (!visitedObjects.has(p.numericRangeFilter))
            aws_cdk_lib_IResolvable(p.numericRangeFilter);
        if (!visitedObjects.has(p.relativeDatesFilter))
            aws_cdk_lib_IResolvable(p.relativeDatesFilter);
        if (!visitedObjects.has(p.timeEqualityFilter))
            aws_cdk_lib_IResolvable(p.timeEqualityFilter);
        if (!visitedObjects.has(p.timeRangeFilter))
            aws_cdk_lib_IResolvable(p.timeRangeFilter);
        if (!visitedObjects.has(p.topBottomFilter))
            aws_cdk_lib_IResolvable(p.topBottomFilter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimePicker))
            aws_cdk_lib_IResolvable(p.dateTimePicker);
        if (!visitedObjects.has(p.dropdown))
            aws_cdk_lib_IResolvable(p.dropdown);
        if (!visitedObjects.has(p.list))
            aws_cdk_lib_IResolvable(p.list);
        if (!visitedObjects.has(p.relativeDateTime))
            aws_cdk_lib_IResolvable(p.relativeDateTime);
        if (!visitedObjects.has(p.slider))
            aws_cdk_lib_IResolvable(p.slider);
        if (!visitedObjects.has(p.textArea))
            aws_cdk_lib_IResolvable(p.textArea);
        if (!visitedObjects.has(p.textField))
            aws_cdk_lib_IResolvable(p.textField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterDateTimePickerControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterDropDownControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cascadingControlConfiguration))
            aws_cdk_lib_IResolvable(p.cascadingControlConfiguration);
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
        if (!visitedObjects.has(p.selectableValues))
            aws_cdk_lib_IResolvable(p.selectableValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filters))
            aws_cdk_lib_IResolvable(p.filters);
        if (!visitedObjects.has(p.scopeConfiguration))
            aws_cdk_lib_IResolvable(p.scopeConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterListConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterListControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cascadingControlConfiguration))
            aws_cdk_lib_IResolvable(p.cascadingControlConfiguration);
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
        if (!visitedObjects.has(p.selectableValues))
            aws_cdk_lib_IResolvable(p.selectableValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterOperationSelectedFieldsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterOperationTargetVisualsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sameSheetTargetVisualConfiguration))
            aws_cdk_lib_IResolvable(p.sameSheetTargetVisualConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterRelativeDateTimeControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterScopeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectedSheets))
            aws_cdk_lib_IResolvable(p.selectedSheets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterSelectableValuesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterSliderControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterTextAreaControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FilterTextFieldControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FontConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontSize))
            aws_cdk_lib_IResolvable(p.fontSize);
        if (!visitedObjects.has(p.fontWeight))
            aws_cdk_lib_IResolvable(p.fontWeight);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FontSizeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FontWeightProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ForecastComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ForecastConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forecastProperties))
            aws_cdk_lib_IResolvable(p.forecastProperties);
        if (!visitedObjects.has(p.scenario))
            aws_cdk_lib_IResolvable(p.scenario);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ForecastScenarioProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.whatIfPointScenario))
            aws_cdk_lib_IResolvable(p.whatIfPointScenario);
        if (!visitedObjects.has(p.whatIfRangeScenario))
            aws_cdk_lib_IResolvable(p.whatIfRangeScenario);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimeFormatConfiguration))
            aws_cdk_lib_IResolvable(p.dateTimeFormatConfiguration);
        if (!visitedObjects.has(p.numberFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numberFormatConfiguration);
        if (!visitedObjects.has(p.stringFormatConfiguration))
            aws_cdk_lib_IResolvable(p.stringFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormLayoutCanvasSizeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.screenCanvasSizeOptions))
            aws_cdk_lib_IResolvable(p.screenCanvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.elements))
            aws_cdk_lib_IResolvable(p.elements);
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormLayoutElementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backgroundStyle))
            aws_cdk_lib_IResolvable(p.backgroundStyle);
        if (!visitedObjects.has(p.borderStyle))
            aws_cdk_lib_IResolvable(p.borderStyle);
        if (!visitedObjects.has(p.loadingAnimation))
            aws_cdk_lib_IResolvable(p.loadingAnimation);
        if (!visitedObjects.has(p.renderingRules))
            aws_cdk_lib_IResolvable(p.renderingRules);
        if (!visitedObjects.has(p.selectedBorderStyle))
            aws_cdk_lib_IResolvable(p.selectedBorderStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormLayoutElementBackgroundStyleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormLayoutElementBorderStyleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormLayoutScreenCanvasSizeOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormSectionLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.elements))
            aws_cdk_lib_IResolvable(p.elements);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FunnelChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FunnelChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.dataLabelOptions))
            aws_cdk_lib_IResolvable(p.dataLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.valueLabelOptions))
            aws_cdk_lib_IResolvable(p.valueLabelOptions);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FunnelChartDataLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.labelFontConfiguration))
            aws_cdk_lib_IResolvable(p.labelFontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FunnelChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.funnelChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.funnelChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FunnelChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_FunnelChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartArcConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.foregroundColor))
            aws_cdk_lib_IResolvable(p.foregroundColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arc))
            aws_cdk_lib_IResolvable(p.arc);
        if (!visitedObjects.has(p.primaryValue))
            aws_cdk_lib_IResolvable(p.primaryValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.gaugeChartOptions))
            aws_cdk_lib_IResolvable(p.gaugeChartOptions);
        if (!visitedObjects.has(p.tooltipOptions))
            aws_cdk_lib_IResolvable(p.tooltipOptions);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetValues))
            aws_cdk_lib_IResolvable(p.targetValues);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arc))
            aws_cdk_lib_IResolvable(p.arc);
        if (!visitedObjects.has(p.arcAxis))
            aws_cdk_lib_IResolvable(p.arcAxis);
        if (!visitedObjects.has(p.comparison))
            aws_cdk_lib_IResolvable(p.comparison);
        if (!visitedObjects.has(p.primaryValueFontConfiguration))
            aws_cdk_lib_IResolvable(p.primaryValueFontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartPrimaryValueConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.icon))
            aws_cdk_lib_IResolvable(p.icon);
        if (!visitedObjects.has(p.textColor))
            aws_cdk_lib_IResolvable(p.textColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialCoordinateBoundsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialMapAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.geospatial))
            aws_cdk_lib_IResolvable(p.geospatial);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialMapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.mapStyleOptions))
            aws_cdk_lib_IResolvable(p.mapStyleOptions);
        if (!visitedObjects.has(p.pointStyleOptions))
            aws_cdk_lib_IResolvable(p.pointStyleOptions);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.windowOptions))
            aws_cdk_lib_IResolvable(p.windowOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialMapFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.geospatialMapAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.geospatialMapAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialMapStyleOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialMapVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialPointStyleOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterMarkerConfiguration))
            aws_cdk_lib_IResolvable(p.clusterMarkerConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialWindowOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bounds))
            aws_cdk_lib_IResolvable(p.bounds);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GlobalTableBorderOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sideSpecificBorder))
            aws_cdk_lib_IResolvable(p.sideSpecificBorder);
        if (!visitedObjects.has(p.uniformBorder))
            aws_cdk_lib_IResolvable(p.uniformBorder);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GradientColorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stops))
            aws_cdk_lib_IResolvable(p.stops);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GradientStopProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GridLayoutCanvasSizeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.screenCanvasSizeOptions))
            aws_cdk_lib_IResolvable(p.screenCanvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GridLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.elements))
            aws_cdk_lib_IResolvable(p.elements);
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GridLayoutElementProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GridLayoutScreenCanvasSizeOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_GrowthRateComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_HeaderFooterSectionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.layout))
            aws_cdk_lib_IResolvable(p.layout);
        if (!visitedObjects.has(p.style))
            aws_cdk_lib_IResolvable(p.style);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_HeatMapAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.rows))
            aws_cdk_lib_IResolvable(p.rows);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_HeatMapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorScale))
            aws_cdk_lib_IResolvable(p.colorScale);
        if (!visitedObjects.has(p.columnLabelOptions))
            aws_cdk_lib_IResolvable(p.columnLabelOptions);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.rowLabelOptions))
            aws_cdk_lib_IResolvable(p.rowLabelOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_HeatMapFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.heatMapAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.heatMapAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_HeatMapSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.heatMapColumnItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.heatMapColumnItemsLimitConfiguration);
        if (!visitedObjects.has(p.heatMapColumnSort))
            aws_cdk_lib_IResolvable(p.heatMapColumnSort);
        if (!visitedObjects.has(p.heatMapRowItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.heatMapRowItemsLimitConfiguration);
        if (!visitedObjects.has(p.heatMapRowSort))
            aws_cdk_lib_IResolvable(p.heatMapRowSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_HeatMapVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_HistogramAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_HistogramBinOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.binCount))
            aws_cdk_lib_IResolvable(p.binCount);
        if (!visitedObjects.has(p.binWidth))
            aws_cdk_lib_IResolvable(p.binWidth);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_HistogramConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.binOptions))
            aws_cdk_lib_IResolvable(p.binOptions);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.xAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.xAxisDisplayOptions);
        if (!visitedObjects.has(p.xAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.xAxisLabelOptions);
        if (!visitedObjects.has(p.yAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.yAxisDisplayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_HistogramFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.histogramAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.histogramAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_HistogramVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_InsightConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.computations))
            aws_cdk_lib_IResolvable(p.computations);
        if (!visitedObjects.has(p.customNarrative))
            aws_cdk_lib_IResolvable(p.customNarrative);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_InsightVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.insightConfiguration))
            aws_cdk_lib_IResolvable(p.insightConfiguration);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_IntegerDefaultValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicValue))
            aws_cdk_lib_IResolvable(p.dynamicValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_IntegerParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValues))
            aws_cdk_lib_IResolvable(p.defaultValues);
        if (!visitedObjects.has(p.mappedDataSetParameters))
            aws_cdk_lib_IResolvable(p.mappedDataSetParameters);
        if (!visitedObjects.has(p.valueWhenUnset))
            aws_cdk_lib_IResolvable(p.valueWhenUnset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_IntegerValueWhenUnsetConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ItemsLimitConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_KPIConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_KPIConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.primaryValue))
            aws_cdk_lib_IResolvable(p.primaryValue);
        if (!visitedObjects.has(p.progressBar))
            aws_cdk_lib_IResolvable(p.progressBar);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_KPIConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.kpiOptions))
            aws_cdk_lib_IResolvable(p.kpiOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_KPIFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetValues))
            aws_cdk_lib_IResolvable(p.targetValues);
        if (!visitedObjects.has(p.trendGroups))
            aws_cdk_lib_IResolvable(p.trendGroups);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_KPIOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.comparison))
            aws_cdk_lib_IResolvable(p.comparison);
        if (!visitedObjects.has(p.primaryValueFontConfiguration))
            aws_cdk_lib_IResolvable(p.primaryValueFontConfiguration);
        if (!visitedObjects.has(p.progressBar))
            aws_cdk_lib_IResolvable(p.progressBar);
        if (!visitedObjects.has(p.secondaryValue))
            aws_cdk_lib_IResolvable(p.secondaryValue);
        if (!visitedObjects.has(p.secondaryValueFontConfiguration))
            aws_cdk_lib_IResolvable(p.secondaryValueFontConfiguration);
        if (!visitedObjects.has(p.trendArrows))
            aws_cdk_lib_IResolvable(p.trendArrows);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_KPIPrimaryValueConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.icon))
            aws_cdk_lib_IResolvable(p.icon);
        if (!visitedObjects.has(p.textColor))
            aws_cdk_lib_IResolvable(p.textColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_KPIProgressBarConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.foregroundColor))
            aws_cdk_lib_IResolvable(p.foregroundColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_KPISortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trendGroupSort))
            aws_cdk_lib_IResolvable(p.trendGroupSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_KPIVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LayoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.freeFormLayout))
            aws_cdk_lib_IResolvable(p.freeFormLayout);
        if (!visitedObjects.has(p.gridLayout))
            aws_cdk_lib_IResolvable(p.gridLayout);
        if (!visitedObjects.has(p.sectionBasedLayout))
            aws_cdk_lib_IResolvable(p.sectionBasedLayout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LegendOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.smallMultiples))
            aws_cdk_lib_IResolvable(p.smallMultiples);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.contributionAnalysisDefaults))
            aws_cdk_lib_IResolvable(p.contributionAnalysisDefaults);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.defaultSeriesSettings))
            aws_cdk_lib_IResolvable(p.defaultSeriesSettings);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.forecastConfigurations))
            aws_cdk_lib_IResolvable(p.forecastConfigurations);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.primaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.primaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisLabelOptions);
        if (!visitedObjects.has(p.referenceLines))
            aws_cdk_lib_IResolvable(p.referenceLines);
        if (!visitedObjects.has(p.secondaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.secondaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.secondaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.secondaryYAxisLabelOptions);
        if (!visitedObjects.has(p.series))
            aws_cdk_lib_IResolvable(p.series);
        if (!visitedObjects.has(p.smallMultiplesOptions))
            aws_cdk_lib_IResolvable(p.smallMultiplesOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.xAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.xAxisDisplayOptions);
        if (!visitedObjects.has(p.xAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.xAxisLabelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartDefaultSeriesSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lineStyleSettings))
            aws_cdk_lib_IResolvable(p.lineStyleSettings);
        if (!visitedObjects.has(p.markerStyleSettings))
            aws_cdk_lib_IResolvable(p.markerStyleSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lineChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.lineChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartLineStyleSettingsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartMarkerStyleSettingsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartSeriesSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lineStyleSettings))
            aws_cdk_lib_IResolvable(p.lineStyleSettings);
        if (!visitedObjects.has(p.markerStyleSettings))
            aws_cdk_lib_IResolvable(p.markerStyleSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.categoryItemsLimitConfiguration);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.colorItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.colorItemsLimitConfiguration);
        if (!visitedObjects.has(p.smallMultiplesLimitConfiguration))
            aws_cdk_lib_IResolvable(p.smallMultiplesLimitConfiguration);
        if (!visitedObjects.has(p.smallMultiplesSort))
            aws_cdk_lib_IResolvable(p.smallMultiplesSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LineSeriesAxisDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.axisOptions))
            aws_cdk_lib_IResolvable(p.axisOptions);
        if (!visitedObjects.has(p.missingDataConfigurations))
            aws_cdk_lib_IResolvable(p.missingDataConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ListControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.searchOptions))
            aws_cdk_lib_IResolvable(p.searchOptions);
        if (!visitedObjects.has(p.selectAllOptions))
            aws_cdk_lib_IResolvable(p.selectAllOptions);
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ListControlSearchOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ListControlSelectAllOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LoadingAnimationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LocalNavigationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_LongFormatTextProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_MappedDataSetParameterProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_MaximumLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_MaximumMinimumComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_MeasureFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.calculatedMeasureField))
            aws_cdk_lib_IResolvable(p.calculatedMeasureField);
        if (!visitedObjects.has(p.categoricalMeasureField))
            aws_cdk_lib_IResolvable(p.categoricalMeasureField);
        if (!visitedObjects.has(p.dateMeasureField))
            aws_cdk_lib_IResolvable(p.dateMeasureField);
        if (!visitedObjects.has(p.numericalMeasureField))
            aws_cdk_lib_IResolvable(p.numericalMeasureField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_MetricComparisonComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fromValue))
            aws_cdk_lib_IResolvable(p.fromValue);
        if (!visitedObjects.has(p.targetValue))
            aws_cdk_lib_IResolvable(p.targetValue);
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_MinimumLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_MissingDataConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NegativeValueConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NullValueFormatConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NumberDisplayFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decimalPlacesConfiguration))
            aws_cdk_lib_IResolvable(p.decimalPlacesConfiguration);
        if (!visitedObjects.has(p.negativeValueConfiguration))
            aws_cdk_lib_IResolvable(p.negativeValueConfiguration);
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.separatorConfiguration))
            aws_cdk_lib_IResolvable(p.separatorConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NumberFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NumericAxisOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.range))
            aws_cdk_lib_IResolvable(p.range);
        if (!visitedObjects.has(p.scale))
            aws_cdk_lib_IResolvable(p.scale);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NumericEqualityDrillDownFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NumericEqualityFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NumericFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.currencyDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.currencyDisplayFormatConfiguration);
        if (!visitedObjects.has(p.numberDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numberDisplayFormatConfiguration);
        if (!visitedObjects.has(p.percentageDisplayFormatConfiguration))
            aws_cdk_lib_IResolvable(p.percentageDisplayFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NumericRangeFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
        if (!visitedObjects.has(p.rangeMaximum))
            aws_cdk_lib_IResolvable(p.rangeMaximum);
        if (!visitedObjects.has(p.rangeMinimum))
            aws_cdk_lib_IResolvable(p.rangeMinimum);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NumericRangeFilterValueProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NumericSeparatorConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.thousandsSeparator))
            aws_cdk_lib_IResolvable(p.thousandsSeparator);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NumericalAggregationFunctionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.percentileAggregation))
            aws_cdk_lib_IResolvable(p.percentileAggregation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NumericalDimensionFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_NumericalMeasureFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.aggregationFunction))
            aws_cdk_lib_IResolvable(p.aggregationFunction);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PaginationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PanelConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PanelTitleOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimePicker))
            aws_cdk_lib_IResolvable(p.dateTimePicker);
        if (!visitedObjects.has(p.dropdown))
            aws_cdk_lib_IResolvable(p.dropdown);
        if (!visitedObjects.has(p.list))
            aws_cdk_lib_IResolvable(p.list);
        if (!visitedObjects.has(p.slider))
            aws_cdk_lib_IResolvable(p.slider);
        if (!visitedObjects.has(p.textArea))
            aws_cdk_lib_IResolvable(p.textArea);
        if (!visitedObjects.has(p.textField))
            aws_cdk_lib_IResolvable(p.textField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterDateTimePickerControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dateTimeParameterDeclaration))
            aws_cdk_lib_IResolvable(p.dateTimeParameterDeclaration);
        if (!visitedObjects.has(p.decimalParameterDeclaration))
            aws_cdk_lib_IResolvable(p.decimalParameterDeclaration);
        if (!visitedObjects.has(p.integerParameterDeclaration))
            aws_cdk_lib_IResolvable(p.integerParameterDeclaration);
        if (!visitedObjects.has(p.stringParameterDeclaration))
            aws_cdk_lib_IResolvable(p.stringParameterDeclaration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterDropDownControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cascadingControlConfiguration))
            aws_cdk_lib_IResolvable(p.cascadingControlConfiguration);
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
        if (!visitedObjects.has(p.selectableValues))
            aws_cdk_lib_IResolvable(p.selectableValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterListControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cascadingControlConfiguration))
            aws_cdk_lib_IResolvable(p.cascadingControlConfiguration);
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
        if (!visitedObjects.has(p.selectableValues))
            aws_cdk_lib_IResolvable(p.selectableValues);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterSelectableValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.linkToDataSetColumn))
            aws_cdk_lib_IResolvable(p.linkToDataSetColumn);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterSliderControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterTextAreaControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterTextFieldControlProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.displayOptions))
            aws_cdk_lib_IResolvable(p.displayOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PercentVisibleRangeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PercentageDisplayFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decimalPlacesConfiguration))
            aws_cdk_lib_IResolvable(p.decimalPlacesConfiguration);
        if (!visitedObjects.has(p.negativeValueConfiguration))
            aws_cdk_lib_IResolvable(p.negativeValueConfiguration);
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.separatorConfiguration))
            aws_cdk_lib_IResolvable(p.separatorConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PercentileAggregationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PeriodOverPeriodComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PeriodToDateComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PieChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.smallMultiples))
            aws_cdk_lib_IResolvable(p.smallMultiples);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PieChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.contributionAnalysisDefaults))
            aws_cdk_lib_IResolvable(p.contributionAnalysisDefaults);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.donutOptions))
            aws_cdk_lib_IResolvable(p.donutOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.smallMultiplesOptions))
            aws_cdk_lib_IResolvable(p.smallMultiplesOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.valueLabelOptions))
            aws_cdk_lib_IResolvable(p.valueLabelOptions);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PieChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pieChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.pieChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PieChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.smallMultiplesLimitConfiguration))
            aws_cdk_lib_IResolvable(p.smallMultiplesLimitConfiguration);
        if (!visitedObjects.has(p.smallMultiplesSort))
            aws_cdk_lib_IResolvable(p.smallMultiplesSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PieChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotFieldSortOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sortBy))
            aws_cdk_lib_IResolvable(p.sortBy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.rows))
            aws_cdk_lib_IResolvable(p.rows);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableCellConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scope))
            aws_cdk_lib_IResolvable(p.scope);
        if (!visitedObjects.has(p.textFormat))
            aws_cdk_lib_IResolvable(p.textFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cell))
            aws_cdk_lib_IResolvable(p.cell);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableConditionalFormattingScopeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldOptions))
            aws_cdk_lib_IResolvable(p.fieldOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.paginatedReportOptions))
            aws_cdk_lib_IResolvable(p.paginatedReportOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tableOptions))
            aws_cdk_lib_IResolvable(p.tableOptions);
        if (!visitedObjects.has(p.totalOptions))
            aws_cdk_lib_IResolvable(p.totalOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableDataPathOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataPathList))
            aws_cdk_lib_IResolvable(p.dataPathList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableFieldOptionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableFieldOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataPathOptions))
            aws_cdk_lib_IResolvable(p.dataPathOptions);
        if (!visitedObjects.has(p.selectedFieldOptions))
            aws_cdk_lib_IResolvable(p.selectedFieldOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableFieldSubtotalOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pivotTableAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.pivotTableAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cellStyle))
            aws_cdk_lib_IResolvable(p.cellStyle);
        if (!visitedObjects.has(p.columnHeaderStyle))
            aws_cdk_lib_IResolvable(p.columnHeaderStyle);
        if (!visitedObjects.has(p.rowAlternateColorOptions))
            aws_cdk_lib_IResolvable(p.rowAlternateColorOptions);
        if (!visitedObjects.has(p.rowFieldNamesStyle))
            aws_cdk_lib_IResolvable(p.rowFieldNamesStyle);
        if (!visitedObjects.has(p.rowHeaderStyle))
            aws_cdk_lib_IResolvable(p.rowHeaderStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTablePaginatedReportOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableSortByProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.dataPath))
            aws_cdk_lib_IResolvable(p.dataPath);
        if (!visitedObjects.has(p.field))
            aws_cdk_lib_IResolvable(p.field);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldSortOptions))
            aws_cdk_lib_IResolvable(p.fieldSortOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableTotalOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnSubtotalOptions))
            aws_cdk_lib_IResolvable(p.columnSubtotalOptions);
        if (!visitedObjects.has(p.columnTotalOptions))
            aws_cdk_lib_IResolvable(p.columnTotalOptions);
        if (!visitedObjects.has(p.rowSubtotalOptions))
            aws_cdk_lib_IResolvable(p.rowSubtotalOptions);
        if (!visitedObjects.has(p.rowTotalOptions))
            aws_cdk_lib_IResolvable(p.rowTotalOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTotalOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricHeaderCellStyle))
            aws_cdk_lib_IResolvable(p.metricHeaderCellStyle);
        if (!visitedObjects.has(p.totalCellStyle))
            aws_cdk_lib_IResolvable(p.totalCellStyle);
        if (!visitedObjects.has(p.valueCellStyle))
            aws_cdk_lib_IResolvable(p.valueCellStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_PredefinedHierarchyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columns))
            aws_cdk_lib_IResolvable(p.columns);
        if (!visitedObjects.has(p.drillDownFilters))
            aws_cdk_lib_IResolvable(p.drillDownFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ProgressBarOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.color))
            aws_cdk_lib_IResolvable(p.color);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartAreaStyleSettingsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.baseSeriesSettings))
            aws_cdk_lib_IResolvable(p.baseSeriesSettings);
        if (!visitedObjects.has(p.categoryAxis))
            aws_cdk_lib_IResolvable(p.categoryAxis);
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.colorAxis))
            aws_cdk_lib_IResolvable(p.colorAxis);
        if (!visitedObjects.has(p.colorLabelOptions))
            aws_cdk_lib_IResolvable(p.colorLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.radarChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.radarChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartSeriesSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.areaStyleSettings))
            aws_cdk_lib_IResolvable(p.areaStyleSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
        if (!visitedObjects.has(p.colorItemsLimit))
            aws_cdk_lib_IResolvable(p.colorItemsLimit);
        if (!visitedObjects.has(p.colorSort))
            aws_cdk_lib_IResolvable(p.colorSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_RangeEndsLabelTypeProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataConfiguration))
            aws_cdk_lib_IResolvable(p.dataConfiguration);
        if (!visitedObjects.has(p.labelConfiguration))
            aws_cdk_lib_IResolvable(p.labelConfiguration);
        if (!visitedObjects.has(p.styleConfiguration))
            aws_cdk_lib_IResolvable(p.styleConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineCustomLabelConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineDataConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicConfiguration))
            aws_cdk_lib_IResolvable(p.dynamicConfiguration);
        if (!visitedObjects.has(p.staticConfiguration))
            aws_cdk_lib_IResolvable(p.staticConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineDynamicDataConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.calculation))
            aws_cdk_lib_IResolvable(p.calculation);
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.measureAggregationFunction))
            aws_cdk_lib_IResolvable(p.measureAggregationFunction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineLabelConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customLabelConfiguration))
            aws_cdk_lib_IResolvable(p.customLabelConfiguration);
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
        if (!visitedObjects.has(p.valueLabelConfiguration))
            aws_cdk_lib_IResolvable(p.valueLabelConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineStaticDataConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineStyleConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineValueLabelConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_RelativeDateTimeControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_RelativeDatesFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.anchorDateConfiguration))
            aws_cdk_lib_IResolvable(p.anchorDateConfiguration);
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.excludePeriodConfiguration))
            aws_cdk_lib_IResolvable(p.excludePeriodConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ResourcePermissionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_RollingDateConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_RowAlternateColorOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SameSheetTargetVisualConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SankeyDiagramAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_IResolvable(p.source);
        if (!visitedObjects.has(p.weight))
            aws_cdk_lib_IResolvable(p.weight);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SankeyDiagramChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SankeyDiagramFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sankeyDiagramAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.sankeyDiagramAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SankeyDiagramSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationItemsLimit))
            aws_cdk_lib_IResolvable(p.destinationItemsLimit);
        if (!visitedObjects.has(p.sourceItemsLimit))
            aws_cdk_lib_IResolvable(p.sourceItemsLimit);
        if (!visitedObjects.has(p.weightSort))
            aws_cdk_lib_IResolvable(p.weightSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SankeyDiagramVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ScatterPlotCategoricallyAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.size))
            aws_cdk_lib_IResolvable(p.size);
        if (!visitedObjects.has(p.xAxis))
            aws_cdk_lib_IResolvable(p.xAxis);
        if (!visitedObjects.has(p.yAxis))
            aws_cdk_lib_IResolvable(p.yAxis);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ScatterPlotConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.xAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.xAxisDisplayOptions);
        if (!visitedObjects.has(p.xAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.xAxisLabelOptions);
        if (!visitedObjects.has(p.yAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.yAxisDisplayOptions);
        if (!visitedObjects.has(p.yAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.yAxisLabelOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ScatterPlotFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scatterPlotCategoricallyAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.scatterPlotCategoricallyAggregatedFieldWells);
        if (!visitedObjects.has(p.scatterPlotUnaggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.scatterPlotUnaggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ScatterPlotUnaggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.size))
            aws_cdk_lib_IResolvable(p.size);
        if (!visitedObjects.has(p.xAxis))
            aws_cdk_lib_IResolvable(p.xAxis);
        if (!visitedObjects.has(p.yAxis))
            aws_cdk_lib_IResolvable(p.yAxis);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ScatterPlotVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ScrollBarOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.visibleRange))
            aws_cdk_lib_IResolvable(p.visibleRange);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SecondaryValueOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SectionAfterPageBreakProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SectionBasedLayoutCanvasSizeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.paperCanvasSizeOptions))
            aws_cdk_lib_IResolvable(p.paperCanvasSizeOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SectionBasedLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bodySections))
            aws_cdk_lib_IResolvable(p.bodySections);
        if (!visitedObjects.has(p.canvasSizeOptions))
            aws_cdk_lib_IResolvable(p.canvasSizeOptions);
        if (!visitedObjects.has(p.footerSections))
            aws_cdk_lib_IResolvable(p.footerSections);
        if (!visitedObjects.has(p.headerSections))
            aws_cdk_lib_IResolvable(p.headerSections);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SectionBasedLayoutPaperCanvasSizeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.paperMargin))
            aws_cdk_lib_IResolvable(p.paperMargin);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SectionLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.freeFormLayout))
            aws_cdk_lib_IResolvable(p.freeFormLayout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SectionPageBreakConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.after))
            aws_cdk_lib_IResolvable(p.after);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SectionStyleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.padding))
            aws_cdk_lib_IResolvable(p.padding);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SelectedSheetsFilterScopeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sheetVisualScopingConfigurations))
            aws_cdk_lib_IResolvable(p.sheetVisualScopingConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SeriesItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataFieldSeriesItem))
            aws_cdk_lib_IResolvable(p.dataFieldSeriesItem);
        if (!visitedObjects.has(p.fieldSeriesItem))
            aws_cdk_lib_IResolvable(p.fieldSeriesItem);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SetParameterValueConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ShapeConditionalFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backgroundColor))
            aws_cdk_lib_IResolvable(p.backgroundColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SheetProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SheetControlLayoutProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SheetControlLayoutConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.gridLayout))
            aws_cdk_lib_IResolvable(p.gridLayout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SheetDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filterControls))
            aws_cdk_lib_IResolvable(p.filterControls);
        if (!visitedObjects.has(p.layouts))
            aws_cdk_lib_IResolvable(p.layouts);
        if (!visitedObjects.has(p.parameterControls))
            aws_cdk_lib_IResolvable(p.parameterControls);
        if (!visitedObjects.has(p.sheetControlLayouts))
            aws_cdk_lib_IResolvable(p.sheetControlLayouts);
        if (!visitedObjects.has(p.textBoxes))
            aws_cdk_lib_IResolvable(p.textBoxes);
        if (!visitedObjects.has(p.visuals))
            aws_cdk_lib_IResolvable(p.visuals);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SheetElementConfigurationOverridesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SheetElementRenderingRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurationOverrides))
            aws_cdk_lib_IResolvable(p.configurationOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SheetTextBoxProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SheetVisualScopingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ShortFormatTextProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SimpleClusterMarkerProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SliderControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SmallMultiplesOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.panelConfiguration))
            aws_cdk_lib_IResolvable(p.panelConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SpacingProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_StringDefaultValuesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicValue))
            aws_cdk_lib_IResolvable(p.dynamicValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_StringFormatConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nullValueFormatConfiguration))
            aws_cdk_lib_IResolvable(p.nullValueFormatConfiguration);
        if (!visitedObjects.has(p.numericFormatConfiguration))
            aws_cdk_lib_IResolvable(p.numericFormatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_StringParameterDeclarationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultValues))
            aws_cdk_lib_IResolvable(p.defaultValues);
        if (!visitedObjects.has(p.mappedDataSetParameters))
            aws_cdk_lib_IResolvable(p.mappedDataSetParameters);
        if (!visitedObjects.has(p.valueWhenUnset))
            aws_cdk_lib_IResolvable(p.valueWhenUnset);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_StringValueWhenUnsetConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_SubtotalOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldLevelOptions))
            aws_cdk_lib_IResolvable(p.fieldLevelOptions);
        if (!visitedObjects.has(p.metricHeaderCellStyle))
            aws_cdk_lib_IResolvable(p.metricHeaderCellStyle);
        if (!visitedObjects.has(p.totalCellStyle))
            aws_cdk_lib_IResolvable(p.totalCellStyle);
        if (!visitedObjects.has(p.valueCellStyle))
            aws_cdk_lib_IResolvable(p.valueCellStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupBy))
            aws_cdk_lib_IResolvable(p.groupBy);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableBorderOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableCellConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.textFormat))
            aws_cdk_lib_IResolvable(p.textFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableCellImageSizingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableCellStyleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.border))
            aws_cdk_lib_IResolvable(p.border);
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditionalFormattingOptions))
            aws_cdk_lib_IResolvable(p.conditionalFormattingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableConditionalFormattingOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cell))
            aws_cdk_lib_IResolvable(p.cell);
        if (!visitedObjects.has(p.row))
            aws_cdk_lib_IResolvable(p.row);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldOptions))
            aws_cdk_lib_IResolvable(p.fieldOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.paginatedReportOptions))
            aws_cdk_lib_IResolvable(p.paginatedReportOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tableInlineVisualizations))
            aws_cdk_lib_IResolvable(p.tableInlineVisualizations);
        if (!visitedObjects.has(p.tableOptions))
            aws_cdk_lib_IResolvable(p.tableOptions);
        if (!visitedObjects.has(p.totalOptions))
            aws_cdk_lib_IResolvable(p.totalOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldCustomIconContentProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldCustomTextContentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontConfiguration))
            aws_cdk_lib_IResolvable(p.fontConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldImageConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sizingOptions))
            aws_cdk_lib_IResolvable(p.sizingOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldLinkConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.content))
            aws_cdk_lib_IResolvable(p.content);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldLinkContentConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customIconContent))
            aws_cdk_lib_IResolvable(p.customIconContent);
        if (!visitedObjects.has(p.customTextContent))
            aws_cdk_lib_IResolvable(p.customTextContent);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldOptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.urlStyling))
            aws_cdk_lib_IResolvable(p.urlStyling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectedFieldOptions))
            aws_cdk_lib_IResolvable(p.selectedFieldOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldURLConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.imageConfiguration))
            aws_cdk_lib_IResolvable(p.imageConfiguration);
        if (!visitedObjects.has(p.linkConfiguration))
            aws_cdk_lib_IResolvable(p.linkConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tableAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.tableAggregatedFieldWells);
        if (!visitedObjects.has(p.tableUnaggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.tableUnaggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableInlineVisualizationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataBars))
            aws_cdk_lib_IResolvable(p.dataBars);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cellStyle))
            aws_cdk_lib_IResolvable(p.cellStyle);
        if (!visitedObjects.has(p.headerStyle))
            aws_cdk_lib_IResolvable(p.headerStyle);
        if (!visitedObjects.has(p.rowAlternateColorOptions))
            aws_cdk_lib_IResolvable(p.rowAlternateColorOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TablePaginatedReportOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableRowConditionalFormattingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backgroundColor))
            aws_cdk_lib_IResolvable(p.backgroundColor);
        if (!visitedObjects.has(p.textColor))
            aws_cdk_lib_IResolvable(p.textColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableSideBorderOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bottom))
            aws_cdk_lib_IResolvable(p.bottom);
        if (!visitedObjects.has(p.innerHorizontal))
            aws_cdk_lib_IResolvable(p.innerHorizontal);
        if (!visitedObjects.has(p.innerVertical))
            aws_cdk_lib_IResolvable(p.innerVertical);
        if (!visitedObjects.has(p.left))
            aws_cdk_lib_IResolvable(p.left);
        if (!visitedObjects.has(p.right))
            aws_cdk_lib_IResolvable(p.right);
        if (!visitedObjects.has(p.top))
            aws_cdk_lib_IResolvable(p.top);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.paginationConfiguration))
            aws_cdk_lib_IResolvable(p.paginationConfiguration);
        if (!visitedObjects.has(p.rowSort))
            aws_cdk_lib_IResolvable(p.rowSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableUnaggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TableVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.conditionalFormatting))
            aws_cdk_lib_IResolvable(p.conditionalFormatting);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TemplateErrorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.violatedEntities))
            aws_cdk_lib_IResolvable(p.violatedEntities);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TemplateSourceAnalysisProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSetReferences))
            aws_cdk_lib_IResolvable(p.dataSetReferences);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TemplateSourceEntityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceAnalysis))
            aws_cdk_lib_IResolvable(p.sourceAnalysis);
        if (!visitedObjects.has(p.sourceTemplate))
            aws_cdk_lib_IResolvable(p.sourceTemplate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TemplateSourceTemplateProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TemplateVersionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSetConfigurations))
            aws_cdk_lib_IResolvable(p.dataSetConfigurations);
        if (!visitedObjects.has(p.errors))
            aws_cdk_lib_IResolvable(p.errors);
        if (!visitedObjects.has(p.sheets))
            aws_cdk_lib_IResolvable(p.sheets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TemplateVersionDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSetConfigurations))
            aws_cdk_lib_IResolvable(p.dataSetConfigurations);
        if (!visitedObjects.has(p.analysisDefaults))
            aws_cdk_lib_IResolvable(p.analysisDefaults);
        if (!visitedObjects.has(p.calculatedFields))
            aws_cdk_lib_IResolvable(p.calculatedFields);
        if (!visitedObjects.has(p.columnConfigurations))
            aws_cdk_lib_IResolvable(p.columnConfigurations);
        if (!visitedObjects.has(p.filterGroups))
            aws_cdk_lib_IResolvable(p.filterGroups);
        if (!visitedObjects.has(p.parameterDeclarations))
            aws_cdk_lib_IResolvable(p.parameterDeclarations);
        if (!visitedObjects.has(p.sheets))
            aws_cdk_lib_IResolvable(p.sheets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TextAreaControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.placeholderOptions))
            aws_cdk_lib_IResolvable(p.placeholderOptions);
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TextConditionalFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.backgroundColor))
            aws_cdk_lib_IResolvable(p.backgroundColor);
        if (!visitedObjects.has(p.icon))
            aws_cdk_lib_IResolvable(p.icon);
        if (!visitedObjects.has(p.textColor))
            aws_cdk_lib_IResolvable(p.textColor);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TextControlPlaceholderOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TextFieldControlDisplayOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.placeholderOptions))
            aws_cdk_lib_IResolvable(p.placeholderOptions);
        if (!visitedObjects.has(p.titleOptions))
            aws_cdk_lib_IResolvable(p.titleOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_ThousandSeparatorOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TimeBasedForecastPropertiesProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TimeEqualityFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TimeRangeDrillDownFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TimeRangeFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.excludePeriodConfiguration))
            aws_cdk_lib_IResolvable(p.excludePeriodConfiguration);
        if (!visitedObjects.has(p.rangeMaximumValue))
            aws_cdk_lib_IResolvable(p.rangeMaximumValue);
        if (!visitedObjects.has(p.rangeMinimumValue))
            aws_cdk_lib_IResolvable(p.rangeMinimumValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TimeRangeFilterValueProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rollingDate))
            aws_cdk_lib_IResolvable(p.rollingDate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TooltipItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.columnTooltipItem))
            aws_cdk_lib_IResolvable(p.columnTooltipItem);
        if (!visitedObjects.has(p.fieldTooltipItem))
            aws_cdk_lib_IResolvable(p.fieldTooltipItem);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TooltipOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldBasedTooltip))
            aws_cdk_lib_IResolvable(p.fieldBasedTooltip);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TopBottomFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aggregationSortConfigurations))
            aws_cdk_lib_IResolvable(p.aggregationSortConfigurations);
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TopBottomMoversComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TopBottomRankedComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TotalAggregationComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TotalOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.totalCellStyle))
            aws_cdk_lib_IResolvable(p.totalCellStyle);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TreeMapAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colors))
            aws_cdk_lib_IResolvable(p.colors);
        if (!visitedObjects.has(p.groups))
            aws_cdk_lib_IResolvable(p.groups);
        if (!visitedObjects.has(p.sizes))
            aws_cdk_lib_IResolvable(p.sizes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TreeMapConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorLabelOptions))
            aws_cdk_lib_IResolvable(p.colorLabelOptions);
        if (!visitedObjects.has(p.colorScale))
            aws_cdk_lib_IResolvable(p.colorScale);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.groupLabelOptions))
            aws_cdk_lib_IResolvable(p.groupLabelOptions);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.sizeLabelOptions))
            aws_cdk_lib_IResolvable(p.sizeLabelOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.tooltip))
            aws_cdk_lib_IResolvable(p.tooltip);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TreeMapFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.treeMapAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.treeMapAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TreeMapSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.treeMapGroupItemsLimitConfiguration))
            aws_cdk_lib_IResolvable(p.treeMapGroupItemsLimitConfiguration);
        if (!visitedObjects.has(p.treeMapSort))
            aws_cdk_lib_IResolvable(p.treeMapSort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TreeMapVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_TrendArrowOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_UnaggregatedFieldProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.column))
            aws_cdk_lib_IResolvable(p.column);
        if (!visitedObjects.has(p.formatConfiguration))
            aws_cdk_lib_IResolvable(p.formatConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_UniqueValuesComputationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.category))
            aws_cdk_lib_IResolvable(p.category);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_VisibleRangeOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.percentRange))
            aws_cdk_lib_IResolvable(p.percentRange);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_VisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.barChartVisual))
            aws_cdk_lib_IResolvable(p.barChartVisual);
        if (!visitedObjects.has(p.boxPlotVisual))
            aws_cdk_lib_IResolvable(p.boxPlotVisual);
        if (!visitedObjects.has(p.comboChartVisual))
            aws_cdk_lib_IResolvable(p.comboChartVisual);
        if (!visitedObjects.has(p.customContentVisual))
            aws_cdk_lib_IResolvable(p.customContentVisual);
        if (!visitedObjects.has(p.emptyVisual))
            aws_cdk_lib_IResolvable(p.emptyVisual);
        if (!visitedObjects.has(p.filledMapVisual))
            aws_cdk_lib_IResolvable(p.filledMapVisual);
        if (!visitedObjects.has(p.funnelChartVisual))
            aws_cdk_lib_IResolvable(p.funnelChartVisual);
        if (!visitedObjects.has(p.gaugeChartVisual))
            aws_cdk_lib_IResolvable(p.gaugeChartVisual);
        if (!visitedObjects.has(p.geospatialMapVisual))
            aws_cdk_lib_IResolvable(p.geospatialMapVisual);
        if (!visitedObjects.has(p.heatMapVisual))
            aws_cdk_lib_IResolvable(p.heatMapVisual);
        if (!visitedObjects.has(p.histogramVisual))
            aws_cdk_lib_IResolvable(p.histogramVisual);
        if (!visitedObjects.has(p.insightVisual))
            aws_cdk_lib_IResolvable(p.insightVisual);
        if (!visitedObjects.has(p.kpiVisual))
            aws_cdk_lib_IResolvable(p.kpiVisual);
        if (!visitedObjects.has(p.lineChartVisual))
            aws_cdk_lib_IResolvable(p.lineChartVisual);
        if (!visitedObjects.has(p.pieChartVisual))
            aws_cdk_lib_IResolvable(p.pieChartVisual);
        if (!visitedObjects.has(p.pivotTableVisual))
            aws_cdk_lib_IResolvable(p.pivotTableVisual);
        if (!visitedObjects.has(p.radarChartVisual))
            aws_cdk_lib_IResolvable(p.radarChartVisual);
        if (!visitedObjects.has(p.sankeyDiagramVisual))
            aws_cdk_lib_IResolvable(p.sankeyDiagramVisual);
        if (!visitedObjects.has(p.scatterPlotVisual))
            aws_cdk_lib_IResolvable(p.scatterPlotVisual);
        if (!visitedObjects.has(p.tableVisual))
            aws_cdk_lib_IResolvable(p.tableVisual);
        if (!visitedObjects.has(p.treeMapVisual))
            aws_cdk_lib_IResolvable(p.treeMapVisual);
        if (!visitedObjects.has(p.waterfallVisual))
            aws_cdk_lib_IResolvable(p.waterfallVisual);
        if (!visitedObjects.has(p.wordCloudVisual))
            aws_cdk_lib_IResolvable(p.wordCloudVisual);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_VisualCustomActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actionOperations))
            aws_cdk_lib_IResolvable(p.actionOperations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_VisualCustomActionOperationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filterOperation))
            aws_cdk_lib_IResolvable(p.filterOperation);
        if (!visitedObjects.has(p.navigationOperation))
            aws_cdk_lib_IResolvable(p.navigationOperation);
        if (!visitedObjects.has(p.setParametersOperation))
            aws_cdk_lib_IResolvable(p.setParametersOperation);
        if (!visitedObjects.has(p.urlOperation))
            aws_cdk_lib_IResolvable(p.urlOperation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_VisualPaletteProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.colorMap))
            aws_cdk_lib_IResolvable(p.colorMap);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_VisualSubtitleLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatText))
            aws_cdk_lib_IResolvable(p.formatText);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_VisualTitleLabelOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.formatText))
            aws_cdk_lib_IResolvable(p.formatText);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WaterfallChartAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.breakdowns))
            aws_cdk_lib_IResolvable(p.breakdowns);
        if (!visitedObjects.has(p.categories))
            aws_cdk_lib_IResolvable(p.categories);
        if (!visitedObjects.has(p.values))
            aws_cdk_lib_IResolvable(p.values);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WaterfallChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.categoryAxisDisplayOptions);
        if (!visitedObjects.has(p.categoryAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryAxisLabelOptions);
        if (!visitedObjects.has(p.dataLabels))
            aws_cdk_lib_IResolvable(p.dataLabels);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.legend))
            aws_cdk_lib_IResolvable(p.legend);
        if (!visitedObjects.has(p.primaryYAxisDisplayOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisDisplayOptions);
        if (!visitedObjects.has(p.primaryYAxisLabelOptions))
            aws_cdk_lib_IResolvable(p.primaryYAxisLabelOptions);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.visualPalette))
            aws_cdk_lib_IResolvable(p.visualPalette);
        if (!visitedObjects.has(p.waterfallChartOptions))
            aws_cdk_lib_IResolvable(p.waterfallChartOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WaterfallChartFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.waterfallChartAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.waterfallChartAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WaterfallChartOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WaterfallChartSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.breakdownItemsLimit))
            aws_cdk_lib_IResolvable(p.breakdownItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WaterfallVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WhatIfPointScenarioProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WhatIfRangeScenarioProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WordCloudAggregatedFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groupBy))
            aws_cdk_lib_IResolvable(p.groupBy);
        if (!visitedObjects.has(p.size))
            aws_cdk_lib_IResolvable(p.size);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WordCloudChartConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryLabelOptions))
            aws_cdk_lib_IResolvable(p.categoryLabelOptions);
        if (!visitedObjects.has(p.fieldWells))
            aws_cdk_lib_IResolvable(p.fieldWells);
        if (!visitedObjects.has(p.sortConfiguration))
            aws_cdk_lib_IResolvable(p.sortConfiguration);
        if (!visitedObjects.has(p.wordCloudOptions))
            aws_cdk_lib_IResolvable(p.wordCloudOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WordCloudFieldWellsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.wordCloudAggregatedFieldWells))
            aws_cdk_lib_IResolvable(p.wordCloudAggregatedFieldWells);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WordCloudOptionsProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WordCloudSortConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.categoryItemsLimit))
            aws_cdk_lib_IResolvable(p.categoryItemsLimit);
        if (!visitedObjects.has(p.categorySort))
            aws_cdk_lib_IResolvable(p.categorySort);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTemplate_WordCloudVisualProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chartConfiguration))
            aws_cdk_lib_IResolvable(p.chartConfiguration);
        if (!visitedObjects.has(p.columnHierarchies))
            aws_cdk_lib_IResolvable(p.columnHierarchies);
        if (!visitedObjects.has(p.subtitle))
            aws_cdk_lib_IResolvable(p.subtitle);
        if (!visitedObjects.has(p.title))
            aws_cdk_lib_IResolvable(p.title);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnThemeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
        if (!visitedObjects.has(p.permissions))
            aws_cdk_lib_IResolvable(p.permissions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTheme(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTheme_BorderStyleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTheme_DataColorPaletteProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTheme_FontProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTheme_GutterStyleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTheme_MarginStyleProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTheme_ResourcePermissionProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTheme_SheetStyleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tile))
            aws_cdk_lib_IResolvable(p.tile);
        if (!visitedObjects.has(p.tileLayout))
            aws_cdk_lib_IResolvable(p.tileLayout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTheme_ThemeConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataColorPalette))
            aws_cdk_lib_IResolvable(p.dataColorPalette);
        if (!visitedObjects.has(p.sheet))
            aws_cdk_lib_IResolvable(p.sheet);
        if (!visitedObjects.has(p.typography))
            aws_cdk_lib_IResolvable(p.typography);
        if (!visitedObjects.has(p.uiColorPalette))
            aws_cdk_lib_IResolvable(p.uiColorPalette);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTheme_ThemeErrorProperty(p) {
}
function aws_cdk_lib_aws_quicksight_CfnTheme_ThemeVersionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
        if (!visitedObjects.has(p.errors))
            aws_cdk_lib_IResolvable(p.errors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTheme_TileLayoutStyleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.gutter))
            aws_cdk_lib_IResolvable(p.gutter);
        if (!visitedObjects.has(p.margin))
            aws_cdk_lib_IResolvable(p.margin);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTheme_TileStyleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.border))
            aws_cdk_lib_IResolvable(p.border);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTheme_TypographyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fontFamilies))
            aws_cdk_lib_IResolvable(p.fontFamilies);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_quicksight_CfnTheme_UIColorPaletteProperty(p) {
}
function aws_cdk_lib_aws_ram_CfnResourceShareProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ram_CfnResourceShare(p) {
}
function aws_cdk_lib_aws_rds_IEngine(p) {
}
function aws_cdk_lib_aws_rds_EngineVersion(p) {
}
function aws_cdk_lib_aws_rds_InstanceUpdateBehaviour(p) {
}
function aws_cdk_lib_aws_rds_DatabaseClusterBase(p) {
}
function aws_cdk_lib_aws_rds_DatabaseClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            aws_cdk_lib_aws_rds_IClusterEngine(p.engine);
        if (!visitedObjects.has(p.instanceProps))
            aws_cdk_lib_aws_rds_InstanceProps(p.instanceProps);
        if (!visitedObjects.has(p.backtrackWindow))
            aws_cdk_lib_Duration(p.backtrackWindow);
        if (!visitedObjects.has(p.backup))
            aws_cdk_lib_aws_rds_BackupProps(p.backup);
        if (!visitedObjects.has(p.cloudwatchLogsRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.cloudwatchLogsRetention);
        if (!visitedObjects.has(p.cloudwatchLogsRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.cloudwatchLogsRetentionRole);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_rds_Credentials(p.credentials);
        if (!visitedObjects.has(p.instanceUpdateBehaviour))
            aws_cdk_lib_aws_rds_InstanceUpdateBehaviour(p.instanceUpdateBehaviour);
        if (!visitedObjects.has(p.monitoringInterval))
            aws_cdk_lib_Duration(p.monitoringInterval);
        if (!visitedObjects.has(p.monitoringRole))
            aws_cdk_lib_aws_iam_IRole(p.monitoringRole);
        if (!visitedObjects.has(p.networkType))
            aws_cdk_lib_aws_rds_NetworkType(p.networkType);
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (p.s3ExportBuckets != null)
            for (const o of p.s3ExportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ExportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ExportRole);
        if (p.s3ImportBuckets != null)
            for (const o of p.s3ImportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ImportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ImportRole);
        if (!visitedObjects.has(p.storageEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.storageEncryptionKey);
        if (!visitedObjects.has(p.subnetGroup))
            aws_cdk_lib_aws_rds_ISubnetGroup(p.subnetGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseCluster(p) {
}
function aws_cdk_lib_aws_rds_DatabaseClusterFromSnapshotProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            aws_cdk_lib_aws_rds_IClusterEngine(p.engine);
        if (!visitedObjects.has(p.instanceProps))
            aws_cdk_lib_aws_rds_InstanceProps(p.instanceProps);
        if (!visitedObjects.has(p.backtrackWindow))
            aws_cdk_lib_Duration(p.backtrackWindow);
        if (!visitedObjects.has(p.backup))
            aws_cdk_lib_aws_rds_BackupProps(p.backup);
        if (!visitedObjects.has(p.cloudwatchLogsRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.cloudwatchLogsRetention);
        if (!visitedObjects.has(p.cloudwatchLogsRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.cloudwatchLogsRetentionRole);
        if ("credentials" in p)
            print("aws-cdk-lib.aws_rds.DatabaseClusterFromSnapshotProps#credentials", "use `snapshotCredentials` which allows to generate a new password");
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_rds_Credentials(p.credentials);
        if (!visitedObjects.has(p.instanceUpdateBehaviour))
            aws_cdk_lib_aws_rds_InstanceUpdateBehaviour(p.instanceUpdateBehaviour);
        if (!visitedObjects.has(p.monitoringInterval))
            aws_cdk_lib_Duration(p.monitoringInterval);
        if (!visitedObjects.has(p.monitoringRole))
            aws_cdk_lib_aws_iam_IRole(p.monitoringRole);
        if (!visitedObjects.has(p.networkType))
            aws_cdk_lib_aws_rds_NetworkType(p.networkType);
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (p.s3ExportBuckets != null)
            for (const o of p.s3ExportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ExportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ExportRole);
        if (p.s3ImportBuckets != null)
            for (const o of p.s3ImportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ImportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ImportRole);
        if (!visitedObjects.has(p.snapshotCredentials))
            aws_cdk_lib_aws_rds_SnapshotCredentials(p.snapshotCredentials);
        if (!visitedObjects.has(p.storageEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.storageEncryptionKey);
        if (!visitedObjects.has(p.subnetGroup))
            aws_cdk_lib_aws_rds_ISubnetGroup(p.subnetGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseClusterFromSnapshot(p) {
}
function aws_cdk_lib_aws_rds_IDatabaseCluster(p) {
}
function aws_cdk_lib_aws_rds_DatabaseClusterAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            aws_cdk_lib_aws_rds_IClusterEngine(p.engine);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_ClusterEngineBindOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.s3ExportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ExportRole);
        if (!visitedObjects.has(p.s3ImportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ImportRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_ClusterEngineConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.features))
            aws_cdk_lib_aws_rds_ClusterEngineFeatures(p.features);
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_rds_IParameterGroup(p.parameterGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_ClusterEngineFeatures(p) {
}
function aws_cdk_lib_aws_rds_IClusterEngine(p) {
}
function aws_cdk_lib_aws_rds_AuroraEngineVersion(p) {
}
function aws_cdk_lib_aws_rds_AuroraClusterEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_AuroraEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_AuroraMysqlEngineVersion(p) {
}
function aws_cdk_lib_aws_rds_AuroraMysqlClusterEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_AuroraMysqlEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_AuroraPostgresEngineFeatures(p) {
}
function aws_cdk_lib_aws_rds_AuroraPostgresEngineVersion(p) {
}
function aws_cdk_lib_aws_rds_AuroraPostgresClusterEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_AuroraPostgresEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseClusterEngine(p) {
}
function aws_cdk_lib_aws_rds_InstanceEngineBindOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.optionGroup))
            aws_cdk_lib_aws_rds_IOptionGroup(p.optionGroup);
        if (!visitedObjects.has(p.s3ExportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ExportRole);
        if (!visitedObjects.has(p.s3ImportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ImportRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_InstanceEngineConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.features))
            aws_cdk_lib_aws_rds_InstanceEngineFeatures(p.features);
        if (!visitedObjects.has(p.optionGroup))
            aws_cdk_lib_aws_rds_IOptionGroup(p.optionGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_InstanceEngineFeatures(p) {
}
function aws_cdk_lib_aws_rds_IInstanceEngine(p) {
}
function aws_cdk_lib_aws_rds_MariaDbEngineVersion(p) {
}
function aws_cdk_lib_aws_rds_MariaDbInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_MariaDbEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_MysqlEngineVersion(p) {
}
function aws_cdk_lib_aws_rds_MySqlInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_MysqlEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_PostgresEngineFeatures(p) {
}
function aws_cdk_lib_aws_rds_PostgresEngineVersion(p) {
}
function aws_cdk_lib_aws_rds_PostgresInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_PostgresEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_OracleEngineVersion(p) {
}
function aws_cdk_lib_aws_rds_OracleSe2InstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_OracleEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_OracleSe2CdbInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_OracleEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_OracleEeInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_OracleEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_OracleEeCdbInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_OracleEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_SqlServerEngineVersion(p) {
}
function aws_cdk_lib_aws_rds_SqlServerSeInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_SqlServerEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_SqlServerExInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_SqlServerEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_SqlServerWebInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_SqlServerEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_SqlServerEeInstanceEngineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.version))
            aws_cdk_lib_aws_rds_SqlServerEngineVersion(p.version);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseInstanceEngine(p) {
}
function aws_cdk_lib_aws_rds_InstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.performanceInsightEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.performanceInsightEncryptionKey);
        if (!visitedObjects.has(p.performanceInsightRetention))
            aws_cdk_lib_aws_rds_PerformanceInsightRetention(p.performanceInsightRetention);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_BackupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.retention))
            aws_cdk_lib_Duration(p.retention);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CredentialsBaseOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (p.replicaRegions != null)
            for (const o of p.replicaRegions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_secretsmanager_ReplicaRegion(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CredentialsFromUsernameOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.password))
            aws_cdk_lib_SecretValue(p.password);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (p.replicaRegions != null)
            for (const o of p.replicaRegions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_secretsmanager_ReplicaRegion(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_Credentials(p) {
}
function aws_cdk_lib_aws_rds_SnapshotCredentialsFromGeneratedPasswordOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (p.replicaRegions != null)
            for (const o of p.replicaRegions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_secretsmanager_ReplicaRegion(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_SnapshotCredentials(p) {
}
function aws_cdk_lib_aws_rds_CommonRotationUserOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.automaticallyAfter))
            aws_cdk_lib_Duration(p.automaticallyAfter);
        if (!visitedObjects.has(p.endpoint))
            aws_cdk_lib_aws_ec2_IInterfaceVpcEndpoint(p.endpoint);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_RotationSingleUserOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.automaticallyAfter))
            aws_cdk_lib_Duration(p.automaticallyAfter);
        if (!visitedObjects.has(p.endpoint))
            aws_cdk_lib_aws_ec2_IInterfaceVpcEndpoint(p.endpoint);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_RotationMultiUserOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.secret);
        if (!visitedObjects.has(p.automaticallyAfter))
            aws_cdk_lib_Duration(p.automaticallyAfter);
        if (!visitedObjects.has(p.endpoint))
            aws_cdk_lib_aws_ec2_IInterfaceVpcEndpoint(p.endpoint);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_PerformanceInsightRetention(p) {
}
function aws_cdk_lib_aws_rds_ParameterGroupClusterBindOptions(p) {
}
function aws_cdk_lib_aws_rds_ParameterGroupClusterConfig(p) {
}
function aws_cdk_lib_aws_rds_ParameterGroupInstanceBindOptions(p) {
}
function aws_cdk_lib_aws_rds_ParameterGroupInstanceConfig(p) {
}
function aws_cdk_lib_aws_rds_IParameterGroup(p) {
}
function aws_cdk_lib_aws_rds_ParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            aws_cdk_lib_aws_rds_IEngine(p.engine);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_ParameterGroup(p) {
}
function aws_cdk_lib_aws_rds_DatabaseSecretProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.masterSecret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.masterSecret);
        if (p.replicaRegions != null)
            for (const o of p.replicaRegions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_secretsmanager_ReplicaRegion(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseSecret(p) {
}
function aws_cdk_lib_aws_rds_Endpoint(p) {
}
function aws_cdk_lib_aws_rds_IOptionGroup(p) {
}
function aws_cdk_lib_aws_rds_OptionConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_OptionGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.configurations != null)
            for (const o of p.configurations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_rds_OptionConfiguration(o);
        if (!visitedObjects.has(p.engine))
            aws_cdk_lib_aws_rds_IInstanceEngine(p.engine);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_OptionGroup(p) {
}
function aws_cdk_lib_aws_rds_IDatabaseInstance(p) {
}
function aws_cdk_lib_aws_rds_DatabaseInstanceAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.engine))
            aws_cdk_lib_aws_rds_IInstanceEngine(p.engine);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseInstanceBase(p) {
}
function aws_cdk_lib_aws_rds_LicenseModel(p) {
}
function aws_cdk_lib_aws_rds_ProcessorFeatures(p) {
}
function aws_cdk_lib_aws_rds_StorageType(p) {
}
function aws_cdk_lib_aws_rds_NetworkType(p) {
}
function aws_cdk_lib_aws_rds_DatabaseInstanceNewProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.backupRetention))
            aws_cdk_lib_Duration(p.backupRetention);
        if (!visitedObjects.has(p.cloudwatchLogsRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.cloudwatchLogsRetention);
        if (!visitedObjects.has(p.cloudwatchLogsRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.cloudwatchLogsRetentionRole);
        if (!visitedObjects.has(p.domainRole))
            aws_cdk_lib_aws_iam_IRole(p.domainRole);
        if (!visitedObjects.has(p.monitoringInterval))
            aws_cdk_lib_Duration(p.monitoringInterval);
        if (!visitedObjects.has(p.monitoringRole))
            aws_cdk_lib_aws_iam_IRole(p.monitoringRole);
        if (!visitedObjects.has(p.networkType))
            aws_cdk_lib_aws_rds_NetworkType(p.networkType);
        if (!visitedObjects.has(p.optionGroup))
            aws_cdk_lib_aws_rds_IOptionGroup(p.optionGroup);
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.performanceInsightEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.performanceInsightEncryptionKey);
        if (!visitedObjects.has(p.performanceInsightRetention))
            aws_cdk_lib_aws_rds_PerformanceInsightRetention(p.performanceInsightRetention);
        if (!visitedObjects.has(p.processorFeatures))
            aws_cdk_lib_aws_rds_ProcessorFeatures(p.processorFeatures);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (p.s3ExportBuckets != null)
            for (const o of p.s3ExportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ExportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ExportRole);
        if (p.s3ImportBuckets != null)
            for (const o of p.s3ImportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ImportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ImportRole);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.storageType))
            aws_cdk_lib_aws_rds_StorageType(p.storageType);
        if (!visitedObjects.has(p.subnetGroup))
            aws_cdk_lib_aws_rds_ISubnetGroup(p.subnetGroup);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseInstanceSourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            aws_cdk_lib_aws_rds_IInstanceEngine(p.engine);
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.licenseModel))
            aws_cdk_lib_aws_rds_LicenseModel(p.licenseModel);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.backupRetention))
            aws_cdk_lib_Duration(p.backupRetention);
        if (!visitedObjects.has(p.cloudwatchLogsRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.cloudwatchLogsRetention);
        if (!visitedObjects.has(p.cloudwatchLogsRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.cloudwatchLogsRetentionRole);
        if (!visitedObjects.has(p.domainRole))
            aws_cdk_lib_aws_iam_IRole(p.domainRole);
        if (!visitedObjects.has(p.monitoringInterval))
            aws_cdk_lib_Duration(p.monitoringInterval);
        if (!visitedObjects.has(p.monitoringRole))
            aws_cdk_lib_aws_iam_IRole(p.monitoringRole);
        if (!visitedObjects.has(p.networkType))
            aws_cdk_lib_aws_rds_NetworkType(p.networkType);
        if (!visitedObjects.has(p.optionGroup))
            aws_cdk_lib_aws_rds_IOptionGroup(p.optionGroup);
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.performanceInsightEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.performanceInsightEncryptionKey);
        if (!visitedObjects.has(p.performanceInsightRetention))
            aws_cdk_lib_aws_rds_PerformanceInsightRetention(p.performanceInsightRetention);
        if (!visitedObjects.has(p.processorFeatures))
            aws_cdk_lib_aws_rds_ProcessorFeatures(p.processorFeatures);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (p.s3ExportBuckets != null)
            for (const o of p.s3ExportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ExportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ExportRole);
        if (p.s3ImportBuckets != null)
            for (const o of p.s3ImportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ImportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ImportRole);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.storageType))
            aws_cdk_lib_aws_rds_StorageType(p.storageType);
        if (!visitedObjects.has(p.subnetGroup))
            aws_cdk_lib_aws_rds_ISubnetGroup(p.subnetGroup);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_rds_Credentials(p.credentials);
        if (!visitedObjects.has(p.storageEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.storageEncryptionKey);
        if (!visitedObjects.has(p.engine))
            aws_cdk_lib_aws_rds_IInstanceEngine(p.engine);
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.licenseModel))
            aws_cdk_lib_aws_rds_LicenseModel(p.licenseModel);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.backupRetention))
            aws_cdk_lib_Duration(p.backupRetention);
        if (!visitedObjects.has(p.cloudwatchLogsRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.cloudwatchLogsRetention);
        if (!visitedObjects.has(p.cloudwatchLogsRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.cloudwatchLogsRetentionRole);
        if (!visitedObjects.has(p.domainRole))
            aws_cdk_lib_aws_iam_IRole(p.domainRole);
        if (!visitedObjects.has(p.monitoringInterval))
            aws_cdk_lib_Duration(p.monitoringInterval);
        if (!visitedObjects.has(p.monitoringRole))
            aws_cdk_lib_aws_iam_IRole(p.monitoringRole);
        if (!visitedObjects.has(p.networkType))
            aws_cdk_lib_aws_rds_NetworkType(p.networkType);
        if (!visitedObjects.has(p.optionGroup))
            aws_cdk_lib_aws_rds_IOptionGroup(p.optionGroup);
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.performanceInsightEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.performanceInsightEncryptionKey);
        if (!visitedObjects.has(p.performanceInsightRetention))
            aws_cdk_lib_aws_rds_PerformanceInsightRetention(p.performanceInsightRetention);
        if (!visitedObjects.has(p.processorFeatures))
            aws_cdk_lib_aws_rds_ProcessorFeatures(p.processorFeatures);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (p.s3ExportBuckets != null)
            for (const o of p.s3ExportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ExportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ExportRole);
        if (p.s3ImportBuckets != null)
            for (const o of p.s3ImportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ImportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ImportRole);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.storageType))
            aws_cdk_lib_aws_rds_StorageType(p.storageType);
        if (!visitedObjects.has(p.subnetGroup))
            aws_cdk_lib_aws_rds_ISubnetGroup(p.subnetGroup);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseInstance(p) {
}
function aws_cdk_lib_aws_rds_DatabaseInstanceFromSnapshotProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_rds_SnapshotCredentials(p.credentials);
        if (!visitedObjects.has(p.engine))
            aws_cdk_lib_aws_rds_IInstanceEngine(p.engine);
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.licenseModel))
            aws_cdk_lib_aws_rds_LicenseModel(p.licenseModel);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.backupRetention))
            aws_cdk_lib_Duration(p.backupRetention);
        if (!visitedObjects.has(p.cloudwatchLogsRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.cloudwatchLogsRetention);
        if (!visitedObjects.has(p.cloudwatchLogsRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.cloudwatchLogsRetentionRole);
        if (!visitedObjects.has(p.domainRole))
            aws_cdk_lib_aws_iam_IRole(p.domainRole);
        if (!visitedObjects.has(p.monitoringInterval))
            aws_cdk_lib_Duration(p.monitoringInterval);
        if (!visitedObjects.has(p.monitoringRole))
            aws_cdk_lib_aws_iam_IRole(p.monitoringRole);
        if (!visitedObjects.has(p.networkType))
            aws_cdk_lib_aws_rds_NetworkType(p.networkType);
        if (!visitedObjects.has(p.optionGroup))
            aws_cdk_lib_aws_rds_IOptionGroup(p.optionGroup);
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.performanceInsightEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.performanceInsightEncryptionKey);
        if (!visitedObjects.has(p.performanceInsightRetention))
            aws_cdk_lib_aws_rds_PerformanceInsightRetention(p.performanceInsightRetention);
        if (!visitedObjects.has(p.processorFeatures))
            aws_cdk_lib_aws_rds_ProcessorFeatures(p.processorFeatures);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (p.s3ExportBuckets != null)
            for (const o of p.s3ExportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ExportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ExportRole);
        if (p.s3ImportBuckets != null)
            for (const o of p.s3ImportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ImportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ImportRole);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.storageType))
            aws_cdk_lib_aws_rds_StorageType(p.storageType);
        if (!visitedObjects.has(p.subnetGroup))
            aws_cdk_lib_aws_rds_ISubnetGroup(p.subnetGroup);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseInstanceFromSnapshot(p) {
}
function aws_cdk_lib_aws_rds_DatabaseInstanceReadReplicaProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.sourceDatabaseInstance))
            aws_cdk_lib_aws_rds_IDatabaseInstance(p.sourceDatabaseInstance);
        if (!visitedObjects.has(p.storageEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.storageEncryptionKey);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.backupRetention))
            aws_cdk_lib_Duration(p.backupRetention);
        if (!visitedObjects.has(p.cloudwatchLogsRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.cloudwatchLogsRetention);
        if (!visitedObjects.has(p.cloudwatchLogsRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.cloudwatchLogsRetentionRole);
        if (!visitedObjects.has(p.domainRole))
            aws_cdk_lib_aws_iam_IRole(p.domainRole);
        if (!visitedObjects.has(p.monitoringInterval))
            aws_cdk_lib_Duration(p.monitoringInterval);
        if (!visitedObjects.has(p.monitoringRole))
            aws_cdk_lib_aws_iam_IRole(p.monitoringRole);
        if (!visitedObjects.has(p.networkType))
            aws_cdk_lib_aws_rds_NetworkType(p.networkType);
        if (!visitedObjects.has(p.optionGroup))
            aws_cdk_lib_aws_rds_IOptionGroup(p.optionGroup);
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.performanceInsightEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.performanceInsightEncryptionKey);
        if (!visitedObjects.has(p.performanceInsightRetention))
            aws_cdk_lib_aws_rds_PerformanceInsightRetention(p.performanceInsightRetention);
        if (!visitedObjects.has(p.processorFeatures))
            aws_cdk_lib_aws_rds_ProcessorFeatures(p.processorFeatures);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (p.s3ExportBuckets != null)
            for (const o of p.s3ExportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ExportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ExportRole);
        if (p.s3ImportBuckets != null)
            for (const o of p.s3ImportBuckets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IBucket(o);
        if (!visitedObjects.has(p.s3ImportRole))
            aws_cdk_lib_aws_iam_IRole(p.s3ImportRole);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.storageType))
            aws_cdk_lib_aws_rds_StorageType(p.storageType);
        if (!visitedObjects.has(p.subnetGroup))
            aws_cdk_lib_aws_rds_ISubnetGroup(p.subnetGroup);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseInstanceReadReplica(p) {
}
function aws_cdk_lib_aws_rds_SessionPinningFilter(p) {
}
function aws_cdk_lib_aws_rds_ProxyTarget(p) {
}
function aws_cdk_lib_aws_rds_ProxyTargetConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.dbClusters != null)
            for (const o of p.dbClusters)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_rds_IDatabaseCluster(o);
        if (p.dbInstances != null)
            for (const o of p.dbInstances)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_rds_IDatabaseInstance(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseProxyOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.secrets != null)
            for (const o of p.secrets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_secretsmanager_ISecret(o);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.borrowTimeout))
            aws_cdk_lib_Duration(p.borrowTimeout);
        if (!visitedObjects.has(p.idleClientTimeout))
            aws_cdk_lib_Duration(p.idleClientTimeout);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (p.sessionPinningFilters != null)
            for (const o of p.sessionPinningFilters)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_rds_SessionPinningFilter(o);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseProxyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.proxyTarget))
            aws_cdk_lib_aws_rds_ProxyTarget(p.proxyTarget);
        if (p.secrets != null)
            for (const o of p.secrets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_secretsmanager_ISecret(o);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.borrowTimeout))
            aws_cdk_lib_Duration(p.borrowTimeout);
        if (!visitedObjects.has(p.idleClientTimeout))
            aws_cdk_lib_Duration(p.idleClientTimeout);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (p.sessionPinningFilters != null)
            for (const o of p.sessionPinningFilters)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_rds_SessionPinningFilter(o);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_DatabaseProxyAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_IDatabaseProxy(p) {
}
function aws_cdk_lib_aws_rds_DatabaseProxy(p) {
}
function aws_cdk_lib_aws_rds_IServerlessCluster(p) {
}
function aws_cdk_lib_aws_rds_ServerlessClusterAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.secret);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_AuroraCapacityUnit(p) {
}
function aws_cdk_lib_aws_rds_ServerlessScalingOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoPause))
            aws_cdk_lib_Duration(p.autoPause);
        if (!visitedObjects.has(p.maxCapacity))
            aws_cdk_lib_aws_rds_AuroraCapacityUnit(p.maxCapacity);
        if (!visitedObjects.has(p.minCapacity))
            aws_cdk_lib_aws_rds_AuroraCapacityUnit(p.minCapacity);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_ServerlessClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            aws_cdk_lib_aws_rds_IClusterEngine(p.engine);
        if (!visitedObjects.has(p.backupRetention))
            aws_cdk_lib_Duration(p.backupRetention);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_rds_Credentials(p.credentials);
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.scaling))
            aws_cdk_lib_aws_rds_ServerlessScalingOptions(p.scaling);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.storageEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.storageEncryptionKey);
        if (!visitedObjects.has(p.subnetGroup))
            aws_cdk_lib_aws_rds_ISubnetGroup(p.subnetGroup);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_ServerlessCluster(p) {
}
function aws_cdk_lib_aws_rds_ServerlessClusterFromSnapshotProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.engine))
            aws_cdk_lib_aws_rds_IClusterEngine(p.engine);
        if (!visitedObjects.has(p.backupRetention))
            aws_cdk_lib_Duration(p.backupRetention);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_rds_SnapshotCredentials(p.credentials);
        if (!visitedObjects.has(p.parameterGroup))
            aws_cdk_lib_aws_rds_IParameterGroup(p.parameterGroup);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.scaling))
            aws_cdk_lib_aws_rds_ServerlessScalingOptions(p.scaling);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnetGroup))
            aws_cdk_lib_aws_rds_ISubnetGroup(p.subnetGroup);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_ServerlessClusterFromSnapshot(p) {
}
function aws_cdk_lib_aws_rds_ISubnetGroup(p) {
}
function aws_cdk_lib_aws_rds_SubnetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_SubnetGroup(p) {
}
function aws_cdk_lib_aws_rds_CfnDBClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.associatedRoles))
            aws_cdk_lib_IResolvable(p.associatedRoles);
        if (!visitedObjects.has(p.masterUserSecret))
            aws_cdk_lib_IResolvable(p.masterUserSecret);
        if (!visitedObjects.has(p.scalingConfiguration))
            aws_cdk_lib_IResolvable(p.scalingConfiguration);
        if (!visitedObjects.has(p.serverlessV2ScalingConfiguration))
            aws_cdk_lib_IResolvable(p.serverlessV2ScalingConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CfnDBCluster(p) {
}
function aws_cdk_lib_aws_rds_CfnDBCluster_DBClusterRoleProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBCluster_EndpointProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBCluster_MasterUserSecretProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBCluster_ReadEndpointProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBCluster_ScalingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBCluster_ServerlessV2ScalingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBClusterParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CfnDBClusterParameterGroup(p) {
}
function aws_cdk_lib_aws_rds_CfnDBInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.associatedRoles))
            aws_cdk_lib_IResolvable(p.associatedRoles);
        if (!visitedObjects.has(p.certificateDetails))
            aws_cdk_lib_IResolvable(p.certificateDetails);
        if (!visitedObjects.has(p.endpoint))
            aws_cdk_lib_IResolvable(p.endpoint);
        if (!visitedObjects.has(p.masterUserSecret))
            aws_cdk_lib_IResolvable(p.masterUserSecret);
        if (!visitedObjects.has(p.processorFeatures))
            aws_cdk_lib_IResolvable(p.processorFeatures);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CfnDBInstance(p) {
}
function aws_cdk_lib_aws_rds_CfnDBInstance_CertificateDetailsProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBInstance_DBInstanceRoleProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBInstance_EndpointProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBInstance_MasterUserSecretProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBInstance_ProcessorFeatureProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CfnDBParameterGroup(p) {
}
function aws_cdk_lib_aws_rds_CfnDBProxyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.auth))
            aws_cdk_lib_IResolvable(p.auth);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_rds_CfnDBProxy_TagFormatProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CfnDBProxy(p) {
}
function aws_cdk_lib_aws_rds_CfnDBProxy_AuthFormatProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBProxy_TagFormatProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBProxyEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_rds_CfnDBProxyEndpoint_TagFormatProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CfnDBProxyEndpoint(p) {
}
function aws_cdk_lib_aws_rds_CfnDBProxyEndpoint_TagFormatProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBProxyTargetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionPoolConfigurationInfo))
            aws_cdk_lib_IResolvable(p.connectionPoolConfigurationInfo);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CfnDBProxyTargetGroup(p) {
}
function aws_cdk_lib_aws_rds_CfnDBProxyTargetGroup_ConnectionPoolConfigurationInfoFormatProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBSecurityGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dbSecurityGroupIngress))
            aws_cdk_lib_IResolvable(p.dbSecurityGroupIngress);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CfnDBSecurityGroup(p) {
}
function aws_cdk_lib_aws_rds_CfnDBSecurityGroup_IngressProperty(p) {
}
function aws_cdk_lib_aws_rds_CfnDBSecurityGroupIngressProps(p) {
}
function aws_cdk_lib_aws_rds_CfnDBSecurityGroupIngress(p) {
}
function aws_cdk_lib_aws_rds_CfnDBSubnetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CfnDBSubnetGroup(p) {
}
function aws_cdk_lib_aws_rds_CfnEventSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CfnEventSubscription(p) {
}
function aws_cdk_lib_aws_rds_CfnGlobalClusterProps(p) {
}
function aws_cdk_lib_aws_rds_CfnGlobalCluster(p) {
}
function aws_cdk_lib_aws_rds_CfnOptionGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.optionConfigurations))
            aws_cdk_lib_IResolvable(p.optionConfigurations);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CfnOptionGroup(p) {
}
function aws_cdk_lib_aws_rds_CfnOptionGroup_OptionConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.optionSettings))
            aws_cdk_lib_IResolvable(p.optionSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rds_CfnOptionGroup_OptionSettingProperty(p) {
}
function aws_cdk_lib_aws_redshift_CfnClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.endpoint))
            aws_cdk_lib_IResolvable(p.endpoint);
        if (!visitedObjects.has(p.loggingProperties))
            aws_cdk_lib_IResolvable(p.loggingProperties);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_redshift_CfnCluster(p) {
}
function aws_cdk_lib_aws_redshift_CfnCluster_EndpointProperty(p) {
}
function aws_cdk_lib_aws_redshift_CfnCluster_LoggingPropertiesProperty(p) {
}
function aws_cdk_lib_aws_redshift_CfnClusterParameterGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_redshift_CfnClusterParameterGroup(p) {
}
function aws_cdk_lib_aws_redshift_CfnClusterParameterGroup_ParameterProperty(p) {
}
function aws_cdk_lib_aws_redshift_CfnClusterSecurityGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_redshift_CfnClusterSecurityGroup(p) {
}
function aws_cdk_lib_aws_redshift_CfnClusterSecurityGroupIngressProps(p) {
}
function aws_cdk_lib_aws_redshift_CfnClusterSecurityGroupIngress(p) {
}
function aws_cdk_lib_aws_redshift_CfnClusterSubnetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_redshift_CfnClusterSubnetGroup(p) {
}
function aws_cdk_lib_aws_redshift_CfnEndpointAccessProps(p) {
}
function aws_cdk_lib_aws_redshift_CfnEndpointAccess(p) {
}
function aws_cdk_lib_aws_redshift_CfnEndpointAccess_NetworkInterfaceProperty(p) {
}
function aws_cdk_lib_aws_redshift_CfnEndpointAccess_VpcEndpointProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.networkInterfaces))
            aws_cdk_lib_IResolvable(p.networkInterfaces);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_redshift_CfnEndpointAccess_VpcSecurityGroupProperty(p) {
}
function aws_cdk_lib_aws_redshift_CfnEndpointAuthorizationProps(p) {
}
function aws_cdk_lib_aws_redshift_CfnEndpointAuthorization(p) {
}
function aws_cdk_lib_aws_redshift_CfnEventSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_redshift_CfnEventSubscription(p) {
}
function aws_cdk_lib_aws_redshift_CfnScheduledActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetAction))
            aws_cdk_lib_IResolvable(p.targetAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_redshift_CfnScheduledAction(p) {
}
function aws_cdk_lib_aws_redshift_CfnScheduledAction_PauseClusterMessageProperty(p) {
}
function aws_cdk_lib_aws_redshift_CfnScheduledAction_ResizeClusterMessageProperty(p) {
}
function aws_cdk_lib_aws_redshift_CfnScheduledAction_ResumeClusterMessageProperty(p) {
}
function aws_cdk_lib_aws_redshift_CfnScheduledAction_ScheduledActionTypeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pauseCluster))
            aws_cdk_lib_IResolvable(p.pauseCluster);
        if (!visitedObjects.has(p.resizeCluster))
            aws_cdk_lib_IResolvable(p.resizeCluster);
        if (!visitedObjects.has(p.resumeCluster))
            aws_cdk_lib_IResolvable(p.resumeCluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_redshiftserverless_CfnNamespaceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_redshiftserverless_CfnNamespace(p) {
}
function aws_cdk_lib_aws_redshiftserverless_CfnNamespace_NamespaceProperty(p) {
}
function aws_cdk_lib_aws_redshiftserverless_CfnWorkgroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configParameters))
            aws_cdk_lib_IResolvable(p.configParameters);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_redshiftserverless_CfnWorkgroup(p) {
}
function aws_cdk_lib_aws_redshiftserverless_CfnWorkgroup_ConfigParameterProperty(p) {
}
function aws_cdk_lib_aws_redshiftserverless_CfnWorkgroup_EndpointProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpcEndpoints))
            aws_cdk_lib_IResolvable(p.vpcEndpoints);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_redshiftserverless_CfnWorkgroup_NetworkInterfaceProperty(p) {
}
function aws_cdk_lib_aws_redshiftserverless_CfnWorkgroup_VpcEndpointProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.networkInterfaces))
            aws_cdk_lib_IResolvable(p.networkInterfaces);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_redshiftserverless_CfnWorkgroup_WorkgroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configParameters))
            aws_cdk_lib_IResolvable(p.configParameters);
        if (!visitedObjects.has(p.endpoint))
            aws_cdk_lib_IResolvable(p.endpoint);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_refactorspaces_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.apiGatewayProxy))
            aws_cdk_lib_IResolvable(p.apiGatewayProxy);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_refactorspaces_CfnApplication(p) {
}
function aws_cdk_lib_aws_refactorspaces_CfnApplication_ApiGatewayProxyInputProperty(p) {
}
function aws_cdk_lib_aws_refactorspaces_CfnEnvironmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_refactorspaces_CfnEnvironment(p) {
}
function aws_cdk_lib_aws_refactorspaces_CfnRouteProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultRoute))
            aws_cdk_lib_IResolvable(p.defaultRoute);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.uriPathRoute))
            aws_cdk_lib_IResolvable(p.uriPathRoute);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_refactorspaces_CfnRoute(p) {
}
function aws_cdk_lib_aws_refactorspaces_CfnRoute_DefaultRouteInputProperty(p) {
}
function aws_cdk_lib_aws_refactorspaces_CfnRoute_UriPathRouteInputProperty(p) {
}
function aws_cdk_lib_aws_refactorspaces_CfnServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambdaEndpoint))
            aws_cdk_lib_IResolvable(p.lambdaEndpoint);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.urlEndpoint))
            aws_cdk_lib_IResolvable(p.urlEndpoint);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_refactorspaces_CfnService(p) {
}
function aws_cdk_lib_aws_refactorspaces_CfnService_LambdaEndpointInputProperty(p) {
}
function aws_cdk_lib_aws_refactorspaces_CfnService_UrlEndpointInputProperty(p) {
}
function aws_cdk_lib_aws_rekognition_CfnCollectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rekognition_CfnCollection(p) {
}
function aws_cdk_lib_aws_rekognition_CfnProjectProps(p) {
}
function aws_cdk_lib_aws_rekognition_CfnProject(p) {
}
function aws_cdk_lib_aws_rekognition_CfnStreamProcessorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kinesisVideoStream))
            aws_cdk_lib_IResolvable(p.kinesisVideoStream);
        if (!visitedObjects.has(p.boundingBoxRegionsOfInterest))
            aws_cdk_lib_IResolvable(p.boundingBoxRegionsOfInterest);
        if (!visitedObjects.has(p.connectedHomeSettings))
            aws_cdk_lib_IResolvable(p.connectedHomeSettings);
        if (!visitedObjects.has(p.dataSharingPreference))
            aws_cdk_lib_IResolvable(p.dataSharingPreference);
        if (!visitedObjects.has(p.faceSearchSettings))
            aws_cdk_lib_IResolvable(p.faceSearchSettings);
        if (!visitedObjects.has(p.kinesisDataStream))
            aws_cdk_lib_IResolvable(p.kinesisDataStream);
        if (!visitedObjects.has(p.notificationChannel))
            aws_cdk_lib_IResolvable(p.notificationChannel);
        if (!visitedObjects.has(p.s3Destination))
            aws_cdk_lib_IResolvable(p.s3Destination);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rekognition_CfnStreamProcessor(p) {
}
function aws_cdk_lib_aws_rekognition_CfnStreamProcessor_BoundingBoxProperty(p) {
}
function aws_cdk_lib_aws_rekognition_CfnStreamProcessor_ConnectedHomeSettingsProperty(p) {
}
function aws_cdk_lib_aws_rekognition_CfnStreamProcessor_DataSharingPreferenceProperty(p) {
}
function aws_cdk_lib_aws_rekognition_CfnStreamProcessor_FaceSearchSettingsProperty(p) {
}
function aws_cdk_lib_aws_rekognition_CfnStreamProcessor_KinesisDataStreamProperty(p) {
}
function aws_cdk_lib_aws_rekognition_CfnStreamProcessor_KinesisVideoStreamProperty(p) {
}
function aws_cdk_lib_aws_rekognition_CfnStreamProcessor_NotificationChannelProperty(p) {
}
function aws_cdk_lib_aws_rekognition_CfnStreamProcessor_S3DestinationProperty(p) {
}
function aws_cdk_lib_aws_resiliencehub_CfnAppProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourceMappings))
            aws_cdk_lib_IResolvable(p.resourceMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_resiliencehub_CfnApp(p) {
}
function aws_cdk_lib_aws_resiliencehub_CfnApp_PhysicalResourceIdProperty(p) {
}
function aws_cdk_lib_aws_resiliencehub_CfnApp_ResourceMappingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.physicalResourceId))
            aws_cdk_lib_IResolvable(p.physicalResourceId);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_resiliencehub_CfnResiliencyPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.policy))
            aws_cdk_lib_IResolvable(p.policy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_resiliencehub_CfnResiliencyPolicy(p) {
}
function aws_cdk_lib_aws_resiliencehub_CfnResiliencyPolicy_FailurePolicyProperty(p) {
}
function aws_cdk_lib_aws_resourceexplorer2_CfnDefaultViewAssociationProps(p) {
}
function aws_cdk_lib_aws_resourceexplorer2_CfnDefaultViewAssociation(p) {
}
function aws_cdk_lib_aws_resourceexplorer2_CfnIndexProps(p) {
}
function aws_cdk_lib_aws_resourceexplorer2_CfnIndex(p) {
}
function aws_cdk_lib_aws_resourceexplorer2_CfnViewProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filters))
            aws_cdk_lib_IResolvable(p.filters);
        if (!visitedObjects.has(p.includedProperties))
            aws_cdk_lib_IResolvable(p.includedProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_resourceexplorer2_CfnView(p) {
}
function aws_cdk_lib_aws_resourceexplorer2_CfnView_FiltersProperty(p) {
}
function aws_cdk_lib_aws_resourceexplorer2_CfnView_IncludedPropertyProperty(p) {
}
function aws_cdk_lib_aws_resourcegroups_CfnGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configuration))
            aws_cdk_lib_IResolvable(p.configuration);
        if (!visitedObjects.has(p.resourceQuery))
            aws_cdk_lib_IResolvable(p.resourceQuery);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_resourcegroups_CfnGroup(p) {
}
function aws_cdk_lib_aws_resourcegroups_CfnGroup_ConfigurationItemProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_resourcegroups_CfnGroup_ConfigurationParameterProperty(p) {
}
function aws_cdk_lib_aws_resourcegroups_CfnGroup_QueryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tagFilters))
            aws_cdk_lib_IResolvable(p.tagFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_resourcegroups_CfnGroup_ResourceQueryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.query))
            aws_cdk_lib_IResolvable(p.query);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_resourcegroups_CfnGroup_TagFilterProperty(p) {
}
function aws_cdk_lib_aws_robomaker_CfnFleetProps(p) {
}
function aws_cdk_lib_aws_robomaker_CfnFleet(p) {
}
function aws_cdk_lib_aws_robomaker_CfnRobotProps(p) {
}
function aws_cdk_lib_aws_robomaker_CfnRobot(p) {
}
function aws_cdk_lib_aws_robomaker_CfnRobotApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.robotSoftwareSuite))
            aws_cdk_lib_IResolvable(p.robotSoftwareSuite);
        if (!visitedObjects.has(p.sources))
            aws_cdk_lib_IResolvable(p.sources);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_robomaker_CfnRobotApplication(p) {
}
function aws_cdk_lib_aws_robomaker_CfnRobotApplication_RobotSoftwareSuiteProperty(p) {
}
function aws_cdk_lib_aws_robomaker_CfnRobotApplication_SourceConfigProperty(p) {
}
function aws_cdk_lib_aws_robomaker_CfnRobotApplicationVersionProps(p) {
}
function aws_cdk_lib_aws_robomaker_CfnRobotApplicationVersion(p) {
}
function aws_cdk_lib_aws_robomaker_CfnSimulationApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.robotSoftwareSuite))
            aws_cdk_lib_IResolvable(p.robotSoftwareSuite);
        if (!visitedObjects.has(p.simulationSoftwareSuite))
            aws_cdk_lib_IResolvable(p.simulationSoftwareSuite);
        if (!visitedObjects.has(p.renderingEngine))
            aws_cdk_lib_IResolvable(p.renderingEngine);
        if (!visitedObjects.has(p.sources))
            aws_cdk_lib_IResolvable(p.sources);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_robomaker_CfnSimulationApplication(p) {
}
function aws_cdk_lib_aws_robomaker_CfnSimulationApplication_RenderingEngineProperty(p) {
}
function aws_cdk_lib_aws_robomaker_CfnSimulationApplication_RobotSoftwareSuiteProperty(p) {
}
function aws_cdk_lib_aws_robomaker_CfnSimulationApplication_SimulationSoftwareSuiteProperty(p) {
}
function aws_cdk_lib_aws_robomaker_CfnSimulationApplication_SourceConfigProperty(p) {
}
function aws_cdk_lib_aws_robomaker_CfnSimulationApplicationVersionProps(p) {
}
function aws_cdk_lib_aws_robomaker_CfnSimulationApplicationVersion(p) {
}
function aws_cdk_lib_aws_rolesanywhere_CfnCRLProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rolesanywhere_CfnCRL(p) {
}
function aws_cdk_lib_aws_rolesanywhere_CfnProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rolesanywhere_CfnProfile(p) {
}
function aws_cdk_lib_aws_rolesanywhere_CfnTrustAnchorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_IResolvable(p.source);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rolesanywhere_CfnTrustAnchor(p) {
}
function aws_cdk_lib_aws_rolesanywhere_CfnTrustAnchor_SourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceData))
            aws_cdk_lib_IResolvable(p.sourceData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rolesanywhere_CfnTrustAnchor_SourceDataProperty(p) {
}
function aws_cdk_lib_aws_route53_IAliasRecordTarget(p) {
}
function aws_cdk_lib_aws_route53_AliasRecordTargetConfig(p) {
}
function aws_cdk_lib_aws_route53_CommonHostedZoneProps(p) {
}
function aws_cdk_lib_aws_route53_HostedZoneProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.vpcs != null)
            for (const o of p.vpcs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_IVpc(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_HostedZone(p) {
}
function aws_cdk_lib_aws_route53_PublicHostedZoneProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("crossAccountZoneDelegationPrincipal" in p)
            print("aws-cdk-lib.aws_route53.PublicHostedZoneProps#crossAccountZoneDelegationPrincipal", "Create the Role yourself and call `hostedZone.grantDelegation()`.");
        if (!visitedObjects.has(p.crossAccountZoneDelegationPrincipal))
            aws_cdk_lib_aws_iam_IPrincipal(p.crossAccountZoneDelegationPrincipal);
        if ("crossAccountZoneDelegationRoleName" in p)
            print("aws-cdk-lib.aws_route53.PublicHostedZoneProps#crossAccountZoneDelegationRoleName", "Create the Role yourself and call `hostedZone.grantDelegation()`.");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_IPublicHostedZone(p) {
}
function aws_cdk_lib_aws_route53_PublicHostedZone(p) {
}
function aws_cdk_lib_aws_route53_ZoneDelegationOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_PrivateHostedZoneProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_IPrivateHostedZone(p) {
}
function aws_cdk_lib_aws_route53_PrivateHostedZone(p) {
}
function aws_cdk_lib_aws_route53_HostedZoneProviderProps(p) {
}
function aws_cdk_lib_aws_route53_IHostedZone(p) {
}
function aws_cdk_lib_aws_route53_HostedZoneAttributes(p) {
}
function aws_cdk_lib_aws_route53_PublicHostedZoneAttributes(p) {
}
function aws_cdk_lib_aws_route53_IRecordSet(p) {
}
function aws_cdk_lib_aws_route53_RecordType(p) {
}
function aws_cdk_lib_aws_route53_RecordSetOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_RecordTarget(p) {
}
function aws_cdk_lib_aws_route53_RecordSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.recordType))
            aws_cdk_lib_aws_route53_RecordType(p.recordType);
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_route53_RecordTarget(p.target);
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_RecordSet(p) {
}
function aws_cdk_lib_aws_route53_ARecordProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_route53_RecordTarget(p.target);
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_ARecord(p) {
}
function aws_cdk_lib_aws_route53_AaaaRecordProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_route53_RecordTarget(p.target);
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_AaaaRecord(p) {
}
function aws_cdk_lib_aws_route53_CnameRecordProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_CnameRecord(p) {
}
function aws_cdk_lib_aws_route53_TxtRecordProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_TxtRecord(p) {
}
function aws_cdk_lib_aws_route53_SrvRecordValue(p) {
}
function aws_cdk_lib_aws_route53_SrvRecordProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.values != null)
            for (const o of p.values)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_route53_SrvRecordValue(o);
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_SrvRecord(p) {
}
function aws_cdk_lib_aws_route53_CaaTag(p) {
}
function aws_cdk_lib_aws_route53_CaaRecordValue(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tag))
            aws_cdk_lib_aws_route53_CaaTag(p.tag);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_CaaRecordProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.values != null)
            for (const o of p.values)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_route53_CaaRecordValue(o);
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_CaaRecord(p) {
}
function aws_cdk_lib_aws_route53_CaaAmazonRecordProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_CaaAmazonRecord(p) {
}
function aws_cdk_lib_aws_route53_MxRecordValue(p) {
}
function aws_cdk_lib_aws_route53_MxRecordProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.values != null)
            for (const o of p.values)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_route53_MxRecordValue(o);
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_MxRecord(p) {
}
function aws_cdk_lib_aws_route53_NsRecordProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_NsRecord(p) {
}
function aws_cdk_lib_aws_route53_DsRecordProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_DsRecord(p) {
}
function aws_cdk_lib_aws_route53_ZoneDelegationRecordProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_ZoneDelegationRecord(p) {
}
function aws_cdk_lib_aws_route53_CrossAccountZoneDelegationRecordProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.delegatedZone))
            aws_cdk_lib_aws_route53_IHostedZone(p.delegatedZone);
        if (!visitedObjects.has(p.delegationRole))
            aws_cdk_lib_aws_iam_IRole(p.delegationRole);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.ttl))
            aws_cdk_lib_Duration(p.ttl);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_CrossAccountZoneDelegationRecord(p) {
}
function aws_cdk_lib_aws_route53_VpcEndpointServiceDomainNameProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.endpointService))
            aws_cdk_lib_aws_ec2_IVpcEndpointService(p.endpointService);
        if (!visitedObjects.has(p.publicHostedZone))
            aws_cdk_lib_aws_route53_IPublicHostedZone(p.publicHostedZone);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_VpcEndpointServiceDomainName(p) {
}
function aws_cdk_lib_aws_route53_CfnCidrCollectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.locations))
            aws_cdk_lib_IResolvable(p.locations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_CfnCidrCollection(p) {
}
function aws_cdk_lib_aws_route53_CfnCidrCollection_LocationProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnDNSSECProps(p) {
}
function aws_cdk_lib_aws_route53_CfnDNSSEC(p) {
}
function aws_cdk_lib_aws_route53_CfnHealthCheckProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.healthCheckConfig))
            aws_cdk_lib_IResolvable(p.healthCheckConfig);
        if (!visitedObjects.has(p.healthCheckTags))
            aws_cdk_lib_IResolvable(p.healthCheckTags);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_CfnHealthCheck(p) {
}
function aws_cdk_lib_aws_route53_CfnHealthCheck_AlarmIdentifierProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnHealthCheck_HealthCheckConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alarmIdentifier))
            aws_cdk_lib_IResolvable(p.alarmIdentifier);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_CfnHealthCheck_HealthCheckTagProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnHostedZoneProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hostedZoneConfig))
            aws_cdk_lib_IResolvable(p.hostedZoneConfig);
        if (p.hostedZoneTags != null)
            for (const o of p.hostedZoneTags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_route53_CfnHostedZone_HostedZoneTagProperty(o);
        if (!visitedObjects.has(p.queryLoggingConfig))
            aws_cdk_lib_IResolvable(p.queryLoggingConfig);
        if (!visitedObjects.has(p.vpcs))
            aws_cdk_lib_IResolvable(p.vpcs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_CfnHostedZone(p) {
}
function aws_cdk_lib_aws_route53_CfnHostedZone_HostedZoneConfigProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnHostedZone_HostedZoneTagProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnHostedZone_QueryLoggingConfigProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnHostedZone_VPCProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnKeySigningKeyProps(p) {
}
function aws_cdk_lib_aws_route53_CfnKeySigningKey(p) {
}
function aws_cdk_lib_aws_route53_CfnRecordSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aliasTarget))
            aws_cdk_lib_IResolvable(p.aliasTarget);
        if (!visitedObjects.has(p.cidrRoutingConfig))
            aws_cdk_lib_IResolvable(p.cidrRoutingConfig);
        if (!visitedObjects.has(p.geoLocation))
            aws_cdk_lib_IResolvable(p.geoLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_CfnRecordSet(p) {
}
function aws_cdk_lib_aws_route53_CfnRecordSet_AliasTargetProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnRecordSet_CidrRoutingConfigProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnRecordSet_GeoLocationProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnRecordSetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.recordSets))
            aws_cdk_lib_IResolvable(p.recordSets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_CfnRecordSetGroup(p) {
}
function aws_cdk_lib_aws_route53_CfnRecordSetGroup_AliasTargetProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnRecordSetGroup_CidrRoutingConfigProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnRecordSetGroup_GeoLocationProperty(p) {
}
function aws_cdk_lib_aws_route53_CfnRecordSetGroup_RecordSetProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.aliasTarget))
            aws_cdk_lib_IResolvable(p.aliasTarget);
        if (!visitedObjects.has(p.cidrRoutingConfig))
            aws_cdk_lib_IResolvable(p.cidrRoutingConfig);
        if (!visitedObjects.has(p.geoLocation))
            aws_cdk_lib_IResolvable(p.geoLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_patterns_HttpsRedirectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.zone))
            aws_cdk_lib_aws_route53_IHostedZone(p.zone);
        if (!visitedObjects.has(p.certificate))
            aws_cdk_lib_aws_certificatemanager_ICertificate(p.certificate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53_patterns_HttpsRedirect(p) {
}
function aws_cdk_lib_aws_route53_targets_ApiGatewayDomain(p) {
}
function aws_cdk_lib_aws_route53_targets_ApiGateway(p) {
}
function aws_cdk_lib_aws_route53_targets_ApiGatewayv2DomainProperties(p) {
}
function aws_cdk_lib_aws_route53_targets_BucketWebsiteTarget(p) {
}
function aws_cdk_lib_aws_route53_targets_ElasticBeanstalkEnvironmentEndpointTarget(p) {
}
function aws_cdk_lib_aws_route53_targets_ClassicLoadBalancerTarget(p) {
}
function aws_cdk_lib_aws_route53_targets_CloudFrontTarget(p) {
}
function aws_cdk_lib_aws_route53_targets_LoadBalancerTarget(p) {
}
function aws_cdk_lib_aws_route53_targets_InterfaceVpcEndpointTarget(p) {
}
function aws_cdk_lib_aws_route53_targets_UserPoolDomainTarget(p) {
}
function aws_cdk_lib_aws_route53_targets_GlobalAcceleratorDomainTarget(p) {
}
function aws_cdk_lib_aws_route53_targets_GlobalAcceleratorTarget(p) {
}
function aws_cdk_lib_aws_route53_targets_Route53RecordTarget(p) {
}
function aws_cdk_lib_aws_route53recoverycontrol_CfnClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53recoverycontrol_CfnCluster(p) {
}
function aws_cdk_lib_aws_route53recoverycontrol_CfnCluster_ClusterEndpointProperty(p) {
}
function aws_cdk_lib_aws_route53recoverycontrol_CfnControlPanelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53recoverycontrol_CfnControlPanel(p) {
}
function aws_cdk_lib_aws_route53recoverycontrol_CfnRoutingControlProps(p) {
}
function aws_cdk_lib_aws_route53recoverycontrol_CfnRoutingControl(p) {
}
function aws_cdk_lib_aws_route53recoverycontrol_CfnSafetyRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ruleConfig))
            aws_cdk_lib_IResolvable(p.ruleConfig);
        if (!visitedObjects.has(p.assertionRule))
            aws_cdk_lib_IResolvable(p.assertionRule);
        if (!visitedObjects.has(p.gatingRule))
            aws_cdk_lib_IResolvable(p.gatingRule);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53recoverycontrol_CfnSafetyRule(p) {
}
function aws_cdk_lib_aws_route53recoverycontrol_CfnSafetyRule_AssertionRuleProperty(p) {
}
function aws_cdk_lib_aws_route53recoverycontrol_CfnSafetyRule_GatingRuleProperty(p) {
}
function aws_cdk_lib_aws_route53recoverycontrol_CfnSafetyRule_RuleConfigProperty(p) {
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnCellProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnCell(p) {
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnReadinessCheckProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnReadinessCheck(p) {
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnRecoveryGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnRecoveryGroup(p) {
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resources))
            aws_cdk_lib_IResolvable(p.resources);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSet(p) {
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSet_DNSTargetResourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetResource))
            aws_cdk_lib_IResolvable(p.targetResource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSet_NLBResourceProperty(p) {
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSet_R53ResourceRecordProperty(p) {
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSet_ResourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dnsTargetResource))
            aws_cdk_lib_IResolvable(p.dnsTargetResource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSet_TargetResourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nlbResource))
            aws_cdk_lib_IResolvable(p.nlbResource);
        if (!visitedObjects.has(p.r53Resource))
            aws_cdk_lib_IResolvable(p.r53Resource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53resolver_CfnFirewallDomainListProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53resolver_CfnFirewallDomainList(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnFirewallRuleGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.firewallRules))
            aws_cdk_lib_IResolvable(p.firewallRules);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53resolver_CfnFirewallRuleGroup(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnFirewallRuleGroup_FirewallRuleProperty(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnFirewallRuleGroupAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53resolver_CfnFirewallRuleGroupAssociation(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverConfigProps(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverConfig(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverDNSSECConfigProps(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverDNSSECConfig(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipAddresses))
            aws_cdk_lib_IResolvable(p.ipAddresses);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53resolver_CfnResolverEndpoint(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverEndpoint_IpAddressRequestProperty(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverQueryLoggingConfigProps(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverQueryLoggingConfig(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverQueryLoggingConfigAssociationProps(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverQueryLoggingConfigAssociation(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.targetIps))
            aws_cdk_lib_IResolvable(p.targetIps);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_route53resolver_CfnResolverRule(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverRule_TargetAddressProperty(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverRuleAssociationProps(p) {
}
function aws_cdk_lib_aws_route53resolver_CfnResolverRuleAssociation(p) {
}
function aws_cdk_lib_aws_rum_CfnAppMonitorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.appMonitorConfiguration))
            aws_cdk_lib_IResolvable(p.appMonitorConfiguration);
        if (!visitedObjects.has(p.customEvents))
            aws_cdk_lib_IResolvable(p.customEvents);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rum_CfnAppMonitor(p) {
}
function aws_cdk_lib_aws_rum_CfnAppMonitor_AppMonitorConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricDestinations))
            aws_cdk_lib_IResolvable(p.metricDestinations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rum_CfnAppMonitor_CustomEventsProperty(p) {
}
function aws_cdk_lib_aws_rum_CfnAppMonitor_MetricDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensionKeys))
            aws_cdk_lib_IResolvable(p.dimensionKeys);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_rum_CfnAppMonitor_MetricDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricDefinitions))
            aws_cdk_lib_IResolvable(p.metricDefinitions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_IBucket(p) {
}
function aws_cdk_lib_aws_s3_BucketAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("bucketWebsiteNewUrlFormat" in p)
            print("aws-cdk-lib.aws_s3.BucketAttributes#bucketWebsiteNewUrlFormat", "The correct website url format can be inferred automatically from the bucket `region`.\nAlways provide the bucket region if the `bucketWebsiteUrl` will be used.\nAlternatively provide the full `bucketWebsiteUrl` manually.");
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.notificationsHandlerRole))
            aws_cdk_lib_aws_iam_IRole(p.notificationsHandlerRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_BucketBase(p) {
}
function aws_cdk_lib_aws_s3_BlockPublicAccessOptions(p) {
}
function aws_cdk_lib_aws_s3_BlockPublicAccess(p) {
}
function aws_cdk_lib_aws_s3_BucketMetrics(p) {
}
function aws_cdk_lib_aws_s3_HttpMethods(p) {
}
function aws_cdk_lib_aws_s3_CorsRule(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.allowedMethods != null)
            for (const o of p.allowedMethods)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_HttpMethods(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_RedirectProtocol(p) {
}
function aws_cdk_lib_aws_s3_RedirectTarget(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_s3_RedirectProtocol(p.protocol);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_InventoryFormat(p) {
}
function aws_cdk_lib_aws_s3_InventoryFrequency(p) {
}
function aws_cdk_lib_aws_s3_InventoryObjectVersion(p) {
}
function aws_cdk_lib_aws_s3_InventoryDestination(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_Inventory(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_aws_s3_InventoryDestination(p.destination);
        if (!visitedObjects.has(p.format))
            aws_cdk_lib_aws_s3_InventoryFormat(p.format);
        if (!visitedObjects.has(p.frequency))
            aws_cdk_lib_aws_s3_InventoryFrequency(p.frequency);
        if (!visitedObjects.has(p.includeObjectVersions))
            aws_cdk_lib_aws_s3_InventoryObjectVersion(p.includeObjectVersions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_ObjectOwnership(p) {
}
function aws_cdk_lib_aws_s3_IntelligentTieringConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.archiveAccessTierTime))
            aws_cdk_lib_Duration(p.archiveAccessTierTime);
        if (!visitedObjects.has(p.deepArchiveAccessTierTime))
            aws_cdk_lib_Duration(p.deepArchiveAccessTierTime);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_Tag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_BucketProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessControl))
            aws_cdk_lib_aws_s3_BucketAccessControl(p.accessControl);
        if (!visitedObjects.has(p.blockPublicAccess))
            aws_cdk_lib_aws_s3_BlockPublicAccess(p.blockPublicAccess);
        if (p.cors != null)
            for (const o of p.cors)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_CorsRule(o);
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_aws_s3_BucketEncryption(p.encryption);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (p.intelligentTieringConfigurations != null)
            for (const o of p.intelligentTieringConfigurations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_IntelligentTieringConfiguration(o);
        if (p.inventories != null)
            for (const o of p.inventories)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_Inventory(o);
        if (p.lifecycleRules != null)
            for (const o of p.lifecycleRules)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_LifecycleRule(o);
        if (p.metrics != null)
            for (const o of p.metrics)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_BucketMetrics(o);
        if (!visitedObjects.has(p.notificationsHandlerRole))
            aws_cdk_lib_aws_iam_IRole(p.notificationsHandlerRole);
        if (!visitedObjects.has(p.objectLockDefaultRetention))
            aws_cdk_lib_aws_s3_ObjectLockRetention(p.objectLockDefaultRetention);
        if (!visitedObjects.has(p.objectOwnership))
            aws_cdk_lib_aws_s3_ObjectOwnership(p.objectOwnership);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.serverAccessLogsBucket))
            aws_cdk_lib_aws_s3_IBucket(p.serverAccessLogsBucket);
        if (!visitedObjects.has(p.websiteRedirect))
            aws_cdk_lib_aws_s3_RedirectTarget(p.websiteRedirect);
        if (p.websiteRoutingRules != null)
            for (const o of p.websiteRoutingRules)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_RoutingRule(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_Tag(p) {
}
function aws_cdk_lib_aws_s3_Bucket(p) {
}
function aws_cdk_lib_aws_s3_BucketEncryption(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        const ns = require("./aws-s3/lib/bucket.js");
        if (Object.values(ns.BucketEncryption).filter(x => x === p).length > 1)
            return;
        if (p === ns.BucketEncryption.UNENCRYPTED)
            print("aws-cdk-lib.aws_s3.BucketEncryption#UNENCRYPTED", "S3 applies server-side encryption with SSE-S3 for every bucket\nthat default encryption is not configured.");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_EventType(p) {
}
function aws_cdk_lib_aws_s3_NotificationKeyFilter(p) {
}
function aws_cdk_lib_aws_s3_OnCloudTrailBucketEventOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_events_IRuleTarget(p.target);
        if (!visitedObjects.has(p.eventPattern))
            aws_cdk_lib_aws_events_EventPattern(p.eventPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_BucketAccessControl(p) {
}
function aws_cdk_lib_aws_s3_RoutingRuleCondition(p) {
}
function aws_cdk_lib_aws_s3_ReplaceKey(p) {
}
function aws_cdk_lib_aws_s3_RoutingRule(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.condition))
            aws_cdk_lib_aws_s3_RoutingRuleCondition(p.condition);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_s3_RedirectProtocol(p.protocol);
        if (!visitedObjects.has(p.replaceKey))
            aws_cdk_lib_aws_s3_ReplaceKey(p.replaceKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_ObjectLockMode(p) {
}
function aws_cdk_lib_aws_s3_ObjectLockRetention(p) {
}
function aws_cdk_lib_aws_s3_VirtualHostedStyleUrlOptions(p) {
}
function aws_cdk_lib_aws_s3_TransferAccelerationUrlOptions(p) {
}
function aws_cdk_lib_aws_s3_BucketPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_BucketPolicy(p) {
}
function aws_cdk_lib_aws_s3_IBucketNotificationDestination(p) {
}
function aws_cdk_lib_aws_s3_BucketNotificationDestinationConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_s3_BucketNotificationDestinationType(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_BucketNotificationDestinationType(p) {
}
function aws_cdk_lib_aws_s3_Location(p) {
}
function aws_cdk_lib_aws_s3_LifecycleRule(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.abortIncompleteMultipartUploadAfter))
            aws_cdk_lib_Duration(p.abortIncompleteMultipartUploadAfter);
        if (!visitedObjects.has(p.expiration))
            aws_cdk_lib_Duration(p.expiration);
        if (!visitedObjects.has(p.noncurrentVersionExpiration))
            aws_cdk_lib_Duration(p.noncurrentVersionExpiration);
        if (p.noncurrentVersionTransitions != null)
            for (const o of p.noncurrentVersionTransitions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_NoncurrentVersionTransition(o);
        if (p.transitions != null)
            for (const o of p.transitions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_Transition(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_Transition(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.storageClass))
            aws_cdk_lib_aws_s3_StorageClass(p.storageClass);
        if (!visitedObjects.has(p.transitionAfter))
            aws_cdk_lib_Duration(p.transitionAfter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_NoncurrentVersionTransition(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.storageClass))
            aws_cdk_lib_aws_s3_StorageClass(p.storageClass);
        if (!visitedObjects.has(p.transitionAfter))
            aws_cdk_lib_Duration(p.transitionAfter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_StorageClass(p) {
}
function aws_cdk_lib_aws_s3_CfnAccessPointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.publicAccessBlockConfiguration))
            aws_cdk_lib_IResolvable(p.publicAccessBlockConfiguration);
        if (!visitedObjects.has(p.vpcConfiguration))
            aws_cdk_lib_IResolvable(p.vpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnAccessPoint(p) {
}
function aws_cdk_lib_aws_s3_CfnAccessPoint_PolicyStatusProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnAccessPoint_PublicAccessBlockConfigurationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnAccessPoint_VpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucketProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accelerateConfiguration))
            aws_cdk_lib_IResolvable(p.accelerateConfiguration);
        if (!visitedObjects.has(p.analyticsConfigurations))
            aws_cdk_lib_IResolvable(p.analyticsConfigurations);
        if (!visitedObjects.has(p.bucketEncryption))
            aws_cdk_lib_IResolvable(p.bucketEncryption);
        if (!visitedObjects.has(p.corsConfiguration))
            aws_cdk_lib_IResolvable(p.corsConfiguration);
        if (!visitedObjects.has(p.intelligentTieringConfigurations))
            aws_cdk_lib_IResolvable(p.intelligentTieringConfigurations);
        if (!visitedObjects.has(p.inventoryConfigurations))
            aws_cdk_lib_IResolvable(p.inventoryConfigurations);
        if (!visitedObjects.has(p.lifecycleConfiguration))
            aws_cdk_lib_IResolvable(p.lifecycleConfiguration);
        if (!visitedObjects.has(p.loggingConfiguration))
            aws_cdk_lib_IResolvable(p.loggingConfiguration);
        if (!visitedObjects.has(p.metricsConfigurations))
            aws_cdk_lib_IResolvable(p.metricsConfigurations);
        if (!visitedObjects.has(p.notificationConfiguration))
            aws_cdk_lib_IResolvable(p.notificationConfiguration);
        if (!visitedObjects.has(p.objectLockConfiguration))
            aws_cdk_lib_IResolvable(p.objectLockConfiguration);
        if (!visitedObjects.has(p.ownershipControls))
            aws_cdk_lib_IResolvable(p.ownershipControls);
        if (!visitedObjects.has(p.publicAccessBlockConfiguration))
            aws_cdk_lib_IResolvable(p.publicAccessBlockConfiguration);
        if (!visitedObjects.has(p.replicationConfiguration))
            aws_cdk_lib_IResolvable(p.replicationConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.versioningConfiguration))
            aws_cdk_lib_IResolvable(p.versioningConfiguration);
        if (!visitedObjects.has(p.websiteConfiguration))
            aws_cdk_lib_IResolvable(p.websiteConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_AbortIncompleteMultipartUploadProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_AccelerateConfigurationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_AccessControlTranslationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_AnalyticsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.storageClassAnalysis))
            aws_cdk_lib_IResolvable(p.storageClassAnalysis);
        if (!visitedObjects.has(p.tagFilters))
            aws_cdk_lib_IResolvable(p.tagFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_BucketEncryptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.serverSideEncryptionConfiguration))
            aws_cdk_lib_IResolvable(p.serverSideEncryptionConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_CorsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.corsRules))
            aws_cdk_lib_IResolvable(p.corsRules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_CorsRuleProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_DataExportProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_DefaultRetentionProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_DeleteMarkerReplicationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_DestinationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_EncryptionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_EventBridgeConfigurationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_FilterRuleProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_IntelligentTieringConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tierings))
            aws_cdk_lib_IResolvable(p.tierings);
        if (!visitedObjects.has(p.tagFilters))
            aws_cdk_lib_IResolvable(p.tagFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_InventoryConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_LambdaConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filter))
            aws_cdk_lib_IResolvable(p.filter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_LifecycleConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_LoggingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_MetricsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventThreshold))
            aws_cdk_lib_IResolvable(p.eventThreshold);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_MetricsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tagFilters))
            aws_cdk_lib_IResolvable(p.tagFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_NoncurrentVersionExpirationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_NoncurrentVersionTransitionProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_NotificationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventBridgeConfiguration))
            aws_cdk_lib_IResolvable(p.eventBridgeConfiguration);
        if (!visitedObjects.has(p.lambdaConfigurations))
            aws_cdk_lib_IResolvable(p.lambdaConfigurations);
        if (!visitedObjects.has(p.queueConfigurations))
            aws_cdk_lib_IResolvable(p.queueConfigurations);
        if (!visitedObjects.has(p.topicConfigurations))
            aws_cdk_lib_IResolvable(p.topicConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_NotificationFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Key))
            aws_cdk_lib_IResolvable(p.s3Key);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_ObjectLockConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rule))
            aws_cdk_lib_IResolvable(p.rule);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_ObjectLockRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultRetention))
            aws_cdk_lib_IResolvable(p.defaultRetention);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_OwnershipControlsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_OwnershipControlsRuleProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_PublicAccessBlockConfigurationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_QueueConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filter))
            aws_cdk_lib_IResolvable(p.filter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_RedirectAllRequestsToProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_RedirectRuleProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_ReplicaModificationsProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_ReplicationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_ReplicationDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessControlTranslation))
            aws_cdk_lib_IResolvable(p.accessControlTranslation);
        if (!visitedObjects.has(p.encryptionConfiguration))
            aws_cdk_lib_IResolvable(p.encryptionConfiguration);
        if (!visitedObjects.has(p.metrics))
            aws_cdk_lib_IResolvable(p.metrics);
        if (!visitedObjects.has(p.replicationTime))
            aws_cdk_lib_IResolvable(p.replicationTime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_ReplicationRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_IResolvable(p.destination);
        if (!visitedObjects.has(p.deleteMarkerReplication))
            aws_cdk_lib_IResolvable(p.deleteMarkerReplication);
        if (!visitedObjects.has(p.filter))
            aws_cdk_lib_IResolvable(p.filter);
        if (!visitedObjects.has(p.sourceSelectionCriteria))
            aws_cdk_lib_IResolvable(p.sourceSelectionCriteria);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_ReplicationRuleAndOperatorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tagFilters))
            aws_cdk_lib_IResolvable(p.tagFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_ReplicationRuleFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.and))
            aws_cdk_lib_IResolvable(p.and);
        if (!visitedObjects.has(p.tagFilter))
            aws_cdk_lib_IResolvable(p.tagFilter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_ReplicationTimeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_IResolvable(p.time);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_ReplicationTimeValueProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_RoutingRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.redirectRule))
            aws_cdk_lib_IResolvable(p.redirectRule);
        if (!visitedObjects.has(p.routingRuleCondition))
            aws_cdk_lib_IResolvable(p.routingRuleCondition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_RoutingRuleConditionProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_RuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.abortIncompleteMultipartUpload))
            aws_cdk_lib_IResolvable(p.abortIncompleteMultipartUpload);
        if (!visitedObjects.has(p.expirationDate))
            aws_cdk_lib_IResolvable(p.expirationDate);
        if (!visitedObjects.has(p.noncurrentVersionExpiration))
            aws_cdk_lib_IResolvable(p.noncurrentVersionExpiration);
        if (!visitedObjects.has(p.noncurrentVersionTransition))
            aws_cdk_lib_IResolvable(p.noncurrentVersionTransition);
        if (!visitedObjects.has(p.noncurrentVersionTransitions))
            aws_cdk_lib_IResolvable(p.noncurrentVersionTransitions);
        if (!visitedObjects.has(p.tagFilters))
            aws_cdk_lib_IResolvable(p.tagFilters);
        if (!visitedObjects.has(p.transition))
            aws_cdk_lib_IResolvable(p.transition);
        if (!visitedObjects.has(p.transitions))
            aws_cdk_lib_IResolvable(p.transitions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_S3KeyFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_ServerSideEncryptionByDefaultProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_ServerSideEncryptionRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.serverSideEncryptionByDefault))
            aws_cdk_lib_IResolvable(p.serverSideEncryptionByDefault);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_SourceSelectionCriteriaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.replicaModifications))
            aws_cdk_lib_IResolvable(p.replicaModifications);
        if (!visitedObjects.has(p.sseKmsEncryptedObjects))
            aws_cdk_lib_IResolvable(p.sseKmsEncryptedObjects);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_SseKmsEncryptedObjectsProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_StorageClassAnalysisProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataExport))
            aws_cdk_lib_IResolvable(p.dataExport);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_TagFilterProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_TieringProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_TopicConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filter))
            aws_cdk_lib_IResolvable(p.filter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_TransitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.transitionDate))
            aws_cdk_lib_IResolvable(p.transitionDate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucket_VersioningConfigurationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnBucket_WebsiteConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.redirectAllRequestsTo))
            aws_cdk_lib_IResolvable(p.redirectAllRequestsTo);
        if (!visitedObjects.has(p.routingRules))
            aws_cdk_lib_IResolvable(p.routingRules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnBucketPolicyProps(p) {
}
function aws_cdk_lib_aws_s3_CfnBucketPolicy(p) {
}
function aws_cdk_lib_aws_s3_CfnMultiRegionAccessPointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.regions))
            aws_cdk_lib_IResolvable(p.regions);
        if (!visitedObjects.has(p.publicAccessBlockConfiguration))
            aws_cdk_lib_IResolvable(p.publicAccessBlockConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnMultiRegionAccessPoint(p) {
}
function aws_cdk_lib_aws_s3_CfnMultiRegionAccessPoint_PublicAccessBlockConfigurationProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnMultiRegionAccessPoint_RegionProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnMultiRegionAccessPointPolicyProps(p) {
}
function aws_cdk_lib_aws_s3_CfnMultiRegionAccessPointPolicy(p) {
}
function aws_cdk_lib_aws_s3_CfnMultiRegionAccessPointPolicy_PolicyStatusProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnStorageLensProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.storageLensConfiguration))
            aws_cdk_lib_IResolvable(p.storageLensConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnStorageLens(p) {
}
function aws_cdk_lib_aws_s3_CfnStorageLens_AccountLevelProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucketLevel))
            aws_cdk_lib_IResolvable(p.bucketLevel);
        if (!visitedObjects.has(p.activityMetrics))
            aws_cdk_lib_IResolvable(p.activityMetrics);
        if (!visitedObjects.has(p.advancedCostOptimizationMetrics))
            aws_cdk_lib_IResolvable(p.advancedCostOptimizationMetrics);
        if (!visitedObjects.has(p.advancedDataProtectionMetrics))
            aws_cdk_lib_IResolvable(p.advancedDataProtectionMetrics);
        if (!visitedObjects.has(p.detailedStatusCodesMetrics))
            aws_cdk_lib_IResolvable(p.detailedStatusCodesMetrics);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnStorageLens_ActivityMetricsProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnStorageLens_AdvancedCostOptimizationMetricsProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnStorageLens_AdvancedDataProtectionMetricsProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnStorageLens_AwsOrgProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnStorageLens_BucketLevelProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.activityMetrics))
            aws_cdk_lib_IResolvable(p.activityMetrics);
        if (!visitedObjects.has(p.advancedCostOptimizationMetrics))
            aws_cdk_lib_IResolvable(p.advancedCostOptimizationMetrics);
        if (!visitedObjects.has(p.advancedDataProtectionMetrics))
            aws_cdk_lib_IResolvable(p.advancedDataProtectionMetrics);
        if (!visitedObjects.has(p.detailedStatusCodesMetrics))
            aws_cdk_lib_IResolvable(p.detailedStatusCodesMetrics);
        if (!visitedObjects.has(p.prefixLevel))
            aws_cdk_lib_IResolvable(p.prefixLevel);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnStorageLens_BucketsAndRegionsProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnStorageLens_CloudWatchMetricsProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnStorageLens_DataExportProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchMetrics))
            aws_cdk_lib_IResolvable(p.cloudWatchMetrics);
        if (!visitedObjects.has(p.s3BucketDestination))
            aws_cdk_lib_IResolvable(p.s3BucketDestination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnStorageLens_DetailedStatusCodesMetricsProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnStorageLens_EncryptionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ssekms))
            aws_cdk_lib_IResolvable(p.ssekms);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnStorageLens_PrefixLevelProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.storageMetrics))
            aws_cdk_lib_IResolvable(p.storageMetrics);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnStorageLens_PrefixLevelStorageMetricsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.selectionCriteria))
            aws_cdk_lib_IResolvable(p.selectionCriteria);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnStorageLens_S3BucketDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_IResolvable(p.encryption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_CfnStorageLens_SSEKMSProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnStorageLens_SelectionCriteriaProperty(p) {
}
function aws_cdk_lib_aws_s3_CfnStorageLens_StorageLensConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accountLevel))
            aws_cdk_lib_IResolvable(p.accountLevel);
        if (!visitedObjects.has(p.awsOrg))
            aws_cdk_lib_IResolvable(p.awsOrg);
        if (!visitedObjects.has(p.dataExport))
            aws_cdk_lib_IResolvable(p.dataExport);
        if (!visitedObjects.has(p.exclude))
            aws_cdk_lib_IResolvable(p.exclude);
        if (!visitedObjects.has(p.include))
            aws_cdk_lib_IResolvable(p.include);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_assets_AssetOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.readers != null)
            for (const o of p.readers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IGrantable(o);
        if (!visitedObjects.has(p.assetHashType))
            aws_cdk_lib_AssetHashType(p.assetHashType);
        if (!visitedObjects.has(p.bundling))
            aws_cdk_lib_BundlingOptions(p.bundling);
        if (!visitedObjects.has(p.followSymlinks))
            aws_cdk_lib_SymlinkFollowMode(p.followSymlinks);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_assets_AssetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.readers != null)
            for (const o of p.readers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_IGrantable(o);
        if (!visitedObjects.has(p.assetHashType))
            aws_cdk_lib_AssetHashType(p.assetHashType);
        if (!visitedObjects.has(p.bundling))
            aws_cdk_lib_BundlingOptions(p.bundling);
        if (!visitedObjects.has(p.followSymlinks))
            aws_cdk_lib_SymlinkFollowMode(p.followSymlinks);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_assets_Asset(p) {
}
function aws_cdk_lib_aws_s3_deployment_BucketDeploymentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationBucket))
            aws_cdk_lib_aws_s3_IBucket(p.destinationBucket);
        if (p.sources != null)
            for (const o of p.sources)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_deployment_ISource(o);
        if (!visitedObjects.has(p.accessControl))
            aws_cdk_lib_aws_s3_BucketAccessControl(p.accessControl);
        if (p.cacheControl != null)
            for (const o of p.cacheControl)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3_deployment_CacheControl(o);
        if (!visitedObjects.has(p.distribution))
            aws_cdk_lib_aws_cloudfront_IDistribution(p.distribution);
        if (!visitedObjects.has(p.ephemeralStorageSize))
            aws_cdk_lib_Size(p.ephemeralStorageSize);
        if (!visitedObjects.has(p.expires))
            aws_cdk_lib_Expiration(p.expires);
        if (!visitedObjects.has(p.logRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.logRetention);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.serverSideEncryption))
            aws_cdk_lib_aws_s3_deployment_ServerSideEncryption(p.serverSideEncryption);
        if (!visitedObjects.has(p.storageClass))
            aws_cdk_lib_aws_s3_deployment_StorageClass(p.storageClass);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_deployment_BucketDeployment(p) {
}
function aws_cdk_lib_aws_s3_deployment_CacheControl(p) {
}
function aws_cdk_lib_aws_s3_deployment_ServerSideEncryption(p) {
}
function aws_cdk_lib_aws_s3_deployment_StorageClass(p) {
}
function aws_cdk_lib_aws_s3_deployment_UserDefinedObjectMetadata(p) {
}
function aws_cdk_lib_aws_s3_deployment_SourceConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_deployment_DeploymentSourceContext(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.handlerRole))
            aws_cdk_lib_aws_iam_IRole(p.handlerRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3_deployment_ISource(p) {
}
function aws_cdk_lib_aws_s3_deployment_Source(p) {
}
function aws_cdk_lib_aws_s3_notifications_SqsDestination(p) {
}
function aws_cdk_lib_aws_s3_notifications_SnsDestination(p) {
}
function aws_cdk_lib_aws_s3_notifications_LambdaDestination(p) {
}
function aws_cdk_lib_aws_s3objectlambda_CfnAccessPointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.objectLambdaConfiguration))
            aws_cdk_lib_IResolvable(p.objectLambdaConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint(p) {
}
function aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_AliasProperty(p) {
}
function aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_AwsLambdaProperty(p) {
}
function aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_ContentTransformationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awsLambda))
            aws_cdk_lib_IResolvable(p.awsLambda);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_ObjectLambdaConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.transformationConfigurations))
            aws_cdk_lib_IResolvable(p.transformationConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_PolicyStatusProperty(p) {
}
function aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_PublicAccessBlockConfigurationProperty(p) {
}
function aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_TransformationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_s3objectlambda_CfnAccessPointPolicyProps(p) {
}
function aws_cdk_lib_aws_s3objectlambda_CfnAccessPointPolicy(p) {
}
function aws_cdk_lib_aws_s3outposts_CfnAccessPointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpcConfiguration))
            aws_cdk_lib_IResolvable(p.vpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3outposts_CfnAccessPoint(p) {
}
function aws_cdk_lib_aws_s3outposts_CfnAccessPoint_VpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_s3outposts_CfnBucketProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lifecycleConfiguration))
            aws_cdk_lib_IResolvable(p.lifecycleConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3outposts_CfnBucket(p) {
}
function aws_cdk_lib_aws_s3outposts_CfnBucket_AbortIncompleteMultipartUploadProperty(p) {
}
function aws_cdk_lib_aws_s3outposts_CfnBucket_FilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.andOperator))
            aws_cdk_lib_IResolvable(p.andOperator);
        if (!visitedObjects.has(p.tag))
            aws_cdk_lib_IResolvable(p.tag);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3outposts_CfnBucket_FilterAndOperatorProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_s3outposts_CfnBucket_FilterTagProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3outposts_CfnBucket_FilterTagProperty(p) {
}
function aws_cdk_lib_aws_s3outposts_CfnBucket_LifecycleConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3outposts_CfnBucket_RuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.abortIncompleteMultipartUpload))
            aws_cdk_lib_IResolvable(p.abortIncompleteMultipartUpload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_s3outposts_CfnBucketPolicyProps(p) {
}
function aws_cdk_lib_aws_s3outposts_CfnBucketPolicy(p) {
}
function aws_cdk_lib_aws_s3outposts_CfnEndpointProps(p) {
}
function aws_cdk_lib_aws_s3outposts_CfnEndpoint(p) {
}
function aws_cdk_lib_aws_s3outposts_CfnEndpoint_NetworkInterfaceProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnAppProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourceSpec))
            aws_cdk_lib_IResolvable(p.resourceSpec);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnApp(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnApp_ResourceSpecProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnAppImageConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kernelGatewayImageConfig))
            aws_cdk_lib_IResolvable(p.kernelGatewayImageConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnAppImageConfig(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnAppImageConfig_FileSystemConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnAppImageConfig_KernelGatewayImageConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.kernelSpecs))
            aws_cdk_lib_IResolvable(p.kernelSpecs);
        if (!visitedObjects.has(p.fileSystemConfig))
            aws_cdk_lib_IResolvable(p.fileSystemConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnAppImageConfig_KernelSpecProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnCodeRepositoryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.gitConfig))
            aws_cdk_lib_IResolvable(p.gitConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnCodeRepository(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnCodeRepository_GitConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataQualityAppSpecification))
            aws_cdk_lib_IResolvable(p.dataQualityAppSpecification);
        if (!visitedObjects.has(p.dataQualityJobInput))
            aws_cdk_lib_IResolvable(p.dataQualityJobInput);
        if (!visitedObjects.has(p.dataQualityJobOutputConfig))
            aws_cdk_lib_IResolvable(p.dataQualityJobOutputConfig);
        if (!visitedObjects.has(p.jobResources))
            aws_cdk_lib_IResolvable(p.jobResources);
        if (!visitedObjects.has(p.dataQualityBaselineConfig))
            aws_cdk_lib_IResolvable(p.dataQualityBaselineConfig);
        if (!visitedObjects.has(p.networkConfig))
            aws_cdk_lib_IResolvable(p.networkConfig);
        if (!visitedObjects.has(p.stoppingCondition))
            aws_cdk_lib_IResolvable(p.stoppingCondition);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_BatchTransformInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.datasetFormat))
            aws_cdk_lib_IResolvable(p.datasetFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_ClusterConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_ConstraintsResourceProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_CsvProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_DataQualityAppSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_DataQualityBaselineConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.constraintsResource))
            aws_cdk_lib_IResolvable(p.constraintsResource);
        if (!visitedObjects.has(p.statisticsResource))
            aws_cdk_lib_IResolvable(p.statisticsResource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_DataQualityJobInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.batchTransformInput))
            aws_cdk_lib_IResolvable(p.batchTransformInput);
        if (!visitedObjects.has(p.endpointInput))
            aws_cdk_lib_IResolvable(p.endpointInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_DatasetFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csv))
            aws_cdk_lib_IResolvable(p.csv);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_EndpointInputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_JsonProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_MonitoringOutputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Output))
            aws_cdk_lib_IResolvable(p.s3Output);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_MonitoringOutputConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.monitoringOutputs))
            aws_cdk_lib_IResolvable(p.monitoringOutputs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_MonitoringResourcesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterConfig))
            aws_cdk_lib_IResolvable(p.clusterConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_NetworkConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_S3OutputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_StatisticsResourceProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_StoppingConditionProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDeviceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.device))
            aws_cdk_lib_IResolvable(p.device);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDevice(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDevice_DeviceProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDeviceFleetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.outputConfig))
            aws_cdk_lib_IResolvable(p.outputConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDeviceFleet(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDeviceFleet_EdgeOutputConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDomainProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultUserSettings))
            aws_cdk_lib_IResolvable(p.defaultUserSettings);
        if (!visitedObjects.has(p.defaultSpaceSettings))
            aws_cdk_lib_IResolvable(p.defaultSpaceSettings);
        if (!visitedObjects.has(p.domainSettings))
            aws_cdk_lib_IResolvable(p.domainSettings);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDomain(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDomain_CustomImageProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDomain_DefaultSpaceSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jupyterServerAppSettings))
            aws_cdk_lib_IResolvable(p.jupyterServerAppSettings);
        if (!visitedObjects.has(p.kernelGatewayAppSettings))
            aws_cdk_lib_IResolvable(p.kernelGatewayAppSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDomain_DomainSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rStudioServerProDomainSettings))
            aws_cdk_lib_IResolvable(p.rStudioServerProDomainSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDomain_JupyterServerAppSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultResourceSpec))
            aws_cdk_lib_IResolvable(p.defaultResourceSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDomain_KernelGatewayAppSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customImages))
            aws_cdk_lib_IResolvable(p.customImages);
        if (!visitedObjects.has(p.defaultResourceSpec))
            aws_cdk_lib_IResolvable(p.defaultResourceSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDomain_RSessionAppSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customImages))
            aws_cdk_lib_IResolvable(p.customImages);
        if (!visitedObjects.has(p.defaultResourceSpec))
            aws_cdk_lib_IResolvable(p.defaultResourceSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDomain_RStudioServerProAppSettingsProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDomain_RStudioServerProDomainSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultResourceSpec))
            aws_cdk_lib_IResolvable(p.defaultResourceSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnDomain_ResourceSpecProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDomain_SharingSettingsProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnDomain_UserSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jupyterServerAppSettings))
            aws_cdk_lib_IResolvable(p.jupyterServerAppSettings);
        if (!visitedObjects.has(p.kernelGatewayAppSettings))
            aws_cdk_lib_IResolvable(p.kernelGatewayAppSettings);
        if (!visitedObjects.has(p.rSessionAppSettings))
            aws_cdk_lib_IResolvable(p.rSessionAppSettings);
        if (!visitedObjects.has(p.rStudioServerProAppSettings))
            aws_cdk_lib_IResolvable(p.rStudioServerProAppSettings);
        if (!visitedObjects.has(p.sharingSettings))
            aws_cdk_lib_IResolvable(p.sharingSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deploymentConfig))
            aws_cdk_lib_IResolvable(p.deploymentConfig);
        if (!visitedObjects.has(p.excludeRetainedVariantProperties))
            aws_cdk_lib_IResolvable(p.excludeRetainedVariantProperties);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpoint(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnEndpoint_AlarmProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnEndpoint_AutoRollbackConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.alarms))
            aws_cdk_lib_IResolvable(p.alarms);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpoint_BlueGreenUpdatePolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trafficRoutingConfiguration))
            aws_cdk_lib_IResolvable(p.trafficRoutingConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpoint_CapacitySizeProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnEndpoint_DeploymentConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.blueGreenUpdatePolicy))
            aws_cdk_lib_IResolvable(p.blueGreenUpdatePolicy);
        if (!visitedObjects.has(p.autoRollbackConfiguration))
            aws_cdk_lib_IResolvable(p.autoRollbackConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpoint_TrafficRoutingConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.canarySize))
            aws_cdk_lib_IResolvable(p.canarySize);
        if (!visitedObjects.has(p.linearStepSize))
            aws_cdk_lib_IResolvable(p.linearStepSize);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpoint_VariantPropertyProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.productionVariants))
            aws_cdk_lib_IResolvable(p.productionVariants);
        if (!visitedObjects.has(p.asyncInferenceConfig))
            aws_cdk_lib_IResolvable(p.asyncInferenceConfig);
        if (!visitedObjects.has(p.dataCaptureConfig))
            aws_cdk_lib_IResolvable(p.dataCaptureConfig);
        if (!visitedObjects.has(p.explainerConfig))
            aws_cdk_lib_IResolvable(p.explainerConfig);
        if (!visitedObjects.has(p.shadowProductionVariants))
            aws_cdk_lib_IResolvable(p.shadowProductionVariants);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_AsyncInferenceClientConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_AsyncInferenceConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.outputConfig))
            aws_cdk_lib_IResolvable(p.outputConfig);
        if (!visitedObjects.has(p.clientConfig))
            aws_cdk_lib_IResolvable(p.clientConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_AsyncInferenceNotificationConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_AsyncInferenceOutputConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.notificationConfig))
            aws_cdk_lib_IResolvable(p.notificationConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_CaptureContentTypeHeaderProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_CaptureOptionProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ClarifyExplainerConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.shapConfig))
            aws_cdk_lib_IResolvable(p.shapConfig);
        if (!visitedObjects.has(p.inferenceConfig))
            aws_cdk_lib_IResolvable(p.inferenceConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ClarifyInferenceConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ClarifyShapBaselineConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ClarifyShapConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.shapBaselineConfig))
            aws_cdk_lib_IResolvable(p.shapBaselineConfig);
        if (!visitedObjects.has(p.textConfig))
            aws_cdk_lib_IResolvable(p.textConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ClarifyTextConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_DataCaptureConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.captureOptions))
            aws_cdk_lib_IResolvable(p.captureOptions);
        if (!visitedObjects.has(p.captureContentTypeHeader))
            aws_cdk_lib_IResolvable(p.captureContentTypeHeader);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ExplainerConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clarifyExplainerConfig))
            aws_cdk_lib_IResolvable(p.clarifyExplainerConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ProductionVariantProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.serverlessConfig))
            aws_cdk_lib_IResolvable(p.serverlessConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ServerlessConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnFeatureGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.featureDefinitions))
            aws_cdk_lib_IResolvable(p.featureDefinitions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnFeatureGroup(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnFeatureGroup_DataCatalogConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnFeatureGroup_FeatureDefinitionProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnFeatureGroup_OfflineStoreConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3StorageConfig))
            aws_cdk_lib_IResolvable(p.s3StorageConfig);
        if (!visitedObjects.has(p.dataCatalogConfig))
            aws_cdk_lib_IResolvable(p.dataCatalogConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnFeatureGroup_OnlineStoreConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.securityConfig))
            aws_cdk_lib_IResolvable(p.securityConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnFeatureGroup_OnlineStoreSecurityConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnFeatureGroup_S3StorageConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnImageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnImage(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnImageVersionProps(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnImageVersion(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnInferenceExperimentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.modelVariants))
            aws_cdk_lib_IResolvable(p.modelVariants);
        if (!visitedObjects.has(p.dataStorageConfig))
            aws_cdk_lib_IResolvable(p.dataStorageConfig);
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_IResolvable(p.schedule);
        if (!visitedObjects.has(p.shadowModeConfig))
            aws_cdk_lib_IResolvable(p.shadowModeConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_CaptureContentTypeHeaderProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_DataStorageConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.contentType))
            aws_cdk_lib_IResolvable(p.contentType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_EndpointMetadataProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_InferenceExperimentScheduleProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_ModelInfrastructureConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.realTimeInferenceConfig))
            aws_cdk_lib_IResolvable(p.realTimeInferenceConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_ModelVariantConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.infrastructureConfig))
            aws_cdk_lib_IResolvable(p.infrastructureConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_RealTimeInferenceConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_ShadowModeConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.shadowModelVariants))
            aws_cdk_lib_IResolvable(p.shadowModelVariants);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_ShadowModelVariantConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containers))
            aws_cdk_lib_IResolvable(p.containers);
        if (!visitedObjects.has(p.inferenceExecutionConfig))
            aws_cdk_lib_IResolvable(p.inferenceExecutionConfig);
        if (!visitedObjects.has(p.primaryContainer))
            aws_cdk_lib_IResolvable(p.primaryContainer);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModel(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModel_ContainerDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.imageConfig))
            aws_cdk_lib_IResolvable(p.imageConfig);
        if (!visitedObjects.has(p.multiModelConfig))
            aws_cdk_lib_IResolvable(p.multiModelConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModel_ImageConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.repositoryAuthConfig))
            aws_cdk_lib_IResolvable(p.repositoryAuthConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModel_InferenceExecutionConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModel_MultiModelConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModel_RepositoryAuthConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModel_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jobResources))
            aws_cdk_lib_IResolvable(p.jobResources);
        if (!visitedObjects.has(p.modelBiasAppSpecification))
            aws_cdk_lib_IResolvable(p.modelBiasAppSpecification);
        if (!visitedObjects.has(p.modelBiasJobInput))
            aws_cdk_lib_IResolvable(p.modelBiasJobInput);
        if (!visitedObjects.has(p.modelBiasJobOutputConfig))
            aws_cdk_lib_IResolvable(p.modelBiasJobOutputConfig);
        if (!visitedObjects.has(p.modelBiasBaselineConfig))
            aws_cdk_lib_IResolvable(p.modelBiasBaselineConfig);
        if (!visitedObjects.has(p.networkConfig))
            aws_cdk_lib_IResolvable(p.networkConfig);
        if (!visitedObjects.has(p.stoppingCondition))
            aws_cdk_lib_IResolvable(p.stoppingCondition);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_BatchTransformInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.datasetFormat))
            aws_cdk_lib_IResolvable(p.datasetFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_ClusterConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_ConstraintsResourceProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_CsvProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_DatasetFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csv))
            aws_cdk_lib_IResolvable(p.csv);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_EndpointInputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_JsonProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_ModelBiasAppSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_ModelBiasBaselineConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.constraintsResource))
            aws_cdk_lib_IResolvable(p.constraintsResource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_ModelBiasJobInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groundTruthS3Input))
            aws_cdk_lib_IResolvable(p.groundTruthS3Input);
        if (!visitedObjects.has(p.batchTransformInput))
            aws_cdk_lib_IResolvable(p.batchTransformInput);
        if (!visitedObjects.has(p.endpointInput))
            aws_cdk_lib_IResolvable(p.endpointInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_MonitoringGroundTruthS3InputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_MonitoringOutputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Output))
            aws_cdk_lib_IResolvable(p.s3Output);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_MonitoringOutputConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.monitoringOutputs))
            aws_cdk_lib_IResolvable(p.monitoringOutputs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_MonitoringResourcesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterConfig))
            aws_cdk_lib_IResolvable(p.clusterConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_NetworkConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_S3OutputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_StoppingConditionProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelCardProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.content))
            aws_cdk_lib_IResolvable(p.content);
        if (!visitedObjects.has(p.createdBy))
            aws_cdk_lib_IResolvable(p.createdBy);
        if (!visitedObjects.has(p.lastModifiedBy))
            aws_cdk_lib_IResolvable(p.lastModifiedBy);
        if (!visitedObjects.has(p.securityConfig))
            aws_cdk_lib_IResolvable(p.securityConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_AdditionalInformationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customDetails))
            aws_cdk_lib_IResolvable(p.customDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_BusinessDetailsProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_ContentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.additionalInformation))
            aws_cdk_lib_IResolvable(p.additionalInformation);
        if (!visitedObjects.has(p.businessDetails))
            aws_cdk_lib_IResolvable(p.businessDetails);
        if (!visitedObjects.has(p.evaluationDetails))
            aws_cdk_lib_IResolvable(p.evaluationDetails);
        if (!visitedObjects.has(p.intendedUses))
            aws_cdk_lib_IResolvable(p.intendedUses);
        if (!visitedObjects.has(p.modelOverview))
            aws_cdk_lib_IResolvable(p.modelOverview);
        if (!visitedObjects.has(p.trainingDetails))
            aws_cdk_lib_IResolvable(p.trainingDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_EvaluationDetailProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metadata))
            aws_cdk_lib_IResolvable(p.metadata);
        if (!visitedObjects.has(p.metricGroups))
            aws_cdk_lib_IResolvable(p.metricGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_FunctionProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_InferenceEnvironmentProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_IntendedUsesProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_MetricDataItemsProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_MetricGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.metricData))
            aws_cdk_lib_IResolvable(p.metricData);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_ModelOverviewProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.inferenceEnvironment))
            aws_cdk_lib_IResolvable(p.inferenceEnvironment);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_ObjectiveFunctionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.function))
            aws_cdk_lib_IResolvable(p.function);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_SecurityConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_TrainingDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.objectiveFunction))
            aws_cdk_lib_IResolvable(p.objectiveFunction);
        if (!visitedObjects.has(p.trainingJobDetails))
            aws_cdk_lib_IResolvable(p.trainingJobDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_TrainingEnvironmentProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_TrainingHyperParameterProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_TrainingJobDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hyperParameters))
            aws_cdk_lib_IResolvable(p.hyperParameters);
        if (!visitedObjects.has(p.trainingEnvironment))
            aws_cdk_lib_IResolvable(p.trainingEnvironment);
        if (!visitedObjects.has(p.trainingMetrics))
            aws_cdk_lib_IResolvable(p.trainingMetrics);
        if (!visitedObjects.has(p.userProvidedHyperParameters))
            aws_cdk_lib_IResolvable(p.userProvidedHyperParameters);
        if (!visitedObjects.has(p.userProvidedTrainingMetrics))
            aws_cdk_lib_IResolvable(p.userProvidedTrainingMetrics);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_TrainingMetricProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelCard_UserContextProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jobResources))
            aws_cdk_lib_IResolvable(p.jobResources);
        if (!visitedObjects.has(p.modelExplainabilityAppSpecification))
            aws_cdk_lib_IResolvable(p.modelExplainabilityAppSpecification);
        if (!visitedObjects.has(p.modelExplainabilityJobInput))
            aws_cdk_lib_IResolvable(p.modelExplainabilityJobInput);
        if (!visitedObjects.has(p.modelExplainabilityJobOutputConfig))
            aws_cdk_lib_IResolvable(p.modelExplainabilityJobOutputConfig);
        if (!visitedObjects.has(p.modelExplainabilityBaselineConfig))
            aws_cdk_lib_IResolvable(p.modelExplainabilityBaselineConfig);
        if (!visitedObjects.has(p.networkConfig))
            aws_cdk_lib_IResolvable(p.networkConfig);
        if (!visitedObjects.has(p.stoppingCondition))
            aws_cdk_lib_IResolvable(p.stoppingCondition);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_BatchTransformInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.datasetFormat))
            aws_cdk_lib_IResolvable(p.datasetFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_ClusterConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_ConstraintsResourceProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_CsvProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_DatasetFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csv))
            aws_cdk_lib_IResolvable(p.csv);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_EndpointInputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_JsonProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_ModelExplainabilityAppSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_ModelExplainabilityBaselineConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.constraintsResource))
            aws_cdk_lib_IResolvable(p.constraintsResource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_ModelExplainabilityJobInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.batchTransformInput))
            aws_cdk_lib_IResolvable(p.batchTransformInput);
        if (!visitedObjects.has(p.endpointInput))
            aws_cdk_lib_IResolvable(p.endpointInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_MonitoringOutputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Output))
            aws_cdk_lib_IResolvable(p.s3Output);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_MonitoringOutputConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.monitoringOutputs))
            aws_cdk_lib_IResolvable(p.monitoringOutputs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_MonitoringResourcesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterConfig))
            aws_cdk_lib_IResolvable(p.clusterConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_NetworkConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_S3OutputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_StoppingConditionProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.additionalInferenceSpecificationDefinition))
            aws_cdk_lib_IResolvable(p.additionalInferenceSpecificationDefinition);
        if (!visitedObjects.has(p.additionalInferenceSpecifications))
            aws_cdk_lib_IResolvable(p.additionalInferenceSpecifications);
        if (!visitedObjects.has(p.additionalInferenceSpecificationsToAdd))
            aws_cdk_lib_IResolvable(p.additionalInferenceSpecificationsToAdd);
        if (!visitedObjects.has(p.createdBy))
            aws_cdk_lib_IResolvable(p.createdBy);
        if (!visitedObjects.has(p.customerMetadataProperties))
            aws_cdk_lib_IResolvable(p.customerMetadataProperties);
        if (!visitedObjects.has(p.driftCheckBaselines))
            aws_cdk_lib_IResolvable(p.driftCheckBaselines);
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
        if (!visitedObjects.has(p.inferenceSpecification))
            aws_cdk_lib_IResolvable(p.inferenceSpecification);
        if (!visitedObjects.has(p.lastModifiedBy))
            aws_cdk_lib_IResolvable(p.lastModifiedBy);
        if (!visitedObjects.has(p.metadataProperties))
            aws_cdk_lib_IResolvable(p.metadataProperties);
        if (!visitedObjects.has(p.modelMetrics))
            aws_cdk_lib_IResolvable(p.modelMetrics);
        if (!visitedObjects.has(p.modelPackageStatusDetails))
            aws_cdk_lib_IResolvable(p.modelPackageStatusDetails);
        if (!visitedObjects.has(p.modelPackageStatusItem))
            aws_cdk_lib_IResolvable(p.modelPackageStatusItem);
        if (!visitedObjects.has(p.sourceAlgorithmSpecification))
            aws_cdk_lib_IResolvable(p.sourceAlgorithmSpecification);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.validationSpecification))
            aws_cdk_lib_IResolvable(p.validationSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_AdditionalInferenceSpecificationDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containers))
            aws_cdk_lib_IResolvable(p.containers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_BiasProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.postTrainingReport))
            aws_cdk_lib_IResolvable(p.postTrainingReport);
        if (!visitedObjects.has(p.preTrainingReport))
            aws_cdk_lib_IResolvable(p.preTrainingReport);
        if (!visitedObjects.has(p.report))
            aws_cdk_lib_IResolvable(p.report);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_DataSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3DataSource))
            aws_cdk_lib_IResolvable(p.s3DataSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_DriftCheckBaselinesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bias))
            aws_cdk_lib_IResolvable(p.bias);
        if (!visitedObjects.has(p.explainability))
            aws_cdk_lib_IResolvable(p.explainability);
        if (!visitedObjects.has(p.modelDataQuality))
            aws_cdk_lib_IResolvable(p.modelDataQuality);
        if (!visitedObjects.has(p.modelQuality))
            aws_cdk_lib_IResolvable(p.modelQuality);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_DriftCheckBiasProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configFile))
            aws_cdk_lib_IResolvable(p.configFile);
        if (!visitedObjects.has(p.postTrainingConstraints))
            aws_cdk_lib_IResolvable(p.postTrainingConstraints);
        if (!visitedObjects.has(p.preTrainingConstraints))
            aws_cdk_lib_IResolvable(p.preTrainingConstraints);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_DriftCheckExplainabilityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configFile))
            aws_cdk_lib_IResolvable(p.configFile);
        if (!visitedObjects.has(p.constraints))
            aws_cdk_lib_IResolvable(p.constraints);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_DriftCheckModelDataQualityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.constraints))
            aws_cdk_lib_IResolvable(p.constraints);
        if (!visitedObjects.has(p.statistics))
            aws_cdk_lib_IResolvable(p.statistics);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_DriftCheckModelQualityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.constraints))
            aws_cdk_lib_IResolvable(p.constraints);
        if (!visitedObjects.has(p.statistics))
            aws_cdk_lib_IResolvable(p.statistics);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_ExplainabilityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.report))
            aws_cdk_lib_IResolvable(p.report);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_FileSourceProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_InferenceSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containers))
            aws_cdk_lib_IResolvable(p.containers);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_MetadataPropertiesProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_MetricsSourceProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelDataQualityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.constraints))
            aws_cdk_lib_IResolvable(p.constraints);
        if (!visitedObjects.has(p.statistics))
            aws_cdk_lib_IResolvable(p.statistics);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelInputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelMetricsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bias))
            aws_cdk_lib_IResolvable(p.bias);
        if (!visitedObjects.has(p.explainability))
            aws_cdk_lib_IResolvable(p.explainability);
        if (!visitedObjects.has(p.modelDataQuality))
            aws_cdk_lib_IResolvable(p.modelDataQuality);
        if (!visitedObjects.has(p.modelQuality))
            aws_cdk_lib_IResolvable(p.modelQuality);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelPackageContainerDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelPackageStatusDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.validationStatuses))
            aws_cdk_lib_IResolvable(p.validationStatuses);
        if (!visitedObjects.has(p.imageScanStatuses))
            aws_cdk_lib_IResolvable(p.imageScanStatuses);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelPackageStatusItemProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelQualityProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.constraints))
            aws_cdk_lib_IResolvable(p.constraints);
        if (!visitedObjects.has(p.statistics))
            aws_cdk_lib_IResolvable(p.statistics);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_S3DataSourceProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_SourceAlgorithmProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_SourceAlgorithmSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sourceAlgorithms))
            aws_cdk_lib_IResolvable(p.sourceAlgorithms);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_TransformInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSource))
            aws_cdk_lib_IResolvable(p.dataSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_TransformJobDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.transformInput))
            aws_cdk_lib_IResolvable(p.transformInput);
        if (!visitedObjects.has(p.transformOutput))
            aws_cdk_lib_IResolvable(p.transformOutput);
        if (!visitedObjects.has(p.transformResources))
            aws_cdk_lib_IResolvable(p.transformResources);
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_TransformOutputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_TransformResourcesProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_UserContextProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_ValidationProfileProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.transformJobDefinition))
            aws_cdk_lib_IResolvable(p.transformJobDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackage_ValidationSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.validationProfiles))
            aws_cdk_lib_IResolvable(p.validationProfiles);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackageGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelPackageGroup(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinitionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jobResources))
            aws_cdk_lib_IResolvable(p.jobResources);
        if (!visitedObjects.has(p.modelQualityAppSpecification))
            aws_cdk_lib_IResolvable(p.modelQualityAppSpecification);
        if (!visitedObjects.has(p.modelQualityJobInput))
            aws_cdk_lib_IResolvable(p.modelQualityJobInput);
        if (!visitedObjects.has(p.modelQualityJobOutputConfig))
            aws_cdk_lib_IResolvable(p.modelQualityJobOutputConfig);
        if (!visitedObjects.has(p.modelQualityBaselineConfig))
            aws_cdk_lib_IResolvable(p.modelQualityBaselineConfig);
        if (!visitedObjects.has(p.networkConfig))
            aws_cdk_lib_IResolvable(p.networkConfig);
        if (!visitedObjects.has(p.stoppingCondition))
            aws_cdk_lib_IResolvable(p.stoppingCondition);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_BatchTransformInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.datasetFormat))
            aws_cdk_lib_IResolvable(p.datasetFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_ClusterConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_ConstraintsResourceProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_CsvProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_DatasetFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csv))
            aws_cdk_lib_IResolvable(p.csv);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_EndpointInputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_JsonProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_ModelQualityAppSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_ModelQualityBaselineConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.constraintsResource))
            aws_cdk_lib_IResolvable(p.constraintsResource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_ModelQualityJobInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.groundTruthS3Input))
            aws_cdk_lib_IResolvable(p.groundTruthS3Input);
        if (!visitedObjects.has(p.batchTransformInput))
            aws_cdk_lib_IResolvable(p.batchTransformInput);
        if (!visitedObjects.has(p.endpointInput))
            aws_cdk_lib_IResolvable(p.endpointInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_MonitoringGroundTruthS3InputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_MonitoringOutputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Output))
            aws_cdk_lib_IResolvable(p.s3Output);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_MonitoringOutputConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.monitoringOutputs))
            aws_cdk_lib_IResolvable(p.monitoringOutputs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_MonitoringResourcesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterConfig))
            aws_cdk_lib_IResolvable(p.clusterConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_NetworkConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_S3OutputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_StoppingConditionProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringScheduleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.monitoringScheduleConfig))
            aws_cdk_lib_IResolvable(p.monitoringScheduleConfig);
        if (!visitedObjects.has(p.lastMonitoringExecutionSummary))
            aws_cdk_lib_IResolvable(p.lastMonitoringExecutionSummary);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_BaselineConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.constraintsResource))
            aws_cdk_lib_IResolvable(p.constraintsResource);
        if (!visitedObjects.has(p.statisticsResource))
            aws_cdk_lib_IResolvable(p.statisticsResource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_BatchTransformInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.datasetFormat))
            aws_cdk_lib_IResolvable(p.datasetFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_ClusterConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_ConstraintsResourceProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_CsvProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_DatasetFormatProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.csv))
            aws_cdk_lib_IResolvable(p.csv);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_EndpointInputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_JsonProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringAppSpecificationProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringExecutionSummaryProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringInputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.batchTransformInput))
            aws_cdk_lib_IResolvable(p.batchTransformInput);
        if (!visitedObjects.has(p.endpointInput))
            aws_cdk_lib_IResolvable(p.endpointInput);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringJobDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.monitoringAppSpecification))
            aws_cdk_lib_IResolvable(p.monitoringAppSpecification);
        if (!visitedObjects.has(p.monitoringInputs))
            aws_cdk_lib_IResolvable(p.monitoringInputs);
        if (!visitedObjects.has(p.monitoringOutputConfig))
            aws_cdk_lib_IResolvable(p.monitoringOutputConfig);
        if (!visitedObjects.has(p.monitoringResources))
            aws_cdk_lib_IResolvable(p.monitoringResources);
        if (!visitedObjects.has(p.baselineConfig))
            aws_cdk_lib_IResolvable(p.baselineConfig);
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
        if (!visitedObjects.has(p.networkConfig))
            aws_cdk_lib_IResolvable(p.networkConfig);
        if (!visitedObjects.has(p.stoppingCondition))
            aws_cdk_lib_IResolvable(p.stoppingCondition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringOutputProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Output))
            aws_cdk_lib_IResolvable(p.s3Output);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringOutputConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.monitoringOutputs))
            aws_cdk_lib_IResolvable(p.monitoringOutputs);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringResourcesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.clusterConfig))
            aws_cdk_lib_IResolvable(p.clusterConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringScheduleConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.monitoringJobDefinition))
            aws_cdk_lib_IResolvable(p.monitoringJobDefinition);
        if (!visitedObjects.has(p.scheduleConfig))
            aws_cdk_lib_IResolvable(p.scheduleConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_NetworkConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_S3OutputProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_ScheduleConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_StatisticsResourceProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_StoppingConditionProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnNotebookInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceMetadataServiceConfiguration))
            aws_cdk_lib_IResolvable(p.instanceMetadataServiceConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnNotebookInstance(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnNotebookInstance_InstanceMetadataServiceConfigurationProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnNotebookInstanceLifecycleConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onCreate))
            aws_cdk_lib_IResolvable(p.onCreate);
        if (!visitedObjects.has(p.onStart))
            aws_cdk_lib_IResolvable(p.onStart);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnNotebookInstanceLifecycleConfig(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnNotebookInstanceLifecycleConfig_NotebookInstanceLifecycleHookProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnPipelineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnPipeline(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnPipeline_ParallelismConfigurationProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnPipeline_PipelineDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pipelineDefinitionS3Location))
            aws_cdk_lib_IResolvable(p.pipelineDefinitionS3Location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnPipeline_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnProjectProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnProject(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnProject_ProvisioningParameterProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnProject_ServiceCatalogProvisionedProductDetailsProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnProject_ServiceCatalogProvisioningDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.provisioningParameters))
            aws_cdk_lib_IResolvable(p.provisioningParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnSpaceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spaceSettings))
            aws_cdk_lib_IResolvable(p.spaceSettings);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnSpace(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnSpace_CustomImageProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnSpace_JupyterServerAppSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultResourceSpec))
            aws_cdk_lib_IResolvable(p.defaultResourceSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnSpace_KernelGatewayAppSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customImages))
            aws_cdk_lib_IResolvable(p.customImages);
        if (!visitedObjects.has(p.defaultResourceSpec))
            aws_cdk_lib_IResolvable(p.defaultResourceSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnSpace_ResourceSpecProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnSpace_SpaceSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jupyterServerAppSettings))
            aws_cdk_lib_IResolvable(p.jupyterServerAppSettings);
        if (!visitedObjects.has(p.kernelGatewayAppSettings))
            aws_cdk_lib_IResolvable(p.kernelGatewayAppSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnUserProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.userSettings))
            aws_cdk_lib_IResolvable(p.userSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnUserProfile(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnUserProfile_CustomImageProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnUserProfile_JupyterServerAppSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultResourceSpec))
            aws_cdk_lib_IResolvable(p.defaultResourceSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnUserProfile_KernelGatewayAppSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customImages))
            aws_cdk_lib_IResolvable(p.customImages);
        if (!visitedObjects.has(p.defaultResourceSpec))
            aws_cdk_lib_IResolvable(p.defaultResourceSpec);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnUserProfile_RStudioServerProAppSettingsProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnUserProfile_ResourceSpecProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnUserProfile_SharingSettingsProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnUserProfile_UserSettingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jupyterServerAppSettings))
            aws_cdk_lib_IResolvable(p.jupyterServerAppSettings);
        if (!visitedObjects.has(p.kernelGatewayAppSettings))
            aws_cdk_lib_IResolvable(p.kernelGatewayAppSettings);
        if (!visitedObjects.has(p.rStudioServerProAppSettings))
            aws_cdk_lib_IResolvable(p.rStudioServerProAppSettings);
        if (!visitedObjects.has(p.sharingSettings))
            aws_cdk_lib_IResolvable(p.sharingSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnWorkteamProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.memberDefinitions))
            aws_cdk_lib_IResolvable(p.memberDefinitions);
        if (!visitedObjects.has(p.notificationConfiguration))
            aws_cdk_lib_IResolvable(p.notificationConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnWorkteam(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnWorkteam_CognitoMemberDefinitionProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnWorkteam_MemberDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cognitoMemberDefinition))
            aws_cdk_lib_IResolvable(p.cognitoMemberDefinition);
        if (!visitedObjects.has(p.oidcMemberDefinition))
            aws_cdk_lib_IResolvable(p.oidcMemberDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sagemaker_CfnWorkteam_NotificationConfigurationProperty(p) {
}
function aws_cdk_lib_aws_sagemaker_CfnWorkteam_OidcMemberDefinitionProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnApiProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessLogSetting))
            aws_cdk_lib_IResolvable(p.accessLogSetting);
        if (!visitedObjects.has(p.auth))
            aws_cdk_lib_IResolvable(p.auth);
        if (!visitedObjects.has(p.canarySetting))
            aws_cdk_lib_IResolvable(p.canarySetting);
        if (!visitedObjects.has(p.domain))
            aws_cdk_lib_IResolvable(p.domain);
        if (!visitedObjects.has(p.variables))
            aws_cdk_lib_IResolvable(p.variables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnApi(p) {
}
function aws_cdk_lib_aws_sam_CfnApi_AccessLogSettingProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnApi_AuthProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnApi_CanarySettingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stageVariableOverrides))
            aws_cdk_lib_IResolvable(p.stageVariableOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnApi_CorsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnApi_DomainConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mutualTlsAuthentication))
            aws_cdk_lib_IResolvable(p.mutualTlsAuthentication);
        if (!visitedObjects.has(p.route53))
            aws_cdk_lib_IResolvable(p.route53);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnApi_EndpointConfigurationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnApi_MutualTlsAuthenticationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnApi_Route53ConfigurationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnApi_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnApplication(p) {
}
function aws_cdk_lib_aws_sam_CfnApplication_ApplicationLocationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_IResolvable(p.deadLetterQueue);
        if (!visitedObjects.has(p.deploymentPreference))
            aws_cdk_lib_IResolvable(p.deploymentPreference);
        if (!visitedObjects.has(p.environment))
            aws_cdk_lib_IResolvable(p.environment);
        if (!visitedObjects.has(p.eventInvokeConfig))
            aws_cdk_lib_IResolvable(p.eventInvokeConfig);
        if (!visitedObjects.has(p.events))
            aws_cdk_lib_IResolvable(p.events);
        if (!visitedObjects.has(p.fileSystemConfigs))
            aws_cdk_lib_IResolvable(p.fileSystemConfigs);
        if (!visitedObjects.has(p.imageConfig))
            aws_cdk_lib_IResolvable(p.imageConfig);
        if (!visitedObjects.has(p.provisionedConcurrencyConfig))
            aws_cdk_lib_IResolvable(p.provisionedConcurrencyConfig);
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_AlexaSkillEventProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.variables))
            aws_cdk_lib_IResolvable(p.variables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_ApiEventProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.auth))
            aws_cdk_lib_IResolvable(p.auth);
        if (!visitedObjects.has(p.requestModel))
            aws_cdk_lib_IResolvable(p.requestModel);
        if (!visitedObjects.has(p.requestParameters))
            aws_cdk_lib_IResolvable(p.requestParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_AuthProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resourcePolicy))
            aws_cdk_lib_IResolvable(p.resourcePolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_AuthResourcePolicyProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_BucketSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_CloudWatchEventEventProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_CloudWatchLogsEventProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_CollectionSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_DeadLetterQueueProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_DeploymentPreferenceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hooks))
            aws_cdk_lib_IResolvable(p.hooks);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_DestinationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_DestinationConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_IResolvable(p.onFailure);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_DomainSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_DynamoDBEventProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationConfig))
            aws_cdk_lib_IResolvable(p.destinationConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_EmptySAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_EventBridgeRuleEventProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_EventInvokeConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationConfig))
            aws_cdk_lib_IResolvable(p.destinationConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_EventInvokeDestinationConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_IResolvable(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_IResolvable(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_EventSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.properties))
            aws_cdk_lib_IResolvable(p.properties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_FileSystemConfigProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_FunctionEnvironmentProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.variables))
            aws_cdk_lib_IResolvable(p.variables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_FunctionSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_HooksProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_HttpApiEventProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.auth))
            aws_cdk_lib_IResolvable(p.auth);
        if (!visitedObjects.has(p.routeSettings))
            aws_cdk_lib_IResolvable(p.routeSettings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_HttpApiFunctionAuthProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_IAMPolicyDocumentProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_IdentitySAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_ImageConfigProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_IoTRuleEventProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_KeySAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_KinesisEventProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_LogGroupSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_ParameterNameSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_ProvisionedConcurrencyConfigProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_QueueSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_RequestModelProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_RequestParameterProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_RouteSettingsProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_S3EventProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filter))
            aws_cdk_lib_IResolvable(p.filter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_S3KeyFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_S3KeyFilterRuleProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_S3NotificationFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Key))
            aws_cdk_lib_IResolvable(p.s3Key);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_SAMPolicyTemplateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.amiDescribePolicy))
            aws_cdk_lib_IResolvable(p.amiDescribePolicy);
        if (!visitedObjects.has(p.awsSecretsManagerGetSecretValuePolicy))
            aws_cdk_lib_IResolvable(p.awsSecretsManagerGetSecretValuePolicy);
        if (!visitedObjects.has(p.cloudFormationDescribeStacksPolicy))
            aws_cdk_lib_IResolvable(p.cloudFormationDescribeStacksPolicy);
        if (!visitedObjects.has(p.cloudWatchPutMetricPolicy))
            aws_cdk_lib_IResolvable(p.cloudWatchPutMetricPolicy);
        if (!visitedObjects.has(p.dynamoDbCrudPolicy))
            aws_cdk_lib_IResolvable(p.dynamoDbCrudPolicy);
        if (!visitedObjects.has(p.dynamoDbReadPolicy))
            aws_cdk_lib_IResolvable(p.dynamoDbReadPolicy);
        if (!visitedObjects.has(p.dynamoDbStreamReadPolicy))
            aws_cdk_lib_IResolvable(p.dynamoDbStreamReadPolicy);
        if (!visitedObjects.has(p.dynamoDbWritePolicy))
            aws_cdk_lib_IResolvable(p.dynamoDbWritePolicy);
        if (!visitedObjects.has(p.ec2DescribePolicy))
            aws_cdk_lib_IResolvable(p.ec2DescribePolicy);
        if (!visitedObjects.has(p.elasticsearchHttpPostPolicy))
            aws_cdk_lib_IResolvable(p.elasticsearchHttpPostPolicy);
        if (!visitedObjects.has(p.filterLogEventsPolicy))
            aws_cdk_lib_IResolvable(p.filterLogEventsPolicy);
        if (!visitedObjects.has(p.kinesisCrudPolicy))
            aws_cdk_lib_IResolvable(p.kinesisCrudPolicy);
        if (!visitedObjects.has(p.kinesisStreamReadPolicy))
            aws_cdk_lib_IResolvable(p.kinesisStreamReadPolicy);
        if (!visitedObjects.has(p.kmsDecryptPolicy))
            aws_cdk_lib_IResolvable(p.kmsDecryptPolicy);
        if (!visitedObjects.has(p.lambdaInvokePolicy))
            aws_cdk_lib_IResolvable(p.lambdaInvokePolicy);
        if (!visitedObjects.has(p.rekognitionDetectOnlyPolicy))
            aws_cdk_lib_IResolvable(p.rekognitionDetectOnlyPolicy);
        if (!visitedObjects.has(p.rekognitionLabelsPolicy))
            aws_cdk_lib_IResolvable(p.rekognitionLabelsPolicy);
        if (!visitedObjects.has(p.rekognitionNoDataAccessPolicy))
            aws_cdk_lib_IResolvable(p.rekognitionNoDataAccessPolicy);
        if (!visitedObjects.has(p.rekognitionReadPolicy))
            aws_cdk_lib_IResolvable(p.rekognitionReadPolicy);
        if (!visitedObjects.has(p.rekognitionWriteOnlyAccessPolicy))
            aws_cdk_lib_IResolvable(p.rekognitionWriteOnlyAccessPolicy);
        if (!visitedObjects.has(p.s3CrudPolicy))
            aws_cdk_lib_IResolvable(p.s3CrudPolicy);
        if (!visitedObjects.has(p.s3ReadPolicy))
            aws_cdk_lib_IResolvable(p.s3ReadPolicy);
        if (!visitedObjects.has(p.s3WritePolicy))
            aws_cdk_lib_IResolvable(p.s3WritePolicy);
        if (!visitedObjects.has(p.sesBulkTemplatedCrudPolicy))
            aws_cdk_lib_IResolvable(p.sesBulkTemplatedCrudPolicy);
        if (!visitedObjects.has(p.sesCrudPolicy))
            aws_cdk_lib_IResolvable(p.sesCrudPolicy);
        if (!visitedObjects.has(p.sesEmailTemplateCrudPolicy))
            aws_cdk_lib_IResolvable(p.sesEmailTemplateCrudPolicy);
        if (!visitedObjects.has(p.sesSendBouncePolicy))
            aws_cdk_lib_IResolvable(p.sesSendBouncePolicy);
        if (!visitedObjects.has(p.snsCrudPolicy))
            aws_cdk_lib_IResolvable(p.snsCrudPolicy);
        if (!visitedObjects.has(p.snsPublishMessagePolicy))
            aws_cdk_lib_IResolvable(p.snsPublishMessagePolicy);
        if (!visitedObjects.has(p.sqsPollerPolicy))
            aws_cdk_lib_IResolvable(p.sqsPollerPolicy);
        if (!visitedObjects.has(p.sqsSendMessagePolicy))
            aws_cdk_lib_IResolvable(p.sqsSendMessagePolicy);
        if (!visitedObjects.has(p.ssmParameterReadPolicy))
            aws_cdk_lib_IResolvable(p.ssmParameterReadPolicy);
        if (!visitedObjects.has(p.stepFunctionsExecutionPolicy))
            aws_cdk_lib_IResolvable(p.stepFunctionsExecutionPolicy);
        if (!visitedObjects.has(p.vpcAccessPolicy))
            aws_cdk_lib_IResolvable(p.vpcAccessPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnFunction_SNSEventProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_SQSEventProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_ScheduleEventProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_SecretArnSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_StateMachineSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_StreamSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_TableSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_TableStreamSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_TopicSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnFunction_VpcConfigProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnHttpApiProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessLogSetting))
            aws_cdk_lib_IResolvable(p.accessLogSetting);
        if (!visitedObjects.has(p.auth))
            aws_cdk_lib_IResolvable(p.auth);
        if (!visitedObjects.has(p.defaultRouteSettings))
            aws_cdk_lib_IResolvable(p.defaultRouteSettings);
        if (!visitedObjects.has(p.domain))
            aws_cdk_lib_IResolvable(p.domain);
        if (!visitedObjects.has(p.routeSettings))
            aws_cdk_lib_IResolvable(p.routeSettings);
        if (!visitedObjects.has(p.stageVariables))
            aws_cdk_lib_IResolvable(p.stageVariables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnHttpApi(p) {
}
function aws_cdk_lib_aws_sam_CfnHttpApi_AccessLogSettingProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnHttpApi_CorsConfigurationObjectProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnHttpApi_HttpApiAuthProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnHttpApi_HttpApiDomainConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.mutualTlsAuthentication))
            aws_cdk_lib_IResolvable(p.mutualTlsAuthentication);
        if (!visitedObjects.has(p.route53))
            aws_cdk_lib_IResolvable(p.route53);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnHttpApi_MutualTlsAuthenticationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnHttpApi_Route53ConfigurationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnHttpApi_RouteSettingsProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnHttpApi_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnLayerVersionProps(p) {
}
function aws_cdk_lib_aws_sam_CfnLayerVersion(p) {
}
function aws_cdk_lib_aws_sam_CfnLayerVersion_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnSimpleTableProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.primaryKey))
            aws_cdk_lib_IResolvable(p.primaryKey);
        if (!visitedObjects.has(p.provisionedThroughput))
            aws_cdk_lib_IResolvable(p.provisionedThroughput);
        if (!visitedObjects.has(p.sseSpecification))
            aws_cdk_lib_IResolvable(p.sseSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnSimpleTable(p) {
}
function aws_cdk_lib_aws_sam_CfnSimpleTable_PrimaryKeyProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnSimpleTable_ProvisionedThroughputProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnSimpleTable_SSESpecificationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnStateMachineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.definitionSubstitutions))
            aws_cdk_lib_IResolvable(p.definitionSubstitutions);
        if (!visitedObjects.has(p.events))
            aws_cdk_lib_IResolvable(p.events);
        if (!visitedObjects.has(p.logging))
            aws_cdk_lib_IResolvable(p.logging);
        if (!visitedObjects.has(p.tracing))
            aws_cdk_lib_IResolvable(p.tracing);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnStateMachine(p) {
}
function aws_cdk_lib_aws_sam_CfnStateMachine_ApiEventProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnStateMachine_CloudWatchEventEventProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnStateMachine_CloudWatchLogsLogGroupProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnStateMachine_EventBridgeRuleEventProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnStateMachine_EventSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.properties))
            aws_cdk_lib_IResolvable(p.properties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnStateMachine_FunctionSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnStateMachine_IAMPolicyDocumentProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnStateMachine_LogDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchLogsLogGroup))
            aws_cdk_lib_IResolvable(p.cloudWatchLogsLogGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnStateMachine_LoggingConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinations))
            aws_cdk_lib_IResolvable(p.destinations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnStateMachine_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnStateMachine_SAMPolicyTemplateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambdaInvokePolicy))
            aws_cdk_lib_IResolvable(p.lambdaInvokePolicy);
        if (!visitedObjects.has(p.stepFunctionsExecutionPolicy))
            aws_cdk_lib_IResolvable(p.stepFunctionsExecutionPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sam_CfnStateMachine_ScheduleEventProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnStateMachine_StateMachineSAMPTProperty(p) {
}
function aws_cdk_lib_aws_sam_CfnStateMachine_TracingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_scheduler_CfnScheduleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.flexibleTimeWindow))
            aws_cdk_lib_IResolvable(p.flexibleTimeWindow);
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_IResolvable(p.target);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_scheduler_CfnSchedule(p) {
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_AwsVpcConfigurationProperty(p) {
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_CapacityProviderStrategyItemProperty(p) {
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_DeadLetterConfigProperty(p) {
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_EcsParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.capacityProviderStrategy))
            aws_cdk_lib_IResolvable(p.capacityProviderStrategy);
        if (!visitedObjects.has(p.networkConfiguration))
            aws_cdk_lib_IResolvable(p.networkConfiguration);
        if (!visitedObjects.has(p.placementConstraints))
            aws_cdk_lib_IResolvable(p.placementConstraints);
        if (!visitedObjects.has(p.placementStrategy))
            aws_cdk_lib_IResolvable(p.placementStrategy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_EventBridgeParametersProperty(p) {
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_FlexibleTimeWindowProperty(p) {
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_KinesisParametersProperty(p) {
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_NetworkConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awsvpcConfiguration))
            aws_cdk_lib_IResolvable(p.awsvpcConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_PlacementConstraintProperty(p) {
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_PlacementStrategyProperty(p) {
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_RetryPolicyProperty(p) {
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_SageMakerPipelineParameterProperty(p) {
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_SageMakerPipelineParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pipelineParameterList))
            aws_cdk_lib_IResolvable(p.pipelineParameterList);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_SqsParametersProperty(p) {
}
function aws_cdk_lib_aws_scheduler_CfnSchedule_TargetProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deadLetterConfig))
            aws_cdk_lib_IResolvable(p.deadLetterConfig);
        if (!visitedObjects.has(p.ecsParameters))
            aws_cdk_lib_IResolvable(p.ecsParameters);
        if (!visitedObjects.has(p.eventBridgeParameters))
            aws_cdk_lib_IResolvable(p.eventBridgeParameters);
        if (!visitedObjects.has(p.kinesisParameters))
            aws_cdk_lib_IResolvable(p.kinesisParameters);
        if (!visitedObjects.has(p.retryPolicy))
            aws_cdk_lib_IResolvable(p.retryPolicy);
        if (!visitedObjects.has(p.sageMakerPipelineParameters))
            aws_cdk_lib_IResolvable(p.sageMakerPipelineParameters);
        if (!visitedObjects.has(p.sqsParameters))
            aws_cdk_lib_IResolvable(p.sqsParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_scheduler_CfnScheduleGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_scheduler_CfnScheduleGroup(p) {
}
function aws_cdk_lib_aws_sdb_CfnDomainProps(p) {
}
function aws_cdk_lib_aws_sdb_CfnDomain(p) {
}
function aws_cdk_lib_aws_secretsmanager_ISecret(p) {
}
function aws_cdk_lib_aws_secretsmanager_SecretProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
        if (!visitedObjects.has(p.generateSecretString))
            aws_cdk_lib_aws_secretsmanager_SecretStringGenerator(p.generateSecretString);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (p.replicaRegions != null)
            for (const o of p.replicaRegions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_secretsmanager_ReplicaRegion(o);
        if (p.secretObjectValue != null)
            for (const o of Object.values(p.secretObjectValue))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_SecretValue(o);
        if ("secretStringBeta1" in p)
            print("aws-cdk-lib.aws_secretsmanager.SecretProps#secretStringBeta1", "Use `secretStringValue` instead.");
        if (!visitedObjects.has(p.secretStringBeta1))
            aws_cdk_lib_aws_secretsmanager_SecretStringValueBeta1(p.secretStringBeta1);
        if (!visitedObjects.has(p.secretStringValue))
            aws_cdk_lib_SecretValue(p.secretStringValue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_ReplicaRegion(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_SecretStringValueBeta1(p) {
}
function aws_cdk_lib_aws_secretsmanager_SecretAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_Secret(p) {
}
function aws_cdk_lib_aws_secretsmanager_ISecretAttachmentTarget(p) {
}
function aws_cdk_lib_aws_secretsmanager_AttachmentTargetType(p) {
}
function aws_cdk_lib_aws_secretsmanager_SecretAttachmentTargetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetType))
            aws_cdk_lib_aws_secretsmanager_AttachmentTargetType(p.targetType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_AttachedSecretOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_secretsmanager_ISecretAttachmentTarget(p.target);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_SecretTargetAttachmentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.secret);
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_secretsmanager_ISecretAttachmentTarget(p.target);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_ISecretTargetAttachment(p) {
}
function aws_cdk_lib_aws_secretsmanager_SecretTargetAttachment(p) {
}
function aws_cdk_lib_aws_secretsmanager_SecretStringGenerator(p) {
}
function aws_cdk_lib_aws_secretsmanager_RotationScheduleOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.automaticallyAfter))
            aws_cdk_lib_Duration(p.automaticallyAfter);
        if (!visitedObjects.has(p.hostedRotation))
            aws_cdk_lib_aws_secretsmanager_HostedRotation(p.hostedRotation);
        if (!visitedObjects.has(p.rotationLambda))
            aws_cdk_lib_aws_lambda_IFunction(p.rotationLambda);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_RotationScheduleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.secret);
        if (!visitedObjects.has(p.automaticallyAfter))
            aws_cdk_lib_Duration(p.automaticallyAfter);
        if (!visitedObjects.has(p.hostedRotation))
            aws_cdk_lib_aws_secretsmanager_HostedRotation(p.hostedRotation);
        if (!visitedObjects.has(p.rotationLambda))
            aws_cdk_lib_aws_lambda_IFunction(p.rotationLambda);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_RotationSchedule(p) {
}
function aws_cdk_lib_aws_secretsmanager_SingleUserHostedRotationOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_MultiUserHostedRotationOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.masterSecret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.masterSecret);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_HostedRotation(p) {
}
function aws_cdk_lib_aws_secretsmanager_HostedRotationType(p) {
}
function aws_cdk_lib_aws_secretsmanager_ResourcePolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.secret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.secret);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_ResourcePolicy(p) {
}
function aws_cdk_lib_aws_secretsmanager_SecretRotationApplicationOptions(p) {
}
function aws_cdk_lib_aws_secretsmanager_SecretRotationApplication(p) {
}
function aws_cdk_lib_aws_secretsmanager_SecretRotationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.application))
            aws_cdk_lib_aws_secretsmanager_SecretRotationApplication(p.application);
        if (!visitedObjects.has(p.secret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.secret);
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_aws_ec2_IConnectable(p.target);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.automaticallyAfter))
            aws_cdk_lib_Duration(p.automaticallyAfter);
        if (!visitedObjects.has(p.endpoint))
            aws_cdk_lib_aws_ec2_IInterfaceVpcEndpoint(p.endpoint);
        if (!visitedObjects.has(p.masterSecret))
            aws_cdk_lib_aws_secretsmanager_ISecret(p.masterSecret);
        if (!visitedObjects.has(p.securityGroup))
            aws_cdk_lib_aws_ec2_ISecurityGroup(p.securityGroup);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_SecretRotation(p) {
}
function aws_cdk_lib_aws_secretsmanager_CfnResourcePolicyProps(p) {
}
function aws_cdk_lib_aws_secretsmanager_CfnResourcePolicy(p) {
}
function aws_cdk_lib_aws_secretsmanager_CfnRotationScheduleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.hostedRotationLambda))
            aws_cdk_lib_IResolvable(p.hostedRotationLambda);
        if (!visitedObjects.has(p.rotationRules))
            aws_cdk_lib_IResolvable(p.rotationRules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_CfnRotationSchedule(p) {
}
function aws_cdk_lib_aws_secretsmanager_CfnRotationSchedule_HostedRotationLambdaProperty(p) {
}
function aws_cdk_lib_aws_secretsmanager_CfnRotationSchedule_RotationRulesProperty(p) {
}
function aws_cdk_lib_aws_secretsmanager_CfnSecretProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.generateSecretString))
            aws_cdk_lib_IResolvable(p.generateSecretString);
        if (!visitedObjects.has(p.replicaRegions))
            aws_cdk_lib_IResolvable(p.replicaRegions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_secretsmanager_CfnSecret(p) {
}
function aws_cdk_lib_aws_secretsmanager_CfnSecret_GenerateSecretStringProperty(p) {
}
function aws_cdk_lib_aws_secretsmanager_CfnSecret_ReplicaRegionProperty(p) {
}
function aws_cdk_lib_aws_secretsmanager_CfnSecretTargetAttachmentProps(p) {
}
function aws_cdk_lib_aws_secretsmanager_CfnSecretTargetAttachment(p) {
}
function aws_cdk_lib_aws_securityhub_CfnHubProps(p) {
}
function aws_cdk_lib_aws_securityhub_CfnHub(p) {
}
function aws_cdk_lib_aws_servicecatalog_MessageLanguage(p) {
}
function aws_cdk_lib_aws_servicecatalog_CommonConstraintOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.messageLanguage))
            aws_cdk_lib_aws_servicecatalog_MessageLanguage(p.messageLanguage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_StackSetsConstraintOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.adminRole))
            aws_cdk_lib_aws_iam_IRole(p.adminRole);
        if (!visitedObjects.has(p.messageLanguage))
            aws_cdk_lib_aws_servicecatalog_MessageLanguage(p.messageLanguage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_TagUpdateConstraintOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.messageLanguage))
            aws_cdk_lib_aws_servicecatalog_MessageLanguage(p.messageLanguage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_TemplateRuleAssertion(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assert))
            aws_cdk_lib_ICfnRuleConditionExpression(p.assert);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_TemplateRule(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.assertions != null)
            for (const o of p.assertions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_servicecatalog_TemplateRuleAssertion(o);
        if (!visitedObjects.has(p.condition))
            aws_cdk_lib_ICfnRuleConditionExpression(p.condition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_CloudFormationRuleConstraintOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rule))
            aws_cdk_lib_aws_servicecatalog_TemplateRule(p.rule);
        if (!visitedObjects.has(p.messageLanguage))
            aws_cdk_lib_aws_servicecatalog_MessageLanguage(p.messageLanguage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_CloudFormationTemplate(p) {
}
function aws_cdk_lib_aws_servicecatalog_CloudFormationTemplateConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assetBucket))
            aws_cdk_lib_aws_s3_IBucket(p.assetBucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_PortfolioShareOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.messageLanguage))
            aws_cdk_lib_aws_servicecatalog_MessageLanguage(p.messageLanguage);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_IPortfolio(p) {
}
function aws_cdk_lib_aws_servicecatalog_PortfolioProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.messageLanguage))
            aws_cdk_lib_aws_servicecatalog_MessageLanguage(p.messageLanguage);
        if (!visitedObjects.has(p.tagOptions))
            aws_cdk_lib_aws_servicecatalog_TagOptions(p.tagOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_Portfolio(p) {
}
function aws_cdk_lib_aws_servicecatalog_IProduct(p) {
}
function aws_cdk_lib_aws_servicecatalog_CloudFormationProductVersion(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudFormationTemplate))
            aws_cdk_lib_aws_servicecatalog_CloudFormationTemplate(p.cloudFormationTemplate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_CloudFormationProductProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.productVersions != null)
            for (const o of p.productVersions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_servicecatalog_CloudFormationProductVersion(o);
        if (!visitedObjects.has(p.messageLanguage))
            aws_cdk_lib_aws_servicecatalog_MessageLanguage(p.messageLanguage);
        if (!visitedObjects.has(p.tagOptions))
            aws_cdk_lib_aws_servicecatalog_TagOptions(p.tagOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_Product(p) {
}
function aws_cdk_lib_aws_servicecatalog_CloudFormationProduct(p) {
}
function aws_cdk_lib_aws_servicecatalog_ProductStackProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assetBucket))
            aws_cdk_lib_aws_s3_IBucket(p.assetBucket);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_ProductStack(p) {
}
function aws_cdk_lib_aws_servicecatalog_ProductStackHistoryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.productStack))
            aws_cdk_lib_aws_servicecatalog_ProductStack(p.productStack);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_ProductStackHistory(p) {
}
function aws_cdk_lib_aws_servicecatalog_TagOptionsProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_TagOptions(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnAcceptedPortfolioShareProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnAcceptedPortfolioShare(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProductProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.provisioningArtifactParameters))
            aws_cdk_lib_IResolvable(p.provisioningArtifactParameters);
        if (!visitedObjects.has(p.sourceConnection))
            aws_cdk_lib_IResolvable(p.sourceConnection);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProduct(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProduct_CodeStarParametersProperty(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProduct_ConnectionParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.codeStar))
            aws_cdk_lib_IResolvable(p.codeStar);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProduct_ProvisioningArtifactPropertiesProperty(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProduct_SourceConnectionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.connectionParameters))
            aws_cdk_lib_IResolvable(p.connectionParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProvisionedProductProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.provisioningParameters))
            aws_cdk_lib_IResolvable(p.provisioningParameters);
        if (!visitedObjects.has(p.provisioningPreferences))
            aws_cdk_lib_IResolvable(p.provisioningPreferences);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProvisionedProduct(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProvisionedProduct_ProvisioningParameterProperty(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProvisionedProduct_ProvisioningPreferencesProperty(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnLaunchNotificationConstraintProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnLaunchNotificationConstraint(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnLaunchRoleConstraintProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnLaunchRoleConstraint(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnLaunchTemplateConstraintProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnLaunchTemplateConstraint(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnPortfolioProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_CfnPortfolio(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnPortfolioPrincipalAssociationProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnPortfolioPrincipalAssociation(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnPortfolioProductAssociationProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnPortfolioProductAssociation(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnPortfolioShareProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnPortfolioShare(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnResourceUpdateConstraintProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnResourceUpdateConstraint(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnServiceActionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.definition))
            aws_cdk_lib_IResolvable(p.definition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicecatalog_CfnServiceAction(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnServiceAction_DefinitionParameterProperty(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnServiceActionAssociationProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnServiceActionAssociation(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnStackSetConstraintProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnStackSetConstraint(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnTagOptionProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnTagOption(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnTagOptionAssociationProps(p) {
}
function aws_cdk_lib_aws_servicecatalog_CfnTagOptionAssociation(p) {
}
function aws_cdk_lib_aws_servicecatalogappregistry_CfnApplicationProps(p) {
}
function aws_cdk_lib_aws_servicecatalogappregistry_CfnApplication(p) {
}
function aws_cdk_lib_aws_servicecatalogappregistry_CfnAttributeGroupProps(p) {
}
function aws_cdk_lib_aws_servicecatalogappregistry_CfnAttributeGroup(p) {
}
function aws_cdk_lib_aws_servicecatalogappregistry_CfnAttributeGroupAssociationProps(p) {
}
function aws_cdk_lib_aws_servicecatalogappregistry_CfnAttributeGroupAssociation(p) {
}
function aws_cdk_lib_aws_servicecatalogappregistry_CfnResourceAssociationProps(p) {
}
function aws_cdk_lib_aws_servicecatalogappregistry_CfnResourceAssociation(p) {
}
function aws_cdk_lib_aws_servicediscovery_IInstance(p) {
}
function aws_cdk_lib_aws_servicediscovery_BaseInstanceProps(p) {
}
function aws_cdk_lib_aws_servicediscovery_InstanceBase(p) {
}
function aws_cdk_lib_aws_servicediscovery_AliasTargetInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.service))
            aws_cdk_lib_aws_servicediscovery_IService(p.service);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_AliasTargetInstance(p) {
}
function aws_cdk_lib_aws_servicediscovery_CnameInstanceBaseProps(p) {
}
function aws_cdk_lib_aws_servicediscovery_CnameInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.service))
            aws_cdk_lib_aws_servicediscovery_IService(p.service);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_CnameInstance(p) {
}
function aws_cdk_lib_aws_servicediscovery_IpInstanceBaseProps(p) {
}
function aws_cdk_lib_aws_servicediscovery_IpInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.service))
            aws_cdk_lib_aws_servicediscovery_IService(p.service);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_IpInstance(p) {
}
function aws_cdk_lib_aws_servicediscovery_NonIpInstanceBaseProps(p) {
}
function aws_cdk_lib_aws_servicediscovery_NonIpInstanceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.service))
            aws_cdk_lib_aws_servicediscovery_IService(p.service);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_NonIpInstance(p) {
}
function aws_cdk_lib_aws_servicediscovery_INamespace(p) {
}
function aws_cdk_lib_aws_servicediscovery_BaseNamespaceProps(p) {
}
function aws_cdk_lib_aws_servicediscovery_NamespaceType(p) {
}
function aws_cdk_lib_aws_servicediscovery_HttpNamespaceProps(p) {
}
function aws_cdk_lib_aws_servicediscovery_IHttpNamespace(p) {
}
function aws_cdk_lib_aws_servicediscovery_HttpNamespaceAttributes(p) {
}
function aws_cdk_lib_aws_servicediscovery_HttpNamespace(p) {
}
function aws_cdk_lib_aws_servicediscovery_PrivateDnsNamespaceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_IPrivateDnsNamespace(p) {
}
function aws_cdk_lib_aws_servicediscovery_PrivateDnsNamespaceAttributes(p) {
}
function aws_cdk_lib_aws_servicediscovery_PrivateDnsNamespace(p) {
}
function aws_cdk_lib_aws_servicediscovery_PublicDnsNamespaceProps(p) {
}
function aws_cdk_lib_aws_servicediscovery_IPublicDnsNamespace(p) {
}
function aws_cdk_lib_aws_servicediscovery_PublicDnsNamespaceAttributes(p) {
}
function aws_cdk_lib_aws_servicediscovery_PublicDnsNamespace(p) {
}
function aws_cdk_lib_aws_servicediscovery_IService(p) {
}
function aws_cdk_lib_aws_servicediscovery_BaseServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customHealthCheck))
            aws_cdk_lib_aws_servicediscovery_HealthCheckCustomConfig(p.customHealthCheck);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_servicediscovery_HealthCheckConfig(p.healthCheck);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_DnsServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.discoveryType))
            aws_cdk_lib_aws_servicediscovery_DiscoveryType(p.discoveryType);
        if (!visitedObjects.has(p.dnsRecordType))
            aws_cdk_lib_aws_servicediscovery_DnsRecordType(p.dnsRecordType);
        if (!visitedObjects.has(p.dnsTtl))
            aws_cdk_lib_Duration(p.dnsTtl);
        if (!visitedObjects.has(p.routingPolicy))
            aws_cdk_lib_aws_servicediscovery_RoutingPolicy(p.routingPolicy);
        if (!visitedObjects.has(p.customHealthCheck))
            aws_cdk_lib_aws_servicediscovery_HealthCheckCustomConfig(p.customHealthCheck);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_servicediscovery_HealthCheckConfig(p.healthCheck);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_ServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.namespace))
            aws_cdk_lib_aws_servicediscovery_INamespace(p.namespace);
        if (!visitedObjects.has(p.discoveryType))
            aws_cdk_lib_aws_servicediscovery_DiscoveryType(p.discoveryType);
        if (!visitedObjects.has(p.dnsRecordType))
            aws_cdk_lib_aws_servicediscovery_DnsRecordType(p.dnsRecordType);
        if (!visitedObjects.has(p.dnsTtl))
            aws_cdk_lib_Duration(p.dnsTtl);
        if (!visitedObjects.has(p.routingPolicy))
            aws_cdk_lib_aws_servicediscovery_RoutingPolicy(p.routingPolicy);
        if (!visitedObjects.has(p.customHealthCheck))
            aws_cdk_lib_aws_servicediscovery_HealthCheckCustomConfig(p.customHealthCheck);
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_aws_servicediscovery_HealthCheckConfig(p.healthCheck);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_ServiceAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dnsRecordType))
            aws_cdk_lib_aws_servicediscovery_DnsRecordType(p.dnsRecordType);
        if (!visitedObjects.has(p.namespace))
            aws_cdk_lib_aws_servicediscovery_INamespace(p.namespace);
        if (!visitedObjects.has(p.routingPolicy))
            aws_cdk_lib_aws_servicediscovery_RoutingPolicy(p.routingPolicy);
        if (!visitedObjects.has(p.discoveryType))
            aws_cdk_lib_aws_servicediscovery_DiscoveryType(p.discoveryType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_Service(p) {
}
function aws_cdk_lib_aws_servicediscovery_HealthCheckConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_servicediscovery_HealthCheckType(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_HealthCheckCustomConfig(p) {
}
function aws_cdk_lib_aws_servicediscovery_DiscoveryType(p) {
}
function aws_cdk_lib_aws_servicediscovery_DnsRecordType(p) {
}
function aws_cdk_lib_aws_servicediscovery_RoutingPolicy(p) {
}
function aws_cdk_lib_aws_servicediscovery_HealthCheckType(p) {
}
function aws_cdk_lib_aws_servicediscovery_CfnHttpNamespaceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_CfnHttpNamespace(p) {
}
function aws_cdk_lib_aws_servicediscovery_CfnInstanceProps(p) {
}
function aws_cdk_lib_aws_servicediscovery_CfnInstance(p) {
}
function aws_cdk_lib_aws_servicediscovery_CfnPrivateDnsNamespaceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.properties))
            aws_cdk_lib_IResolvable(p.properties);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_CfnPrivateDnsNamespace(p) {
}
function aws_cdk_lib_aws_servicediscovery_CfnPrivateDnsNamespace_PrivateDnsPropertiesMutableProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.soa))
            aws_cdk_lib_IResolvable(p.soa);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_CfnPrivateDnsNamespace_PropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dnsProperties))
            aws_cdk_lib_IResolvable(p.dnsProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_CfnPrivateDnsNamespace_SOAProperty(p) {
}
function aws_cdk_lib_aws_servicediscovery_CfnPublicDnsNamespaceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.properties))
            aws_cdk_lib_IResolvable(p.properties);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_CfnPublicDnsNamespace(p) {
}
function aws_cdk_lib_aws_servicediscovery_CfnPublicDnsNamespace_PropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dnsProperties))
            aws_cdk_lib_IResolvable(p.dnsProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_CfnPublicDnsNamespace_PublicDnsPropertiesMutableProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.soa))
            aws_cdk_lib_IResolvable(p.soa);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_CfnPublicDnsNamespace_SOAProperty(p) {
}
function aws_cdk_lib_aws_servicediscovery_CfnServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dnsConfig))
            aws_cdk_lib_IResolvable(p.dnsConfig);
        if (!visitedObjects.has(p.healthCheckConfig))
            aws_cdk_lib_IResolvable(p.healthCheckConfig);
        if (!visitedObjects.has(p.healthCheckCustomConfig))
            aws_cdk_lib_IResolvable(p.healthCheckCustomConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_CfnService(p) {
}
function aws_cdk_lib_aws_servicediscovery_CfnService_DnsConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dnsRecords))
            aws_cdk_lib_IResolvable(p.dnsRecords);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_servicediscovery_CfnService_DnsRecordProperty(p) {
}
function aws_cdk_lib_aws_servicediscovery_CfnService_HealthCheckConfigProperty(p) {
}
function aws_cdk_lib_aws_servicediscovery_CfnService_HealthCheckCustomConfigProperty(p) {
}
function aws_cdk_lib_aws_ses_IReceiptRuleSet(p) {
}
function aws_cdk_lib_aws_ses_ReceiptRuleSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.rules != null)
            for (const o of p.rules)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ses_ReceiptRuleOptions(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_ReceiptRuleSet(p) {
}
function aws_cdk_lib_aws_ses_IReceiptRule(p) {
}
function aws_cdk_lib_aws_ses_TlsPolicy(p) {
}
function aws_cdk_lib_aws_ses_ReceiptRuleOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.actions != null)
            for (const o of p.actions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ses_IReceiptRuleAction(o);
        if (!visitedObjects.has(p.after))
            aws_cdk_lib_aws_ses_IReceiptRule(p.after);
        if (!visitedObjects.has(p.tlsPolicy))
            aws_cdk_lib_aws_ses_TlsPolicy(p.tlsPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_ReceiptRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ruleSet))
            aws_cdk_lib_aws_ses_IReceiptRuleSet(p.ruleSet);
        if (p.actions != null)
            for (const o of p.actions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ses_IReceiptRuleAction(o);
        if (!visitedObjects.has(p.after))
            aws_cdk_lib_aws_ses_IReceiptRule(p.after);
        if (!visitedObjects.has(p.tlsPolicy))
            aws_cdk_lib_aws_ses_TlsPolicy(p.tlsPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_ReceiptRule(p) {
}
function aws_cdk_lib_aws_ses_DropSpamReceiptRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ruleSet))
            aws_cdk_lib_aws_ses_IReceiptRuleSet(p.ruleSet);
        if (p.actions != null)
            for (const o of p.actions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ses_IReceiptRuleAction(o);
        if (!visitedObjects.has(p.after))
            aws_cdk_lib_aws_ses_IReceiptRule(p.after);
        if (!visitedObjects.has(p.tlsPolicy))
            aws_cdk_lib_aws_ses_TlsPolicy(p.tlsPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_DropSpamReceiptRule(p) {
}
function aws_cdk_lib_aws_ses_IReceiptRuleAction(p) {
}
function aws_cdk_lib_aws_ses_AddHeaderActionConfig(p) {
}
function aws_cdk_lib_aws_ses_BounceActionConfig(p) {
}
function aws_cdk_lib_aws_ses_LambdaActionConfig(p) {
}
function aws_cdk_lib_aws_ses_S3ActionConfig(p) {
}
function aws_cdk_lib_aws_ses_SNSActionConfig(p) {
}
function aws_cdk_lib_aws_ses_StopActionConfig(p) {
}
function aws_cdk_lib_aws_ses_WorkmailActionConfig(p) {
}
function aws_cdk_lib_aws_ses_ReceiptRuleActionConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.addHeaderAction))
            aws_cdk_lib_aws_ses_AddHeaderActionConfig(p.addHeaderAction);
        if (!visitedObjects.has(p.bounceAction))
            aws_cdk_lib_aws_ses_BounceActionConfig(p.bounceAction);
        if (!visitedObjects.has(p.lambdaAction))
            aws_cdk_lib_aws_ses_LambdaActionConfig(p.lambdaAction);
        if (!visitedObjects.has(p.s3Action))
            aws_cdk_lib_aws_ses_S3ActionConfig(p.s3Action);
        if (!visitedObjects.has(p.snsAction))
            aws_cdk_lib_aws_ses_SNSActionConfig(p.snsAction);
        if (!visitedObjects.has(p.stopAction))
            aws_cdk_lib_aws_ses_StopActionConfig(p.stopAction);
        if (!visitedObjects.has(p.workmailAction))
            aws_cdk_lib_aws_ses_WorkmailActionConfig(p.workmailAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_ReceiptFilterPolicy(p) {
}
function aws_cdk_lib_aws_ses_ReceiptFilterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.policy))
            aws_cdk_lib_aws_ses_ReceiptFilterPolicy(p.policy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_ReceiptFilter(p) {
}
function aws_cdk_lib_aws_ses_AllowListReceiptFilterProps(p) {
}
function aws_cdk_lib_aws_ses_AllowListReceiptFilter(p) {
}
function aws_cdk_lib_aws_ses_IDedicatedIpPool(p) {
}
function aws_cdk_lib_aws_ses_DedicatedIpPoolProps(p) {
}
function aws_cdk_lib_aws_ses_DedicatedIpPool(p) {
}
function aws_cdk_lib_aws_ses_IConfigurationSet(p) {
}
function aws_cdk_lib_aws_ses_ConfigurationSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dedicatedIpPool))
            aws_cdk_lib_aws_ses_IDedicatedIpPool(p.dedicatedIpPool);
        if (!visitedObjects.has(p.suppressionReasons))
            aws_cdk_lib_aws_ses_SuppressionReasons(p.suppressionReasons);
        if (!visitedObjects.has(p.tlsPolicy))
            aws_cdk_lib_aws_ses_ConfigurationSetTlsPolicy(p.tlsPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_ConfigurationSetTlsPolicy(p) {
}
function aws_cdk_lib_aws_ses_SuppressionReasons(p) {
}
function aws_cdk_lib_aws_ses_ConfigurationSet(p) {
}
function aws_cdk_lib_aws_ses_IEmailIdentity(p) {
}
function aws_cdk_lib_aws_ses_EmailIdentityProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.identity))
            aws_cdk_lib_aws_ses_Identity(p.identity);
        if (!visitedObjects.has(p.configurationSet))
            aws_cdk_lib_aws_ses_IConfigurationSet(p.configurationSet);
        if (!visitedObjects.has(p.dkimIdentity))
            aws_cdk_lib_aws_ses_DkimIdentity(p.dkimIdentity);
        if (!visitedObjects.has(p.mailFromBehaviorOnMxFailure))
            aws_cdk_lib_aws_ses_MailFromBehaviorOnMxFailure(p.mailFromBehaviorOnMxFailure);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_Identity(p) {
}
function aws_cdk_lib_aws_ses_MailFromBehaviorOnMxFailure(p) {
}
function aws_cdk_lib_aws_ses_DkimIdentityConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.nextSigningKeyLength))
            aws_cdk_lib_aws_ses_EasyDkimSigningKeyLength(p.nextSigningKeyLength);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_DkimIdentity(p) {
}
function aws_cdk_lib_aws_ses_ByoDkimOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.privateKey))
            aws_cdk_lib_SecretValue(p.privateKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_EasyDkimSigningKeyLength(p) {
}
function aws_cdk_lib_aws_ses_EmailIdentity(p) {
}
function aws_cdk_lib_aws_ses_DkimRecord(p) {
}
function aws_cdk_lib_aws_ses_IVdmAttributes(p) {
}
function aws_cdk_lib_aws_ses_VdmAttributesProps(p) {
}
function aws_cdk_lib_aws_ses_VdmAttributes(p) {
}
function aws_cdk_lib_aws_ses_IConfigurationSetEventDestination(p) {
}
function aws_cdk_lib_aws_ses_ConfigurationSetEventDestinationOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_aws_ses_EventDestination(p.destination);
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ses_EmailSendingEvent(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_EventDestination(p) {
}
function aws_cdk_lib_aws_ses_ConfigurationSetEventDestinationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurationSet))
            aws_cdk_lib_aws_ses_IConfigurationSet(p.configurationSet);
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_aws_ses_EventDestination(p.destination);
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ses_EmailSendingEvent(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_EmailSendingEvent(p) {
}
function aws_cdk_lib_aws_ses_CloudWatchDimension(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_aws_ses_CloudWatchDimensionSource(p.source);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CloudWatchDimensionSource(p) {
}
function aws_cdk_lib_aws_ses_ConfigurationSetEventDestination(p) {
}
function aws_cdk_lib_aws_ses_CfnConfigurationSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deliveryOptions))
            aws_cdk_lib_IResolvable(p.deliveryOptions);
        if (!visitedObjects.has(p.reputationOptions))
            aws_cdk_lib_IResolvable(p.reputationOptions);
        if (!visitedObjects.has(p.sendingOptions))
            aws_cdk_lib_IResolvable(p.sendingOptions);
        if (!visitedObjects.has(p.suppressionOptions))
            aws_cdk_lib_IResolvable(p.suppressionOptions);
        if (!visitedObjects.has(p.trackingOptions))
            aws_cdk_lib_IResolvable(p.trackingOptions);
        if (!visitedObjects.has(p.vdmOptions))
            aws_cdk_lib_IResolvable(p.vdmOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnConfigurationSet(p) {
}
function aws_cdk_lib_aws_ses_CfnConfigurationSet_DashboardOptionsProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnConfigurationSet_DeliveryOptionsProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnConfigurationSet_GuardianOptionsProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnConfigurationSet_ReputationOptionsProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnConfigurationSet_SendingOptionsProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnConfigurationSet_SuppressionOptionsProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnConfigurationSet_TrackingOptionsProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnConfigurationSet_VdmOptionsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dashboardOptions))
            aws_cdk_lib_IResolvable(p.dashboardOptions);
        if (!visitedObjects.has(p.guardianOptions))
            aws_cdk_lib_IResolvable(p.guardianOptions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestinationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventDestination))
            aws_cdk_lib_IResolvable(p.eventDestination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestination(p) {
}
function aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestination_CloudWatchDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensionConfigurations))
            aws_cdk_lib_IResolvable(p.dimensionConfigurations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestination_DimensionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestination_EventDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchDestination))
            aws_cdk_lib_IResolvable(p.cloudWatchDestination);
        if (!visitedObjects.has(p.kinesisFirehoseDestination))
            aws_cdk_lib_IResolvable(p.kinesisFirehoseDestination);
        if (!visitedObjects.has(p.snsDestination))
            aws_cdk_lib_IResolvable(p.snsDestination);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestination_KinesisFirehoseDestinationProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestination_SnsDestinationProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnContactListProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.topics))
            aws_cdk_lib_IResolvable(p.topics);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnContactList(p) {
}
function aws_cdk_lib_aws_ses_CfnContactList_TopicProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnDedicatedIpPoolProps(p) {
}
function aws_cdk_lib_aws_ses_CfnDedicatedIpPool(p) {
}
function aws_cdk_lib_aws_ses_CfnEmailIdentityProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.configurationSetAttributes))
            aws_cdk_lib_IResolvable(p.configurationSetAttributes);
        if (!visitedObjects.has(p.dkimAttributes))
            aws_cdk_lib_IResolvable(p.dkimAttributes);
        if (!visitedObjects.has(p.dkimSigningAttributes))
            aws_cdk_lib_IResolvable(p.dkimSigningAttributes);
        if (!visitedObjects.has(p.feedbackAttributes))
            aws_cdk_lib_IResolvable(p.feedbackAttributes);
        if (!visitedObjects.has(p.mailFromAttributes))
            aws_cdk_lib_IResolvable(p.mailFromAttributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnEmailIdentity(p) {
}
function aws_cdk_lib_aws_ses_CfnEmailIdentity_ConfigurationSetAttributesProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnEmailIdentity_DkimAttributesProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnEmailIdentity_DkimSigningAttributesProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnEmailIdentity_FeedbackAttributesProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnEmailIdentity_MailFromAttributesProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnReceiptFilterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filter))
            aws_cdk_lib_IResolvable(p.filter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnReceiptFilter(p) {
}
function aws_cdk_lib_aws_ses_CfnReceiptFilter_FilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipFilter))
            aws_cdk_lib_IResolvable(p.ipFilter);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnReceiptFilter_IpFilterProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnReceiptRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rule))
            aws_cdk_lib_IResolvable(p.rule);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnReceiptRule(p) {
}
function aws_cdk_lib_aws_ses_CfnReceiptRule_ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.addHeaderAction))
            aws_cdk_lib_IResolvable(p.addHeaderAction);
        if (!visitedObjects.has(p.bounceAction))
            aws_cdk_lib_IResolvable(p.bounceAction);
        if (!visitedObjects.has(p.lambdaAction))
            aws_cdk_lib_IResolvable(p.lambdaAction);
        if (!visitedObjects.has(p.s3Action))
            aws_cdk_lib_IResolvable(p.s3Action);
        if (!visitedObjects.has(p.snsAction))
            aws_cdk_lib_IResolvable(p.snsAction);
        if (!visitedObjects.has(p.stopAction))
            aws_cdk_lib_IResolvable(p.stopAction);
        if (!visitedObjects.has(p.workmailAction))
            aws_cdk_lib_IResolvable(p.workmailAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnReceiptRule_AddHeaderActionProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnReceiptRule_BounceActionProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnReceiptRule_LambdaActionProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnReceiptRule_RuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnReceiptRule_S3ActionProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnReceiptRule_SNSActionProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnReceiptRule_StopActionProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnReceiptRule_WorkmailActionProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnReceiptRuleSetProps(p) {
}
function aws_cdk_lib_aws_ses_CfnReceiptRuleSet(p) {
}
function aws_cdk_lib_aws_ses_CfnTemplateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.template))
            aws_cdk_lib_IResolvable(p.template);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnTemplate(p) {
}
function aws_cdk_lib_aws_ses_CfnTemplate_TemplateProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnVdmAttributesProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dashboardAttributes))
            aws_cdk_lib_IResolvable(p.dashboardAttributes);
        if (!visitedObjects.has(p.guardianAttributes))
            aws_cdk_lib_IResolvable(p.guardianAttributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_CfnVdmAttributes(p) {
}
function aws_cdk_lib_aws_ses_CfnVdmAttributes_DashboardAttributesProperty(p) {
}
function aws_cdk_lib_aws_ses_CfnVdmAttributes_GuardianAttributesProperty(p) {
}
function aws_cdk_lib_aws_ses_actions_AddHeaderProps(p) {
}
function aws_cdk_lib_aws_ses_actions_AddHeader(p) {
}
function aws_cdk_lib_aws_ses_actions_BounceTemplateProps(p) {
}
function aws_cdk_lib_aws_ses_actions_BounceTemplate(p) {
}
function aws_cdk_lib_aws_ses_actions_BounceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.template))
            aws_cdk_lib_aws_ses_actions_BounceTemplate(p.template);
        if (!visitedObjects.has(p.topic))
            aws_cdk_lib_aws_sns_ITopic(p.topic);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_actions_Bounce(p) {
}
function aws_cdk_lib_aws_ses_actions_LambdaInvocationType(p) {
}
function aws_cdk_lib_aws_ses_actions_LambdaProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.function))
            aws_cdk_lib_aws_lambda_IFunction(p.function);
        if (!visitedObjects.has(p.invocationType))
            aws_cdk_lib_aws_ses_actions_LambdaInvocationType(p.invocationType);
        if (!visitedObjects.has(p.topic))
            aws_cdk_lib_aws_sns_ITopic(p.topic);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_actions_Lambda(p) {
}
function aws_cdk_lib_aws_ses_actions_S3Props(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bucket))
            aws_cdk_lib_aws_s3_IBucket(p.bucket);
        if (!visitedObjects.has(p.kmsKey))
            aws_cdk_lib_aws_kms_IKey(p.kmsKey);
        if (!visitedObjects.has(p.topic))
            aws_cdk_lib_aws_sns_ITopic(p.topic);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_actions_S3(p) {
}
function aws_cdk_lib_aws_ses_actions_EmailEncoding(p) {
}
function aws_cdk_lib_aws_ses_actions_SnsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.topic))
            aws_cdk_lib_aws_sns_ITopic(p.topic);
        if (!visitedObjects.has(p.encoding))
            aws_cdk_lib_aws_ses_actions_EmailEncoding(p.encoding);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_actions_Sns(p) {
}
function aws_cdk_lib_aws_ses_actions_StopProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.topic))
            aws_cdk_lib_aws_sns_ITopic(p.topic);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ses_actions_Stop(p) {
}
function aws_cdk_lib_aws_signer_CfnProfilePermissionProps(p) {
}
function aws_cdk_lib_aws_signer_CfnProfilePermission(p) {
}
function aws_cdk_lib_aws_signer_CfnSigningProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.signatureValidityPeriod))
            aws_cdk_lib_IResolvable(p.signatureValidityPeriod);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_signer_CfnSigningProfile(p) {
}
function aws_cdk_lib_aws_signer_CfnSigningProfile_SignatureValidityPeriodProperty(p) {
}
function aws_cdk_lib_aws_signer_Platform(p) {
}
function aws_cdk_lib_aws_signer_ISigningProfile(p) {
}
function aws_cdk_lib_aws_signer_SigningProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.platform))
            aws_cdk_lib_aws_signer_Platform(p.platform);
        if (!visitedObjects.has(p.signatureValidity))
            aws_cdk_lib_Duration(p.signatureValidity);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_signer_SigningProfileAttributes(p) {
}
function aws_cdk_lib_aws_signer_SigningProfile(p) {
}
function aws_cdk_lib_aws_simspaceweaver_CfnSimulationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.schemaS3Location))
            aws_cdk_lib_IResolvable(p.schemaS3Location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_simspaceweaver_CfnSimulation(p) {
}
function aws_cdk_lib_aws_simspaceweaver_CfnSimulation_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_sns_TopicPolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.topics != null)
            for (const o of p.topics)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_ITopic(o);
        if (!visitedObjects.has(p.policyDocument))
            aws_cdk_lib_aws_iam_PolicyDocument(p.policyDocument);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_TopicPolicy(p) {
}
function aws_cdk_lib_aws_sns_TopicProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.masterKey))
            aws_cdk_lib_aws_kms_IKey(p.masterKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_Topic(p) {
}
function aws_cdk_lib_aws_sns_ITopic(p) {
}
function aws_cdk_lib_aws_sns_TopicBase(p) {
}
function aws_cdk_lib_aws_sns_SubscriptionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_sns_SubscriptionProtocol(p.protocol);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (p.filterPolicy != null)
            for (const o of Object.values(p.filterPolicy))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_SubscriptionFilter(o);
        if (p.filterPolicyWithMessageBody != null)
            for (const o of Object.values(p.filterPolicyWithMessageBody))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_FilterOrPolicy(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_SubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.topic))
            aws_cdk_lib_aws_sns_ITopic(p.topic);
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_sns_SubscriptionProtocol(p.protocol);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (p.filterPolicy != null)
            for (const o of Object.values(p.filterPolicy))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_SubscriptionFilter(o);
        if (p.filterPolicyWithMessageBody != null)
            for (const o of Object.values(p.filterPolicyWithMessageBody))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_FilterOrPolicy(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_Subscription(p) {
}
function aws_cdk_lib_aws_sns_SubscriptionProtocol(p) {
}
function aws_cdk_lib_aws_sns_FilterOrPolicyType(p) {
}
function aws_cdk_lib_aws_sns_FilterOrPolicy(p) {
}
function aws_cdk_lib_aws_sns_Filter(p) {
}
function aws_cdk_lib_aws_sns_Policy(p) {
}
function aws_cdk_lib_aws_sns_TopicSubscriptionConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_sns_SubscriptionProtocol(p.protocol);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (p.filterPolicy != null)
            for (const o of Object.values(p.filterPolicy))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_SubscriptionFilter(o);
        if (p.filterPolicyWithMessageBody != null)
            for (const o of Object.values(p.filterPolicyWithMessageBody))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_FilterOrPolicy(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_ITopicSubscription(p) {
}
function aws_cdk_lib_aws_sns_StringConditions(p) {
}
function aws_cdk_lib_aws_sns_BetweenCondition(p) {
}
function aws_cdk_lib_aws_sns_NumericConditions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.between))
            aws_cdk_lib_aws_sns_BetweenCondition(p.between);
        if (!visitedObjects.has(p.betweenStrict))
            aws_cdk_lib_aws_sns_BetweenCondition(p.betweenStrict);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_SubscriptionFilter(p) {
}
function aws_cdk_lib_aws_sns_CfnSubscriptionProps(p) {
}
function aws_cdk_lib_aws_sns_CfnSubscription(p) {
}
function aws_cdk_lib_aws_sns_CfnTopicProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.subscription))
            aws_cdk_lib_IResolvable(p.subscription);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_CfnTopic(p) {
}
function aws_cdk_lib_aws_sns_CfnTopic_SubscriptionProperty(p) {
}
function aws_cdk_lib_aws_sns_CfnTopicPolicyProps(p) {
}
function aws_cdk_lib_aws_sns_CfnTopicPolicy(p) {
}
function aws_cdk_lib_aws_sns_subscriptions_SubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (p.filterPolicy != null)
            for (const o of Object.values(p.filterPolicy))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_SubscriptionFilter(o);
        if (p.filterPolicyWithMessageBody != null)
            for (const o of Object.values(p.filterPolicyWithMessageBody))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_FilterOrPolicy(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_subscriptions_EmailSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (p.filterPolicy != null)
            for (const o of Object.values(p.filterPolicy))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_SubscriptionFilter(o);
        if (p.filterPolicyWithMessageBody != null)
            for (const o of Object.values(p.filterPolicyWithMessageBody))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_FilterOrPolicy(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_subscriptions_EmailSubscription(p) {
}
function aws_cdk_lib_aws_sns_subscriptions_LambdaSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (p.filterPolicy != null)
            for (const o of Object.values(p.filterPolicy))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_SubscriptionFilter(o);
        if (p.filterPolicyWithMessageBody != null)
            for (const o of Object.values(p.filterPolicyWithMessageBody))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_FilterOrPolicy(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_subscriptions_LambdaSubscription(p) {
}
function aws_cdk_lib_aws_sns_subscriptions_SqsSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (p.filterPolicy != null)
            for (const o of Object.values(p.filterPolicy))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_SubscriptionFilter(o);
        if (p.filterPolicyWithMessageBody != null)
            for (const o of Object.values(p.filterPolicyWithMessageBody))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_FilterOrPolicy(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_subscriptions_SqsSubscription(p) {
}
function aws_cdk_lib_aws_sns_subscriptions_UrlSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.protocol))
            aws_cdk_lib_aws_sns_SubscriptionProtocol(p.protocol);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (p.filterPolicy != null)
            for (const o of Object.values(p.filterPolicy))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_SubscriptionFilter(o);
        if (p.filterPolicyWithMessageBody != null)
            for (const o of Object.values(p.filterPolicyWithMessageBody))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_FilterOrPolicy(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_subscriptions_UrlSubscription(p) {
}
function aws_cdk_lib_aws_sns_subscriptions_SmsSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (p.filterPolicy != null)
            for (const o of Object.values(p.filterPolicy))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_SubscriptionFilter(o);
        if (p.filterPolicyWithMessageBody != null)
            for (const o of Object.values(p.filterPolicyWithMessageBody))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sns_FilterOrPolicy(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sns_subscriptions_SmsSubscription(p) {
}
function aws_cdk_lib_aws_sqs_QueuePolicyProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.queues != null)
            for (const o of p.queues)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_sqs_IQueue(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sqs_QueuePolicy(p) {
}
function aws_cdk_lib_aws_sqs_QueueProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataKeyReuse))
            aws_cdk_lib_Duration(p.dataKeyReuse);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_DeadLetterQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.deduplicationScope))
            aws_cdk_lib_aws_sqs_DeduplicationScope(p.deduplicationScope);
        if (!visitedObjects.has(p.deliveryDelay))
            aws_cdk_lib_Duration(p.deliveryDelay);
        if (!visitedObjects.has(p.encryption))
            aws_cdk_lib_aws_sqs_QueueEncryption(p.encryption);
        if (!visitedObjects.has(p.encryptionMasterKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionMasterKey);
        if (!visitedObjects.has(p.fifoThroughputLimit))
            aws_cdk_lib_aws_sqs_FifoThroughputLimit(p.fifoThroughputLimit);
        if (!visitedObjects.has(p.receiveMessageWaitTime))
            aws_cdk_lib_Duration(p.receiveMessageWaitTime);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.retentionPeriod))
            aws_cdk_lib_Duration(p.retentionPeriod);
        if (!visitedObjects.has(p.visibilityTimeout))
            aws_cdk_lib_Duration(p.visibilityTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sqs_DeadLetterQueue(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.queue))
            aws_cdk_lib_aws_sqs_IQueue(p.queue);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sqs_QueueEncryption(p) {
}
function aws_cdk_lib_aws_sqs_DeduplicationScope(p) {
}
function aws_cdk_lib_aws_sqs_FifoThroughputLimit(p) {
}
function aws_cdk_lib_aws_sqs_Queue(p) {
}
function aws_cdk_lib_aws_sqs_IQueue(p) {
}
function aws_cdk_lib_aws_sqs_QueueBase(p) {
}
function aws_cdk_lib_aws_sqs_QueueAttributes(p) {
}
function aws_cdk_lib_aws_sqs_CfnQueueProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sqs_CfnQueue(p) {
}
function aws_cdk_lib_aws_sqs_CfnQueuePolicyProps(p) {
}
function aws_cdk_lib_aws_sqs_CfnQueuePolicy(p) {
}
function aws_cdk_lib_aws_ssm_IParameter(p) {
}
function aws_cdk_lib_aws_ssm_IStringParameter(p) {
}
function aws_cdk_lib_aws_ssm_IStringListParameter(p) {
}
function aws_cdk_lib_aws_ssm_ParameterOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tier))
            aws_cdk_lib_aws_ssm_ParameterTier(p.tier);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_StringParameterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataType))
            aws_cdk_lib_aws_ssm_ParameterDataType(p.dataType);
        if ("type" in p)
            print("aws-cdk-lib.aws_ssm.StringParameterProps#type", "- type will always be 'String'");
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_ssm_ParameterType(p.type);
        if (!visitedObjects.has(p.tier))
            aws_cdk_lib_aws_ssm_ParameterTier(p.tier);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_StringListParameterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tier))
            aws_cdk_lib_aws_ssm_ParameterTier(p.tier);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_ParameterValueType(p) {
}
function aws_cdk_lib_aws_ssm_ParameterType(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        print("aws-cdk-lib.aws_ssm.ParameterType", "these types are no longer used");
        const ns = require("./aws-ssm/lib/parameter.js");
        if (Object.values(ns.ParameterType).filter(x => x === p).length > 1)
            return;
        if (p === ns.ParameterType.STRING)
            print("aws-cdk-lib.aws_ssm.ParameterType#STRING", "");
        if (p === ns.ParameterType.SECURE_STRING)
            print("aws-cdk-lib.aws_ssm.ParameterType#SECURE_STRING", "");
        if (p === ns.ParameterType.STRING_LIST)
            print("aws-cdk-lib.aws_ssm.ParameterType#STRING_LIST", "");
        if (p === ns.ParameterType.AWS_EC2_IMAGE_ID)
            print("aws-cdk-lib.aws_ssm.ParameterType#AWS_EC2_IMAGE_ID", "");
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_ParameterDataType(p) {
}
function aws_cdk_lib_aws_ssm_ParameterTier(p) {
}
function aws_cdk_lib_aws_ssm_CommonStringParameterAttributes(p) {
}
function aws_cdk_lib_aws_ssm_StringParameterAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if ("type" in p)
            print("aws-cdk-lib.aws_ssm.StringParameterAttributes#type", "- use valueType instead");
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_aws_ssm_ParameterType(p.type);
        if (!visitedObjects.has(p.valueType))
            aws_cdk_lib_aws_ssm_ParameterValueType(p.valueType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_ListParameterAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.elementType))
            aws_cdk_lib_aws_ssm_ParameterValueType(p.elementType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_SecureStringParameterAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_StringParameter(p) {
}
function aws_cdk_lib_aws_ssm_StringListParameter(p) {
}
function aws_cdk_lib_aws_ssm_CfnAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.outputLocation))
            aws_cdk_lib_IResolvable(p.outputLocation);
        if (!visitedObjects.has(p.targets))
            aws_cdk_lib_IResolvable(p.targets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnAssociation(p) {
}
function aws_cdk_lib_aws_ssm_CfnAssociation_InstanceAssociationOutputLocationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Location))
            aws_cdk_lib_IResolvable(p.s3Location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnAssociation_S3OutputLocationProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnAssociation_TargetProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnDocumentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attachments))
            aws_cdk_lib_IResolvable(p.attachments);
        if (!visitedObjects.has(p.requires))
            aws_cdk_lib_IResolvable(p.requires);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnDocument(p) {
}
function aws_cdk_lib_aws_ssm_CfnDocument_AttachmentsSourceProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnDocument_DocumentRequiresProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindow(p) {
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTargetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targets))
            aws_cdk_lib_IResolvable(p.targets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTarget(p) {
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTarget_TargetsProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTaskProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loggingInfo))
            aws_cdk_lib_IResolvable(p.loggingInfo);
        if (!visitedObjects.has(p.targets))
            aws_cdk_lib_IResolvable(p.targets);
        if (!visitedObjects.has(p.taskInvocationParameters))
            aws_cdk_lib_IResolvable(p.taskInvocationParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask(p) {
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_CloudWatchOutputConfigProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_LoggingInfoProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_MaintenanceWindowAutomationParametersProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_MaintenanceWindowLambdaParametersProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_MaintenanceWindowRunCommandParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchOutputConfig))
            aws_cdk_lib_IResolvable(p.cloudWatchOutputConfig);
        if (!visitedObjects.has(p.notificationConfig))
            aws_cdk_lib_IResolvable(p.notificationConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_MaintenanceWindowStepFunctionsParametersProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_NotificationConfigProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_TargetProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_TaskInvocationParametersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maintenanceWindowAutomationParameters))
            aws_cdk_lib_IResolvable(p.maintenanceWindowAutomationParameters);
        if (!visitedObjects.has(p.maintenanceWindowLambdaParameters))
            aws_cdk_lib_IResolvable(p.maintenanceWindowLambdaParameters);
        if (!visitedObjects.has(p.maintenanceWindowRunCommandParameters))
            aws_cdk_lib_IResolvable(p.maintenanceWindowRunCommandParameters);
        if (!visitedObjects.has(p.maintenanceWindowStepFunctionsParameters))
            aws_cdk_lib_IResolvable(p.maintenanceWindowStepFunctionsParameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnParameterProps(p) {
}
function aws_cdk_lib_aws_ssm_CfnParameter(p) {
}
function aws_cdk_lib_aws_ssm_CfnPatchBaselineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.approvalRules))
            aws_cdk_lib_IResolvable(p.approvalRules);
        if (!visitedObjects.has(p.globalFilters))
            aws_cdk_lib_IResolvable(p.globalFilters);
        if (!visitedObjects.has(p.sources))
            aws_cdk_lib_IResolvable(p.sources);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnPatchBaseline(p) {
}
function aws_cdk_lib_aws_ssm_CfnPatchBaseline_PatchFilterProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnPatchBaseline_PatchFilterGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.patchFilters))
            aws_cdk_lib_IResolvable(p.patchFilters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnPatchBaseline_PatchSourceProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnPatchBaseline_RuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.patchFilterGroup))
            aws_cdk_lib_IResolvable(p.patchFilterGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnPatchBaseline_RuleGroupProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.patchRules))
            aws_cdk_lib_IResolvable(p.patchRules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnResourceDataSyncProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Destination))
            aws_cdk_lib_IResolvable(p.s3Destination);
        if (!visitedObjects.has(p.syncSource))
            aws_cdk_lib_IResolvable(p.syncSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnResourceDataSync(p) {
}
function aws_cdk_lib_aws_ssm_CfnResourceDataSync_AwsOrganizationsSourceProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnResourceDataSync_S3DestinationProperty(p) {
}
function aws_cdk_lib_aws_ssm_CfnResourceDataSync_SyncSourceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awsOrganizationsSource))
            aws_cdk_lib_IResolvable(p.awsOrganizationsSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssm_CfnResourcePolicyProps(p) {
}
function aws_cdk_lib_aws_ssm_CfnResourcePolicy(p) {
}
function aws_cdk_lib_aws_ssmcontacts_CfnContactProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.plan))
            aws_cdk_lib_IResolvable(p.plan);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssmcontacts_CfnContact(p) {
}
function aws_cdk_lib_aws_ssmcontacts_CfnContact_ChannelTargetInfoProperty(p) {
}
function aws_cdk_lib_aws_ssmcontacts_CfnContact_ContactTargetInfoProperty(p) {
}
function aws_cdk_lib_aws_ssmcontacts_CfnContact_StageProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targets))
            aws_cdk_lib_IResolvable(p.targets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssmcontacts_CfnContact_TargetsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.channelTargetInfo))
            aws_cdk_lib_IResolvable(p.channelTargetInfo);
        if (!visitedObjects.has(p.contactTargetInfo))
            aws_cdk_lib_IResolvable(p.contactTargetInfo);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssmcontacts_CfnContactChannelProps(p) {
}
function aws_cdk_lib_aws_ssmcontacts_CfnContactChannel(p) {
}
function aws_cdk_lib_aws_ssmincidents_CfnReplicationSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.regions))
            aws_cdk_lib_IResolvable(p.regions);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssmincidents_CfnReplicationSet(p) {
}
function aws_cdk_lib_aws_ssmincidents_CfnReplicationSet_RegionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ssmincidents_CfnReplicationSet_ReplicationRegionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.regionConfiguration))
            aws_cdk_lib_IResolvable(p.regionConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlanProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.incidentTemplate))
            aws_cdk_lib_IResolvable(p.incidentTemplate);
        if (!visitedObjects.has(p.actions))
            aws_cdk_lib_IResolvable(p.actions);
        if (!visitedObjects.has(p.chatChannel))
            aws_cdk_lib_IResolvable(p.chatChannel);
        if (!visitedObjects.has(p.integrations))
            aws_cdk_lib_IResolvable(p.integrations);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlan(p) {
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ssmAutomation))
            aws_cdk_lib_IResolvable(p.ssmAutomation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_ChatChannelProperty(p) {
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_DynamicSsmParameterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_DynamicSsmParameterValueProperty(p) {
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_IncidentTemplateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.incidentTags))
            aws_cdk_lib_IResolvable(p.incidentTags);
        if (!visitedObjects.has(p.notificationTargets))
            aws_cdk_lib_IResolvable(p.notificationTargets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_IntegrationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pagerDutyConfiguration))
            aws_cdk_lib_IResolvable(p.pagerDutyConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_NotificationTargetItemProperty(p) {
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_PagerDutyConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.pagerDutyIncidentConfiguration))
            aws_cdk_lib_IResolvable(p.pagerDutyIncidentConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_PagerDutyIncidentConfigurationProperty(p) {
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_SsmAutomationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dynamicParameters))
            aws_cdk_lib_IResolvable(p.dynamicParameters);
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_SsmParameterProperty(p) {
}
function aws_cdk_lib_aws_sso_CfnAssignmentProps(p) {
}
function aws_cdk_lib_aws_sso_CfnAssignment(p) {
}
function aws_cdk_lib_aws_sso_CfnInstanceAccessControlAttributeConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.accessControlAttributes))
            aws_cdk_lib_IResolvable(p.accessControlAttributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sso_CfnInstanceAccessControlAttributeConfiguration(p) {
}
function aws_cdk_lib_aws_sso_CfnInstanceAccessControlAttributeConfiguration_AccessControlAttributeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.value))
            aws_cdk_lib_IResolvable(p.value);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sso_CfnInstanceAccessControlAttributeConfiguration_AccessControlAttributeValueProperty(p) {
}
function aws_cdk_lib_aws_sso_CfnPermissionSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customerManagedPolicyReferences))
            aws_cdk_lib_IResolvable(p.customerManagedPolicyReferences);
        if (!visitedObjects.has(p.permissionsBoundary))
            aws_cdk_lib_IResolvable(p.permissionsBoundary);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_sso_CfnPermissionSet(p) {
}
function aws_cdk_lib_aws_sso_CfnPermissionSet_CustomerManagedPolicyReferenceProperty(p) {
}
function aws_cdk_lib_aws_sso_CfnPermissionSet_PermissionsBoundaryProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customerManagedPolicyReference))
            aws_cdk_lib_IResolvable(p.customerManagedPolicyReference);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_JsonPath(p) {
}
function aws_cdk_lib_aws_stepfunctions_FieldUtils(p) {
}
function aws_cdk_lib_aws_stepfunctions_ActivityProps(p) {
}
function aws_cdk_lib_aws_stepfunctions_Activity(p) {
}
function aws_cdk_lib_aws_stepfunctions_IActivity(p) {
}
function aws_cdk_lib_aws_stepfunctions_TaskInput(p) {
}
function aws_cdk_lib_aws_stepfunctions_InputType(p) {
}
function aws_cdk_lib_aws_stepfunctions_INextable(p) {
}
function aws_cdk_lib_aws_stepfunctions_IChainable(p) {
}
function aws_cdk_lib_aws_stepfunctions_Errors(p) {
}
function aws_cdk_lib_aws_stepfunctions_RetryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.interval))
            aws_cdk_lib_Duration(p.interval);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_CatchProps(p) {
}
function aws_cdk_lib_aws_stepfunctions_Condition(p) {
}
function aws_cdk_lib_aws_stepfunctions_StateMachineType(p) {
}
function aws_cdk_lib_aws_stepfunctions_LogLevel(p) {
}
function aws_cdk_lib_aws_stepfunctions_LogOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destination))
            aws_cdk_lib_aws_logs_ILogGroup(p.destination);
        if (!visitedObjects.has(p.level))
            aws_cdk_lib_aws_stepfunctions_LogLevel(p.level);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_StateMachineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.definition))
            aws_cdk_lib_aws_stepfunctions_IChainable(p.definition);
        if (!visitedObjects.has(p.logs))
            aws_cdk_lib_aws_stepfunctions_LogOptions(p.logs);
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.stateMachineType))
            aws_cdk_lib_aws_stepfunctions_StateMachineType(p.stateMachineType);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_StateMachine(p) {
}
function aws_cdk_lib_aws_stepfunctions_IStateMachine(p) {
}
function aws_cdk_lib_aws_stepfunctions_StateMachineFragment(p) {
}
function aws_cdk_lib_aws_stepfunctions_SingleStateOptions(p) {
}
function aws_cdk_lib_aws_stepfunctions_StateTransitionMetric(p) {
}
function aws_cdk_lib_aws_stepfunctions_Chain(p) {
}
function aws_cdk_lib_aws_stepfunctions_StateGraph(p) {
}
function aws_cdk_lib_aws_stepfunctions_ServiceIntegrationPattern(p) {
}
function aws_cdk_lib_aws_stepfunctions_ChoiceProps(p) {
}
function aws_cdk_lib_aws_stepfunctions_Choice(p) {
}
function aws_cdk_lib_aws_stepfunctions_AfterwardsOptions(p) {
}
function aws_cdk_lib_aws_stepfunctions_FailProps(p) {
}
function aws_cdk_lib_aws_stepfunctions_Fail(p) {
}
function aws_cdk_lib_aws_stepfunctions_ParallelProps(p) {
}
function aws_cdk_lib_aws_stepfunctions_Parallel(p) {
}
function aws_cdk_lib_aws_stepfunctions_Result(p) {
}
function aws_cdk_lib_aws_stepfunctions_PassProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.result))
            aws_cdk_lib_aws_stepfunctions_Result(p.result);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_Pass(p) {
}
function aws_cdk_lib_aws_stepfunctions_StateProps(p) {
}
function aws_cdk_lib_aws_stepfunctions_State(p) {
}
function aws_cdk_lib_aws_stepfunctions_FindStateOptions(p) {
}
function aws_cdk_lib_aws_stepfunctions_SucceedProps(p) {
}
function aws_cdk_lib_aws_stepfunctions_Succeed(p) {
}
function aws_cdk_lib_aws_stepfunctions_WaitTime(p) {
}
function aws_cdk_lib_aws_stepfunctions_WaitProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.time))
            aws_cdk_lib_aws_stepfunctions_WaitTime(p.time);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_Wait(p) {
}
function aws_cdk_lib_aws_stepfunctions_MapProps(p) {
}
function aws_cdk_lib_aws_stepfunctions_Map(p) {
}
function aws_cdk_lib_aws_stepfunctions_CustomStateProps(p) {
}
function aws_cdk_lib_aws_stepfunctions_CustomState(p) {
}
function aws_cdk_lib_aws_stepfunctions_TaskStateBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_TaskStateBase(p) {
}
function aws_cdk_lib_aws_stepfunctions_TaskMetricsConfig(p) {
}
function aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p) {
}
function aws_cdk_lib_aws_stepfunctions_Timeout(p) {
}
function aws_cdk_lib_aws_stepfunctions_Credentials(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_stepfunctions_TaskRole(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_TaskRole(p) {
}
function aws_cdk_lib_aws_stepfunctions_CfnActivityProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_CfnActivity_TagsEntryProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_CfnActivity(p) {
}
function aws_cdk_lib_aws_stepfunctions_CfnActivity_TagsEntryProperty(p) {
}
function aws_cdk_lib_aws_stepfunctions_CfnStateMachineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.definitionS3Location))
            aws_cdk_lib_IResolvable(p.definitionS3Location);
        if (!visitedObjects.has(p.definitionSubstitutions))
            aws_cdk_lib_IResolvable(p.definitionSubstitutions);
        if (!visitedObjects.has(p.loggingConfiguration))
            aws_cdk_lib_IResolvable(p.loggingConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_CfnStateMachine_TagsEntryProperty(o);
        if (!visitedObjects.has(p.tracingConfiguration))
            aws_cdk_lib_IResolvable(p.tracingConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_CfnStateMachine(p) {
}
function aws_cdk_lib_aws_stepfunctions_CfnStateMachine_CloudWatchLogsLogGroupProperty(p) {
}
function aws_cdk_lib_aws_stepfunctions_CfnStateMachine_LogDestinationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchLogsLogGroup))
            aws_cdk_lib_IResolvable(p.cloudWatchLogsLogGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_CfnStateMachine_LoggingConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinations))
            aws_cdk_lib_IResolvable(p.destinations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_CfnStateMachine_S3LocationProperty(p) {
}
function aws_cdk_lib_aws_stepfunctions_CfnStateMachine_TagsEntryProperty(p) {
}
function aws_cdk_lib_aws_stepfunctions_CfnStateMachine_TracingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_LambdaInvokeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lambdaFunction))
            aws_cdk_lib_aws_lambda_IFunction(p.lambdaFunction);
        if (!visitedObjects.has(p.invocationType))
            aws_cdk_lib_aws_stepfunctions_tasks_LambdaInvocationType(p.invocationType);
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.payload);
        if ("qualifier" in p)
            print("aws-cdk-lib.aws_stepfunctions_tasks.LambdaInvokeProps#qualifier", "pass a Version or Alias object as lambdaFunction instead");
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_LambdaInvoke(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_LambdaInvocationType(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_CommonEcsRunTaskProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_TaskDefinition(p.taskDefinition);
        if (p.containerOverrides != null)
            for (const o of p.containerOverrides)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_ContainerOverride(o);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_ServiceIntegrationPattern(p.integrationPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_ContainerOverride(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containerDefinition))
            aws_cdk_lib_aws_ecs_ContainerDefinition(p.containerDefinition);
        if (p.environment != null)
            for (const o of p.environment)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_TaskEnvironmentVariable(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_TaskEnvironmentVariable(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_MessageAttributeDataType(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_MessageAttribute(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataType))
            aws_cdk_lib_aws_stepfunctions_tasks_MessageAttributeDataType(p.dataType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_SnsPublishProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.message))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.message);
        if (!visitedObjects.has(p.topic))
            aws_cdk_lib_aws_sns_ITopic(p.topic);
        if (p.messageAttributes != null)
            for (const o of Object.values(p.messageAttributes))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_MessageAttribute(o);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_SnsPublish(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_SqsSendMessageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.messageBody))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.messageBody);
        if (!visitedObjects.has(p.queue))
            aws_cdk_lib_aws_sqs_IQueue(p.queue);
        if (!visitedObjects.has(p.delay))
            aws_cdk_lib_Duration(p.delay);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_SqsSendMessage(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EcsRunTaskProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
        if (!visitedObjects.has(p.launchTarget))
            aws_cdk_lib_aws_stepfunctions_tasks_IEcsLaunchTarget(p.launchTarget);
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_TaskDefinition(p.taskDefinition);
        if (p.containerOverrides != null)
            for (const o of p.containerOverrides)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_ContainerOverride(o);
        if (!visitedObjects.has(p.propagatedTagSource))
            aws_cdk_lib_aws_ecs_PropagatedTagSource(p.propagatedTagSource);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnets);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_IEcsLaunchTarget(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_LaunchTargetBindOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.taskDefinition))
            aws_cdk_lib_aws_ecs_ITaskDefinition(p.taskDefinition);
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_ecs_ICluster(p.cluster);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EcsLaunchTargetConfig(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EcsFargateLaunchTargetOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.platformVersion))
            aws_cdk_lib_aws_ecs_FargatePlatformVersion(p.platformVersion);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EcsEc2LaunchTargetOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.placementConstraints != null)
            for (const o of p.placementConstraints)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementConstraint(o);
        if (p.placementStrategies != null)
            for (const o of p.placementStrategies)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ecs_PlacementStrategy(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EcsFargateLaunchTarget(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EcsEc2LaunchTarget(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EcsRunTask(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_ISageMakerTask(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_AlgorithmSpecification(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.metricDefinitions != null)
            for (const o of p.metricDefinitions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_MetricDefinition(o);
        if (!visitedObjects.has(p.trainingImage))
            aws_cdk_lib_aws_stepfunctions_tasks_DockerImage(p.trainingImage);
        if (!visitedObjects.has(p.trainingInputMode))
            aws_cdk_lib_aws_stepfunctions_tasks_InputMode(p.trainingInputMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_Channel(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dataSource))
            aws_cdk_lib_aws_stepfunctions_tasks_DataSource(p.dataSource);
        if (!visitedObjects.has(p.compressionType))
            aws_cdk_lib_aws_stepfunctions_tasks_CompressionType(p.compressionType);
        if (!visitedObjects.has(p.inputMode))
            aws_cdk_lib_aws_stepfunctions_tasks_InputMode(p.inputMode);
        if (!visitedObjects.has(p.recordWrapperType))
            aws_cdk_lib_aws_stepfunctions_tasks_RecordWrapperType(p.recordWrapperType);
        if (!visitedObjects.has(p.shuffleConfig))
            aws_cdk_lib_aws_stepfunctions_tasks_ShuffleConfig(p.shuffleConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_ShuffleConfig(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_DataSource(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3DataSource))
            aws_cdk_lib_aws_stepfunctions_tasks_S3DataSource(p.s3DataSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_S3DataSource(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Location))
            aws_cdk_lib_aws_stepfunctions_tasks_S3Location(p.s3Location);
        if (!visitedObjects.has(p.s3DataDistributionType))
            aws_cdk_lib_aws_stepfunctions_tasks_S3DataDistributionType(p.s3DataDistributionType);
        if (!visitedObjects.has(p.s3DataType))
            aws_cdk_lib_aws_stepfunctions_tasks_S3DataType(p.s3DataType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_OutputDataConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3OutputLocation))
            aws_cdk_lib_aws_stepfunctions_tasks_S3Location(p.s3OutputLocation);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_StoppingCondition(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.maxRuntime))
            aws_cdk_lib_Duration(p.maxRuntime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_ResourceConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.volumeSize))
            aws_cdk_lib_Size(p.volumeSize);
        if (!visitedObjects.has(p.volumeEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.volumeEncryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_VpcConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.subnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_MetricDefinition(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_S3LocationConfig(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_S3Location(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_S3LocationBindOptions(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_DockerImageConfig(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_DockerImage(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_S3DataType(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_S3DataDistributionType(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_RecordWrapperType(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_InputMode(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_CompressionType(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_ModelClientOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.invocationsTimeout))
            aws_cdk_lib_Duration(p.invocationsTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_TransformInput(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.transformDataSource))
            aws_cdk_lib_aws_stepfunctions_tasks_TransformDataSource(p.transformDataSource);
        if (!visitedObjects.has(p.compressionType))
            aws_cdk_lib_aws_stepfunctions_tasks_CompressionType(p.compressionType);
        if (!visitedObjects.has(p.splitType))
            aws_cdk_lib_aws_stepfunctions_tasks_SplitType(p.splitType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_TransformDataSource(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3DataSource))
            aws_cdk_lib_aws_stepfunctions_tasks_TransformS3DataSource(p.s3DataSource);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_TransformS3DataSource(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3DataType))
            aws_cdk_lib_aws_stepfunctions_tasks_S3DataType(p.s3DataType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_TransformOutput(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assembleWith))
            aws_cdk_lib_aws_stepfunctions_tasks_AssembleWith(p.assembleWith);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_TransformResources(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.volumeEncryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.volumeEncryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_ContainerDefinitionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environmentVariables))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.environmentVariables);
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_aws_stepfunctions_tasks_DockerImage(p.image);
        if (!visitedObjects.has(p.mode))
            aws_cdk_lib_aws_stepfunctions_tasks_Mode(p.mode);
        if (!visitedObjects.has(p.modelS3Location))
            aws_cdk_lib_aws_stepfunctions_tasks_S3Location(p.modelS3Location);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_ContainerDefinition(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_IContainerDefinition(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_ContainerDefinitionConfig(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_Mode(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_ProductionVariant(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.acceleratorType))
            aws_cdk_lib_aws_stepfunctions_tasks_AcceleratorType(p.acceleratorType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_AcceleratorClass(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_AcceleratorType(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_BatchStrategy(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_SplitType(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_AssembleWith(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateTrainingJobProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.algorithmSpecification))
            aws_cdk_lib_aws_stepfunctions_tasks_AlgorithmSpecification(p.algorithmSpecification);
        if (p.inputDataConfig != null)
            for (const o of p.inputDataConfig)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_Channel(o);
        if (!visitedObjects.has(p.outputDataConfig))
            aws_cdk_lib_aws_stepfunctions_tasks_OutputDataConfig(p.outputDataConfig);
        if (!visitedObjects.has(p.resourceConfig))
            aws_cdk_lib_aws_stepfunctions_tasks_ResourceConfig(p.resourceConfig);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.stoppingCondition))
            aws_cdk_lib_aws_stepfunctions_tasks_StoppingCondition(p.stoppingCondition);
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_aws_stepfunctions_tasks_VpcConfig(p.vpcConfig);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateTrainingJob(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateTransformJobProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.transformInput))
            aws_cdk_lib_aws_stepfunctions_tasks_TransformInput(p.transformInput);
        if (!visitedObjects.has(p.transformOutput))
            aws_cdk_lib_aws_stepfunctions_tasks_TransformOutput(p.transformOutput);
        if (!visitedObjects.has(p.batchStrategy))
            aws_cdk_lib_aws_stepfunctions_tasks_BatchStrategy(p.batchStrategy);
        if (!visitedObjects.has(p.maxPayload))
            aws_cdk_lib_Size(p.maxPayload);
        if (!visitedObjects.has(p.modelClientOptions))
            aws_cdk_lib_aws_stepfunctions_tasks_ModelClientOptions(p.modelClientOptions);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.transformResources))
            aws_cdk_lib_aws_stepfunctions_tasks_TransformResources(p.transformResources);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateTransformJob(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.tags))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.tags);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateEndpoint(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateEndpointConfigProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.productionVariants != null)
            for (const o of p.productionVariants)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_ProductionVariant(o);
        if (!visitedObjects.has(p.kmsKey))
            aws_cdk_lib_aws_kms_IKey(p.kmsKey);
        if (!visitedObjects.has(p.tags))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.tags);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateEndpointConfig(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateModelProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.primaryContainer))
            aws_cdk_lib_aws_stepfunctions_tasks_IContainerDefinition(p.primaryContainer);
        if (p.containers != null)
            for (const o of p.containers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_IContainerDefinition(o);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (!visitedObjects.has(p.tags))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.tags);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateModel(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_SageMakerUpdateEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_SageMakerUpdateEndpoint(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_StepFunctionsStartExecutionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stateMachine))
            aws_cdk_lib_aws_stepfunctions_IStateMachine(p.stateMachine);
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.input);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_StepFunctionsStartExecution(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_StepFunctionsInvokeActivityProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.activity))
            aws_cdk_lib_aws_stepfunctions_IActivity(p.activity);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_StepFunctionsInvokeActivity(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EvaluateExpressionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_aws_lambda_Runtime(p.runtime);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EvaluateExpression(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instances))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstancesConfigProperty(p.instances);
        if (p.applications != null)
            for (const o of p.applications)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ApplicationConfigProperty(o);
        if (!visitedObjects.has(p.autoScalingRole))
            aws_cdk_lib_aws_iam_IRole(p.autoScalingRole);
        if (p.bootstrapActions != null)
            for (const o of p.bootstrapActions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_BootstrapActionConfigProperty(o);
        if (!visitedObjects.has(p.clusterRole))
            aws_cdk_lib_aws_iam_IRole(p.clusterRole);
        if (p.configurations != null)
            for (const o of p.configurations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ConfigurationProperty(o);
        if (!visitedObjects.has(p.ebsRootVolumeSize))
            aws_cdk_lib_Size(p.ebsRootVolumeSize);
        if (!visitedObjects.has(p.kerberosAttributes))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_KerberosAttributesProperty(p.kerberosAttributes);
        if (!visitedObjects.has(p.scaleDownBehavior))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EmrClusterScaleDownBehavior(p.scaleDownBehavior);
        if (!visitedObjects.has(p.serviceRole))
            aws_cdk_lib_aws_iam_IRole(p.serviceRole);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EmrClusterScaleDownBehavior(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceRoleType(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EbsBlockDeviceVolumeType(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_VolumeSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeSize))
            aws_cdk_lib_Size(p.volumeSize);
        if (!visitedObjects.has(p.volumeType))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EbsBlockDeviceVolumeType(p.volumeType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EbsBlockDeviceConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.volumeSpecification))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_VolumeSpecificationProperty(p.volumeSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EbsConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.ebsBlockDeviceConfigs != null)
            for (const o of p.ebsBlockDeviceConfigs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EbsBlockDeviceConfigProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceTypeConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.configurations != null)
            for (const o of p.configurations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ConfigurationProperty(o);
        if (!visitedObjects.has(p.ebsConfiguration))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EbsConfigurationProperty(p.ebsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_SpotTimeoutAction(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_SpotAllocationStrategy(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_SpotProvisioningSpecificationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.timeoutAction))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_SpotTimeoutAction(p.timeoutAction);
        if (!visitedObjects.has(p.allocationStrategy))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_SpotAllocationStrategy(p.allocationStrategy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceFleetProvisioningSpecificationsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.spotSpecification))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_SpotProvisioningSpecificationProperty(p.spotSpecification);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceFleetConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceFleetType))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceRoleType(p.instanceFleetType);
        if (p.instanceTypeConfigs != null)
            for (const o of p.instanceTypeConfigs)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceTypeConfigProperty(o);
        if (!visitedObjects.has(p.launchSpecifications))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceFleetProvisioningSpecificationsProperty(p.launchSpecifications);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_CloudWatchAlarmComparisonOperator(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_CloudWatchAlarmStatistic(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_CloudWatchAlarmUnit(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_MetricDimensionProperty(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_CloudWatchAlarmDefinitionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.comparisonOperator))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_CloudWatchAlarmComparisonOperator(p.comparisonOperator);
        if (!visitedObjects.has(p.period))
            aws_cdk_lib_Duration(p.period);
        if (p.dimensions != null)
            for (const o of p.dimensions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_MetricDimensionProperty(o);
        if (!visitedObjects.has(p.statistic))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_CloudWatchAlarmStatistic(p.statistic);
        if (!visitedObjects.has(p.unit))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_CloudWatchAlarmUnit(p.unit);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingTriggerProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cloudWatchAlarmDefinition))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_CloudWatchAlarmDefinitionProperty(p.cloudWatchAlarmDefinition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceMarket(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingAdjustmentType(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_SimpleScalingPolicyConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.adjustmentType))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingAdjustmentType(p.adjustmentType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.simpleScalingPolicyConfiguration))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_SimpleScalingPolicyConfigurationProperty(p.simpleScalingPolicyConfiguration);
        if (!visitedObjects.has(p.market))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceMarket(p.market);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingActionProperty(p.action);
        if (!visitedObjects.has(p.trigger))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingTriggerProperty(p.trigger);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingConstraintsProperty(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_AutoScalingPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.constraints))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingConstraintsProperty(p.constraints);
        if (p.rules != null)
            for (const o of p.rules)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingRuleProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceGroupConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceRole))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceRoleType(p.instanceRole);
        if (!visitedObjects.has(p.autoScalingPolicy))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_AutoScalingPolicyProperty(p.autoScalingPolicy);
        if (p.configurations != null)
            for (const o of p.configurations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ConfigurationProperty(o);
        if (!visitedObjects.has(p.ebsConfiguration))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EbsConfigurationProperty(p.ebsConfiguration);
        if (!visitedObjects.has(p.market))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceMarket(p.market);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_PlacementTypeProperty(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstancesConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.instanceFleets != null)
            for (const o of p.instanceFleets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceFleetConfigProperty(o);
        if (p.instanceGroups != null)
            for (const o of p.instanceGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceGroupConfigProperty(o);
        if (!visitedObjects.has(p.placement))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_PlacementTypeProperty(p.placement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ApplicationConfigProperty(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScriptBootstrapActionConfigProperty(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_BootstrapActionConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.scriptBootstrapAction))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScriptBootstrapActionConfigProperty(p.scriptBootstrapAction);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.configurations != null)
            for (const o of p.configurations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ConfigurationProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_KerberosAttributesProperty(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrSetClusterTerminationProtectionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrSetClusterTerminationProtection(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrTerminateClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrTerminateCluster(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_ActionOnFailure(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrAddStepProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actionOnFailure))
            aws_cdk_lib_aws_stepfunctions_tasks_ActionOnFailure(p.actionOnFailure);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrAddStep(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCancelStepProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrCancelStep(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceFleetByNameProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceFleetByName(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByNameProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceGroup))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByName_InstanceGroupModifyConfigProperty(p.instanceGroup);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByName(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByName_InstanceResizePolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceTerminationTimeout))
            aws_cdk_lib_Duration(p.instanceTerminationTimeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByName_ShrinkPolicyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decommissionTimeout))
            aws_cdk_lib_Duration(p.decommissionTimeout);
        if (!visitedObjects.has(p.instanceResizePolicy))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByName_InstanceResizePolicyProperty(p.instanceResizePolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByName_InstanceGroupModifyConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.configurations != null)
            for (const o of p.configurations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ConfigurationProperty(o);
        if (!visitedObjects.has(p.shrinkPolicy))
            aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByName_ShrinkPolicyProperty(p.shrinkPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EksClusterInput(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrContainersCreateVirtualClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eksCluster))
            aws_cdk_lib_aws_stepfunctions_tasks_EksClusterInput(p.eksCluster);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrContainersCreateVirtualCluster(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrContainersDeleteVirtualClusterProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.virtualClusterId))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.virtualClusterId);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrContainersDeleteVirtualCluster(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrContainersStartJobRunProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.jobDriver))
            aws_cdk_lib_aws_stepfunctions_tasks_JobDriver(p.jobDriver);
        if (!visitedObjects.has(p.releaseLabel))
            aws_cdk_lib_aws_stepfunctions_tasks_ReleaseLabel(p.releaseLabel);
        if (!visitedObjects.has(p.virtualCluster))
            aws_cdk_lib_aws_stepfunctions_tasks_VirtualClusterInput(p.virtualCluster);
        if (p.applicationConfig != null)
            for (const o of p.applicationConfig)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_ApplicationConfiguration(o);
        if (!visitedObjects.has(p.executionRole))
            aws_cdk_lib_aws_iam_IRole(p.executionRole);
        if (!visitedObjects.has(p.monitoring))
            aws_cdk_lib_aws_stepfunctions_tasks_Monitoring(p.monitoring);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EmrContainersStartJobRun(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_SparkSubmitJobDriver(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.entryPoint))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.entryPoint);
        if (!visitedObjects.has(p.entryPointArguments))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.entryPointArguments);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_JobDriver(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sparkSubmitJobDriver))
            aws_cdk_lib_aws_stepfunctions_tasks_SparkSubmitJobDriver(p.sparkSubmitJobDriver);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_Classification(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_ApplicationConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.classification))
            aws_cdk_lib_aws_stepfunctions_tasks_Classification(p.classification);
        if (p.nestedConfig != null)
            for (const o of p.nestedConfig)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_ApplicationConfiguration(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_Monitoring(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logBucket))
            aws_cdk_lib_aws_s3_IBucket(p.logBucket);
        if (!visitedObjects.has(p.logGroup))
            aws_cdk_lib_aws_logs_ILogGroup(p.logGroup);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_ReleaseLabel(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_VirtualClusterInput(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_GlueStartJobRunProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arguments))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.arguments);
        if (!visitedObjects.has(p.notifyDelayAfter))
            aws_cdk_lib_Duration(p.notifyDelayAfter);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_GlueStartJobRun(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_ContainerOverrides(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_JobDependency(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_BatchContainerOverrides(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.instanceType))
            aws_cdk_lib_aws_ec2_InstanceType(p.instanceType);
        if (!visitedObjects.has(p.memory))
            aws_cdk_lib_Size(p.memory);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_BatchJobDependency(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_BatchSubmitJobProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.containerOverrides))
            aws_cdk_lib_aws_stepfunctions_tasks_BatchContainerOverrides(p.containerOverrides);
        if (p.dependsOn != null)
            for (const o of p.dependsOn)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_BatchJobDependency(o);
        if (!visitedObjects.has(p.payload))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.payload);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_BatchSubmitJob(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoGetItemProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.key != null)
            for (const o of Object.values(p.key))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_DynamoAttributeValue(o);
        if (!visitedObjects.has(p.table))
            aws_cdk_lib_aws_dynamodb_ITable(p.table);
        if (p.projectionExpression != null)
            for (const o of p.projectionExpression)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_DynamoProjectionExpression(o);
        if (!visitedObjects.has(p.returnConsumedCapacity))
            aws_cdk_lib_aws_stepfunctions_tasks_DynamoConsumedCapacity(p.returnConsumedCapacity);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoGetItem(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoPutItemProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.item != null)
            for (const o of Object.values(p.item))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_DynamoAttributeValue(o);
        if (!visitedObjects.has(p.table))
            aws_cdk_lib_aws_dynamodb_ITable(p.table);
        if (p.expressionAttributeValues != null)
            for (const o of Object.values(p.expressionAttributeValues))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_DynamoAttributeValue(o);
        if (!visitedObjects.has(p.returnConsumedCapacity))
            aws_cdk_lib_aws_stepfunctions_tasks_DynamoConsumedCapacity(p.returnConsumedCapacity);
        if (!visitedObjects.has(p.returnItemCollectionMetrics))
            aws_cdk_lib_aws_stepfunctions_tasks_DynamoItemCollectionMetrics(p.returnItemCollectionMetrics);
        if (!visitedObjects.has(p.returnValues))
            aws_cdk_lib_aws_stepfunctions_tasks_DynamoReturnValues(p.returnValues);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoPutItem(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoUpdateItemProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.key != null)
            for (const o of Object.values(p.key))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_DynamoAttributeValue(o);
        if (!visitedObjects.has(p.table))
            aws_cdk_lib_aws_dynamodb_ITable(p.table);
        if (p.expressionAttributeValues != null)
            for (const o of Object.values(p.expressionAttributeValues))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_DynamoAttributeValue(o);
        if (!visitedObjects.has(p.returnConsumedCapacity))
            aws_cdk_lib_aws_stepfunctions_tasks_DynamoConsumedCapacity(p.returnConsumedCapacity);
        if (!visitedObjects.has(p.returnItemCollectionMetrics))
            aws_cdk_lib_aws_stepfunctions_tasks_DynamoItemCollectionMetrics(p.returnItemCollectionMetrics);
        if (!visitedObjects.has(p.returnValues))
            aws_cdk_lib_aws_stepfunctions_tasks_DynamoReturnValues(p.returnValues);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoUpdateItem(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoDeleteItemProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.key != null)
            for (const o of Object.values(p.key))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_DynamoAttributeValue(o);
        if (!visitedObjects.has(p.table))
            aws_cdk_lib_aws_dynamodb_ITable(p.table);
        if (p.expressionAttributeValues != null)
            for (const o of Object.values(p.expressionAttributeValues))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_DynamoAttributeValue(o);
        if (!visitedObjects.has(p.returnConsumedCapacity))
            aws_cdk_lib_aws_stepfunctions_tasks_DynamoConsumedCapacity(p.returnConsumedCapacity);
        if (!visitedObjects.has(p.returnItemCollectionMetrics))
            aws_cdk_lib_aws_stepfunctions_tasks_DynamoItemCollectionMetrics(p.returnItemCollectionMetrics);
        if (!visitedObjects.has(p.returnValues))
            aws_cdk_lib_aws_stepfunctions_tasks_DynamoReturnValues(p.returnValues);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoDeleteItem(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoConsumedCapacity(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoItemCollectionMetrics(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoReturnValues(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoProjectionExpression(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_DynamoAttributeValue(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_CodeBuildStartBuildProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.project))
            aws_cdk_lib_aws_codebuild_IProject(p.project);
        if (p.environmentVariablesOverride != null)
            for (const o of Object.values(p.environmentVariablesOverride))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_BuildEnvironmentVariable(o);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_CodeBuildStartBuild(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_AthenaStartQueryExecutionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.queryExecutionContext))
            aws_cdk_lib_aws_stepfunctions_tasks_QueryExecutionContext(p.queryExecutionContext);
        if (!visitedObjects.has(p.resultConfiguration))
            aws_cdk_lib_aws_stepfunctions_tasks_ResultConfiguration(p.resultConfiguration);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_AthenaStartQueryExecution(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_ResultConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionConfiguration))
            aws_cdk_lib_aws_stepfunctions_tasks_EncryptionConfiguration(p.encryptionConfiguration);
        if (!visitedObjects.has(p.outputLocation))
            aws_cdk_lib_aws_s3_Location(p.outputLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EncryptionConfiguration(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.encryptionOption))
            aws_cdk_lib_aws_stepfunctions_tasks_EncryptionOption(p.encryptionOption);
        if (!visitedObjects.has(p.encryptionKey))
            aws_cdk_lib_aws_kms_IKey(p.encryptionKey);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EncryptionOption(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_QueryExecutionContext(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_AthenaStopQueryExecutionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_AthenaStopQueryExecution(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_AthenaGetQueryExecutionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_AthenaGetQueryExecution(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_AthenaGetQueryResultsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_AthenaGetQueryResults(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_GlueDataBrewStartJobRunProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_GlueDataBrewStartJobRun(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EksCallProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cluster))
            aws_cdk_lib_aws_eks_ICluster(p.cluster);
        if (!visitedObjects.has(p.httpMethod))
            aws_cdk_lib_aws_stepfunctions_tasks_HttpMethods(p.httpMethod);
        if (!visitedObjects.has(p.requestBody))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.requestBody);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EksCall(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_HttpMethods(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_HttpMethod(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_AuthType(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_CallApiGatewayEndpointBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.method))
            aws_cdk_lib_aws_stepfunctions_tasks_HttpMethod(p.method);
        if (!visitedObjects.has(p.authType))
            aws_cdk_lib_aws_stepfunctions_tasks_AuthType(p.authType);
        if (!visitedObjects.has(p.headers))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.headers);
        if (!visitedObjects.has(p.queryParameters))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.queryParameters);
        if (!visitedObjects.has(p.requestBody))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.requestBody);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_CallApiGatewayRestApiEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.api))
            aws_cdk_lib_aws_apigateway_IRestApi(p.api);
        if (!visitedObjects.has(p.method))
            aws_cdk_lib_aws_stepfunctions_tasks_HttpMethod(p.method);
        if (!visitedObjects.has(p.authType))
            aws_cdk_lib_aws_stepfunctions_tasks_AuthType(p.authType);
        if (!visitedObjects.has(p.headers))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.headers);
        if (!visitedObjects.has(p.queryParameters))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.queryParameters);
        if (!visitedObjects.has(p.requestBody))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.requestBody);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_CallApiGatewayRestApiEndpoint(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_CallApiGatewayHttpApiEndpointProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.apiStack))
            aws_cdk_lib_Stack(p.apiStack);
        if (!visitedObjects.has(p.method))
            aws_cdk_lib_aws_stepfunctions_tasks_HttpMethod(p.method);
        if (!visitedObjects.has(p.authType))
            aws_cdk_lib_aws_stepfunctions_tasks_AuthType(p.authType);
        if (!visitedObjects.has(p.headers))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.headers);
        if (!visitedObjects.has(p.queryParameters))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.queryParameters);
        if (!visitedObjects.has(p.requestBody))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.requestBody);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_CallApiGatewayHttpApiEndpoint(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_EventBridgePutEventsEntry(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.detail))
            aws_cdk_lib_aws_stepfunctions_TaskInput(p.detail);
        if (!visitedObjects.has(p.eventBus))
            aws_cdk_lib_aws_events_IEventBus(p.eventBus);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EventBridgePutEventsProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.entries != null)
            for (const o of p.entries)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_stepfunctions_tasks_EventBridgePutEventsEntry(o);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_EventBridgePutEvents(p) {
}
function aws_cdk_lib_aws_stepfunctions_tasks_CallAwsServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.additionalIamStatements != null)
            for (const o of p.additionalIamStatements)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_aws_stepfunctions_Credentials(p.credentials);
        if ("heartbeat" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#heartbeat", "use `heartbeatTimeout`");
        if (!visitedObjects.has(p.heartbeat))
            aws_cdk_lib_Duration(p.heartbeat);
        if (!visitedObjects.has(p.heartbeatTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.heartbeatTimeout);
        if (!visitedObjects.has(p.integrationPattern))
            aws_cdk_lib_aws_stepfunctions_IntegrationPattern(p.integrationPattern);
        if (!visitedObjects.has(p.taskTimeout))
            aws_cdk_lib_aws_stepfunctions_Timeout(p.taskTimeout);
        if ("timeout" in p)
            print("aws-cdk-lib.aws_stepfunctions.TaskStateBaseProps#timeout", "use `taskTimeout`");
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_stepfunctions_tasks_CallAwsService(p) {
}
function aws_cdk_lib_aws_supportapp_CfnAccountAliasProps(p) {
}
function aws_cdk_lib_aws_supportapp_CfnAccountAlias(p) {
}
function aws_cdk_lib_aws_supportapp_CfnSlackChannelConfigurationProps(p) {
}
function aws_cdk_lib_aws_supportapp_CfnSlackChannelConfiguration(p) {
}
function aws_cdk_lib_aws_supportapp_CfnSlackWorkspaceConfigurationProps(p) {
}
function aws_cdk_lib_aws_supportapp_CfnSlackWorkspaceConfiguration(p) {
}
function aws_cdk_lib_aws_synthetics_CfnCanaryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_IResolvable(p.code);
        if (!visitedObjects.has(p.schedule))
            aws_cdk_lib_IResolvable(p.schedule);
        if (!visitedObjects.has(p.artifactConfig))
            aws_cdk_lib_IResolvable(p.artifactConfig);
        if (!visitedObjects.has(p.runConfig))
            aws_cdk_lib_IResolvable(p.runConfig);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.visualReference))
            aws_cdk_lib_IResolvable(p.visualReference);
        if (!visitedObjects.has(p.vpcConfig))
            aws_cdk_lib_IResolvable(p.vpcConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_synthetics_CfnCanary(p) {
}
function aws_cdk_lib_aws_synthetics_CfnCanary_ArtifactConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Encryption))
            aws_cdk_lib_IResolvable(p.s3Encryption);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_synthetics_CfnCanary_BaseScreenshotProperty(p) {
}
function aws_cdk_lib_aws_synthetics_CfnCanary_CodeProperty(p) {
}
function aws_cdk_lib_aws_synthetics_CfnCanary_RunConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.environmentVariables))
            aws_cdk_lib_IResolvable(p.environmentVariables);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_synthetics_CfnCanary_S3EncryptionProperty(p) {
}
function aws_cdk_lib_aws_synthetics_CfnCanary_ScheduleProperty(p) {
}
function aws_cdk_lib_aws_synthetics_CfnCanary_VPCConfigProperty(p) {
}
function aws_cdk_lib_aws_synthetics_CfnCanary_VisualReferenceProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.baseScreenshots))
            aws_cdk_lib_IResolvable(p.baseScreenshots);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_synthetics_CfnGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_synthetics_CfnGroup(p) {
}
function aws_cdk_lib_aws_systemsmanagersap_CfnApplicationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.credentials))
            aws_cdk_lib_IResolvable(p.credentials);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_systemsmanagersap_CfnApplication(p) {
}
function aws_cdk_lib_aws_systemsmanagersap_CfnApplication_CredentialProperty(p) {
}
function aws_cdk_lib_aws_timestream_CfnDatabaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_timestream_CfnDatabase(p) {
}
function aws_cdk_lib_aws_timestream_CfnScheduledQueryProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.errorReportConfiguration))
            aws_cdk_lib_IResolvable(p.errorReportConfiguration);
        if (!visitedObjects.has(p.notificationConfiguration))
            aws_cdk_lib_IResolvable(p.notificationConfiguration);
        if (!visitedObjects.has(p.scheduleConfiguration))
            aws_cdk_lib_IResolvable(p.scheduleConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.targetConfiguration))
            aws_cdk_lib_IResolvable(p.targetConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_timestream_CfnScheduledQuery(p) {
}
function aws_cdk_lib_aws_timestream_CfnScheduledQuery_DimensionMappingProperty(p) {
}
function aws_cdk_lib_aws_timestream_CfnScheduledQuery_ErrorReportConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Configuration))
            aws_cdk_lib_IResolvable(p.s3Configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_timestream_CfnScheduledQuery_MixedMeasureMappingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.multiMeasureAttributeMappings))
            aws_cdk_lib_IResolvable(p.multiMeasureAttributeMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_timestream_CfnScheduledQuery_MultiMeasureAttributeMappingProperty(p) {
}
function aws_cdk_lib_aws_timestream_CfnScheduledQuery_MultiMeasureMappingsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.multiMeasureAttributeMappings))
            aws_cdk_lib_IResolvable(p.multiMeasureAttributeMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_timestream_CfnScheduledQuery_NotificationConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.snsConfiguration))
            aws_cdk_lib_IResolvable(p.snsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_timestream_CfnScheduledQuery_S3ConfigurationProperty(p) {
}
function aws_cdk_lib_aws_timestream_CfnScheduledQuery_ScheduleConfigurationProperty(p) {
}
function aws_cdk_lib_aws_timestream_CfnScheduledQuery_SnsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_timestream_CfnScheduledQuery_TargetConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.timestreamConfiguration))
            aws_cdk_lib_IResolvable(p.timestreamConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_timestream_CfnScheduledQuery_TimestreamConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dimensionMappings))
            aws_cdk_lib_IResolvable(p.dimensionMappings);
        if (!visitedObjects.has(p.mixedMeasureMappings))
            aws_cdk_lib_IResolvable(p.mixedMeasureMappings);
        if (!visitedObjects.has(p.multiMeasureMappings))
            aws_cdk_lib_IResolvable(p.multiMeasureMappings);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_timestream_CfnTableProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_timestream_CfnTable(p) {
}
function aws_cdk_lib_aws_timestream_CfnTable_MagneticStoreRejectedDataLocationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3Configuration))
            aws_cdk_lib_IResolvable(p.s3Configuration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_timestream_CfnTable_MagneticStoreWritePropertiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.magneticStoreRejectedDataLocation))
            aws_cdk_lib_IResolvable(p.magneticStoreRejectedDataLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_timestream_CfnTable_RetentionPropertiesProperty(p) {
}
function aws_cdk_lib_aws_timestream_CfnTable_S3ConfigurationProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnAgreementProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnAgreement(p) {
}
function aws_cdk_lib_aws_transfer_CfnCertificateProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnCertificate(p) {
}
function aws_cdk_lib_aws_transfer_CfnConnectorProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnConnector(p) {
}
function aws_cdk_lib_aws_transfer_CfnConnector_As2ConfigProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnProfileProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnProfile(p) {
}
function aws_cdk_lib_aws_transfer_CfnServerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.endpointDetails))
            aws_cdk_lib_IResolvable(p.endpointDetails);
        if (!visitedObjects.has(p.identityProviderDetails))
            aws_cdk_lib_IResolvable(p.identityProviderDetails);
        if (!visitedObjects.has(p.protocolDetails))
            aws_cdk_lib_IResolvable(p.protocolDetails);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.workflowDetails))
            aws_cdk_lib_IResolvable(p.workflowDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnServer(p) {
}
function aws_cdk_lib_aws_transfer_CfnServer_EndpointDetailsProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnServer_IdentityProviderDetailsProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnServer_ProtocolDetailsProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnServer_WorkflowDetailProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnServer_WorkflowDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onPartialUpload))
            aws_cdk_lib_IResolvable(p.onPartialUpload);
        if (!visitedObjects.has(p.onUpload))
            aws_cdk_lib_IResolvable(p.onUpload);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnUserProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.homeDirectoryMappings))
            aws_cdk_lib_IResolvable(p.homeDirectoryMappings);
        if (!visitedObjects.has(p.posixProfile))
            aws_cdk_lib_IResolvable(p.posixProfile);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnUser(p) {
}
function aws_cdk_lib_aws_transfer_CfnUser_HomeDirectoryMapEntryProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnUser_PosixProfileProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnWorkflowProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.steps))
            aws_cdk_lib_IResolvable(p.steps);
        if (!visitedObjects.has(p.onExceptionSteps))
            aws_cdk_lib_IResolvable(p.onExceptionSteps);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnWorkflow(p) {
}
function aws_cdk_lib_aws_transfer_CfnWorkflow_CopyStepDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationFileLocation))
            aws_cdk_lib_IResolvable(p.destinationFileLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnWorkflow_CustomStepDetailsProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnWorkflow_DecryptStepDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.destinationFileLocation))
            aws_cdk_lib_IResolvable(p.destinationFileLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnWorkflow_DeleteStepDetailsProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnWorkflow_EfsInputFileLocationProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnWorkflow_InputFileLocationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.efsFileLocation))
            aws_cdk_lib_IResolvable(p.efsFileLocation);
        if (!visitedObjects.has(p.s3FileLocation))
            aws_cdk_lib_IResolvable(p.s3FileLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnWorkflow_S3FileLocationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.s3FileLocation))
            aws_cdk_lib_IResolvable(p.s3FileLocation);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnWorkflow_S3InputFileLocationProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnWorkflow_S3TagProperty(p) {
}
function aws_cdk_lib_aws_transfer_CfnWorkflow_TagStepDetailsProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_transfer_CfnWorkflow_S3TagProperty(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_transfer_CfnWorkflow_WorkflowStepProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.decryptStepDetails))
            aws_cdk_lib_IResolvable(p.decryptStepDetails);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_voiceid_CfnDomainProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.serverSideEncryptionConfiguration))
            aws_cdk_lib_IResolvable(p.serverSideEncryptionConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_voiceid_CfnDomain(p) {
}
function aws_cdk_lib_aws_voiceid_CfnDomain_ServerSideEncryptionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnAccessLogSubscriptionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnAccessLogSubscription(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnAuthPolicyProps(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnAuthPolicy(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnListenerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultAction))
            aws_cdk_lib_IResolvable(p.defaultAction);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnListener(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnListener_DefaultActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forward))
            aws_cdk_lib_IResolvable(p.forward);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnListener_ForwardProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetGroups))
            aws_cdk_lib_IResolvable(p.targetGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnListener_WeightedTargetGroupProperty(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnResourcePolicyProps(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnResourcePolicy(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnRule(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnRule_ActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forward))
            aws_cdk_lib_IResolvable(p.forward);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnRule_ForwardProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.targetGroups))
            aws_cdk_lib_IResolvable(p.targetGroups);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnRule_HeaderMatchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnRule_HeaderMatchTypeProperty(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnRule_HttpMatchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.headerMatches))
            aws_cdk_lib_IResolvable(p.headerMatches);
        if (!visitedObjects.has(p.pathMatch))
            aws_cdk_lib_IResolvable(p.pathMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnRule_MatchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.httpMatch))
            aws_cdk_lib_IResolvable(p.httpMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnRule_PathMatchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.match))
            aws_cdk_lib_IResolvable(p.match);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnRule_PathMatchTypeProperty(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnRule_WeightedTargetGroupProperty(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnServiceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dnsEntry))
            aws_cdk_lib_IResolvable(p.dnsEntry);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnService(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnService_DnsEntryProperty(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnServiceNetworkProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnServiceNetwork(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnServiceNetworkServiceAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.dnsEntry))
            aws_cdk_lib_IResolvable(p.dnsEntry);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnServiceNetworkServiceAssociation(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnServiceNetworkServiceAssociation_DnsEntryProperty(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnServiceNetworkVpcAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnServiceNetworkVpcAssociation(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnTargetGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.config))
            aws_cdk_lib_IResolvable(p.config);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.targets))
            aws_cdk_lib_IResolvable(p.targets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnTargetGroup(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnTargetGroup_HealthCheckConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matcher))
            aws_cdk_lib_IResolvable(p.matcher);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_vpclattice_CfnTargetGroup_MatcherProperty(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnTargetGroup_TargetProperty(p) {
}
function aws_cdk_lib_aws_vpclattice_CfnTargetGroup_TargetGroupConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.healthCheck))
            aws_cdk_lib_IResolvable(p.healthCheck);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_waf_CfnByteMatchSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.byteMatchTuples))
            aws_cdk_lib_IResolvable(p.byteMatchTuples);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_waf_CfnByteMatchSet(p) {
}
function aws_cdk_lib_aws_waf_CfnByteMatchSet_ByteMatchTupleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_waf_CfnByteMatchSet_FieldToMatchProperty(p) {
}
function aws_cdk_lib_aws_waf_CfnIPSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipSetDescriptors))
            aws_cdk_lib_IResolvable(p.ipSetDescriptors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_waf_CfnIPSet(p) {
}
function aws_cdk_lib_aws_waf_CfnIPSet_IPSetDescriptorProperty(p) {
}
function aws_cdk_lib_aws_waf_CfnRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.predicates))
            aws_cdk_lib_IResolvable(p.predicates);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_waf_CfnRule(p) {
}
function aws_cdk_lib_aws_waf_CfnRule_PredicateProperty(p) {
}
function aws_cdk_lib_aws_waf_CfnSizeConstraintSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sizeConstraints))
            aws_cdk_lib_IResolvable(p.sizeConstraints);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_waf_CfnSizeConstraintSet(p) {
}
function aws_cdk_lib_aws_waf_CfnSizeConstraintSet_FieldToMatchProperty(p) {
}
function aws_cdk_lib_aws_waf_CfnSizeConstraintSet_SizeConstraintProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_waf_CfnSqlInjectionMatchSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sqlInjectionMatchTuples))
            aws_cdk_lib_IResolvable(p.sqlInjectionMatchTuples);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_waf_CfnSqlInjectionMatchSet(p) {
}
function aws_cdk_lib_aws_waf_CfnSqlInjectionMatchSet_FieldToMatchProperty(p) {
}
function aws_cdk_lib_aws_waf_CfnSqlInjectionMatchSet_SqlInjectionMatchTupleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_waf_CfnWebACLProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultAction))
            aws_cdk_lib_IResolvable(p.defaultAction);
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_waf_CfnWebACL(p) {
}
function aws_cdk_lib_aws_waf_CfnWebACL_ActivatedRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_waf_CfnWebACL_WafActionProperty(p) {
}
function aws_cdk_lib_aws_waf_CfnXssMatchSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.xssMatchTuples))
            aws_cdk_lib_IResolvable(p.xssMatchTuples);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_waf_CfnXssMatchSet(p) {
}
function aws_cdk_lib_aws_waf_CfnXssMatchSet_FieldToMatchProperty(p) {
}
function aws_cdk_lib_aws_waf_CfnXssMatchSet_XssMatchTupleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnByteMatchSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.byteMatchTuples))
            aws_cdk_lib_IResolvable(p.byteMatchTuples);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnByteMatchSet(p) {
}
function aws_cdk_lib_aws_wafregional_CfnByteMatchSet_ByteMatchTupleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnByteMatchSet_FieldToMatchProperty(p) {
}
function aws_cdk_lib_aws_wafregional_CfnGeoMatchSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.geoMatchConstraints))
            aws_cdk_lib_IResolvable(p.geoMatchConstraints);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnGeoMatchSet(p) {
}
function aws_cdk_lib_aws_wafregional_CfnGeoMatchSet_GeoMatchConstraintProperty(p) {
}
function aws_cdk_lib_aws_wafregional_CfnIPSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipSetDescriptors))
            aws_cdk_lib_IResolvable(p.ipSetDescriptors);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnIPSet(p) {
}
function aws_cdk_lib_aws_wafregional_CfnIPSet_IPSetDescriptorProperty(p) {
}
function aws_cdk_lib_aws_wafregional_CfnRateBasedRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matchPredicates))
            aws_cdk_lib_IResolvable(p.matchPredicates);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnRateBasedRule(p) {
}
function aws_cdk_lib_aws_wafregional_CfnRateBasedRule_PredicateProperty(p) {
}
function aws_cdk_lib_aws_wafregional_CfnRegexPatternSetProps(p) {
}
function aws_cdk_lib_aws_wafregional_CfnRegexPatternSet(p) {
}
function aws_cdk_lib_aws_wafregional_CfnRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.predicates))
            aws_cdk_lib_IResolvable(p.predicates);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnRule(p) {
}
function aws_cdk_lib_aws_wafregional_CfnRule_PredicateProperty(p) {
}
function aws_cdk_lib_aws_wafregional_CfnSizeConstraintSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sizeConstraints))
            aws_cdk_lib_IResolvable(p.sizeConstraints);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnSizeConstraintSet(p) {
}
function aws_cdk_lib_aws_wafregional_CfnSizeConstraintSet_FieldToMatchProperty(p) {
}
function aws_cdk_lib_aws_wafregional_CfnSizeConstraintSet_SizeConstraintProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnSqlInjectionMatchSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.sqlInjectionMatchTuples))
            aws_cdk_lib_IResolvable(p.sqlInjectionMatchTuples);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnSqlInjectionMatchSet(p) {
}
function aws_cdk_lib_aws_wafregional_CfnSqlInjectionMatchSet_FieldToMatchProperty(p) {
}
function aws_cdk_lib_aws_wafregional_CfnSqlInjectionMatchSet_SqlInjectionMatchTupleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnWebACLProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultAction))
            aws_cdk_lib_IResolvable(p.defaultAction);
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnWebACL(p) {
}
function aws_cdk_lib_aws_wafregional_CfnWebACL_ActionProperty(p) {
}
function aws_cdk_lib_aws_wafregional_CfnWebACL_RuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnWebACLAssociationProps(p) {
}
function aws_cdk_lib_aws_wafregional_CfnWebACLAssociation(p) {
}
function aws_cdk_lib_aws_wafregional_CfnXssMatchSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.xssMatchTuples))
            aws_cdk_lib_IResolvable(p.xssMatchTuples);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafregional_CfnXssMatchSet(p) {
}
function aws_cdk_lib_aws_wafregional_CfnXssMatchSet_FieldToMatchProperty(p) {
}
function aws_cdk_lib_aws_wafregional_CfnXssMatchSet_XssMatchTupleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnIPSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnIPSet(p) {
}
function aws_cdk_lib_aws_wafv2_CfnLoggingConfigurationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.redactedFields))
            aws_cdk_lib_IResolvable(p.redactedFields);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration(p) {
}
function aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_ActionConditionProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_ConditionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actionCondition))
            aws_cdk_lib_IResolvable(p.actionCondition);
        if (!visitedObjects.has(p.labelNameCondition))
            aws_cdk_lib_IResolvable(p.labelNameCondition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_FieldToMatchProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_FilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.conditions))
            aws_cdk_lib_IResolvable(p.conditions);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_JsonBodyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matchPattern))
            aws_cdk_lib_IResolvable(p.matchPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_LabelNameConditionProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_LoggingFilterProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.filters))
            aws_cdk_lib_IResolvable(p.filters);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_MatchPatternProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_SingleHeaderProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRegexPatternSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRegexPatternSet(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.visibilityConfig))
            aws_cdk_lib_IResolvable(p.visibilityConfig);
        if (!visitedObjects.has(p.availableLabels))
            aws_cdk_lib_IResolvable(p.availableLabels);
        if (!visitedObjects.has(p.consumedLabels))
            aws_cdk_lib_IResolvable(p.consumedLabels);
        if (!visitedObjects.has(p.customResponseBodies))
            aws_cdk_lib_IResolvable(p.customResponseBodies);
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_AllowProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customRequestHandling))
            aws_cdk_lib_IResolvable(p.customRequestHandling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_AndStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.statements))
            aws_cdk_lib_IResolvable(p.statements);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_BlockProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customResponse))
            aws_cdk_lib_IResolvable(p.customResponse);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_BodyProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_ByteMatchStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
        if (!visitedObjects.has(p.textTransformations))
            aws_cdk_lib_IResolvable(p.textTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_CaptchaProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customRequestHandling))
            aws_cdk_lib_IResolvable(p.customRequestHandling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_CaptchaConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.immunityTimeProperty))
            aws_cdk_lib_IResolvable(p.immunityTimeProperty);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_ChallengeProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customRequestHandling))
            aws_cdk_lib_IResolvable(p.customRequestHandling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_ChallengeConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.immunityTimeProperty))
            aws_cdk_lib_IResolvable(p.immunityTimeProperty);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_CookieMatchPatternProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_CookiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matchPattern))
            aws_cdk_lib_IResolvable(p.matchPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_CountProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customRequestHandling))
            aws_cdk_lib_IResolvable(p.customRequestHandling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_CustomHTTPHeaderProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_CustomRequestHandlingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.insertHeaders))
            aws_cdk_lib_IResolvable(p.insertHeaders);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_CustomResponseProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.responseHeaders))
            aws_cdk_lib_IResolvable(p.responseHeaders);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_CustomResponseBodyProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_FieldToMatchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.body))
            aws_cdk_lib_IResolvable(p.body);
        if (!visitedObjects.has(p.cookies))
            aws_cdk_lib_IResolvable(p.cookies);
        if (!visitedObjects.has(p.headers))
            aws_cdk_lib_IResolvable(p.headers);
        if (!visitedObjects.has(p.jsonBody))
            aws_cdk_lib_IResolvable(p.jsonBody);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_ForwardedIPConfigurationProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_GeoMatchStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forwardedIpConfig))
            aws_cdk_lib_IResolvable(p.forwardedIpConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_HeaderMatchPatternProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_HeadersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matchPattern))
            aws_cdk_lib_IResolvable(p.matchPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_IPSetForwardedIPConfigurationProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_IPSetReferenceStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipSetForwardedIpConfig))
            aws_cdk_lib_IResolvable(p.ipSetForwardedIpConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_ImmunityTimePropertyProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_JsonBodyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matchPattern))
            aws_cdk_lib_IResolvable(p.matchPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_JsonMatchPatternProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_LabelProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_LabelMatchStatementProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_LabelSummaryProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_NotStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.statement))
            aws_cdk_lib_IResolvable(p.statement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_OrStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.statements))
            aws_cdk_lib_IResolvable(p.statements);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_RateBasedStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forwardedIpConfig))
            aws_cdk_lib_IResolvable(p.forwardedIpConfig);
        if (!visitedObjects.has(p.scopeDownStatement))
            aws_cdk_lib_IResolvable(p.scopeDownStatement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_RegexMatchStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
        if (!visitedObjects.has(p.textTransformations))
            aws_cdk_lib_IResolvable(p.textTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_RegexPatternSetReferenceStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
        if (!visitedObjects.has(p.textTransformations))
            aws_cdk_lib_IResolvable(p.textTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_RuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.statement))
            aws_cdk_lib_IResolvable(p.statement);
        if (!visitedObjects.has(p.visibilityConfig))
            aws_cdk_lib_IResolvable(p.visibilityConfig);
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
        if (!visitedObjects.has(p.captchaConfig))
            aws_cdk_lib_IResolvable(p.captchaConfig);
        if (!visitedObjects.has(p.challengeConfig))
            aws_cdk_lib_IResolvable(p.challengeConfig);
        if (!visitedObjects.has(p.ruleLabels))
            aws_cdk_lib_IResolvable(p.ruleLabels);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_RuleActionProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_SingleHeaderProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_SingleQueryArgumentProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_SizeConstraintStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
        if (!visitedObjects.has(p.textTransformations))
            aws_cdk_lib_IResolvable(p.textTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_SqliMatchStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
        if (!visitedObjects.has(p.textTransformations))
            aws_cdk_lib_IResolvable(p.textTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_StatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.andStatement))
            aws_cdk_lib_IResolvable(p.andStatement);
        if (!visitedObjects.has(p.byteMatchStatement))
            aws_cdk_lib_IResolvable(p.byteMatchStatement);
        if (!visitedObjects.has(p.geoMatchStatement))
            aws_cdk_lib_IResolvable(p.geoMatchStatement);
        if (!visitedObjects.has(p.ipSetReferenceStatement))
            aws_cdk_lib_IResolvable(p.ipSetReferenceStatement);
        if (!visitedObjects.has(p.labelMatchStatement))
            aws_cdk_lib_IResolvable(p.labelMatchStatement);
        if (!visitedObjects.has(p.notStatement))
            aws_cdk_lib_IResolvable(p.notStatement);
        if (!visitedObjects.has(p.orStatement))
            aws_cdk_lib_IResolvable(p.orStatement);
        if (!visitedObjects.has(p.rateBasedStatement))
            aws_cdk_lib_IResolvable(p.rateBasedStatement);
        if (!visitedObjects.has(p.regexMatchStatement))
            aws_cdk_lib_IResolvable(p.regexMatchStatement);
        if (!visitedObjects.has(p.regexPatternSetReferenceStatement))
            aws_cdk_lib_IResolvable(p.regexPatternSetReferenceStatement);
        if (!visitedObjects.has(p.sizeConstraintStatement))
            aws_cdk_lib_IResolvable(p.sizeConstraintStatement);
        if (!visitedObjects.has(p.sqliMatchStatement))
            aws_cdk_lib_IResolvable(p.sqliMatchStatement);
        if (!visitedObjects.has(p.xssMatchStatement))
            aws_cdk_lib_IResolvable(p.xssMatchStatement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_TextTransformationProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_VisibilityConfigProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnRuleGroup_XssMatchStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
        if (!visitedObjects.has(p.textTransformations))
            aws_cdk_lib_IResolvable(p.textTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACLProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultAction))
            aws_cdk_lib_IResolvable(p.defaultAction);
        if (!visitedObjects.has(p.visibilityConfig))
            aws_cdk_lib_IResolvable(p.visibilityConfig);
        if (!visitedObjects.has(p.captchaConfig))
            aws_cdk_lib_IResolvable(p.captchaConfig);
        if (!visitedObjects.has(p.challengeConfig))
            aws_cdk_lib_IResolvable(p.challengeConfig);
        if (!visitedObjects.has(p.customResponseBodies))
            aws_cdk_lib_IResolvable(p.customResponseBodies);
        if (!visitedObjects.has(p.rules))
            aws_cdk_lib_IResolvable(p.rules);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_AWSManagedRulesATPRuleSetProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.requestInspection))
            aws_cdk_lib_IResolvable(p.requestInspection);
        if (!visitedObjects.has(p.responseInspection))
            aws_cdk_lib_IResolvable(p.responseInspection);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_AWSManagedRulesBotControlRuleSetProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_AllowActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customRequestHandling))
            aws_cdk_lib_IResolvable(p.customRequestHandling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_AndStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.statements))
            aws_cdk_lib_IResolvable(p.statements);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_BlockActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customResponse))
            aws_cdk_lib_IResolvable(p.customResponse);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_BodyProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ByteMatchStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
        if (!visitedObjects.has(p.textTransformations))
            aws_cdk_lib_IResolvable(p.textTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_CaptchaActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customRequestHandling))
            aws_cdk_lib_IResolvable(p.customRequestHandling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_CaptchaConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.immunityTimeProperty))
            aws_cdk_lib_IResolvable(p.immunityTimeProperty);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ChallengeActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customRequestHandling))
            aws_cdk_lib_IResolvable(p.customRequestHandling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ChallengeConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.immunityTimeProperty))
            aws_cdk_lib_IResolvable(p.immunityTimeProperty);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_CookieMatchPatternProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_CookiesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matchPattern))
            aws_cdk_lib_IResolvable(p.matchPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_CountActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.customRequestHandling))
            aws_cdk_lib_IResolvable(p.customRequestHandling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_CustomHTTPHeaderProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_CustomRequestHandlingProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.insertHeaders))
            aws_cdk_lib_IResolvable(p.insertHeaders);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_CustomResponseProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.responseHeaders))
            aws_cdk_lib_IResolvable(p.responseHeaders);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_CustomResponseBodyProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_DefaultActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.allow))
            aws_cdk_lib_IResolvable(p.allow);
        if (!visitedObjects.has(p.block))
            aws_cdk_lib_IResolvable(p.block);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ExcludedRuleProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_FieldIdentifierProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_FieldToMatchProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.body))
            aws_cdk_lib_IResolvable(p.body);
        if (!visitedObjects.has(p.cookies))
            aws_cdk_lib_IResolvable(p.cookies);
        if (!visitedObjects.has(p.headers))
            aws_cdk_lib_IResolvable(p.headers);
        if (!visitedObjects.has(p.jsonBody))
            aws_cdk_lib_IResolvable(p.jsonBody);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ForwardedIPConfigurationProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_GeoMatchStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forwardedIpConfig))
            aws_cdk_lib_IResolvable(p.forwardedIpConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_HeaderMatchPatternProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_HeadersProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matchPattern))
            aws_cdk_lib_IResolvable(p.matchPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_IPSetForwardedIPConfigurationProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_IPSetReferenceStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipSetForwardedIpConfig))
            aws_cdk_lib_IResolvable(p.ipSetForwardedIpConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ImmunityTimePropertyProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_JsonBodyProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.matchPattern))
            aws_cdk_lib_IResolvable(p.matchPattern);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_JsonMatchPatternProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_LabelProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_LabelMatchStatementProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ManagedRuleGroupConfigProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.awsManagedRulesAtpRuleSet))
            aws_cdk_lib_IResolvable(p.awsManagedRulesAtpRuleSet);
        if (!visitedObjects.has(p.awsManagedRulesBotControlRuleSet))
            aws_cdk_lib_IResolvable(p.awsManagedRulesBotControlRuleSet);
        if (!visitedObjects.has(p.passwordField))
            aws_cdk_lib_IResolvable(p.passwordField);
        if (!visitedObjects.has(p.usernameField))
            aws_cdk_lib_IResolvable(p.usernameField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ManagedRuleGroupStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.excludedRules))
            aws_cdk_lib_IResolvable(p.excludedRules);
        if (!visitedObjects.has(p.managedRuleGroupConfigs))
            aws_cdk_lib_IResolvable(p.managedRuleGroupConfigs);
        if (!visitedObjects.has(p.ruleActionOverrides))
            aws_cdk_lib_IResolvable(p.ruleActionOverrides);
        if (!visitedObjects.has(p.scopeDownStatement))
            aws_cdk_lib_IResolvable(p.scopeDownStatement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_NotStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.statement))
            aws_cdk_lib_IResolvable(p.statement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_OrStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.statements))
            aws_cdk_lib_IResolvable(p.statements);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_OverrideActionProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_RateBasedStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.forwardedIpConfig))
            aws_cdk_lib_IResolvable(p.forwardedIpConfig);
        if (!visitedObjects.has(p.scopeDownStatement))
            aws_cdk_lib_IResolvable(p.scopeDownStatement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_RegexMatchStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
        if (!visitedObjects.has(p.textTransformations))
            aws_cdk_lib_IResolvable(p.textTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_RegexPatternSetReferenceStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
        if (!visitedObjects.has(p.textTransformations))
            aws_cdk_lib_IResolvable(p.textTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_RequestInspectionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.passwordField))
            aws_cdk_lib_IResolvable(p.passwordField);
        if (!visitedObjects.has(p.usernameField))
            aws_cdk_lib_IResolvable(p.usernameField);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ResponseInspectionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.bodyContains))
            aws_cdk_lib_IResolvable(p.bodyContains);
        if (!visitedObjects.has(p.header))
            aws_cdk_lib_IResolvable(p.header);
        if (!visitedObjects.has(p.json))
            aws_cdk_lib_IResolvable(p.json);
        if (!visitedObjects.has(p.statusCode))
            aws_cdk_lib_IResolvable(p.statusCode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ResponseInspectionBodyContainsProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ResponseInspectionHeaderProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ResponseInspectionJsonProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_ResponseInspectionStatusCodeProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_RuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.statement))
            aws_cdk_lib_IResolvable(p.statement);
        if (!visitedObjects.has(p.visibilityConfig))
            aws_cdk_lib_IResolvable(p.visibilityConfig);
        if (!visitedObjects.has(p.action))
            aws_cdk_lib_IResolvable(p.action);
        if (!visitedObjects.has(p.captchaConfig))
            aws_cdk_lib_IResolvable(p.captchaConfig);
        if (!visitedObjects.has(p.challengeConfig))
            aws_cdk_lib_IResolvable(p.challengeConfig);
        if (!visitedObjects.has(p.overrideAction))
            aws_cdk_lib_IResolvable(p.overrideAction);
        if (!visitedObjects.has(p.ruleLabels))
            aws_cdk_lib_IResolvable(p.ruleLabels);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_RuleActionProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.allow))
            aws_cdk_lib_IResolvable(p.allow);
        if (!visitedObjects.has(p.block))
            aws_cdk_lib_IResolvable(p.block);
        if (!visitedObjects.has(p.captcha))
            aws_cdk_lib_IResolvable(p.captcha);
        if (!visitedObjects.has(p.challenge))
            aws_cdk_lib_IResolvable(p.challenge);
        if (!visitedObjects.has(p.count))
            aws_cdk_lib_IResolvable(p.count);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_RuleActionOverrideProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actionToUse))
            aws_cdk_lib_IResolvable(p.actionToUse);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_RuleGroupReferenceStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.excludedRules))
            aws_cdk_lib_IResolvable(p.excludedRules);
        if (!visitedObjects.has(p.ruleActionOverrides))
            aws_cdk_lib_IResolvable(p.ruleActionOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_SingleHeaderProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_SingleQueryArgumentProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_SizeConstraintStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
        if (!visitedObjects.has(p.textTransformations))
            aws_cdk_lib_IResolvable(p.textTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_SqliMatchStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
        if (!visitedObjects.has(p.textTransformations))
            aws_cdk_lib_IResolvable(p.textTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_StatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.andStatement))
            aws_cdk_lib_IResolvable(p.andStatement);
        if (!visitedObjects.has(p.byteMatchStatement))
            aws_cdk_lib_IResolvable(p.byteMatchStatement);
        if (!visitedObjects.has(p.geoMatchStatement))
            aws_cdk_lib_IResolvable(p.geoMatchStatement);
        if (!visitedObjects.has(p.ipSetReferenceStatement))
            aws_cdk_lib_IResolvable(p.ipSetReferenceStatement);
        if (!visitedObjects.has(p.labelMatchStatement))
            aws_cdk_lib_IResolvable(p.labelMatchStatement);
        if (!visitedObjects.has(p.managedRuleGroupStatement))
            aws_cdk_lib_IResolvable(p.managedRuleGroupStatement);
        if (!visitedObjects.has(p.notStatement))
            aws_cdk_lib_IResolvable(p.notStatement);
        if (!visitedObjects.has(p.orStatement))
            aws_cdk_lib_IResolvable(p.orStatement);
        if (!visitedObjects.has(p.rateBasedStatement))
            aws_cdk_lib_IResolvable(p.rateBasedStatement);
        if (!visitedObjects.has(p.regexMatchStatement))
            aws_cdk_lib_IResolvable(p.regexMatchStatement);
        if (!visitedObjects.has(p.regexPatternSetReferenceStatement))
            aws_cdk_lib_IResolvable(p.regexPatternSetReferenceStatement);
        if (!visitedObjects.has(p.ruleGroupReferenceStatement))
            aws_cdk_lib_IResolvable(p.ruleGroupReferenceStatement);
        if (!visitedObjects.has(p.sizeConstraintStatement))
            aws_cdk_lib_IResolvable(p.sizeConstraintStatement);
        if (!visitedObjects.has(p.sqliMatchStatement))
            aws_cdk_lib_IResolvable(p.sqliMatchStatement);
        if (!visitedObjects.has(p.xssMatchStatement))
            aws_cdk_lib_IResolvable(p.xssMatchStatement);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_TextTransformationProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_VisibilityConfigProperty(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACL_XssMatchStatementProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fieldToMatch))
            aws_cdk_lib_IResolvable(p.fieldToMatch);
        if (!visitedObjects.has(p.textTransformations))
            aws_cdk_lib_IResolvable(p.textTransformations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wafv2_CfnWebACLAssociationProps(p) {
}
function aws_cdk_lib_aws_wafv2_CfnWebACLAssociation(p) {
}
function aws_cdk_lib_aws_wisdom_CfnAssistantProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.serverSideEncryptionConfiguration))
            aws_cdk_lib_IResolvable(p.serverSideEncryptionConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wisdom_CfnAssistant(p) {
}
function aws_cdk_lib_aws_wisdom_CfnAssistant_ServerSideEncryptionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_wisdom_CfnAssistantAssociationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.association))
            aws_cdk_lib_IResolvable(p.association);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wisdom_CfnAssistantAssociation(p) {
}
function aws_cdk_lib_aws_wisdom_CfnAssistantAssociation_AssociationDataProperty(p) {
}
function aws_cdk_lib_aws_wisdom_CfnKnowledgeBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.renderingConfiguration))
            aws_cdk_lib_IResolvable(p.renderingConfiguration);
        if (!visitedObjects.has(p.serverSideEncryptionConfiguration))
            aws_cdk_lib_IResolvable(p.serverSideEncryptionConfiguration);
        if (!visitedObjects.has(p.sourceConfiguration))
            aws_cdk_lib_IResolvable(p.sourceConfiguration);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_wisdom_CfnKnowledgeBase(p) {
}
function aws_cdk_lib_aws_wisdom_CfnKnowledgeBase_AppIntegrationsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_wisdom_CfnKnowledgeBase_RenderingConfigurationProperty(p) {
}
function aws_cdk_lib_aws_wisdom_CfnKnowledgeBase_ServerSideEncryptionConfigurationProperty(p) {
}
function aws_cdk_lib_aws_wisdom_CfnKnowledgeBase_SourceConfigurationProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.appIntegrations))
            aws_cdk_lib_IResolvable(p.appIntegrations);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_workspaces_CfnConnectionAliasProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_workspaces_CfnConnectionAlias(p) {
}
function aws_cdk_lib_aws_workspaces_CfnConnectionAlias_ConnectionAliasAssociationProperty(p) {
}
function aws_cdk_lib_aws_workspaces_CfnWorkspaceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
        if (!visitedObjects.has(p.workspaceProperties))
            aws_cdk_lib_IResolvable(p.workspaceProperties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_workspaces_CfnWorkspace(p) {
}
function aws_cdk_lib_aws_workspaces_CfnWorkspace_WorkspacePropertiesProperty(p) {
}
function aws_cdk_lib_aws_xray_CfnGroupProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.insightsConfiguration))
            aws_cdk_lib_IResolvable(p.insightsConfiguration);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_xray_CfnGroup(p) {
}
function aws_cdk_lib_aws_xray_CfnGroup_InsightsConfigurationProperty(p) {
}
function aws_cdk_lib_aws_xray_CfnGroup_TagsItemsProperty(p) {
}
function aws_cdk_lib_aws_xray_CfnResourcePolicyProps(p) {
}
function aws_cdk_lib_aws_xray_CfnResourcePolicy(p) {
}
function aws_cdk_lib_aws_xray_CfnSamplingRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.samplingRule))
            aws_cdk_lib_IResolvable(p.samplingRule);
        if (!visitedObjects.has(p.samplingRuleRecord))
            aws_cdk_lib_IResolvable(p.samplingRuleRecord);
        if (!visitedObjects.has(p.samplingRuleUpdate))
            aws_cdk_lib_IResolvable(p.samplingRuleUpdate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_xray_CfnSamplingRule(p) {
}
function aws_cdk_lib_aws_xray_CfnSamplingRule_SamplingRuleProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_xray_CfnSamplingRule_SamplingRuleRecordProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.samplingRule))
            aws_cdk_lib_IResolvable(p.samplingRule);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_xray_CfnSamplingRule_SamplingRuleUpdateProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.attributes))
            aws_cdk_lib_IResolvable(p.attributes);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_aws_xray_CfnSamplingRule_TagsItemsProperty(p) {
}
function aws_cdk_lib_cloud_assembly_schema_ArtifactType(p) {
}
function aws_cdk_lib_cloud_assembly_schema_RuntimeInfo(p) {
}
function aws_cdk_lib_cloud_assembly_schema_MissingContext(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.props))
            aws_cdk_lib_cloud_assembly_schema_AmiContextQuery(p.props);
        if (!visitedObjects.has(p.provider))
            aws_cdk_lib_cloud_assembly_schema_ContextProvider(p.provider);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_ArtifactManifest(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_cloud_assembly_schema_ArtifactType(p.type);
        if (!visitedObjects.has(p.properties))
            aws_cdk_lib_cloud_assembly_schema_AwsCloudFormationStackProperties(p.properties);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_AssemblyManifest(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.artifacts != null)
            for (const o of Object.values(p.artifacts))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloud_assembly_schema_ArtifactManifest(o);
        if (p.missing != null)
            for (const o of p.missing)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloud_assembly_schema_MissingContext(o);
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_cloud_assembly_schema_RuntimeInfo(p.runtime);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_FileAssetMetadataEntry(p) {
}
function aws_cdk_lib_cloud_assembly_schema_Tag(p) {
}
function aws_cdk_lib_cloud_assembly_schema_ContainerImageAssetCacheOption(p) {
}
function aws_cdk_lib_cloud_assembly_schema_ContainerImageAssetMetadataEntry(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.cacheFrom != null)
            for (const o of p.cacheFrom)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloud_assembly_schema_ContainerImageAssetCacheOption(o);
        if (!visitedObjects.has(p.cacheTo))
            aws_cdk_lib_cloud_assembly_schema_ContainerImageAssetCacheOption(p.cacheTo);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_ArtifactMetadataEntryType(p) {
}
function aws_cdk_lib_cloud_assembly_schema_MetadataEntry(p) {
}
function aws_cdk_lib_cloud_assembly_schema_BootstrapRole(p) {
}
function aws_cdk_lib_cloud_assembly_schema_AwsCloudFormationStackProperties(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lookupRole))
            aws_cdk_lib_cloud_assembly_schema_BootstrapRole(p.lookupRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_AssetManifestOptions(p) {
}
function aws_cdk_lib_cloud_assembly_schema_AssetManifestProperties(p) {
}
function aws_cdk_lib_cloud_assembly_schema_TreeArtifactProperties(p) {
}
function aws_cdk_lib_cloud_assembly_schema_NestedCloudAssemblyProperties(p) {
}
function aws_cdk_lib_cloud_assembly_schema_ContextProvider(p) {
}
function aws_cdk_lib_cloud_assembly_schema_AmiContextQuery(p) {
}
function aws_cdk_lib_cloud_assembly_schema_AvailabilityZonesContextQuery(p) {
}
function aws_cdk_lib_cloud_assembly_schema_HostedZoneContextQuery(p) {
}
function aws_cdk_lib_cloud_assembly_schema_SSMParameterContextQuery(p) {
}
function aws_cdk_lib_cloud_assembly_schema_VpcContextQuery(p) {
}
function aws_cdk_lib_cloud_assembly_schema_EndpointServiceAvailabilityZonesContextQuery(p) {
}
function aws_cdk_lib_cloud_assembly_schema_LoadBalancerType(p) {
}
function aws_cdk_lib_cloud_assembly_schema_LoadBalancerFilter(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loadBalancerType))
            aws_cdk_lib_cloud_assembly_schema_LoadBalancerType(p.loadBalancerType);
        if (p.loadBalancerTags != null)
            for (const o of p.loadBalancerTags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloud_assembly_schema_Tag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_LoadBalancerContextQuery(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loadBalancerType))
            aws_cdk_lib_cloud_assembly_schema_LoadBalancerType(p.loadBalancerType);
        if (p.loadBalancerTags != null)
            for (const o of p.loadBalancerTags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloud_assembly_schema_Tag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_LoadBalancerListenerProtocol(p) {
}
function aws_cdk_lib_cloud_assembly_schema_LoadBalancerListenerContextQuery(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.listenerProtocol))
            aws_cdk_lib_cloud_assembly_schema_LoadBalancerListenerProtocol(p.listenerProtocol);
        if (!visitedObjects.has(p.loadBalancerType))
            aws_cdk_lib_cloud_assembly_schema_LoadBalancerType(p.loadBalancerType);
        if (p.loadBalancerTags != null)
            for (const o of p.loadBalancerTags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloud_assembly_schema_Tag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_SecurityGroupContextQuery(p) {
}
function aws_cdk_lib_cloud_assembly_schema_KeyContextQuery(p) {
}
function aws_cdk_lib_cloud_assembly_schema_PluginContextQuery(p) {
}
function aws_cdk_lib_cloud_assembly_schema_AssetManifest(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.dockerImages != null)
            for (const o of Object.values(p.dockerImages))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloud_assembly_schema_DockerImageAsset(o);
        if (p.files != null)
            for (const o of Object.values(p.files))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloud_assembly_schema_FileAsset(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_DockerImageAsset(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.destinations != null)
            for (const o of Object.values(p.destinations))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloud_assembly_schema_DockerImageDestination(o);
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_cloud_assembly_schema_DockerImageSource(p.source);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_DockerImageSource(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.cacheFrom != null)
            for (const o of p.cacheFrom)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloud_assembly_schema_DockerCacheOption(o);
        if (!visitedObjects.has(p.cacheTo))
            aws_cdk_lib_cloud_assembly_schema_DockerCacheOption(p.cacheTo);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_DockerImageDestination(p) {
}
function aws_cdk_lib_cloud_assembly_schema_DockerCacheOption(p) {
}
function aws_cdk_lib_cloud_assembly_schema_FileAsset(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.destinations != null)
            for (const o of Object.values(p.destinations))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloud_assembly_schema_FileDestination(o);
        if (!visitedObjects.has(p.source))
            aws_cdk_lib_cloud_assembly_schema_FileSource(p.source);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_FileAssetPackaging(p) {
}
function aws_cdk_lib_cloud_assembly_schema_FileSource(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.packaging))
            aws_cdk_lib_cloud_assembly_schema_FileAssetPackaging(p.packaging);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_FileDestination(p) {
}
function aws_cdk_lib_cloud_assembly_schema_AwsDestination(p) {
}
function aws_cdk_lib_cloud_assembly_schema_LoadManifestOptions(p) {
}
function aws_cdk_lib_cloud_assembly_schema_Manifest(p) {
}
function aws_cdk_lib_cloud_assembly_schema_IntegManifest(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.testCases != null)
            for (const o of Object.values(p.testCases))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloud_assembly_schema_TestCase(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_RequireApproval(p) {
}
function aws_cdk_lib_cloud_assembly_schema_DefaultCdkOptions(p) {
}
function aws_cdk_lib_cloud_assembly_schema_DeployOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.requireApproval))
            aws_cdk_lib_cloud_assembly_schema_RequireApproval(p.requireApproval);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_DestroyOptions(p) {
}
function aws_cdk_lib_cloud_assembly_schema_TestOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cdkCommandOptions))
            aws_cdk_lib_cloud_assembly_schema_CdkCommands(p.cdkCommandOptions);
        if (!visitedObjects.has(p.hooks))
            aws_cdk_lib_cloud_assembly_schema_Hooks(p.hooks);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_TestCase(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.cdkCommandOptions))
            aws_cdk_lib_cloud_assembly_schema_CdkCommands(p.cdkCommandOptions);
        if (!visitedObjects.has(p.hooks))
            aws_cdk_lib_cloud_assembly_schema_Hooks(p.hooks);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_Hooks(p) {
}
function aws_cdk_lib_cloud_assembly_schema_CdkCommand(p) {
}
function aws_cdk_lib_cloud_assembly_schema_DeployCommand(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.args))
            aws_cdk_lib_cloud_assembly_schema_DeployOptions(p.args);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_DestroyCommand(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.args))
            aws_cdk_lib_cloud_assembly_schema_DestroyOptions(p.args);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloud_assembly_schema_CdkCommands(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deploy))
            aws_cdk_lib_cloud_assembly_schema_DeployCommand(p.deploy);
        if (!visitedObjects.has(p.destroy))
            aws_cdk_lib_cloud_assembly_schema_DestroyCommand(p.destroy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloudformation_include_CfnIncludeProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.loadNestedStacks != null)
            for (const o of Object.values(p.loadNestedStacks))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cloudformation_include_CfnIncludeProps(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloudformation_include_IncludedNestedStack(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.includedTemplate))
            aws_cdk_lib_cloudformation_include_CfnInclude(p.includedTemplate);
        if (!visitedObjects.has(p.stack))
            aws_cdk_lib_NestedStack(p.stack);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cloudformation_include_CfnInclude(p) {
}
function aws_cdk_lib_custom_resources_PhysicalResourceIdReference(p) {
}
function aws_cdk_lib_custom_resources_PhysicalResourceId(p) {
}
function aws_cdk_lib_custom_resources_AwsSdkCall(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.physicalResourceId))
            aws_cdk_lib_custom_resources_PhysicalResourceId(p.physicalResourceId);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_custom_resources_SdkCallsPolicyOptions(p) {
}
function aws_cdk_lib_custom_resources_AwsCustomResourcePolicy(p) {
}
function aws_cdk_lib_custom_resources_AwsCustomResourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.logRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.logRetention);
        if (!visitedObjects.has(p.onCreate))
            aws_cdk_lib_custom_resources_AwsSdkCall(p.onCreate);
        if (!visitedObjects.has(p.onDelete))
            aws_cdk_lib_custom_resources_AwsSdkCall(p.onDelete);
        if (!visitedObjects.has(p.onUpdate))
            aws_cdk_lib_custom_resources_AwsSdkCall(p.onUpdate);
        if (!visitedObjects.has(p.policy))
            aws_cdk_lib_custom_resources_AwsCustomResourcePolicy(p.policy);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_custom_resources_AwsCustomResource(p) {
}
function aws_cdk_lib_custom_resources_ProviderProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.onEventHandler))
            aws_cdk_lib_aws_lambda_IFunction(p.onEventHandler);
        if (!visitedObjects.has(p.isCompleteHandler))
            aws_cdk_lib_aws_lambda_IFunction(p.isCompleteHandler);
        if (!visitedObjects.has(p.logRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.logRetention);
        if (!visitedObjects.has(p.queryInterval))
            aws_cdk_lib_Duration(p.queryInterval);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.totalTimeout))
            aws_cdk_lib_Duration(p.totalTimeout);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_custom_resources_Provider(p) {
}
function aws_cdk_lib_cx_api_VpcSubnetGroupType(p) {
}
function aws_cdk_lib_cx_api_VpcSubnet(p) {
}
function aws_cdk_lib_cx_api_VpcSubnetGroup(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.subnets != null)
            for (const o of p.subnets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cx_api_VpcSubnet(o);
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_cx_api_VpcSubnetGroupType(p.type);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cx_api_VpcContextResponse(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.subnetGroups != null)
            for (const o of p.subnetGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_cx_api_VpcSubnetGroup(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cx_api_LoadBalancerIpAddressType(p) {
}
function aws_cdk_lib_cx_api_LoadBalancerContextResponse(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ipAddressType))
            aws_cdk_lib_cx_api_LoadBalancerIpAddressType(p.ipAddressType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cx_api_LoadBalancerListenerContextResponse(p) {
}
function aws_cdk_lib_cx_api_EndpointServiceAvailabilityZonesContextQuery(p) {
}
function aws_cdk_lib_cx_api_SecurityGroupContextResponse(p) {
}
function aws_cdk_lib_cx_api_KeyContextResponse(p) {
}
function aws_cdk_lib_cx_api_AwsCloudFormationStackProperties(p) {
}
function aws_cdk_lib_cx_api_CloudArtifact(p) {
}
function aws_cdk_lib_cx_api_AssetManifestArtifact(p) {
}
function aws_cdk_lib_cx_api_CloudFormationStackArtifact(p) {
}
function aws_cdk_lib_cx_api_TreeCloudArtifact(p) {
}
function aws_cdk_lib_cx_api_NestedCloudAssemblyArtifact(p) {
}
function aws_cdk_lib_cx_api_CloudAssembly(p) {
}
function aws_cdk_lib_cx_api_CloudAssemblyBuilderProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parentBuilder))
            aws_cdk_lib_cx_api_CloudAssemblyBuilder(p.parentBuilder);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cx_api_CloudAssemblyBuilder(p) {
}
function aws_cdk_lib_cx_api_AssemblyBuildOptions(p) {
}
function aws_cdk_lib_cx_api_Environment(p) {
}
function aws_cdk_lib_cx_api_EnvironmentUtils(p) {
}
function aws_cdk_lib_cx_api_SynthesisMessageLevel(p) {
}
function aws_cdk_lib_cx_api_MetadataEntryResult(p) {
}
function aws_cdk_lib_cx_api_SynthesisMessage(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.entry))
            aws_cdk_lib_cloud_assembly_schema_MetadataEntry(p.entry);
        if (!visitedObjects.has(p.level))
            aws_cdk_lib_cx_api_SynthesisMessageLevel(p.level);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_cx_api_EnvironmentPlaceholders(p) {
}
function aws_cdk_lib_cx_api_EnvironmentPlaceholderValues(p) {
}
function aws_cdk_lib_cx_api_IEnvironmentPlaceholderProvider(p) {
}
function aws_cdk_lib_lambda_layer_awscli_AwsCliLayer(p) {
}
function aws_cdk_lib_lambda_layer_kubectl_KubectlLayer(p) {
}
function aws_cdk_lib_lambda_layer_node_proxy_agent_NodeProxyAgentLayer(p) {
}
function aws_cdk_lib_pipelines_AssetType(p) {
}
function aws_cdk_lib_pipelines_FileSet(p) {
}
function aws_cdk_lib_pipelines_IFileSetProducer(p) {
}
function aws_cdk_lib_pipelines_ShellStepProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.additionalInputs != null)
            for (const o of Object.values(p.additionalInputs))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_IFileSetProducer(o);
        if (p.envFromCfnOutputs != null)
            for (const o of Object.values(p.envFromCfnOutputs))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnOutput(o);
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_pipelines_IFileSetProducer(p.input);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_ShellStep(p) {
}
function aws_cdk_lib_pipelines_FileSetLocation(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.fileSet))
            aws_cdk_lib_pipelines_FileSet(p.fileSet);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_StackOutputReference(p) {
}
function aws_cdk_lib_pipelines_StackDeploymentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.assets != null)
            for (const o of p.assets)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_StackAsset(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_StackDeployment(p) {
}
function aws_cdk_lib_pipelines_StackAsset(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assetType))
            aws_cdk_lib_pipelines_AssetType(p.assetType);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_StageDeploymentProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.post != null)
            for (const o of p.post)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_Step(o);
        if (p.pre != null)
            for (const o of p.pre)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_Step(o);
        if (p.stackSteps != null)
            for (const o of p.stackSteps)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_StackSteps(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_StageDeployment(p) {
}
function aws_cdk_lib_pipelines_Step(p) {
}
function aws_cdk_lib_pipelines_StackSteps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stack))
            aws_cdk_lib_Stack(p.stack);
        if (p.changeSet != null)
            for (const o of p.changeSet)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_Step(o);
        if (p.post != null)
            for (const o of p.post)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_Step(o);
        if (p.pre != null)
            for (const o of p.pre)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_Step(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_WaveProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.post != null)
            for (const o of p.post)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_Step(o);
        if (p.pre != null)
            for (const o of p.pre)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_Step(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_Wave(p) {
}
function aws_cdk_lib_pipelines_AddStageOpts(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.post != null)
            for (const o of p.post)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_Step(o);
        if (p.pre != null)
            for (const o of p.pre)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_Step(o);
        if (p.stackSteps != null)
            for (const o of p.stackSteps)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_StackSteps(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_WaveOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.post != null)
            for (const o of p.post)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_Step(o);
        if (p.pre != null)
            for (const o of p.pre)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_Step(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_ManualApprovalStepProps(p) {
}
function aws_cdk_lib_pipelines_ManualApprovalStep(p) {
}
function aws_cdk_lib_pipelines_ArtifactMap(p) {
}
function aws_cdk_lib_pipelines_CodePipelineFileSet(p) {
}
function aws_cdk_lib_pipelines_CodeBuildStepProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.actionRole))
            aws_cdk_lib_aws_iam_IRole(p.actionRole);
        if (!visitedObjects.has(p.buildEnvironment))
            aws_cdk_lib_aws_codebuild_BuildEnvironment(p.buildEnvironment);
        if (!visitedObjects.has(p.cache))
            aws_cdk_lib_aws_codebuild_Cache(p.cache);
        if (p.fileSystemLocations != null)
            for (const o of p.fileSystemLocations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_IFileSystemLocation(o);
        if (!visitedObjects.has(p.partialBuildSpec))
            aws_cdk_lib_aws_codebuild_BuildSpec(p.partialBuildSpec);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (p.rolePolicyStatements != null)
            for (const o of p.rolePolicyStatements)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (p.additionalInputs != null)
            for (const o of Object.values(p.additionalInputs))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_IFileSetProducer(o);
        if (p.envFromCfnOutputs != null)
            for (const o of Object.values(p.envFromCfnOutputs))
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnOutput(o);
        if (!visitedObjects.has(p.input))
            aws_cdk_lib_pipelines_IFileSetProducer(p.input);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_CodeBuildStep(p) {
}
function aws_cdk_lib_pipelines_PermissionsBroadeningCheckProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.stage))
            aws_cdk_lib_Stage(p.stage);
        if (!visitedObjects.has(p.notificationTopic))
            aws_cdk_lib_aws_sns_ITopic(p.notificationTopic);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_ConfirmPermissionsBroadening(p) {
}
function aws_cdk_lib_pipelines_CodePipelineProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.synth))
            aws_cdk_lib_pipelines_IFileSetProducer(p.synth);
        if (!visitedObjects.has(p.artifactBucket))
            aws_cdk_lib_aws_s3_IBucket(p.artifactBucket);
        if (!visitedObjects.has(p.assetPublishingCodeBuildDefaults))
            aws_cdk_lib_pipelines_CodeBuildOptions(p.assetPublishingCodeBuildDefaults);
        if (!visitedObjects.has(p.codeBuildDefaults))
            aws_cdk_lib_pipelines_CodeBuildOptions(p.codeBuildDefaults);
        if (!visitedObjects.has(p.codePipeline))
            aws_cdk_lib_aws_codepipeline_Pipeline(p.codePipeline);
        if (p.dockerCredentials != null)
            for (const o of p.dockerCredentials)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_DockerCredential(o);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.selfMutationCodeBuildDefaults))
            aws_cdk_lib_pipelines_CodeBuildOptions(p.selfMutationCodeBuildDefaults);
        if (!visitedObjects.has(p.synthCodeBuildDefaults))
            aws_cdk_lib_pipelines_CodeBuildOptions(p.synthCodeBuildDefaults);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_CodeBuildOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.buildEnvironment))
            aws_cdk_lib_aws_codebuild_BuildEnvironment(p.buildEnvironment);
        if (!visitedObjects.has(p.cache))
            aws_cdk_lib_aws_codebuild_Cache(p.cache);
        if (p.fileSystemLocations != null)
            for (const o of p.fileSystemLocations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_codebuild_IFileSystemLocation(o);
        if (!visitedObjects.has(p.partialBuildSpec))
            aws_cdk_lib_aws_codebuild_BuildSpec(p.partialBuildSpec);
        if (p.rolePolicy != null)
            for (const o of p.rolePolicy)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.subnetSelection))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.subnetSelection);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_CodePipeline(p) {
}
function aws_cdk_lib_pipelines_ProduceActionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.artifacts))
            aws_cdk_lib_pipelines_ArtifactMap(p.artifacts);
        if (!visitedObjects.has(p.pipeline))
            aws_cdk_lib_pipelines_CodePipeline(p.pipeline);
        if (!visitedObjects.has(p.stackOutputsMap))
            aws_cdk_lib_pipelines_StackOutputsMap(p.stackOutputsMap);
        if (!visitedObjects.has(p.codeBuildDefaults))
            aws_cdk_lib_pipelines_CodeBuildOptions(p.codeBuildDefaults);
        if (!visitedObjects.has(p.fallbackArtifact))
            aws_cdk_lib_aws_codepipeline_Artifact(p.fallbackArtifact);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_ICodePipelineActionFactory(p) {
}
function aws_cdk_lib_pipelines_CodePipelineActionFactoryResult(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.project))
            aws_cdk_lib_aws_codebuild_IProject(p.project);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_CodePipelineSource(p) {
}
function aws_cdk_lib_pipelines_GitHubSourceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.authentication))
            aws_cdk_lib_SecretValue(p.authentication);
        if (!visitedObjects.has(p.trigger))
            aws_cdk_lib_aws_codepipeline_actions_GitHubTrigger(p.trigger);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_S3SourceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.trigger))
            aws_cdk_lib_aws_codepipeline_actions_S3Trigger(p.trigger);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_ECRSourceOptions(p) {
}
function aws_cdk_lib_pipelines_ConnectionSourceOptions(p) {
}
function aws_cdk_lib_pipelines_CodeCommitSourceOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.eventRole))
            aws_cdk_lib_aws_iam_IRole(p.eventRole);
        if (!visitedObjects.has(p.trigger))
            aws_cdk_lib_aws_codepipeline_actions_CodeCommitTrigger(p.trigger);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_StackOutputsMap(p) {
}
function aws_cdk_lib_pipelines_PipelineBaseProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.synth))
            aws_cdk_lib_pipelines_IFileSetProducer(p.synth);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_PipelineBase(p) {
}
function aws_cdk_lib_pipelines_DockerCredential(p) {
}
function aws_cdk_lib_pipelines_ExternalDockerCredentialOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assumeRole))
            aws_cdk_lib_aws_iam_IRole(p.assumeRole);
        if (p.usages != null)
            for (const o of p.usages)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_DockerCredentialUsage(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_EcrDockerCredentialOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assumeRole))
            aws_cdk_lib_aws_iam_IRole(p.assumeRole);
        if (p.usages != null)
            for (const o of p.usages)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_pipelines_DockerCredentialUsage(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_pipelines_DockerCredentialUsage(p) {
}
function aws_cdk_lib_region_info_Default(p) {
}
function aws_cdk_lib_region_info_Fact(p) {
}
function aws_cdk_lib_region_info_IFact(p) {
}
function aws_cdk_lib_region_info_FactName(p) {
}
function aws_cdk_lib_region_info_RegionInfo(p) {
}
function aws_cdk_lib_triggers_ITrigger(p) {
}
function aws_cdk_lib_triggers_TriggerOptions(p) {
}
function aws_cdk_lib_triggers_InvocationType(p) {
}
function aws_cdk_lib_triggers_TriggerProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.handler))
            aws_cdk_lib_aws_lambda_Function(p.handler);
        if (!visitedObjects.has(p.invocationType))
            aws_cdk_lib_triggers_InvocationType(p.invocationType);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_triggers_Trigger(p) {
}
function aws_cdk_lib_triggers_TriggerInvalidation(p) {
}
function aws_cdk_lib_triggers_TriggerFunctionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.code))
            aws_cdk_lib_aws_lambda_Code(p.code);
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_aws_lambda_Runtime(p.runtime);
        if (!visitedObjects.has(p.adotInstrumentation))
            aws_cdk_lib_aws_lambda_AdotInstrumentationConfig(p.adotInstrumentation);
        if (!visitedObjects.has(p.architecture))
            aws_cdk_lib_aws_lambda_Architecture(p.architecture);
        if (!visitedObjects.has(p.codeSigningConfig))
            aws_cdk_lib_aws_lambda_ICodeSigningConfig(p.codeSigningConfig);
        if (!visitedObjects.has(p.currentVersionOptions))
            aws_cdk_lib_aws_lambda_VersionOptions(p.currentVersionOptions);
        if (!visitedObjects.has(p.deadLetterQueue))
            aws_cdk_lib_aws_sqs_IQueue(p.deadLetterQueue);
        if (!visitedObjects.has(p.deadLetterTopic))
            aws_cdk_lib_aws_sns_ITopic(p.deadLetterTopic);
        if (!visitedObjects.has(p.environmentEncryption))
            aws_cdk_lib_aws_kms_IKey(p.environmentEncryption);
        if (!visitedObjects.has(p.ephemeralStorageSize))
            aws_cdk_lib_Size(p.ephemeralStorageSize);
        if (p.events != null)
            for (const o of p.events)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_IEventSource(o);
        if (!visitedObjects.has(p.filesystem))
            aws_cdk_lib_aws_lambda_FileSystem(p.filesystem);
        if (p.initialPolicy != null)
            for (const o of p.initialPolicy)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_iam_PolicyStatement(o);
        if (!visitedObjects.has(p.insightsVersion))
            aws_cdk_lib_aws_lambda_LambdaInsightsVersion(p.insightsVersion);
        if (p.layers != null)
            for (const o of p.layers)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_lambda_ILayerVersion(o);
        if (!visitedObjects.has(p.logRetention))
            aws_cdk_lib_aws_logs_RetentionDays(p.logRetention);
        if (!visitedObjects.has(p.logRetentionRetryOptions))
            aws_cdk_lib_aws_lambda_LogRetentionRetryOptions(p.logRetentionRetryOptions);
        if (!visitedObjects.has(p.logRetentionRole))
            aws_cdk_lib_aws_iam_IRole(p.logRetentionRole);
        if (!visitedObjects.has(p.profilingGroup))
            aws_cdk_lib_aws_codeguruprofiler_IProfilingGroup(p.profilingGroup);
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_aws_iam_IRole(p.role);
        if (!visitedObjects.has(p.runtimeManagementMode))
            aws_cdk_lib_aws_lambda_RuntimeManagementMode(p.runtimeManagementMode);
        if (p.securityGroups != null)
            for (const o of p.securityGroups)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_aws_ec2_ISecurityGroup(o);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
        if (!visitedObjects.has(p.tracing))
            aws_cdk_lib_aws_lambda_Tracing(p.tracing);
        if (!visitedObjects.has(p.vpc))
            aws_cdk_lib_aws_ec2_IVpc(p.vpc);
        if (!visitedObjects.has(p.vpcSubnets))
            aws_cdk_lib_aws_ec2_SubnetSelection(p.vpcSubnets);
        if (!visitedObjects.has(p.maxEventAge))
            aws_cdk_lib_Duration(p.maxEventAge);
        if (!visitedObjects.has(p.onFailure))
            aws_cdk_lib_aws_lambda_IDestination(p.onFailure);
        if (!visitedObjects.has(p.onSuccess))
            aws_cdk_lib_aws_lambda_IDestination(p.onSuccess);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_triggers_TriggerFunction(p) {
}
function aws_cdk_lib_IAspect(p) {
}
function aws_cdk_lib_Aspects(p) {
}
function aws_cdk_lib_TagProps(p) {
}
function aws_cdk_lib_Tag(p) {
}
function aws_cdk_lib_Tags(p) {
}
function aws_cdk_lib_RemoveTag(p) {
}
function aws_cdk_lib_TokenComparison(p) {
}
function aws_cdk_lib_Token(p) {
}
function aws_cdk_lib_Tokenization(p) {
}
function aws_cdk_lib_JsonNull(p) {
}
function aws_cdk_lib_ReverseOptions(p) {
}
function aws_cdk_lib_ResolveOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.resolver))
            aws_cdk_lib_ITokenResolver(p.resolver);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_EncodingOptions(p) {
}
function aws_cdk_lib_IResolveContext(p) {
}
function aws_cdk_lib_ResolveChangeContextOptions(p) {
}
function aws_cdk_lib_IResolvable(p) {
}
function aws_cdk_lib_IPostProcessor(p) {
}
function aws_cdk_lib_ITokenResolver(p) {
}
function aws_cdk_lib_IFragmentConcatenator(p) {
}
function aws_cdk_lib_StringConcat(p) {
}
function aws_cdk_lib_DefaultTokenResolver(p) {
}
function aws_cdk_lib_ResolutionTypeHint(p) {
}
function aws_cdk_lib_IStringProducer(p) {
}
function aws_cdk_lib_IStableStringProducer(p) {
}
function aws_cdk_lib_IListProducer(p) {
}
function aws_cdk_lib_IStableListProducer(p) {
}
function aws_cdk_lib_INumberProducer(p) {
}
function aws_cdk_lib_IStableNumberProducer(p) {
}
function aws_cdk_lib_IAnyProducer(p) {
}
function aws_cdk_lib_IStableAnyProducer(p) {
}
function aws_cdk_lib_LazyStringValueOptions(p) {
}
function aws_cdk_lib_LazyListValueOptions(p) {
}
function aws_cdk_lib_LazyAnyValueOptions(p) {
}
function aws_cdk_lib_Lazy(p) {
}
function aws_cdk_lib_ITaggable(p) {
}
function aws_cdk_lib_TagManagerOptions(p) {
}
function aws_cdk_lib_TagManager(p) {
}
function aws_cdk_lib_TokenizedStringFragments(p) {
}
function aws_cdk_lib_ITokenMapper(p) {
}
function aws_cdk_lib_IStackSynthesizer(p) {
}
function aws_cdk_lib_IReusableStackSynthesizer(p) {
}
function aws_cdk_lib_IBoundStackSynthesizer(p) {
}
function aws_cdk_lib_ISynthesisSession(p) {
}
function aws_cdk_lib_DefaultStackSynthesizerProps(p) {
}
function aws_cdk_lib_DefaultStackSynthesizer(p) {
}
function aws_cdk_lib_LegacyStackSynthesizer(p) {
}
function aws_cdk_lib_BootstraplessSynthesizerProps(p) {
}
function aws_cdk_lib_BootstraplessSynthesizer(p) {
}
function aws_cdk_lib_NestedStackSynthesizer(p) {
}
function aws_cdk_lib_StackSynthesizer(p) {
}
function aws_cdk_lib_SynthesizeStackArtifactOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.lookupRole))
            aws_cdk_lib_cloud_assembly_schema_BootstrapRole(p.lookupRole);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CliCredentialsStackSynthesizerProps(p) {
}
function aws_cdk_lib_CliCredentialsStackSynthesizer(p) {
}
function aws_cdk_lib_AssetManifestBuilder(p) {
}
function aws_cdk_lib_AssetManifestFileDestination(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_RoleOptions(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_AssetManifestDockerImageDestination(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.role))
            aws_cdk_lib_RoleOptions(p.role);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_RoleOptions(p) {
}
function aws_cdk_lib_Reference(p) {
}
function aws_cdk_lib_CfnConditionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.expression))
            aws_cdk_lib_ICfnConditionExpression(p.expression);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnCondition(p) {
}
function aws_cdk_lib_ICfnConditionExpression(p) {
}
function aws_cdk_lib_ICfnRuleConditionExpression(p) {
}
function aws_cdk_lib_Fn(p) {
}
function aws_cdk_lib_CfnHookProps(p) {
}
function aws_cdk_lib_CfnHook(p) {
}
function aws_cdk_lib_CfnTrafficRoutingType(p) {
}
function aws_cdk_lib_CfnTrafficRoutingTimeBasedCanary(p) {
}
function aws_cdk_lib_CfnTrafficRoutingTimeBasedLinear(p) {
}
function aws_cdk_lib_CfnTrafficRoutingConfig(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.type))
            aws_cdk_lib_CfnTrafficRoutingType(p.type);
        if (!visitedObjects.has(p.timeBasedCanary))
            aws_cdk_lib_CfnTrafficRoutingTimeBasedCanary(p.timeBasedCanary);
        if (!visitedObjects.has(p.timeBasedLinear))
            aws_cdk_lib_CfnTrafficRoutingTimeBasedLinear(p.timeBasedLinear);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnCodeDeployBlueGreenAdditionalOptions(p) {
}
function aws_cdk_lib_CfnCodeDeployBlueGreenLifecycleEventHooks(p) {
}
function aws_cdk_lib_CfnCodeDeployBlueGreenApplicationTarget(p) {
}
function aws_cdk_lib_CfnTrafficRoute(p) {
}
function aws_cdk_lib_CfnTrafficRouting(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.prodTrafficRoute))
            aws_cdk_lib_CfnTrafficRoute(p.prodTrafficRoute);
        if (!visitedObjects.has(p.testTrafficRoute))
            aws_cdk_lib_CfnTrafficRoute(p.testTrafficRoute);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnCodeDeployBlueGreenEcsAttributes(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.trafficRouting))
            aws_cdk_lib_CfnTrafficRouting(p.trafficRouting);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnCodeDeployBlueGreenApplication(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.ecsAttributes))
            aws_cdk_lib_CfnCodeDeployBlueGreenEcsAttributes(p.ecsAttributes);
        if (!visitedObjects.has(p.target))
            aws_cdk_lib_CfnCodeDeployBlueGreenApplicationTarget(p.target);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnCodeDeployBlueGreenHookProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.applications != null)
            for (const o of p.applications)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnCodeDeployBlueGreenApplication(o);
        if (!visitedObjects.has(p.additionalOptions))
            aws_cdk_lib_CfnCodeDeployBlueGreenAdditionalOptions(p.additionalOptions);
        if (!visitedObjects.has(p.lifecycleEventHooks))
            aws_cdk_lib_CfnCodeDeployBlueGreenLifecycleEventHooks(p.lifecycleEventHooks);
        if (!visitedObjects.has(p.trafficRoutingConfig))
            aws_cdk_lib_CfnTrafficRoutingConfig(p.trafficRoutingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnCodeDeployBlueGreenHook(p) {
}
function aws_cdk_lib_CfnMappingProps(p) {
}
function aws_cdk_lib_CfnMapping(p) {
}
function aws_cdk_lib_CfnOutputProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.condition))
            aws_cdk_lib_CfnCondition(p.condition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnOutput(p) {
}
function aws_cdk_lib_CfnParameterProps(p) {
}
function aws_cdk_lib_CfnParameter(p) {
}
function aws_cdk_lib_Aws(p) {
}
function aws_cdk_lib_ScopedAws(p) {
}
function aws_cdk_lib_CfnResourceProps(p) {
}
function aws_cdk_lib_CfnResource(p) {
}
function aws_cdk_lib_TagType(p) {
}
function aws_cdk_lib_ICfnResourceOptions(p) {
}
function aws_cdk_lib_CfnCreationPolicy(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScalingCreationPolicy))
            aws_cdk_lib_CfnResourceAutoScalingCreationPolicy(p.autoScalingCreationPolicy);
        if (!visitedObjects.has(p.resourceSignal))
            aws_cdk_lib_CfnResourceSignal(p.resourceSignal);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnResourceAutoScalingCreationPolicy(p) {
}
function aws_cdk_lib_CfnResourceSignal(p) {
}
function aws_cdk_lib_CfnDeletionPolicy(p) {
}
function aws_cdk_lib_CfnUpdatePolicy(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoScalingReplacingUpdate))
            aws_cdk_lib_CfnAutoScalingReplacingUpdate(p.autoScalingReplacingUpdate);
        if (!visitedObjects.has(p.autoScalingRollingUpdate))
            aws_cdk_lib_CfnAutoScalingRollingUpdate(p.autoScalingRollingUpdate);
        if (!visitedObjects.has(p.autoScalingScheduledAction))
            aws_cdk_lib_CfnAutoScalingScheduledAction(p.autoScalingScheduledAction);
        if (!visitedObjects.has(p.codeDeployLambdaAliasUpdate))
            aws_cdk_lib_CfnCodeDeployLambdaAliasUpdate(p.codeDeployLambdaAliasUpdate);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnAutoScalingRollingUpdate(p) {
}
function aws_cdk_lib_CfnAutoScalingReplacingUpdate(p) {
}
function aws_cdk_lib_CfnAutoScalingScheduledAction(p) {
}
function aws_cdk_lib_CfnCodeDeployLambdaAliasUpdate(p) {
}
function aws_cdk_lib_CfnRuleProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.assertions != null)
            for (const o of p.assertions)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnRuleAssertion(o);
        if (!visitedObjects.has(p.ruleCondition))
            aws_cdk_lib_ICfnConditionExpression(p.ruleCondition);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnRule(p) {
}
function aws_cdk_lib_CfnRuleAssertion(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assert))
            aws_cdk_lib_ICfnConditionExpression(p.assert);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_StackProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.env))
            aws_cdk_lib_Environment(p.env);
        if (!visitedObjects.has(p.permissionsBoundary))
            aws_cdk_lib_PermissionsBoundary(p.permissionsBoundary);
        if (!visitedObjects.has(p.synthesizer))
            aws_cdk_lib_IStackSynthesizer(p.synthesizer);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_Stack(p) {
}
function aws_cdk_lib_ITemplateOptions(p) {
}
function aws_cdk_lib_ExportValueOptions(p) {
}
function aws_cdk_lib_StageProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.env))
            aws_cdk_lib_Environment(p.env);
        if (!visitedObjects.has(p.permissionsBoundary))
            aws_cdk_lib_PermissionsBoundary(p.permissionsBoundary);
        if (p.policyValidationBeta1 != null)
            for (const o of p.policyValidationBeta1)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_IPolicyValidationPluginBeta1(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_Stage(p) {
}
function aws_cdk_lib_StageSynthesisOptions(p) {
}
function aws_cdk_lib_CfnElement(p) {
}
function aws_cdk_lib_CfnRefElement(p) {
}
function aws_cdk_lib_CfnDynamicReferenceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.service))
            aws_cdk_lib_CfnDynamicReferenceService(p.service);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnDynamicReference(p) {
}
function aws_cdk_lib_CfnDynamicReferenceService(p) {
}
function aws_cdk_lib_CfnTag(p) {
}
function aws_cdk_lib_CfnJsonProps(p) {
}
function aws_cdk_lib_CfnJson(p) {
}
function aws_cdk_lib_RemovalPolicy(p) {
}
function aws_cdk_lib_RemovalPolicyOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.default))
            aws_cdk_lib_RemovalPolicy(p.default);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_ArnFormat(p) {
}
function aws_cdk_lib_ArnComponents(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.arnFormat))
            aws_cdk_lib_ArnFormat(p.arnFormat);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_Arn(p) {
}
function aws_cdk_lib_Duration(p) {
}
function aws_cdk_lib_TimeConversionOptions(p) {
}
function aws_cdk_lib_Expiration(p) {
}
function aws_cdk_lib_Size(p) {
}
function aws_cdk_lib_SizeRoundingBehavior(p) {
}
function aws_cdk_lib_SizeConversionOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.rounding))
            aws_cdk_lib_SizeRoundingBehavior(p.rounding);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_AppProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.defaultStackSynthesizer))
            aws_cdk_lib_IReusableStackSynthesizer(p.defaultStackSynthesizer);
        if (p.policyValidationBeta1 != null)
            for (const o of p.policyValidationBeta1)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_IPolicyValidationPluginBeta1(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_App(p) {
}
function aws_cdk_lib_GetContextKeyOptions(p) {
}
function aws_cdk_lib_GetContextValueOptions(p) {
}
function aws_cdk_lib_GetContextKeyResult(p) {
}
function aws_cdk_lib_GetContextValueResult(p) {
}
function aws_cdk_lib_ContextProvider(p) {
}
function aws_cdk_lib_Environment(p) {
}
function aws_cdk_lib_Annotations(p) {
}
function aws_cdk_lib_ValidationResult(p) {
}
function aws_cdk_lib_ValidationResults(p) {
}
function aws_cdk_lib_SecretValue(p) {
}
function aws_cdk_lib_SecretsManagerSecretOptions(p) {
}
function aws_cdk_lib_ResourceEnvironment(p) {
}
function aws_cdk_lib_IResource(p) {
}
function aws_cdk_lib_ResourceProps(p) {
}
function aws_cdk_lib_Resource(p) {
}
function aws_cdk_lib_PhysicalName(p) {
}
function aws_cdk_lib_IAsset(p) {
}
function aws_cdk_lib_AssetOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.assetHashType))
            aws_cdk_lib_AssetHashType(p.assetHashType);
        if (!visitedObjects.has(p.bundling))
            aws_cdk_lib_BundlingOptions(p.bundling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_AssetHashType(p) {
}
function aws_cdk_lib_FileAssetSource(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.packaging))
            aws_cdk_lib_FileAssetPackaging(p.packaging);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_DockerImageAssetSource(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.dockerCacheFrom != null)
            for (const o of p.dockerCacheFrom)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_DockerCacheOption(o);
        if (!visitedObjects.has(p.dockerCacheTo))
            aws_cdk_lib_DockerCacheOption(p.dockerCacheTo);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_FileAssetPackaging(p) {
}
function aws_cdk_lib_FileAssetLocation(p) {
}
function aws_cdk_lib_DockerImageAssetLocation(p) {
}
function aws_cdk_lib_DockerCacheOption(p) {
}
function aws_cdk_lib_TreeInspector(p) {
}
function aws_cdk_lib_IInspectable(p) {
}
function aws_cdk_lib_AssetStagingProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.follow))
            aws_cdk_lib_SymlinkFollowMode(p.follow);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
        if (!visitedObjects.has(p.assetHashType))
            aws_cdk_lib_AssetHashType(p.assetHashType);
        if (!visitedObjects.has(p.bundling))
            aws_cdk_lib_BundlingOptions(p.bundling);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_AssetStaging(p) {
}
function aws_cdk_lib_DockerBuildSecret(p) {
}
function aws_cdk_lib_BundlingOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.image))
            aws_cdk_lib_DockerImage(p.image);
        if (!visitedObjects.has(p.bundlingFileAccess))
            aws_cdk_lib_BundlingFileAccess(p.bundlingFileAccess);
        if (!visitedObjects.has(p.local))
            aws_cdk_lib_ILocalBundling(p.local);
        if (!visitedObjects.has(p.outputType))
            aws_cdk_lib_BundlingOutput(p.outputType);
        if (p.volumes != null)
            for (const o of p.volumes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_DockerVolume(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_BundlingOutput(p) {
}
function aws_cdk_lib_ILocalBundling(p) {
}
function aws_cdk_lib_BundlingFileAccess(p) {
}
function aws_cdk_lib_DockerImage(p) {
}
function aws_cdk_lib_DockerVolume(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.consistency))
            aws_cdk_lib_DockerVolumeConsistency(p.consistency);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_DockerVolumeConsistency(p) {
}
function aws_cdk_lib_DockerRunOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.volumes != null)
            for (const o of p.volumes)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_DockerVolume(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_DockerBuildOptions(p) {
}
function aws_cdk_lib_FileSystem(p) {
}
function aws_cdk_lib_IgnoreStrategy(p) {
}
function aws_cdk_lib_GlobIgnoreStrategy(p) {
}
function aws_cdk_lib_GitIgnoreStrategy(p) {
}
function aws_cdk_lib_DockerIgnoreStrategy(p) {
}
function aws_cdk_lib_SymlinkFollowMode(p) {
}
function aws_cdk_lib_IgnoreMode(p) {
}
function aws_cdk_lib_CopyOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.follow))
            aws_cdk_lib_SymlinkFollowMode(p.follow);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_FileCopyOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.followSymlinks))
            aws_cdk_lib_SymlinkFollowMode(p.followSymlinks);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_FingerprintOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.follow))
            aws_cdk_lib_SymlinkFollowMode(p.follow);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_FileFingerprintOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.followSymlinks))
            aws_cdk_lib_SymlinkFollowMode(p.followSymlinks);
        if (!visitedObjects.has(p.ignoreMode))
            aws_cdk_lib_IgnoreMode(p.ignoreMode);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CustomResourceProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CustomResource(p) {
}
function aws_cdk_lib_NestedStackProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.removalPolicy))
            aws_cdk_lib_RemovalPolicy(p.removalPolicy);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_NestedStack(p) {
}
function aws_cdk_lib_CustomResourceProviderProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.runtime))
            aws_cdk_lib_CustomResourceProviderRuntime(p.runtime);
        if (!visitedObjects.has(p.memorySize))
            aws_cdk_lib_Size(p.memorySize);
        if (!visitedObjects.has(p.timeout))
            aws_cdk_lib_Duration(p.timeout);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CustomResourceProviderRuntime(p) {
}
function aws_cdk_lib_CustomResourceProvider(p) {
}
function aws_cdk_lib_CfnCapabilities(p) {
}
function aws_cdk_lib_CfnCustomResourceProps(p) {
}
function aws_cdk_lib_CfnCustomResource(p) {
}
function aws_cdk_lib_CfnHookDefaultVersionProps(p) {
}
function aws_cdk_lib_CfnHookDefaultVersion(p) {
}
function aws_cdk_lib_CfnHookTypeConfigProps(p) {
}
function aws_cdk_lib_CfnHookTypeConfig(p) {
}
function aws_cdk_lib_CfnHookVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loggingConfig))
            aws_cdk_lib_IResolvable(p.loggingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnHookVersion(p) {
}
function aws_cdk_lib_CfnHookVersion_LoggingConfigProperty(p) {
}
function aws_cdk_lib_CfnMacroProps(p) {
}
function aws_cdk_lib_CfnMacro(p) {
}
function aws_cdk_lib_CfnModuleDefaultVersionProps(p) {
}
function aws_cdk_lib_CfnModuleDefaultVersion(p) {
}
function aws_cdk_lib_CfnModuleVersionProps(p) {
}
function aws_cdk_lib_CfnModuleVersion(p) {
}
function aws_cdk_lib_CfnPublicTypeVersionProps(p) {
}
function aws_cdk_lib_CfnPublicTypeVersion(p) {
}
function aws_cdk_lib_CfnPublisherProps(p) {
}
function aws_cdk_lib_CfnPublisher(p) {
}
function aws_cdk_lib_CfnResourceDefaultVersionProps(p) {
}
function aws_cdk_lib_CfnResourceDefaultVersion(p) {
}
function aws_cdk_lib_CfnResourceVersionProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loggingConfig))
            aws_cdk_lib_IResolvable(p.loggingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnResourceVersion(p) {
}
function aws_cdk_lib_CfnResourceVersion_LoggingConfigProperty(p) {
}
function aws_cdk_lib_CfnStackProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnStack(p) {
}
function aws_cdk_lib_CfnStackSetProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.autoDeployment))
            aws_cdk_lib_IResolvable(p.autoDeployment);
        if (!visitedObjects.has(p.operationPreferences))
            aws_cdk_lib_IResolvable(p.operationPreferences);
        if (!visitedObjects.has(p.parameters))
            aws_cdk_lib_IResolvable(p.parameters);
        if (!visitedObjects.has(p.stackInstancesGroup))
            aws_cdk_lib_IResolvable(p.stackInstancesGroup);
        if (p.tags != null)
            for (const o of p.tags)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_CfnTag(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnStackSet(p) {
}
function aws_cdk_lib_CfnStackSet_AutoDeploymentProperty(p) {
}
function aws_cdk_lib_CfnStackSet_DeploymentTargetsProperty(p) {
}
function aws_cdk_lib_CfnStackSet_ManagedExecutionProperty(p) {
}
function aws_cdk_lib_CfnStackSet_OperationPreferencesProperty(p) {
}
function aws_cdk_lib_CfnStackSet_ParameterProperty(p) {
}
function aws_cdk_lib_CfnStackSet_StackInstancesProperty(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.deploymentTargets))
            aws_cdk_lib_IResolvable(p.deploymentTargets);
        if (!visitedObjects.has(p.parameterOverrides))
            aws_cdk_lib_IResolvable(p.parameterOverrides);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnTypeActivationProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.loggingConfig))
            aws_cdk_lib_IResolvable(p.loggingConfig);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_CfnTypeActivation(p) {
}
function aws_cdk_lib_CfnTypeActivation_LoggingConfigProperty(p) {
}
function aws_cdk_lib_CfnWaitConditionProps(p) {
}
function aws_cdk_lib_CfnWaitCondition(p) {
}
function aws_cdk_lib_CfnWaitConditionHandle(p) {
}
function aws_cdk_lib_FeatureFlags(p) {
}
function aws_cdk_lib_PermissionsBoundaryBindOptions(p) {
}
function aws_cdk_lib_PermissionsBoundary(p) {
}
function aws_cdk_lib_IPolicyValidationPluginBeta1(p) {
}
function aws_cdk_lib_IPolicyValidationContextBeta1(p) {
}
function aws_cdk_lib_PolicyViolationBeta1(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.violatingResources != null)
            for (const o of p.violatingResources)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_PolicyViolatingResourceBeta1(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_PolicyViolatingResourceBeta1(p) {
}
function aws_cdk_lib_PolicyValidationReportStatusBeta1(p) {
}
function aws_cdk_lib_PolicyValidationPluginReportBeta1(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (p.violations != null)
            for (const o of p.violations)
                if (!visitedObjects.has(o))
                    aws_cdk_lib_PolicyViolationBeta1(o);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_IntrinsicProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    try {
        if (!visitedObjects.has(p.typeHint))
            aws_cdk_lib_ResolutionTypeHint(p.typeHint);
    }
    finally {
        visitedObjects.delete(p);
    }
}
function aws_cdk_lib_Intrinsic(p) {
}
function aws_cdk_lib_UniqueResourceNameOptions(p) {
}
function aws_cdk_lib_Names(p) {
}
function aws_cdk_lib_TimeZone(p) {
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage.trim()}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
function getPropertyDescriptor(obj, prop) {
    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);
    if (descriptor) {
        return descriptor;
    }
    const proto = Object.getPrototypeOf(obj);
    const prototypeDescriptor = proto && getPropertyDescriptor(proto, prop);
    if (prototypeDescriptor) {
        return prototypeDescriptor;
    }
    return {};
}
const visitedObjects = new Set();
class DeprecationError extends Error {
    constructor(...args) {
        super(...args);
        Object.defineProperty(this, "name", {
            configurable: false,
            enumerable: true,
            value: "DeprecationError",
            writable: false,
        });
    }
}
module.exports = { print, getPropertyDescriptor, DeprecationError, aws_cdk_lib_alexa_ask_CfnSkillProps, aws_cdk_lib_alexa_ask_CfnSkill, aws_cdk_lib_alexa_ask_CfnSkill_AuthenticationConfigurationProperty, aws_cdk_lib_alexa_ask_CfnSkill_OverridesProperty, aws_cdk_lib_alexa_ask_CfnSkill_SkillPackageProperty, aws_cdk_lib_assertions_Capture, aws_cdk_lib_assertions_Template, aws_cdk_lib_assertions_TemplateParsingOptions, aws_cdk_lib_assertions_Match, aws_cdk_lib_assertions_Matcher, aws_cdk_lib_assertions_MatchFailure, aws_cdk_lib_assertions_MatchCapture, aws_cdk_lib_assertions_MatchResult, aws_cdk_lib_assertions_Annotations, aws_cdk_lib_aws_accessanalyzer_CfnAnalyzerProps, aws_cdk_lib_aws_accessanalyzer_CfnAnalyzer, aws_cdk_lib_aws_accessanalyzer_CfnAnalyzer_ArchiveRuleProperty, aws_cdk_lib_aws_accessanalyzer_CfnAnalyzer_FilterProperty, aws_cdk_lib_aws_acmpca_CfnCertificateProps, aws_cdk_lib_aws_acmpca_CfnCertificate, aws_cdk_lib_aws_acmpca_CfnCertificate_ApiPassthroughProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_CustomAttributeProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_CustomExtensionProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_EdiPartyNameProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_ExtendedKeyUsageProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_ExtensionsProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_GeneralNameProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_KeyUsageProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_OtherNameProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_PolicyInformationProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_PolicyQualifierInfoProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_QualifierProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_SubjectProperty, aws_cdk_lib_aws_acmpca_CfnCertificate_ValidityProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthorityProps, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_AccessDescriptionProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_AccessMethodProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_CrlConfigurationProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_CsrExtensionsProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_CustomAttributeProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_EdiPartyNameProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_GeneralNameProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_KeyUsageProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_OcspConfigurationProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_OtherNameProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_RevocationConfigurationProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthority_SubjectProperty, aws_cdk_lib_aws_acmpca_CfnCertificateAuthorityActivationProps, aws_cdk_lib_aws_acmpca_CfnCertificateAuthorityActivation, aws_cdk_lib_aws_acmpca_CfnPermissionProps, aws_cdk_lib_aws_acmpca_CfnPermission, aws_cdk_lib_aws_acmpca_ICertificateAuthority, aws_cdk_lib_aws_acmpca_CertificateAuthority, aws_cdk_lib_aws_amazonmq_CfnBrokerProps, aws_cdk_lib_aws_amazonmq_CfnBroker, aws_cdk_lib_aws_amazonmq_CfnBroker_ConfigurationIdProperty, aws_cdk_lib_aws_amazonmq_CfnBroker_EncryptionOptionsProperty, aws_cdk_lib_aws_amazonmq_CfnBroker_LdapServerMetadataProperty, aws_cdk_lib_aws_amazonmq_CfnBroker_LogListProperty, aws_cdk_lib_aws_amazonmq_CfnBroker_MaintenanceWindowProperty, aws_cdk_lib_aws_amazonmq_CfnBroker_TagsEntryProperty, aws_cdk_lib_aws_amazonmq_CfnBroker_UserProperty, aws_cdk_lib_aws_amazonmq_CfnConfigurationProps, aws_cdk_lib_aws_amazonmq_CfnConfiguration, aws_cdk_lib_aws_amazonmq_CfnConfiguration_TagsEntryProperty, aws_cdk_lib_aws_amazonmq_CfnConfigurationAssociationProps, aws_cdk_lib_aws_amazonmq_CfnConfigurationAssociation, aws_cdk_lib_aws_amazonmq_CfnConfigurationAssociation_ConfigurationIdProperty, aws_cdk_lib_aws_amplify_CfnAppProps, aws_cdk_lib_aws_amplify_CfnApp, aws_cdk_lib_aws_amplify_CfnApp_AutoBranchCreationConfigProperty, aws_cdk_lib_aws_amplify_CfnApp_BasicAuthConfigProperty, aws_cdk_lib_aws_amplify_CfnApp_CustomRuleProperty, aws_cdk_lib_aws_amplify_CfnApp_EnvironmentVariableProperty, aws_cdk_lib_aws_amplify_CfnBranchProps, aws_cdk_lib_aws_amplify_CfnBranch, aws_cdk_lib_aws_amplify_CfnBranch_BasicAuthConfigProperty, aws_cdk_lib_aws_amplify_CfnBranch_EnvironmentVariableProperty, aws_cdk_lib_aws_amplify_CfnDomainProps, aws_cdk_lib_aws_amplify_CfnDomain, aws_cdk_lib_aws_amplify_CfnDomain_SubDomainSettingProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponentProps, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ActionParametersProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentBindingPropertiesValueProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentBindingPropertiesValuePropertiesProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentChildProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentConditionPropertyProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentDataConfigurationProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentEventProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentPropertyProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentPropertyBindingPropertiesProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_ComponentVariantProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_FormBindingElementProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_MutationActionSetStateParameterProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_PredicateProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnComponent_SortPropertyProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnFormProps, aws_cdk_lib_aws_amplifyuibuilder_CfnForm, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FieldConfigProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FieldInputConfigProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FieldPositionProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FieldValidationConfigurationProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FormButtonProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FormCTAProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FormDataTypeConfigProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FormInputValuePropertyProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FormStyleProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_FormStyleConfigProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_SectionalElementProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_ValueMappingProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnForm_ValueMappingsProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnThemeProps, aws_cdk_lib_aws_amplifyuibuilder_CfnTheme, aws_cdk_lib_aws_amplifyuibuilder_CfnTheme_ThemeValueProperty, aws_cdk_lib_aws_amplifyuibuilder_CfnTheme_ThemeValuesProperty, aws_cdk_lib_aws_apigateway_IRestApi, aws_cdk_lib_aws_apigateway_RestApiBaseProps, aws_cdk_lib_aws_apigateway_RestApiProps, aws_cdk_lib_aws_apigateway_SpecRestApiProps, aws_cdk_lib_aws_apigateway_RestApiBase, aws_cdk_lib_aws_apigateway_SpecRestApi, aws_cdk_lib_aws_apigateway_RestApiAttributes, aws_cdk_lib_aws_apigateway_RestApi, aws_cdk_lib_aws_apigateway_EndpointConfiguration, aws_cdk_lib_aws_apigateway_ApiKeySourceType, aws_cdk_lib_aws_apigateway_EndpointType, aws_cdk_lib_aws_apigateway_IResource, aws_cdk_lib_aws_apigateway_ResourceOptions, aws_cdk_lib_aws_apigateway_ResourceProps, aws_cdk_lib_aws_apigateway_ResourceBase, aws_cdk_lib_aws_apigateway_ResourceAttributes, aws_cdk_lib_aws_apigateway_Resource, aws_cdk_lib_aws_apigateway_ProxyResourceOptions, aws_cdk_lib_aws_apigateway_ProxyResourceProps, aws_cdk_lib_aws_apigateway_ProxyResource, aws_cdk_lib_aws_apigateway_MethodOptions, aws_cdk_lib_aws_apigateway_MethodProps, aws_cdk_lib_aws_apigateway_Method, aws_cdk_lib_aws_apigateway_AuthorizationType, aws_cdk_lib_aws_apigateway_IntegrationOptions, aws_cdk_lib_aws_apigateway_IntegrationProps, aws_cdk_lib_aws_apigateway_IntegrationConfig, aws_cdk_lib_aws_apigateway_Integration, aws_cdk_lib_aws_apigateway_ContentHandling, aws_cdk_lib_aws_apigateway_IntegrationType, aws_cdk_lib_aws_apigateway_PassthroughBehavior, aws_cdk_lib_aws_apigateway_ConnectionType, aws_cdk_lib_aws_apigateway_IntegrationResponse, aws_cdk_lib_aws_apigateway_DeploymentProps, aws_cdk_lib_aws_apigateway_Deployment, aws_cdk_lib_aws_apigateway_IStage, aws_cdk_lib_aws_apigateway_StageOptions, aws_cdk_lib_aws_apigateway_StageProps, aws_cdk_lib_aws_apigateway_MethodLoggingLevel, aws_cdk_lib_aws_apigateway_MethodDeploymentOptions, aws_cdk_lib_aws_apigateway_StageAttributes, aws_cdk_lib_aws_apigateway_StageBase, aws_cdk_lib_aws_apigateway_Stage, aws_cdk_lib_aws_apigateway_AwsIntegrationProps, aws_cdk_lib_aws_apigateway_AwsIntegration, aws_cdk_lib_aws_apigateway_LambdaIntegrationOptions, aws_cdk_lib_aws_apigateway_LambdaIntegration, aws_cdk_lib_aws_apigateway_HttpIntegrationProps, aws_cdk_lib_aws_apigateway_HttpIntegration, aws_cdk_lib_aws_apigateway_MockIntegration, aws_cdk_lib_aws_apigateway_StepFunctionsExecutionIntegrationOptions, aws_cdk_lib_aws_apigateway_StepFunctionsIntegration, aws_cdk_lib_aws_apigateway_RequestContext, aws_cdk_lib_aws_apigateway_LambdaRestApiProps, aws_cdk_lib_aws_apigateway_LambdaRestApi, aws_cdk_lib_aws_apigateway_IApiKey, aws_cdk_lib_aws_apigateway_ApiKeyOptions, aws_cdk_lib_aws_apigateway_ApiKeyProps, aws_cdk_lib_aws_apigateway_ApiKey, aws_cdk_lib_aws_apigateway_RateLimitedApiKeyProps, aws_cdk_lib_aws_apigateway_RateLimitedApiKey, aws_cdk_lib_aws_apigateway_ThrottleSettings, aws_cdk_lib_aws_apigateway_Period, aws_cdk_lib_aws_apigateway_QuotaSettings, aws_cdk_lib_aws_apigateway_ThrottlingPerMethod, aws_cdk_lib_aws_apigateway_UsagePlanPerApiStage, aws_cdk_lib_aws_apigateway_UsagePlanProps, aws_cdk_lib_aws_apigateway_AddApiKeyOptions, aws_cdk_lib_aws_apigateway_IUsagePlan, aws_cdk_lib_aws_apigateway_UsagePlan, aws_cdk_lib_aws_apigateway_IVpcLink, aws_cdk_lib_aws_apigateway_VpcLinkProps, aws_cdk_lib_aws_apigateway_VpcLink, aws_cdk_lib_aws_apigateway_MethodResponse, aws_cdk_lib_aws_apigateway_IModel, aws_cdk_lib_aws_apigateway_ModelOptions, aws_cdk_lib_aws_apigateway_ModelProps, aws_cdk_lib_aws_apigateway_Model, aws_cdk_lib_aws_apigateway_IRequestValidator, aws_cdk_lib_aws_apigateway_RequestValidatorOptions, aws_cdk_lib_aws_apigateway_RequestValidatorProps, aws_cdk_lib_aws_apigateway_RequestValidator, aws_cdk_lib_aws_apigateway_Authorizer, aws_cdk_lib_aws_apigateway_IAuthorizer, aws_cdk_lib_aws_apigateway_JsonSchemaVersion, aws_cdk_lib_aws_apigateway_JsonSchemaType, aws_cdk_lib_aws_apigateway_JsonSchema, aws_cdk_lib_aws_apigateway_ApiMappingOptions, aws_cdk_lib_aws_apigateway_SecurityPolicy, aws_cdk_lib_aws_apigateway_DomainNameOptions, aws_cdk_lib_aws_apigateway_DomainNameProps, aws_cdk_lib_aws_apigateway_IDomainName, aws_cdk_lib_aws_apigateway_DomainName, aws_cdk_lib_aws_apigateway_DomainNameAttributes, aws_cdk_lib_aws_apigateway_MTLSConfig, aws_cdk_lib_aws_apigateway_BasePathMappingOptions, aws_cdk_lib_aws_apigateway_BasePathMappingProps, aws_cdk_lib_aws_apigateway_BasePathMapping, aws_cdk_lib_aws_apigateway_CorsOptions, aws_cdk_lib_aws_apigateway_Cors, aws_cdk_lib_aws_apigateway_LambdaAuthorizerProps, aws_cdk_lib_aws_apigateway_TokenAuthorizerProps, aws_cdk_lib_aws_apigateway_TokenAuthorizer, aws_cdk_lib_aws_apigateway_RequestAuthorizerProps, aws_cdk_lib_aws_apigateway_RequestAuthorizer, aws_cdk_lib_aws_apigateway_IdentitySource, aws_cdk_lib_aws_apigateway_CognitoUserPoolsAuthorizerProps, aws_cdk_lib_aws_apigateway_CognitoUserPoolsAuthorizer, aws_cdk_lib_aws_apigateway_IAccessLogDestination, aws_cdk_lib_aws_apigateway_AccessLogDestinationConfig, aws_cdk_lib_aws_apigateway_LogGroupLogDestination, aws_cdk_lib_aws_apigateway_AccessLogField, aws_cdk_lib_aws_apigateway_JsonWithStandardFieldProps, aws_cdk_lib_aws_apigateway_AccessLogFormat, aws_cdk_lib_aws_apigateway_ApiDefinition, aws_cdk_lib_aws_apigateway_ApiDefinitionS3Location, aws_cdk_lib_aws_apigateway_ApiDefinitionConfig, aws_cdk_lib_aws_apigateway_S3ApiDefinition, aws_cdk_lib_aws_apigateway_InlineApiDefinition, aws_cdk_lib_aws_apigateway_AssetApiDefinition, aws_cdk_lib_aws_apigateway_IGatewayResponse, aws_cdk_lib_aws_apigateway_GatewayResponseProps, aws_cdk_lib_aws_apigateway_GatewayResponseOptions, aws_cdk_lib_aws_apigateway_GatewayResponse, aws_cdk_lib_aws_apigateway_ResponseType, aws_cdk_lib_aws_apigateway_StepFunctionsRestApiProps, aws_cdk_lib_aws_apigateway_StepFunctionsRestApi, aws_cdk_lib_aws_apigateway_CfnAccountProps, aws_cdk_lib_aws_apigateway_CfnAccount, aws_cdk_lib_aws_apigateway_CfnApiKeyProps, aws_cdk_lib_aws_apigateway_CfnApiKey, aws_cdk_lib_aws_apigateway_CfnApiKey_StageKeyProperty, aws_cdk_lib_aws_apigateway_CfnAuthorizerProps, aws_cdk_lib_aws_apigateway_CfnAuthorizer, aws_cdk_lib_aws_apigateway_CfnBasePathMappingProps, aws_cdk_lib_aws_apigateway_CfnBasePathMapping, aws_cdk_lib_aws_apigateway_CfnClientCertificateProps, aws_cdk_lib_aws_apigateway_CfnClientCertificate, aws_cdk_lib_aws_apigateway_CfnDeploymentProps, aws_cdk_lib_aws_apigateway_CfnDeployment, aws_cdk_lib_aws_apigateway_CfnDeployment_AccessLogSettingProperty, aws_cdk_lib_aws_apigateway_CfnDeployment_CanarySettingProperty, aws_cdk_lib_aws_apigateway_CfnDeployment_DeploymentCanarySettingsProperty, aws_cdk_lib_aws_apigateway_CfnDeployment_MethodSettingProperty, aws_cdk_lib_aws_apigateway_CfnDeployment_StageDescriptionProperty, aws_cdk_lib_aws_apigateway_CfnDocumentationPartProps, aws_cdk_lib_aws_apigateway_CfnDocumentationPart, aws_cdk_lib_aws_apigateway_CfnDocumentationPart_LocationProperty, aws_cdk_lib_aws_apigateway_CfnDocumentationVersionProps, aws_cdk_lib_aws_apigateway_CfnDocumentationVersion, aws_cdk_lib_aws_apigateway_CfnDomainNameProps, aws_cdk_lib_aws_apigateway_CfnDomainName, aws_cdk_lib_aws_apigateway_CfnDomainName_EndpointConfigurationProperty, aws_cdk_lib_aws_apigateway_CfnDomainName_MutualTlsAuthenticationProperty, aws_cdk_lib_aws_apigateway_CfnGatewayResponseProps, aws_cdk_lib_aws_apigateway_CfnGatewayResponse, aws_cdk_lib_aws_apigateway_CfnMethodProps, aws_cdk_lib_aws_apigateway_CfnMethod, aws_cdk_lib_aws_apigateway_CfnMethod_IntegrationProperty, aws_cdk_lib_aws_apigateway_CfnMethod_IntegrationResponseProperty, aws_cdk_lib_aws_apigateway_CfnMethod_MethodResponseProperty, aws_cdk_lib_aws_apigateway_CfnModelProps, aws_cdk_lib_aws_apigateway_CfnModel, aws_cdk_lib_aws_apigateway_CfnRequestValidatorProps, aws_cdk_lib_aws_apigateway_CfnRequestValidator, aws_cdk_lib_aws_apigateway_CfnResourceProps, aws_cdk_lib_aws_apigateway_CfnResource, aws_cdk_lib_aws_apigateway_CfnRestApiProps, aws_cdk_lib_aws_apigateway_CfnRestApi, aws_cdk_lib_aws_apigateway_CfnRestApi_EndpointConfigurationProperty, aws_cdk_lib_aws_apigateway_CfnRestApi_S3LocationProperty, aws_cdk_lib_aws_apigateway_CfnStageProps, aws_cdk_lib_aws_apigateway_CfnStage, aws_cdk_lib_aws_apigateway_CfnStage_AccessLogSettingProperty, aws_cdk_lib_aws_apigateway_CfnStage_CanarySettingProperty, aws_cdk_lib_aws_apigateway_CfnStage_MethodSettingProperty, aws_cdk_lib_aws_apigateway_CfnUsagePlanProps, aws_cdk_lib_aws_apigateway_CfnUsagePlan, aws_cdk_lib_aws_apigateway_CfnUsagePlan_ApiStageProperty, aws_cdk_lib_aws_apigateway_CfnUsagePlan_QuotaSettingsProperty, aws_cdk_lib_aws_apigateway_CfnUsagePlan_ThrottleSettingsProperty, aws_cdk_lib_aws_apigateway_CfnUsagePlanKeyProps, aws_cdk_lib_aws_apigateway_CfnUsagePlanKey, aws_cdk_lib_aws_apigateway_CfnVpcLinkProps, aws_cdk_lib_aws_apigateway_CfnVpcLink, aws_cdk_lib_aws_apigatewayv2_CfnApiProps, aws_cdk_lib_aws_apigatewayv2_CfnApi, aws_cdk_lib_aws_apigatewayv2_CfnApi_BodyS3LocationProperty, aws_cdk_lib_aws_apigatewayv2_CfnApi_CorsProperty, aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverridesProps, aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverrides, aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverrides_AccessLogSettingsProperty, aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverrides_IntegrationOverridesProperty, aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverrides_RouteOverridesProperty, aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverrides_RouteSettingsProperty, aws_cdk_lib_aws_apigatewayv2_CfnApiGatewayManagedOverrides_StageOverridesProperty, aws_cdk_lib_aws_apigatewayv2_CfnApiMappingProps, aws_cdk_lib_aws_apigatewayv2_CfnApiMapping, aws_cdk_lib_aws_apigatewayv2_CfnAuthorizerProps, aws_cdk_lib_aws_apigatewayv2_CfnAuthorizer, aws_cdk_lib_aws_apigatewayv2_CfnAuthorizer_JWTConfigurationProperty, aws_cdk_lib_aws_apigatewayv2_CfnDeploymentProps, aws_cdk_lib_aws_apigatewayv2_CfnDeployment, aws_cdk_lib_aws_apigatewayv2_CfnDomainNameProps, aws_cdk_lib_aws_apigatewayv2_CfnDomainName, aws_cdk_lib_aws_apigatewayv2_CfnDomainName_DomainNameConfigurationProperty, aws_cdk_lib_aws_apigatewayv2_CfnDomainName_MutualTlsAuthenticationProperty, aws_cdk_lib_aws_apigatewayv2_CfnIntegrationProps, aws_cdk_lib_aws_apigatewayv2_CfnIntegration, aws_cdk_lib_aws_apigatewayv2_CfnIntegration_ResponseParameterProperty, aws_cdk_lib_aws_apigatewayv2_CfnIntegration_ResponseParameterListProperty, aws_cdk_lib_aws_apigatewayv2_CfnIntegration_TlsConfigProperty, aws_cdk_lib_aws_apigatewayv2_CfnIntegrationResponseProps, aws_cdk_lib_aws_apigatewayv2_CfnIntegrationResponse, aws_cdk_lib_aws_apigatewayv2_CfnModelProps, aws_cdk_lib_aws_apigatewayv2_CfnModel, aws_cdk_lib_aws_apigatewayv2_CfnRouteProps, aws_cdk_lib_aws_apigatewayv2_CfnRoute, aws_cdk_lib_aws_apigatewayv2_CfnRoute_ParameterConstraintsProperty, aws_cdk_lib_aws_apigatewayv2_CfnRouteResponseProps, aws_cdk_lib_aws_apigatewayv2_CfnRouteResponse, aws_cdk_lib_aws_apigatewayv2_CfnRouteResponse_ParameterConstraintsProperty, aws_cdk_lib_aws_apigatewayv2_CfnStageProps, aws_cdk_lib_aws_apigatewayv2_CfnStage, aws_cdk_lib_aws_apigatewayv2_CfnStage_AccessLogSettingsProperty, aws_cdk_lib_aws_apigatewayv2_CfnStage_RouteSettingsProperty, aws_cdk_lib_aws_apigatewayv2_CfnVpcLinkProps, aws_cdk_lib_aws_apigatewayv2_CfnVpcLink, aws_cdk_lib_aws_appconfig_CfnApplicationProps, aws_cdk_lib_aws_appconfig_CfnApplication, aws_cdk_lib_aws_appconfig_CfnApplication_TagsProperty, aws_cdk_lib_aws_appconfig_CfnConfigurationProfileProps, aws_cdk_lib_aws_appconfig_CfnConfigurationProfile, aws_cdk_lib_aws_appconfig_CfnConfigurationProfile_TagsProperty, aws_cdk_lib_aws_appconfig_CfnConfigurationProfile_ValidatorsProperty, aws_cdk_lib_aws_appconfig_CfnDeploymentProps, aws_cdk_lib_aws_appconfig_CfnDeployment, aws_cdk_lib_aws_appconfig_CfnDeployment_TagsProperty, aws_cdk_lib_aws_appconfig_CfnDeploymentStrategyProps, aws_cdk_lib_aws_appconfig_CfnDeploymentStrategy, aws_cdk_lib_aws_appconfig_CfnDeploymentStrategy_TagsProperty, aws_cdk_lib_aws_appconfig_CfnEnvironmentProps, aws_cdk_lib_aws_appconfig_CfnEnvironment, aws_cdk_lib_aws_appconfig_CfnEnvironment_MonitorsProperty, aws_cdk_lib_aws_appconfig_CfnEnvironment_TagsProperty, aws_cdk_lib_aws_appconfig_CfnHostedConfigurationVersionProps, aws_cdk_lib_aws_appconfig_CfnHostedConfigurationVersion, aws_cdk_lib_aws_appflow_CfnConnectorProps, aws_cdk_lib_aws_appflow_CfnConnector, aws_cdk_lib_aws_appflow_CfnConnector_ConnectorProvisioningConfigProperty, aws_cdk_lib_aws_appflow_CfnConnector_LambdaConnectorProvisioningConfigProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfileProps, aws_cdk_lib_aws_appflow_CfnConnectorProfile, aws_cdk_lib_aws_appflow_CfnConnectorProfile_AmplitudeConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_ApiKeyCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_BasicAuthCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_ConnectorOAuthRequestProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_ConnectorProfileConfigProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_ConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_ConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_CustomAuthCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_CustomConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_CustomConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_DatadogConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_DatadogConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_DynatraceConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_DynatraceConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_GoogleAnalyticsConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_InforNexusConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_InforNexusConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_MarketoConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_MarketoConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_OAuth2CredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_OAuth2PropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_OAuthCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_OAuthPropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_PardotConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_PardotConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_RedshiftConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_RedshiftConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_SAPODataConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_SAPODataConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_SalesforceConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_SalesforceConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_ServiceNowConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_ServiceNowConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_SingularConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_SlackConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_SlackConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_SnowflakeConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_SnowflakeConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_TrendmicroConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_VeevaConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_VeevaConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_ZendeskConnectorProfileCredentialsProperty, aws_cdk_lib_aws_appflow_CfnConnectorProfile_ZendeskConnectorProfilePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlowProps, aws_cdk_lib_aws_appflow_CfnFlow, aws_cdk_lib_aws_appflow_CfnFlow_AggregationConfigProperty, aws_cdk_lib_aws_appflow_CfnFlow_AmplitudeSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_ConnectorOperatorProperty, aws_cdk_lib_aws_appflow_CfnFlow_CustomConnectorDestinationPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_CustomConnectorSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_DatadogSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_DestinationConnectorPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_DestinationFlowConfigProperty, aws_cdk_lib_aws_appflow_CfnFlow_DynatraceSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_ErrorHandlingConfigProperty, aws_cdk_lib_aws_appflow_CfnFlow_EventBridgeDestinationPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_GlueDataCatalogProperty, aws_cdk_lib_aws_appflow_CfnFlow_GoogleAnalyticsSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_IncrementalPullConfigProperty, aws_cdk_lib_aws_appflow_CfnFlow_InforNexusSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_LookoutMetricsDestinationPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_MarketoDestinationPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_MarketoSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_MetadataCatalogConfigProperty, aws_cdk_lib_aws_appflow_CfnFlow_PardotSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_PrefixConfigProperty, aws_cdk_lib_aws_appflow_CfnFlow_RedshiftDestinationPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_S3DestinationPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_S3InputFormatConfigProperty, aws_cdk_lib_aws_appflow_CfnFlow_S3OutputFormatConfigProperty, aws_cdk_lib_aws_appflow_CfnFlow_S3SourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_SAPODataDestinationPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_SAPODataSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_SalesforceDestinationPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_SalesforceSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_ScheduledTriggerPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_ServiceNowSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_SingularSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_SlackSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_SnowflakeDestinationPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_SourceConnectorPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_SourceFlowConfigProperty, aws_cdk_lib_aws_appflow_CfnFlow_SuccessResponseHandlingConfigProperty, aws_cdk_lib_aws_appflow_CfnFlow_TaskProperty, aws_cdk_lib_aws_appflow_CfnFlow_TaskPropertiesObjectProperty, aws_cdk_lib_aws_appflow_CfnFlow_TrendmicroSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_TriggerConfigProperty, aws_cdk_lib_aws_appflow_CfnFlow_UpsolverDestinationPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_UpsolverS3OutputFormatConfigProperty, aws_cdk_lib_aws_appflow_CfnFlow_VeevaSourcePropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_ZendeskDestinationPropertiesProperty, aws_cdk_lib_aws_appflow_CfnFlow_ZendeskSourcePropertiesProperty, aws_cdk_lib_aws_appintegrations_CfnDataIntegrationProps, aws_cdk_lib_aws_appintegrations_CfnDataIntegration, aws_cdk_lib_aws_appintegrations_CfnDataIntegration_ScheduleConfigProperty, aws_cdk_lib_aws_appintegrations_CfnEventIntegrationProps, aws_cdk_lib_aws_appintegrations_CfnEventIntegration, aws_cdk_lib_aws_appintegrations_CfnEventIntegration_EventFilterProperty, aws_cdk_lib_aws_applicationautoscaling_CfnScalableTargetProps, aws_cdk_lib_aws_applicationautoscaling_CfnScalableTarget, aws_cdk_lib_aws_applicationautoscaling_CfnScalableTarget_ScalableTargetActionProperty, aws_cdk_lib_aws_applicationautoscaling_CfnScalableTarget_ScheduledActionProperty, aws_cdk_lib_aws_applicationautoscaling_CfnScalableTarget_SuspendedStateProperty, aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicyProps, aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy, aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy_CustomizedMetricSpecificationProperty, aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy_MetricDimensionProperty, aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy_PredefinedMetricSpecificationProperty, aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy_StepAdjustmentProperty, aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy_StepScalingPolicyConfigurationProperty, aws_cdk_lib_aws_applicationautoscaling_CfnScalingPolicy_TargetTrackingScalingPolicyConfigurationProperty, aws_cdk_lib_aws_applicationautoscaling_BaseScalableAttributeProps, aws_cdk_lib_aws_applicationautoscaling_BaseScalableAttribute, aws_cdk_lib_aws_applicationautoscaling_EnableScalingProps, aws_cdk_lib_aws_applicationautoscaling_Schedule, aws_cdk_lib_aws_applicationautoscaling_CronOptions, aws_cdk_lib_aws_applicationautoscaling_IScalableTarget, aws_cdk_lib_aws_applicationautoscaling_ScalableTargetProps, aws_cdk_lib_aws_applicationautoscaling_ScalableTarget, aws_cdk_lib_aws_applicationautoscaling_ScalingSchedule, aws_cdk_lib_aws_applicationautoscaling_ServiceNamespace, aws_cdk_lib_aws_applicationautoscaling_BasicStepScalingPolicyProps, aws_cdk_lib_aws_applicationautoscaling_StepScalingPolicyProps, aws_cdk_lib_aws_applicationautoscaling_StepScalingPolicy, aws_cdk_lib_aws_applicationautoscaling_ScalingInterval, aws_cdk_lib_aws_applicationautoscaling_StepScalingActionProps, aws_cdk_lib_aws_applicationautoscaling_StepScalingAction, aws_cdk_lib_aws_applicationautoscaling_AdjustmentType, aws_cdk_lib_aws_applicationautoscaling_MetricAggregationType, aws_cdk_lib_aws_applicationautoscaling_AdjustmentTier, aws_cdk_lib_aws_applicationautoscaling_BaseTargetTrackingProps, aws_cdk_lib_aws_applicationautoscaling_BasicTargetTrackingScalingPolicyProps, aws_cdk_lib_aws_applicationautoscaling_TargetTrackingScalingPolicyProps, aws_cdk_lib_aws_applicationautoscaling_TargetTrackingScalingPolicy, aws_cdk_lib_aws_applicationautoscaling_PredefinedMetric, aws_cdk_lib_aws_applicationinsights_CfnApplicationProps, aws_cdk_lib_aws_applicationinsights_CfnApplication, aws_cdk_lib_aws_applicationinsights_CfnApplication_AlarmProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_AlarmMetricProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_ComponentConfigurationProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_ComponentMonitoringSettingProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_ConfigurationDetailsProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_CustomComponentProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_HAClusterPrometheusExporterProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_HANAPrometheusExporterProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_JMXPrometheusExporterProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_LogProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_LogPatternProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_LogPatternSetProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_SubComponentConfigurationDetailsProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_SubComponentTypeConfigurationProperty, aws_cdk_lib_aws_applicationinsights_CfnApplication_WindowsEventProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRouteProps, aws_cdk_lib_aws_appmesh_CfnGatewayRoute, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteHostnameMatchProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteHostnameRewriteProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteMetadataMatchProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteRangeMatchProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteSpecProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteTargetProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GatewayRouteVirtualServiceProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GrpcGatewayRouteProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GrpcGatewayRouteActionProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GrpcGatewayRouteMatchProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GrpcGatewayRouteMetadataProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_GrpcGatewayRouteRewriteProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteActionProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteHeaderProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteHeaderMatchProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteMatchProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRoutePathRewriteProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRoutePrefixRewriteProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpGatewayRouteRewriteProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpPathMatchProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_HttpQueryParameterMatchProperty, aws_cdk_lib_aws_appmesh_CfnGatewayRoute_QueryParameterProperty, aws_cdk_lib_aws_appmesh_CfnMeshProps, aws_cdk_lib_aws_appmesh_CfnMesh, aws_cdk_lib_aws_appmesh_CfnMesh_EgressFilterProperty, aws_cdk_lib_aws_appmesh_CfnMesh_MeshServiceDiscoveryProperty, aws_cdk_lib_aws_appmesh_CfnMesh_MeshSpecProperty, aws_cdk_lib_aws_appmesh_CfnRouteProps, aws_cdk_lib_aws_appmesh_CfnRoute, aws_cdk_lib_aws_appmesh_CfnRoute_DurationProperty, aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRetryPolicyProperty, aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRouteProperty, aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRouteActionProperty, aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRouteMatchProperty, aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRouteMetadataProperty, aws_cdk_lib_aws_appmesh_CfnRoute_GrpcRouteMetadataMatchMethodProperty, aws_cdk_lib_aws_appmesh_CfnRoute_GrpcTimeoutProperty, aws_cdk_lib_aws_appmesh_CfnRoute_HeaderMatchMethodProperty, aws_cdk_lib_aws_appmesh_CfnRoute_HttpPathMatchProperty, aws_cdk_lib_aws_appmesh_CfnRoute_HttpQueryParameterMatchProperty, aws_cdk_lib_aws_appmesh_CfnRoute_HttpRetryPolicyProperty, aws_cdk_lib_aws_appmesh_CfnRoute_HttpRouteProperty, aws_cdk_lib_aws_appmesh_CfnRoute_HttpRouteActionProperty, aws_cdk_lib_aws_appmesh_CfnRoute_HttpRouteHeaderProperty, aws_cdk_lib_aws_appmesh_CfnRoute_HttpRouteMatchProperty, aws_cdk_lib_aws_appmesh_CfnRoute_HttpTimeoutProperty, aws_cdk_lib_aws_appmesh_CfnRoute_MatchRangeProperty, aws_cdk_lib_aws_appmesh_CfnRoute_QueryParameterProperty, aws_cdk_lib_aws_appmesh_CfnRoute_RouteSpecProperty, aws_cdk_lib_aws_appmesh_CfnRoute_TcpRouteProperty, aws_cdk_lib_aws_appmesh_CfnRoute_TcpRouteActionProperty, aws_cdk_lib_aws_appmesh_CfnRoute_TcpRouteMatchProperty, aws_cdk_lib_aws_appmesh_CfnRoute_TcpTimeoutProperty, aws_cdk_lib_aws_appmesh_CfnRoute_WeightedTargetProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGatewayProps, aws_cdk_lib_aws_appmesh_CfnVirtualGateway, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_JsonFormatRefProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_LoggingFormatProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_SubjectAlternativeNameMatchersProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_SubjectAlternativeNamesProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayAccessLogProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayBackendDefaultsProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayClientPolicyProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayClientPolicyTlsProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayClientTlsCertificateProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayConnectionPoolProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayFileAccessLogProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayGrpcConnectionPoolProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayHealthCheckPolicyProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayHttp2ConnectionPoolProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayHttpConnectionPoolProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsAcmCertificateProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsCertificateProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsFileCertificateProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsSdsCertificateProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsValidationContextProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayListenerTlsValidationContextTrustProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayLoggingProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayPortMappingProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewaySpecProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayTlsValidationContextProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayTlsValidationContextAcmTrustProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayTlsValidationContextFileTrustProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayTlsValidationContextSdsTrustProperty, aws_cdk_lib_aws_appmesh_CfnVirtualGateway_VirtualGatewayTlsValidationContextTrustProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNodeProps, aws_cdk_lib_aws_appmesh_CfnVirtualNode, aws_cdk_lib_aws_appmesh_CfnVirtualNode_AccessLogProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_AwsCloudMapInstanceAttributeProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_AwsCloudMapServiceDiscoveryProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_BackendProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_BackendDefaultsProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ClientPolicyProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ClientPolicyTlsProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ClientTlsCertificateProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_DnsServiceDiscoveryProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_DurationProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_FileAccessLogProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_GrpcTimeoutProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_HealthCheckProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_HttpTimeoutProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_JsonFormatRefProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTimeoutProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsAcmCertificateProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsCertificateProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsFileCertificateProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsSdsCertificateProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsValidationContextProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ListenerTlsValidationContextTrustProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_LoggingProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_LoggingFormatProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_OutlierDetectionProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_PortMappingProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_ServiceDiscoveryProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_SubjectAlternativeNameMatchersProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_SubjectAlternativeNamesProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_TcpTimeoutProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_TlsValidationContextProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_TlsValidationContextAcmTrustProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_TlsValidationContextFileTrustProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_TlsValidationContextSdsTrustProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_TlsValidationContextTrustProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualNodeConnectionPoolProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualNodeGrpcConnectionPoolProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualNodeHttp2ConnectionPoolProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualNodeHttpConnectionPoolProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualNodeSpecProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualNodeTcpConnectionPoolProperty, aws_cdk_lib_aws_appmesh_CfnVirtualNode_VirtualServiceBackendProperty, aws_cdk_lib_aws_appmesh_CfnVirtualRouterProps, aws_cdk_lib_aws_appmesh_CfnVirtualRouter, aws_cdk_lib_aws_appmesh_CfnVirtualRouter_PortMappingProperty, aws_cdk_lib_aws_appmesh_CfnVirtualRouter_VirtualRouterListenerProperty, aws_cdk_lib_aws_appmesh_CfnVirtualRouter_VirtualRouterSpecProperty, aws_cdk_lib_aws_appmesh_CfnVirtualServiceProps, aws_cdk_lib_aws_appmesh_CfnVirtualService, aws_cdk_lib_aws_appmesh_CfnVirtualService_VirtualNodeServiceProviderProperty, aws_cdk_lib_aws_appmesh_CfnVirtualService_VirtualRouterServiceProviderProperty, aws_cdk_lib_aws_appmesh_CfnVirtualService_VirtualServiceProviderProperty, aws_cdk_lib_aws_appmesh_CfnVirtualService_VirtualServiceSpecProperty, aws_cdk_lib_aws_appmesh_MeshFilterType, aws_cdk_lib_aws_appmesh_IMesh, aws_cdk_lib_aws_appmesh_MeshProps, aws_cdk_lib_aws_appmesh_Mesh, aws_cdk_lib_aws_appmesh_IRoute, aws_cdk_lib_aws_appmesh_RouteBaseProps, aws_cdk_lib_aws_appmesh_RouteProps, aws_cdk_lib_aws_appmesh_Route, aws_cdk_lib_aws_appmesh_RouteAttributes, aws_cdk_lib_aws_appmesh_IpPreference, aws_cdk_lib_aws_appmesh_MeshServiceDiscovery, aws_cdk_lib_aws_appmesh_ServiceDiscoveryConfig, aws_cdk_lib_aws_appmesh_DnsResponseType, aws_cdk_lib_aws_appmesh_ServiceDiscovery, aws_cdk_lib_aws_appmesh_WeightedTarget, aws_cdk_lib_aws_appmesh_HttpRouteMatch, aws_cdk_lib_aws_appmesh_HttpRouteProtocol, aws_cdk_lib_aws_appmesh_GrpcRouteMatch, aws_cdk_lib_aws_appmesh_RouteSpecOptionsBase, aws_cdk_lib_aws_appmesh_HttpRouteSpecOptions, aws_cdk_lib_aws_appmesh_HttpRetryPolicy, aws_cdk_lib_aws_appmesh_HttpRetryEvent, aws_cdk_lib_aws_appmesh_TcpRetryEvent, aws_cdk_lib_aws_appmesh_TcpRouteSpecOptions, aws_cdk_lib_aws_appmesh_GrpcRouteSpecOptions, aws_cdk_lib_aws_appmesh_GrpcRetryPolicy, aws_cdk_lib_aws_appmesh_GrpcRetryEvent, aws_cdk_lib_aws_appmesh_RouteSpecConfig, aws_cdk_lib_aws_appmesh_RouteSpec, aws_cdk_lib_aws_appmesh_HttpTimeout, aws_cdk_lib_aws_appmesh_GrpcTimeout, aws_cdk_lib_aws_appmesh_TcpTimeout, aws_cdk_lib_aws_appmesh_OutlierDetection, aws_cdk_lib_aws_appmesh_AccessLogConfig, aws_cdk_lib_aws_appmesh_AccessLog, aws_cdk_lib_aws_appmesh_BackendDefaults, aws_cdk_lib_aws_appmesh_VirtualServiceBackendOptions, aws_cdk_lib_aws_appmesh_BackendConfig, aws_cdk_lib_aws_appmesh_Backend, aws_cdk_lib_aws_appmesh_HttpConnectionPool, aws_cdk_lib_aws_appmesh_TcpConnectionPool, aws_cdk_lib_aws_appmesh_GrpcConnectionPool, aws_cdk_lib_aws_appmesh_Http2ConnectionPool, aws_cdk_lib_aws_appmesh_TlsCertificateConfig, aws_cdk_lib_aws_appmesh_TlsCertificate, aws_cdk_lib_aws_appmesh_MutualTlsCertificate, aws_cdk_lib_aws_appmesh_IVirtualNode, aws_cdk_lib_aws_appmesh_VirtualNodeBaseProps, aws_cdk_lib_aws_appmesh_VirtualNodeProps, aws_cdk_lib_aws_appmesh_VirtualNode, aws_cdk_lib_aws_appmesh_VirtualNodeAttributes, aws_cdk_lib_aws_appmesh_IVirtualRouter, aws_cdk_lib_aws_appmesh_VirtualRouterBaseProps, aws_cdk_lib_aws_appmesh_VirtualRouterProps, aws_cdk_lib_aws_appmesh_VirtualRouter, aws_cdk_lib_aws_appmesh_VirtualRouterAttributes, aws_cdk_lib_aws_appmesh_VirtualRouterListenerConfig, aws_cdk_lib_aws_appmesh_VirtualRouterListener, aws_cdk_lib_aws_appmesh_IVirtualService, aws_cdk_lib_aws_appmesh_VirtualServiceProps, aws_cdk_lib_aws_appmesh_VirtualService, aws_cdk_lib_aws_appmesh_VirtualServiceAttributes, aws_cdk_lib_aws_appmesh_VirtualServiceProviderConfig, aws_cdk_lib_aws_appmesh_VirtualServiceProvider, aws_cdk_lib_aws_appmesh_VirtualNodeListenerConfig, aws_cdk_lib_aws_appmesh_HttpVirtualNodeListenerOptions, aws_cdk_lib_aws_appmesh_Http2VirtualNodeListenerOptions, aws_cdk_lib_aws_appmesh_GrpcVirtualNodeListenerOptions, aws_cdk_lib_aws_appmesh_TcpVirtualNodeListenerOptions, aws_cdk_lib_aws_appmesh_VirtualNodeListener, aws_cdk_lib_aws_appmesh_IVirtualGateway, aws_cdk_lib_aws_appmesh_VirtualGatewayBaseProps, aws_cdk_lib_aws_appmesh_VirtualGatewayProps, aws_cdk_lib_aws_appmesh_VirtualGateway, aws_cdk_lib_aws_appmesh_VirtualGatewayAttributes, aws_cdk_lib_aws_appmesh_HttpGatewayListenerOptions, aws_cdk_lib_aws_appmesh_Http2GatewayListenerOptions, aws_cdk_lib_aws_appmesh_GrpcGatewayListenerOptions, aws_cdk_lib_aws_appmesh_VirtualGatewayListenerConfig, aws_cdk_lib_aws_appmesh_VirtualGatewayListener, aws_cdk_lib_aws_appmesh_IGatewayRoute, aws_cdk_lib_aws_appmesh_GatewayRouteBaseProps, aws_cdk_lib_aws_appmesh_GatewayRouteProps, aws_cdk_lib_aws_appmesh_GatewayRoute, aws_cdk_lib_aws_appmesh_GatewayRouteAttributes, aws_cdk_lib_aws_appmesh_GatewayRouteHostnameMatchConfig, aws_cdk_lib_aws_appmesh_GatewayRouteHostnameMatch, aws_cdk_lib_aws_appmesh_HttpGatewayRouteMatch, aws_cdk_lib_aws_appmesh_GrpcGatewayRouteMatch, aws_cdk_lib_aws_appmesh_CommonGatewayRouteSpecOptions, aws_cdk_lib_aws_appmesh_HttpGatewayRouteSpecOptions, aws_cdk_lib_aws_appmesh_GrpcGatewayRouteSpecOptions, aws_cdk_lib_aws_appmesh_GatewayRouteSpecConfig, aws_cdk_lib_aws_appmesh_GatewayRouteSpec, aws_cdk_lib_aws_appmesh_HttpHealthCheckOptions, aws_cdk_lib_aws_appmesh_GrpcHealthCheckOptions, aws_cdk_lib_aws_appmesh_TcpHealthCheckOptions, aws_cdk_lib_aws_appmesh_HealthCheckConfig, aws_cdk_lib_aws_appmesh_HealthCheckBindOptions, aws_cdk_lib_aws_appmesh_HealthCheck, aws_cdk_lib_aws_appmesh_TlsMode, aws_cdk_lib_aws_appmesh_ListenerTlsOptions, aws_cdk_lib_aws_appmesh_TlsValidation, aws_cdk_lib_aws_appmesh_MutualTlsValidation, aws_cdk_lib_aws_appmesh_TlsValidationTrustConfig, aws_cdk_lib_aws_appmesh_TlsValidationTrust, aws_cdk_lib_aws_appmesh_MutualTlsValidationTrust, aws_cdk_lib_aws_appmesh_SubjectAlternativeNamesMatcherConfig, aws_cdk_lib_aws_appmesh_SubjectAlternativeNames, aws_cdk_lib_aws_appmesh_TlsClientPolicy, aws_cdk_lib_aws_appmesh_HttpRouteMethod, aws_cdk_lib_aws_appmesh_HeaderMatchConfig, aws_cdk_lib_aws_appmesh_HeaderMatch, aws_cdk_lib_aws_appmesh_QueryParameterMatchConfig, aws_cdk_lib_aws_appmesh_QueryParameterMatch, aws_cdk_lib_aws_appmesh_HttpRoutePathMatchConfig, aws_cdk_lib_aws_appmesh_HttpRoutePathMatch, aws_cdk_lib_aws_appmesh_HttpGatewayRoutePathMatchConfig, aws_cdk_lib_aws_appmesh_HttpGatewayRoutePathMatch, aws_cdk_lib_aws_apprunner_CfnObservabilityConfigurationProps, aws_cdk_lib_aws_apprunner_CfnObservabilityConfiguration, aws_cdk_lib_aws_apprunner_CfnObservabilityConfiguration_TraceConfigurationProperty, aws_cdk_lib_aws_apprunner_CfnServiceProps, aws_cdk_lib_aws_apprunner_CfnService, aws_cdk_lib_aws_apprunner_CfnService_AuthenticationConfigurationProperty, aws_cdk_lib_aws_apprunner_CfnService_CodeConfigurationProperty, aws_cdk_lib_aws_apprunner_CfnService_CodeConfigurationValuesProperty, aws_cdk_lib_aws_apprunner_CfnService_CodeRepositoryProperty, aws_cdk_lib_aws_apprunner_CfnService_EgressConfigurationProperty, aws_cdk_lib_aws_apprunner_CfnService_EncryptionConfigurationProperty, aws_cdk_lib_aws_apprunner_CfnService_HealthCheckConfigurationProperty, aws_cdk_lib_aws_apprunner_CfnService_ImageConfigurationProperty, aws_cdk_lib_aws_apprunner_CfnService_ImageRepositoryProperty, aws_cdk_lib_aws_apprunner_CfnService_IngressConfigurationProperty, aws_cdk_lib_aws_apprunner_CfnService_InstanceConfigurationProperty, aws_cdk_lib_aws_apprunner_CfnService_KeyValuePairProperty, aws_cdk_lib_aws_apprunner_CfnService_NetworkConfigurationProperty, aws_cdk_lib_aws_apprunner_CfnService_ServiceObservabilityConfigurationProperty, aws_cdk_lib_aws_apprunner_CfnService_SourceCodeVersionProperty, aws_cdk_lib_aws_apprunner_CfnService_SourceConfigurationProperty, aws_cdk_lib_aws_apprunner_CfnVpcConnectorProps, aws_cdk_lib_aws_apprunner_CfnVpcConnector, aws_cdk_lib_aws_apprunner_CfnVpcIngressConnectionProps, aws_cdk_lib_aws_apprunner_CfnVpcIngressConnection, aws_cdk_lib_aws_apprunner_CfnVpcIngressConnection_IngressVpcConfigurationProperty, aws_cdk_lib_aws_appstream_CfnAppBlockProps, aws_cdk_lib_aws_appstream_CfnAppBlock, aws_cdk_lib_aws_appstream_CfnAppBlock_S3LocationProperty, aws_cdk_lib_aws_appstream_CfnAppBlock_ScriptDetailsProperty, aws_cdk_lib_aws_appstream_CfnApplicationProps, aws_cdk_lib_aws_appstream_CfnApplication, aws_cdk_lib_aws_appstream_CfnApplication_S3LocationProperty, aws_cdk_lib_aws_appstream_CfnApplicationEntitlementAssociationProps, aws_cdk_lib_aws_appstream_CfnApplicationEntitlementAssociation, aws_cdk_lib_aws_appstream_CfnApplicationFleetAssociationProps, aws_cdk_lib_aws_appstream_CfnApplicationFleetAssociation, aws_cdk_lib_aws_appstream_CfnDirectoryConfigProps, aws_cdk_lib_aws_appstream_CfnDirectoryConfig, aws_cdk_lib_aws_appstream_CfnDirectoryConfig_CertificateBasedAuthPropertiesProperty, aws_cdk_lib_aws_appstream_CfnDirectoryConfig_ServiceAccountCredentialsProperty, aws_cdk_lib_aws_appstream_CfnEntitlementProps, aws_cdk_lib_aws_appstream_CfnEntitlement, aws_cdk_lib_aws_appstream_CfnEntitlement_AttributeProperty, aws_cdk_lib_aws_appstream_CfnFleetProps, aws_cdk_lib_aws_appstream_CfnFleet, aws_cdk_lib_aws_appstream_CfnFleet_ComputeCapacityProperty, aws_cdk_lib_aws_appstream_CfnFleet_DomainJoinInfoProperty, aws_cdk_lib_aws_appstream_CfnFleet_S3LocationProperty, aws_cdk_lib_aws_appstream_CfnFleet_VpcConfigProperty, aws_cdk_lib_aws_appstream_CfnImageBuilderProps, aws_cdk_lib_aws_appstream_CfnImageBuilder, aws_cdk_lib_aws_appstream_CfnImageBuilder_AccessEndpointProperty, aws_cdk_lib_aws_appstream_CfnImageBuilder_DomainJoinInfoProperty, aws_cdk_lib_aws_appstream_CfnImageBuilder_VpcConfigProperty, aws_cdk_lib_aws_appstream_CfnStackProps, aws_cdk_lib_aws_appstream_CfnStack, aws_cdk_lib_aws_appstream_CfnStack_AccessEndpointProperty, aws_cdk_lib_aws_appstream_CfnStack_ApplicationSettingsProperty, aws_cdk_lib_aws_appstream_CfnStack_StorageConnectorProperty, aws_cdk_lib_aws_appstream_CfnStack_StreamingExperienceSettingsProperty, aws_cdk_lib_aws_appstream_CfnStack_UserSettingProperty, aws_cdk_lib_aws_appstream_CfnStackFleetAssociationProps, aws_cdk_lib_aws_appstream_CfnStackFleetAssociation, aws_cdk_lib_aws_appstream_CfnStackUserAssociationProps, aws_cdk_lib_aws_appstream_CfnStackUserAssociation, aws_cdk_lib_aws_appstream_CfnUserProps, aws_cdk_lib_aws_appstream_CfnUser, aws_cdk_lib_aws_appsync_BaseAppsyncFunctionProps, aws_cdk_lib_aws_appsync_AppsyncFunctionProps, aws_cdk_lib_aws_appsync_AppsyncFunctionAttributes, aws_cdk_lib_aws_appsync_IAppsyncFunction, aws_cdk_lib_aws_appsync_AppsyncFunction, aws_cdk_lib_aws_appsync_CfnApiCacheProps, aws_cdk_lib_aws_appsync_CfnApiCache, aws_cdk_lib_aws_appsync_CfnApiKeyProps, aws_cdk_lib_aws_appsync_CfnApiKey, aws_cdk_lib_aws_appsync_CfnDataSourceProps, aws_cdk_lib_aws_appsync_CfnDataSource, aws_cdk_lib_aws_appsync_CfnDataSource_AuthorizationConfigProperty, aws_cdk_lib_aws_appsync_CfnDataSource_AwsIamConfigProperty, aws_cdk_lib_aws_appsync_CfnDataSource_DeltaSyncConfigProperty, aws_cdk_lib_aws_appsync_CfnDataSource_DynamoDBConfigProperty, aws_cdk_lib_aws_appsync_CfnDataSource_ElasticsearchConfigProperty, aws_cdk_lib_aws_appsync_CfnDataSource_EventBridgeConfigProperty, aws_cdk_lib_aws_appsync_CfnDataSource_HttpConfigProperty, aws_cdk_lib_aws_appsync_CfnDataSource_LambdaConfigProperty, aws_cdk_lib_aws_appsync_CfnDataSource_OpenSearchServiceConfigProperty, aws_cdk_lib_aws_appsync_CfnDataSource_RdsHttpEndpointConfigProperty, aws_cdk_lib_aws_appsync_CfnDataSource_RelationalDatabaseConfigProperty, aws_cdk_lib_aws_appsync_CfnDomainNameProps, aws_cdk_lib_aws_appsync_CfnDomainName, aws_cdk_lib_aws_appsync_CfnDomainNameApiAssociationProps, aws_cdk_lib_aws_appsync_CfnDomainNameApiAssociation, aws_cdk_lib_aws_appsync_CfnFunctionConfigurationProps, aws_cdk_lib_aws_appsync_CfnFunctionConfiguration, aws_cdk_lib_aws_appsync_CfnFunctionConfiguration_AppSyncRuntimeProperty, aws_cdk_lib_aws_appsync_CfnFunctionConfiguration_LambdaConflictHandlerConfigProperty, aws_cdk_lib_aws_appsync_CfnFunctionConfiguration_SyncConfigProperty, aws_cdk_lib_aws_appsync_CfnGraphQLApiProps, aws_cdk_lib_aws_appsync_CfnGraphQLApi, aws_cdk_lib_aws_appsync_CfnGraphQLApi_AdditionalAuthenticationProviderProperty, aws_cdk_lib_aws_appsync_CfnGraphQLApi_CognitoUserPoolConfigProperty, aws_cdk_lib_aws_appsync_CfnGraphQLApi_LambdaAuthorizerConfigProperty, aws_cdk_lib_aws_appsync_CfnGraphQLApi_LogConfigProperty, aws_cdk_lib_aws_appsync_CfnGraphQLApi_OpenIDConnectConfigProperty, aws_cdk_lib_aws_appsync_CfnGraphQLApi_UserPoolConfigProperty, aws_cdk_lib_aws_appsync_CfnGraphQLSchemaProps, aws_cdk_lib_aws_appsync_CfnGraphQLSchema, aws_cdk_lib_aws_appsync_CfnResolverProps, aws_cdk_lib_aws_appsync_CfnResolver, aws_cdk_lib_aws_appsync_CfnResolver_AppSyncRuntimeProperty, aws_cdk_lib_aws_appsync_CfnResolver_CachingConfigProperty, aws_cdk_lib_aws_appsync_CfnResolver_LambdaConflictHandlerConfigProperty, aws_cdk_lib_aws_appsync_CfnResolver_PipelineConfigProperty, aws_cdk_lib_aws_appsync_CfnResolver_SyncConfigProperty, aws_cdk_lib_aws_appsync_CachingConfig, aws_cdk_lib_aws_appsync_KeyCondition, aws_cdk_lib_aws_appsync_Assign, aws_cdk_lib_aws_appsync_PartitionKeyStep, aws_cdk_lib_aws_appsync_SortKeyStep, aws_cdk_lib_aws_appsync_PrimaryKey, aws_cdk_lib_aws_appsync_PartitionKey, aws_cdk_lib_aws_appsync_AttributeValues, aws_cdk_lib_aws_appsync_AttributeValuesStep, aws_cdk_lib_aws_appsync_Values, aws_cdk_lib_aws_appsync_BaseDataSourceProps, aws_cdk_lib_aws_appsync_BackedDataSourceProps, aws_cdk_lib_aws_appsync_ExtendedDataSourceProps, aws_cdk_lib_aws_appsync_BaseDataSource, aws_cdk_lib_aws_appsync_BackedDataSource, aws_cdk_lib_aws_appsync_NoneDataSourceProps, aws_cdk_lib_aws_appsync_NoneDataSource, aws_cdk_lib_aws_appsync_DynamoDbDataSourceProps, aws_cdk_lib_aws_appsync_DynamoDbDataSource, aws_cdk_lib_aws_appsync_AwsIamConfig, aws_cdk_lib_aws_appsync_HttpDataSourceProps, aws_cdk_lib_aws_appsync_HttpDataSource, aws_cdk_lib_aws_appsync_LambdaDataSourceProps, aws_cdk_lib_aws_appsync_LambdaDataSource, aws_cdk_lib_aws_appsync_RdsDataSourceProps, aws_cdk_lib_aws_appsync_RdsDataSource, aws_cdk_lib_aws_appsync_ElasticsearchDataSourceProps, aws_cdk_lib_aws_appsync_ElasticsearchDataSource, aws_cdk_lib_aws_appsync_OpenSearchDataSourceProps, aws_cdk_lib_aws_appsync_OpenSearchDataSource, aws_cdk_lib_aws_appsync_MappingTemplate, aws_cdk_lib_aws_appsync_BaseResolverProps, aws_cdk_lib_aws_appsync_ExtendedResolverProps, aws_cdk_lib_aws_appsync_ResolverProps, aws_cdk_lib_aws_appsync_Resolver, aws_cdk_lib_aws_appsync_ISchemaConfig, aws_cdk_lib_aws_appsync_SchemaBindOptions, aws_cdk_lib_aws_appsync_ISchema, aws_cdk_lib_aws_appsync_SchemaProps, aws_cdk_lib_aws_appsync_SchemaFile, aws_cdk_lib_aws_appsync_AuthorizationType, aws_cdk_lib_aws_appsync_AuthorizationMode, aws_cdk_lib_aws_appsync_UserPoolDefaultAction, aws_cdk_lib_aws_appsync_UserPoolConfig, aws_cdk_lib_aws_appsync_ApiKeyConfig, aws_cdk_lib_aws_appsync_OpenIdConnectConfig, aws_cdk_lib_aws_appsync_LambdaAuthorizerConfig, aws_cdk_lib_aws_appsync_AuthorizationConfig, aws_cdk_lib_aws_appsync_FieldLogLevel, aws_cdk_lib_aws_appsync_LogConfig, aws_cdk_lib_aws_appsync_DomainOptions, aws_cdk_lib_aws_appsync_GraphqlApiProps, aws_cdk_lib_aws_appsync_IamResource, aws_cdk_lib_aws_appsync_GraphqlApiAttributes, aws_cdk_lib_aws_appsync_GraphqlApi, aws_cdk_lib_aws_appsync_DataSourceOptions, aws_cdk_lib_aws_appsync_HttpDataSourceOptions, aws_cdk_lib_aws_appsync_IGraphqlApi, aws_cdk_lib_aws_appsync_GraphqlApiBase, aws_cdk_lib_aws_appsync_CodeConfig, aws_cdk_lib_aws_appsync_Code, aws_cdk_lib_aws_appsync_AssetCode, aws_cdk_lib_aws_appsync_InlineCode, aws_cdk_lib_aws_appsync_RuntimeConfig, aws_cdk_lib_aws_appsync_FunctionRuntimeFamily, aws_cdk_lib_aws_appsync_FunctionRuntime, aws_cdk_lib_aws_aps_CfnRuleGroupsNamespaceProps, aws_cdk_lib_aws_aps_CfnRuleGroupsNamespace, aws_cdk_lib_aws_aps_CfnWorkspaceProps, aws_cdk_lib_aws_aps_CfnWorkspace, aws_cdk_lib_aws_aps_CfnWorkspace_LoggingConfigurationProperty, aws_cdk_lib_aws_athena_CfnDataCatalogProps, aws_cdk_lib_aws_athena_CfnDataCatalog, aws_cdk_lib_aws_athena_CfnNamedQueryProps, aws_cdk_lib_aws_athena_CfnNamedQuery, aws_cdk_lib_aws_athena_CfnPreparedStatementProps, aws_cdk_lib_aws_athena_CfnPreparedStatement, aws_cdk_lib_aws_athena_CfnWorkGroupProps, aws_cdk_lib_aws_athena_CfnWorkGroup, aws_cdk_lib_aws_athena_CfnWorkGroup_AclConfigurationProperty, aws_cdk_lib_aws_athena_CfnWorkGroup_CustomerContentEncryptionConfigurationProperty, aws_cdk_lib_aws_athena_CfnWorkGroup_EncryptionConfigurationProperty, aws_cdk_lib_aws_athena_CfnWorkGroup_EngineVersionProperty, aws_cdk_lib_aws_athena_CfnWorkGroup_ResultConfigurationProperty, aws_cdk_lib_aws_athena_CfnWorkGroup_WorkGroupConfigurationProperty, aws_cdk_lib_aws_auditmanager_CfnAssessmentProps, aws_cdk_lib_aws_auditmanager_CfnAssessment, aws_cdk_lib_aws_auditmanager_CfnAssessment_AWSAccountProperty, aws_cdk_lib_aws_auditmanager_CfnAssessment_AWSServiceProperty, aws_cdk_lib_aws_auditmanager_CfnAssessment_AssessmentReportsDestinationProperty, aws_cdk_lib_aws_auditmanager_CfnAssessment_DelegationProperty, aws_cdk_lib_aws_auditmanager_CfnAssessment_RoleProperty, aws_cdk_lib_aws_auditmanager_CfnAssessment_ScopeProperty, aws_cdk_lib_aws_autoscaling_AutoScalingGroupRequireImdsv2Aspect, aws_cdk_lib_aws_autoscaling_Monitoring, aws_cdk_lib_aws_autoscaling_CommonAutoScalingGroupProps, aws_cdk_lib_aws_autoscaling_MixedInstancesPolicy, aws_cdk_lib_aws_autoscaling_OnDemandAllocationStrategy, aws_cdk_lib_aws_autoscaling_SpotAllocationStrategy, aws_cdk_lib_aws_autoscaling_InstancesDistribution, aws_cdk_lib_aws_autoscaling_LaunchTemplateOverrides, aws_cdk_lib_aws_autoscaling_AutoScalingGroupProps, aws_cdk_lib_aws_autoscaling_Signals, aws_cdk_lib_aws_autoscaling_RenderSignalsOptions, aws_cdk_lib_aws_autoscaling_SignalsOptions, aws_cdk_lib_aws_autoscaling_UpdatePolicy, aws_cdk_lib_aws_autoscaling_RollingUpdateOptions, aws_cdk_lib_aws_autoscaling_GroupMetrics, aws_cdk_lib_aws_autoscaling_GroupMetric, aws_cdk_lib_aws_autoscaling_AutoScalingGroup, aws_cdk_lib_aws_autoscaling_NotificationConfiguration, aws_cdk_lib_aws_autoscaling_ScalingEvent, aws_cdk_lib_aws_autoscaling_ScalingEvents, aws_cdk_lib_aws_autoscaling_ScalingProcess, aws_cdk_lib_aws_autoscaling_Ec2HealthCheckOptions, aws_cdk_lib_aws_autoscaling_ElbHealthCheckOptions, aws_cdk_lib_aws_autoscaling_HealthCheck, aws_cdk_lib_aws_autoscaling_IAutoScalingGroup, aws_cdk_lib_aws_autoscaling_CpuUtilizationScalingProps, aws_cdk_lib_aws_autoscaling_NetworkUtilizationScalingProps, aws_cdk_lib_aws_autoscaling_RequestCountScalingProps, aws_cdk_lib_aws_autoscaling_MetricTargetTrackingProps, aws_cdk_lib_aws_autoscaling_ApplyCloudFormationInitOptions, aws_cdk_lib_aws_autoscaling_Schedule, aws_cdk_lib_aws_autoscaling_CronOptions, aws_cdk_lib_aws_autoscaling_BasicLifecycleHookProps, aws_cdk_lib_aws_autoscaling_LifecycleHookProps, aws_cdk_lib_aws_autoscaling_ILifecycleHook, aws_cdk_lib_aws_autoscaling_LifecycleHook, aws_cdk_lib_aws_autoscaling_DefaultResult, aws_cdk_lib_aws_autoscaling_LifecycleTransition, aws_cdk_lib_aws_autoscaling_BindHookTargetOptions, aws_cdk_lib_aws_autoscaling_LifecycleHookTargetConfig, aws_cdk_lib_aws_autoscaling_ILifecycleHookTarget, aws_cdk_lib_aws_autoscaling_BasicScheduledActionProps, aws_cdk_lib_aws_autoscaling_ScheduledActionProps, aws_cdk_lib_aws_autoscaling_ScheduledAction, aws_cdk_lib_aws_autoscaling_StepScalingActionProps, aws_cdk_lib_aws_autoscaling_StepScalingAction, aws_cdk_lib_aws_autoscaling_AdjustmentType, aws_cdk_lib_aws_autoscaling_MetricAggregationType, aws_cdk_lib_aws_autoscaling_AdjustmentTier, aws_cdk_lib_aws_autoscaling_BasicStepScalingPolicyProps, aws_cdk_lib_aws_autoscaling_StepScalingPolicyProps, aws_cdk_lib_aws_autoscaling_StepScalingPolicy, aws_cdk_lib_aws_autoscaling_ScalingInterval, aws_cdk_lib_aws_autoscaling_BaseTargetTrackingProps, aws_cdk_lib_aws_autoscaling_BasicTargetTrackingScalingPolicyProps, aws_cdk_lib_aws_autoscaling_TargetTrackingScalingPolicyProps, aws_cdk_lib_aws_autoscaling_TargetTrackingScalingPolicy, aws_cdk_lib_aws_autoscaling_PredefinedMetric, aws_cdk_lib_aws_autoscaling_TerminationPolicy, aws_cdk_lib_aws_autoscaling_BlockDevice, aws_cdk_lib_aws_autoscaling_EbsDeviceOptionsBase, aws_cdk_lib_aws_autoscaling_EbsDeviceOptions, aws_cdk_lib_aws_autoscaling_EbsDeviceSnapshotOptions, aws_cdk_lib_aws_autoscaling_EbsDeviceProps, aws_cdk_lib_aws_autoscaling_BlockDeviceVolume, aws_cdk_lib_aws_autoscaling_EbsDeviceVolumeType, aws_cdk_lib_aws_autoscaling_WarmPoolOptions, aws_cdk_lib_aws_autoscaling_WarmPoolProps, aws_cdk_lib_aws_autoscaling_WarmPool, aws_cdk_lib_aws_autoscaling_PoolState, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroupProps, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_AcceleratorCountRequestProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_AcceleratorTotalMemoryMiBRequestProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_BaselineEbsBandwidthMbpsRequestProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_InstanceRequirementsProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_InstancesDistributionProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_LaunchTemplateProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_LaunchTemplateOverridesProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_LaunchTemplateSpecificationProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_LifecycleHookSpecificationProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_MemoryGiBPerVCpuRequestProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_MemoryMiBRequestProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_MetricsCollectionProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_MixedInstancesPolicyProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_NetworkBandwidthGbpsRequestProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_NetworkInterfaceCountRequestProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_NotificationConfigurationProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_TagPropertyProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_TotalLocalStorageGBRequestProperty, aws_cdk_lib_aws_autoscaling_CfnAutoScalingGroup_VCpuCountRequestProperty, aws_cdk_lib_aws_autoscaling_CfnLaunchConfigurationProps, aws_cdk_lib_aws_autoscaling_CfnLaunchConfiguration, aws_cdk_lib_aws_autoscaling_CfnLaunchConfiguration_BlockDeviceProperty, aws_cdk_lib_aws_autoscaling_CfnLaunchConfiguration_BlockDeviceMappingProperty, aws_cdk_lib_aws_autoscaling_CfnLaunchConfiguration_MetadataOptionsProperty, aws_cdk_lib_aws_autoscaling_CfnLifecycleHookProps, aws_cdk_lib_aws_autoscaling_CfnLifecycleHook, aws_cdk_lib_aws_autoscaling_CfnScalingPolicyProps, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_CustomizedMetricSpecificationProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_MetricProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_MetricDataQueryProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_MetricDimensionProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_MetricStatProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredefinedMetricSpecificationProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingConfigurationProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingCustomizedCapacityMetricProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingCustomizedLoadMetricProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingCustomizedScalingMetricProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingMetricSpecificationProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingPredefinedLoadMetricProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingPredefinedMetricPairProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_PredictiveScalingPredefinedScalingMetricProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_StepAdjustmentProperty, aws_cdk_lib_aws_autoscaling_CfnScalingPolicy_TargetTrackingConfigurationProperty, aws_cdk_lib_aws_autoscaling_CfnScheduledActionProps, aws_cdk_lib_aws_autoscaling_CfnScheduledAction, aws_cdk_lib_aws_autoscaling_CfnWarmPoolProps, aws_cdk_lib_aws_autoscaling_CfnWarmPool, aws_cdk_lib_aws_autoscaling_CfnWarmPool_InstanceReusePolicyProperty, aws_cdk_lib_aws_autoscaling_common_ScalingInterval, aws_cdk_lib_aws_autoscaling_common_CompleteScalingInterval, aws_cdk_lib_aws_autoscaling_common_Alarms, aws_cdk_lib_aws_autoscaling_common_IRandomGenerator, aws_cdk_lib_aws_autoscaling_common_ArbitraryIntervals, aws_cdk_lib_aws_autoscaling_hooktargets_QueueHook, aws_cdk_lib_aws_autoscaling_hooktargets_TopicHook, aws_cdk_lib_aws_autoscaling_hooktargets_FunctionHook, aws_cdk_lib_aws_autoscalingplans_CfnScalingPlanProps, aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan, aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_ApplicationSourceProperty, aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_CustomizedLoadMetricSpecificationProperty, aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_CustomizedScalingMetricSpecificationProperty, aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_MetricDimensionProperty, aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_PredefinedLoadMetricSpecificationProperty, aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_PredefinedScalingMetricSpecificationProperty, aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_ScalingInstructionProperty, aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_TagFilterProperty, aws_cdk_lib_aws_autoscalingplans_CfnScalingPlan_TargetTrackingConfigurationProperty, aws_cdk_lib_aws_backup_IBackupVault, aws_cdk_lib_aws_backup_BackupVaultProps, aws_cdk_lib_aws_backup_BackupVaultEvents, aws_cdk_lib_aws_backup_LockConfiguration, aws_cdk_lib_aws_backup_BackupVault, aws_cdk_lib_aws_backup_IBackupPlan, aws_cdk_lib_aws_backup_BackupPlanProps, aws_cdk_lib_aws_backup_BackupPlan, aws_cdk_lib_aws_backup_BackupPlanRuleProps, aws_cdk_lib_aws_backup_BackupPlanCopyActionProps, aws_cdk_lib_aws_backup_BackupPlanRule, aws_cdk_lib_aws_backup_BackupSelectionOptions, aws_cdk_lib_aws_backup_BackupSelectionProps, aws_cdk_lib_aws_backup_BackupSelection, aws_cdk_lib_aws_backup_TagOperation, aws_cdk_lib_aws_backup_TagCondition, aws_cdk_lib_aws_backup_BackupResource, aws_cdk_lib_aws_backup_CfnBackupPlanProps, aws_cdk_lib_aws_backup_CfnBackupPlan, aws_cdk_lib_aws_backup_CfnBackupPlan_AdvancedBackupSettingResourceTypeProperty, aws_cdk_lib_aws_backup_CfnBackupPlan_BackupPlanResourceTypeProperty, aws_cdk_lib_aws_backup_CfnBackupPlan_BackupRuleResourceTypeProperty, aws_cdk_lib_aws_backup_CfnBackupPlan_CopyActionResourceTypeProperty, aws_cdk_lib_aws_backup_CfnBackupPlan_LifecycleResourceTypeProperty, aws_cdk_lib_aws_backup_CfnBackupSelectionProps, aws_cdk_lib_aws_backup_CfnBackupSelection, aws_cdk_lib_aws_backup_CfnBackupSelection_BackupSelectionResourceTypeProperty, aws_cdk_lib_aws_backup_CfnBackupSelection_ConditionParameterProperty, aws_cdk_lib_aws_backup_CfnBackupSelection_ConditionResourceTypeProperty, aws_cdk_lib_aws_backup_CfnBackupSelection_ConditionsProperty, aws_cdk_lib_aws_backup_CfnBackupVaultProps, aws_cdk_lib_aws_backup_CfnBackupVault, aws_cdk_lib_aws_backup_CfnBackupVault_LockConfigurationTypeProperty, aws_cdk_lib_aws_backup_CfnBackupVault_NotificationObjectTypeProperty, aws_cdk_lib_aws_backup_CfnFrameworkProps, aws_cdk_lib_aws_backup_CfnFramework, aws_cdk_lib_aws_backup_CfnFramework_ControlInputParameterProperty, aws_cdk_lib_aws_backup_CfnFramework_ControlScopeProperty, aws_cdk_lib_aws_backup_CfnFramework_FrameworkControlProperty, aws_cdk_lib_aws_backup_CfnReportPlanProps, aws_cdk_lib_aws_backup_CfnReportPlan, aws_cdk_lib_aws_backup_CfnReportPlan_ReportDeliveryChannelProperty, aws_cdk_lib_aws_backup_CfnReportPlan_ReportSettingProperty, aws_cdk_lib_aws_batch_CfnComputeEnvironmentProps, aws_cdk_lib_aws_batch_CfnComputeEnvironment, aws_cdk_lib_aws_batch_CfnComputeEnvironment_ComputeResourcesProperty, aws_cdk_lib_aws_batch_CfnComputeEnvironment_Ec2ConfigurationObjectProperty, aws_cdk_lib_aws_batch_CfnComputeEnvironment_EksConfigurationProperty, aws_cdk_lib_aws_batch_CfnComputeEnvironment_LaunchTemplateSpecificationProperty, aws_cdk_lib_aws_batch_CfnComputeEnvironment_UpdatePolicyProperty, aws_cdk_lib_aws_batch_CfnJobDefinitionProps, aws_cdk_lib_aws_batch_CfnJobDefinition, aws_cdk_lib_aws_batch_CfnJobDefinition_AuthorizationConfigProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_ContainerPropertiesProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_DeviceProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_EfsVolumeConfigurationProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_EksContainerProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_EksContainerEnvironmentVariableProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_EksContainerVolumeMountProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_EksPropertiesProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_EksVolumeProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_EmptyDirProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_EnvironmentProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_EvaluateOnExitProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_FargatePlatformConfigurationProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_HostPathProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_LinuxParametersProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_LogConfigurationProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_MountPointsProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_NetworkConfigurationProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_NodePropertiesProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_NodeRangePropertyProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_PodPropertiesProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_ResourceRequirementProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_ResourcesProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_RetryStrategyProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_SecretProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_SecurityContextProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_TimeoutProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_TmpfsProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_UlimitProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_VolumesProperty, aws_cdk_lib_aws_batch_CfnJobDefinition_VolumesHostProperty, aws_cdk_lib_aws_batch_CfnJobQueueProps, aws_cdk_lib_aws_batch_CfnJobQueue, aws_cdk_lib_aws_batch_CfnJobQueue_ComputeEnvironmentOrderProperty, aws_cdk_lib_aws_batch_CfnSchedulingPolicyProps, aws_cdk_lib_aws_batch_CfnSchedulingPolicy, aws_cdk_lib_aws_batch_CfnSchedulingPolicy_FairsharePolicyProperty, aws_cdk_lib_aws_batch_CfnSchedulingPolicy_ShareAttributesProperty, aws_cdk_lib_aws_billingconductor_CfnBillingGroupProps, aws_cdk_lib_aws_billingconductor_CfnBillingGroup, aws_cdk_lib_aws_billingconductor_CfnBillingGroup_AccountGroupingProperty, aws_cdk_lib_aws_billingconductor_CfnBillingGroup_ComputationPreferenceProperty, aws_cdk_lib_aws_billingconductor_CfnCustomLineItemProps, aws_cdk_lib_aws_billingconductor_CfnCustomLineItem, aws_cdk_lib_aws_billingconductor_CfnCustomLineItem_BillingPeriodRangeProperty, aws_cdk_lib_aws_billingconductor_CfnCustomLineItem_CustomLineItemChargeDetailsProperty, aws_cdk_lib_aws_billingconductor_CfnCustomLineItem_CustomLineItemFlatChargeDetailsProperty, aws_cdk_lib_aws_billingconductor_CfnCustomLineItem_CustomLineItemPercentageChargeDetailsProperty, aws_cdk_lib_aws_billingconductor_CfnPricingPlanProps, aws_cdk_lib_aws_billingconductor_CfnPricingPlan, aws_cdk_lib_aws_billingconductor_CfnPricingRuleProps, aws_cdk_lib_aws_billingconductor_CfnPricingRule, aws_cdk_lib_aws_billingconductor_CfnPricingRule_FreeTierProperty, aws_cdk_lib_aws_billingconductor_CfnPricingRule_TieringProperty, aws_cdk_lib_aws_budgets_CfnBudgetProps, aws_cdk_lib_aws_budgets_CfnBudget, aws_cdk_lib_aws_budgets_CfnBudget_AutoAdjustDataProperty, aws_cdk_lib_aws_budgets_CfnBudget_BudgetDataProperty, aws_cdk_lib_aws_budgets_CfnBudget_CostTypesProperty, aws_cdk_lib_aws_budgets_CfnBudget_HistoricalOptionsProperty, aws_cdk_lib_aws_budgets_CfnBudget_NotificationProperty, aws_cdk_lib_aws_budgets_CfnBudget_NotificationWithSubscribersProperty, aws_cdk_lib_aws_budgets_CfnBudget_SpendProperty, aws_cdk_lib_aws_budgets_CfnBudget_SubscriberProperty, aws_cdk_lib_aws_budgets_CfnBudget_TimePeriodProperty, aws_cdk_lib_aws_budgets_CfnBudgetsActionProps, aws_cdk_lib_aws_budgets_CfnBudgetsAction, aws_cdk_lib_aws_budgets_CfnBudgetsAction_ActionThresholdProperty, aws_cdk_lib_aws_budgets_CfnBudgetsAction_DefinitionProperty, aws_cdk_lib_aws_budgets_CfnBudgetsAction_IamActionDefinitionProperty, aws_cdk_lib_aws_budgets_CfnBudgetsAction_ScpActionDefinitionProperty, aws_cdk_lib_aws_budgets_CfnBudgetsAction_SsmActionDefinitionProperty, aws_cdk_lib_aws_budgets_CfnBudgetsAction_SubscriberProperty, aws_cdk_lib_aws_cassandra_CfnKeyspaceProps, aws_cdk_lib_aws_cassandra_CfnKeyspace, aws_cdk_lib_aws_cassandra_CfnTableProps, aws_cdk_lib_aws_cassandra_CfnTable, aws_cdk_lib_aws_cassandra_CfnTable_BillingModeProperty, aws_cdk_lib_aws_cassandra_CfnTable_ClusteringKeyColumnProperty, aws_cdk_lib_aws_cassandra_CfnTable_ColumnProperty, aws_cdk_lib_aws_cassandra_CfnTable_EncryptionSpecificationProperty, aws_cdk_lib_aws_cassandra_CfnTable_ProvisionedThroughputProperty, aws_cdk_lib_aws_ce_CfnAnomalyMonitorProps, aws_cdk_lib_aws_ce_CfnAnomalyMonitor, aws_cdk_lib_aws_ce_CfnAnomalyMonitor_ResourceTagProperty, aws_cdk_lib_aws_ce_CfnAnomalySubscriptionProps, aws_cdk_lib_aws_ce_CfnAnomalySubscription, aws_cdk_lib_aws_ce_CfnAnomalySubscription_ResourceTagProperty, aws_cdk_lib_aws_ce_CfnAnomalySubscription_SubscriberProperty, aws_cdk_lib_aws_ce_CfnCostCategoryProps, aws_cdk_lib_aws_ce_CfnCostCategory, aws_cdk_lib_aws_certificatemanager_ICertificate, aws_cdk_lib_aws_certificatemanager_CertificateProps, aws_cdk_lib_aws_certificatemanager_CertificationValidationProps, aws_cdk_lib_aws_certificatemanager_CertificateValidation, aws_cdk_lib_aws_certificatemanager_Certificate, aws_cdk_lib_aws_certificatemanager_ValidationMethod, aws_cdk_lib_aws_certificatemanager_DnsValidatedCertificateProps, aws_cdk_lib_aws_certificatemanager_DnsValidatedCertificate, aws_cdk_lib_aws_certificatemanager_PrivateCertificateProps, aws_cdk_lib_aws_certificatemanager_PrivateCertificate, aws_cdk_lib_aws_certificatemanager_CfnAccountProps, aws_cdk_lib_aws_certificatemanager_CfnAccount, aws_cdk_lib_aws_certificatemanager_CfnAccount_ExpiryEventsConfigurationProperty, aws_cdk_lib_aws_certificatemanager_CfnCertificateProps, aws_cdk_lib_aws_certificatemanager_CfnCertificate, aws_cdk_lib_aws_certificatemanager_CfnCertificate_DomainValidationOptionProperty, aws_cdk_lib_aws_chatbot_CfnMicrosoftTeamsChannelConfigurationProps, aws_cdk_lib_aws_chatbot_CfnMicrosoftTeamsChannelConfiguration, aws_cdk_lib_aws_chatbot_CfnSlackChannelConfigurationProps, aws_cdk_lib_aws_chatbot_CfnSlackChannelConfiguration, aws_cdk_lib_aws_chatbot_SlackChannelConfigurationProps, aws_cdk_lib_aws_chatbot_LoggingLevel, aws_cdk_lib_aws_chatbot_ISlackChannelConfiguration, aws_cdk_lib_aws_chatbot_SlackChannelConfiguration, aws_cdk_lib_aws_cloud9_CfnEnvironmentEC2Props, aws_cdk_lib_aws_cloud9_CfnEnvironmentEC2, aws_cdk_lib_aws_cloud9_CfnEnvironmentEC2_RepositoryProperty, aws_cdk_lib_aws_cloudformation_CfnCustomResourceProps, aws_cdk_lib_aws_cloudformation_CfnCustomResource, aws_cdk_lib_aws_cloudformation_CfnHookDefaultVersionProps, aws_cdk_lib_aws_cloudformation_CfnHookDefaultVersion, aws_cdk_lib_aws_cloudformation_CfnHookTypeConfigProps, aws_cdk_lib_aws_cloudformation_CfnHookTypeConfig, aws_cdk_lib_aws_cloudformation_CfnHookVersionProps, aws_cdk_lib_aws_cloudformation_CfnHookVersion, aws_cdk_lib_aws_cloudformation_CfnHookVersion_LoggingConfigProperty, aws_cdk_lib_aws_cloudformation_CfnMacroProps, aws_cdk_lib_aws_cloudformation_CfnMacro, aws_cdk_lib_aws_cloudformation_CfnModuleDefaultVersionProps, aws_cdk_lib_aws_cloudformation_CfnModuleDefaultVersion, aws_cdk_lib_aws_cloudformation_CfnModuleVersionProps, aws_cdk_lib_aws_cloudformation_CfnModuleVersion, aws_cdk_lib_aws_cloudformation_CfnPublicTypeVersionProps, aws_cdk_lib_aws_cloudformation_CfnPublicTypeVersion, aws_cdk_lib_aws_cloudformation_CfnPublisherProps, aws_cdk_lib_aws_cloudformation_CfnPublisher, aws_cdk_lib_aws_cloudformation_CfnResourceDefaultVersionProps, aws_cdk_lib_aws_cloudformation_CfnResourceDefaultVersion, aws_cdk_lib_aws_cloudformation_CfnResourceVersionProps, aws_cdk_lib_aws_cloudformation_CfnResourceVersion, aws_cdk_lib_aws_cloudformation_CfnResourceVersion_LoggingConfigProperty, aws_cdk_lib_aws_cloudformation_CfnStackProps, aws_cdk_lib_aws_cloudformation_CfnStack, aws_cdk_lib_aws_cloudformation_CfnStackSetProps, aws_cdk_lib_aws_cloudformation_CfnStackSet, aws_cdk_lib_aws_cloudformation_CfnStackSet_AutoDeploymentProperty, aws_cdk_lib_aws_cloudformation_CfnStackSet_DeploymentTargetsProperty, aws_cdk_lib_aws_cloudformation_CfnStackSet_ManagedExecutionProperty, aws_cdk_lib_aws_cloudformation_CfnStackSet_OperationPreferencesProperty, aws_cdk_lib_aws_cloudformation_CfnStackSet_ParameterProperty, aws_cdk_lib_aws_cloudformation_CfnStackSet_StackInstancesProperty, aws_cdk_lib_aws_cloudformation_CfnTypeActivationProps, aws_cdk_lib_aws_cloudformation_CfnTypeActivation, aws_cdk_lib_aws_cloudformation_CfnTypeActivation_LoggingConfigProperty, aws_cdk_lib_aws_cloudformation_CfnWaitConditionProps, aws_cdk_lib_aws_cloudformation_CfnWaitCondition, aws_cdk_lib_aws_cloudformation_CfnWaitConditionHandle, aws_cdk_lib_aws_cloudfront_experimental_EdgeFunctionProps, aws_cdk_lib_aws_cloudfront_experimental_EdgeFunction, aws_cdk_lib_aws_cloudfront_ICachePolicy, aws_cdk_lib_aws_cloudfront_CachePolicyProps, aws_cdk_lib_aws_cloudfront_CachePolicy, aws_cdk_lib_aws_cloudfront_CacheCookieBehavior, aws_cdk_lib_aws_cloudfront_CacheHeaderBehavior, aws_cdk_lib_aws_cloudfront_CacheQueryStringBehavior, aws_cdk_lib_aws_cloudfront_IDistribution, aws_cdk_lib_aws_cloudfront_DistributionAttributes, aws_cdk_lib_aws_cloudfront_DistributionProps, aws_cdk_lib_aws_cloudfront_Distribution, aws_cdk_lib_aws_cloudfront_HttpVersion, aws_cdk_lib_aws_cloudfront_PriceClass, aws_cdk_lib_aws_cloudfront_ViewerProtocolPolicy, aws_cdk_lib_aws_cloudfront_OriginProtocolPolicy, aws_cdk_lib_aws_cloudfront_SSLMethod, aws_cdk_lib_aws_cloudfront_SecurityPolicyProtocol, aws_cdk_lib_aws_cloudfront_AllowedMethods, aws_cdk_lib_aws_cloudfront_CachedMethods, aws_cdk_lib_aws_cloudfront_ErrorResponse, aws_cdk_lib_aws_cloudfront_LambdaEdgeEventType, aws_cdk_lib_aws_cloudfront_EdgeLambda, aws_cdk_lib_aws_cloudfront_AddBehaviorOptions, aws_cdk_lib_aws_cloudfront_BehaviorOptions, aws_cdk_lib_aws_cloudfront_FunctionCode, aws_cdk_lib_aws_cloudfront_FileCodeOptions, aws_cdk_lib_aws_cloudfront_IFunction, aws_cdk_lib_aws_cloudfront_FunctionAttributes, aws_cdk_lib_aws_cloudfront_FunctionProps, aws_cdk_lib_aws_cloudfront_Function, aws_cdk_lib_aws_cloudfront_FunctionEventType, aws_cdk_lib_aws_cloudfront_FunctionAssociation, aws_cdk_lib_aws_cloudfront_GeoRestriction, aws_cdk_lib_aws_cloudfront_IKeyGroup, aws_cdk_lib_aws_cloudfront_KeyGroupProps, aws_cdk_lib_aws_cloudfront_KeyGroup, aws_cdk_lib_aws_cloudfront_OriginFailoverConfig, aws_cdk_lib_aws_cloudfront_OriginBindConfig, aws_cdk_lib_aws_cloudfront_IOrigin, aws_cdk_lib_aws_cloudfront_OriginOptions, aws_cdk_lib_aws_cloudfront_OriginProps, aws_cdk_lib_aws_cloudfront_OriginBindOptions, aws_cdk_lib_aws_cloudfront_OriginBase, aws_cdk_lib_aws_cloudfront_OriginAccessIdentityProps, aws_cdk_lib_aws_cloudfront_IOriginAccessIdentity, aws_cdk_lib_aws_cloudfront_OriginAccessIdentity, aws_cdk_lib_aws_cloudfront_IOriginRequestPolicy, aws_cdk_lib_aws_cloudfront_OriginRequestPolicyProps, aws_cdk_lib_aws_cloudfront_OriginRequestPolicy, aws_cdk_lib_aws_cloudfront_OriginRequestCookieBehavior, aws_cdk_lib_aws_cloudfront_OriginRequestHeaderBehavior, aws_cdk_lib_aws_cloudfront_OriginRequestQueryStringBehavior, aws_cdk_lib_aws_cloudfront_IPublicKey, aws_cdk_lib_aws_cloudfront_PublicKeyProps, aws_cdk_lib_aws_cloudfront_PublicKey, aws_cdk_lib_aws_cloudfront_IResponseHeadersPolicy, aws_cdk_lib_aws_cloudfront_ResponseHeadersPolicyProps, aws_cdk_lib_aws_cloudfront_ResponseHeadersPolicy, aws_cdk_lib_aws_cloudfront_ResponseHeadersCorsBehavior, aws_cdk_lib_aws_cloudfront_ResponseCustomHeadersBehavior, aws_cdk_lib_aws_cloudfront_ResponseCustomHeader, aws_cdk_lib_aws_cloudfront_ResponseSecurityHeadersBehavior, aws_cdk_lib_aws_cloudfront_ResponseHeadersContentSecurityPolicy, aws_cdk_lib_aws_cloudfront_ResponseHeadersContentTypeOptions, aws_cdk_lib_aws_cloudfront_ResponseHeadersFrameOptions, aws_cdk_lib_aws_cloudfront_ResponseHeadersReferrerPolicy, aws_cdk_lib_aws_cloudfront_ResponseHeadersStrictTransportSecurity, aws_cdk_lib_aws_cloudfront_ResponseHeadersXSSProtection, aws_cdk_lib_aws_cloudfront_HeadersFrameOption, aws_cdk_lib_aws_cloudfront_HeadersReferrerPolicy, aws_cdk_lib_aws_cloudfront_FailoverStatusCode, aws_cdk_lib_aws_cloudfront_LoggingConfiguration, aws_cdk_lib_aws_cloudfront_SourceConfiguration, aws_cdk_lib_aws_cloudfront_CustomOriginConfig, aws_cdk_lib_aws_cloudfront_OriginSslPolicy, aws_cdk_lib_aws_cloudfront_S3OriginConfig, aws_cdk_lib_aws_cloudfront_CloudFrontAllowedMethods, aws_cdk_lib_aws_cloudfront_CloudFrontAllowedCachedMethods, aws_cdk_lib_aws_cloudfront_Behavior, aws_cdk_lib_aws_cloudfront_LambdaFunctionAssociation, aws_cdk_lib_aws_cloudfront_ViewerCertificateOptions, aws_cdk_lib_aws_cloudfront_ViewerCertificate, aws_cdk_lib_aws_cloudfront_CloudFrontWebDistributionProps, aws_cdk_lib_aws_cloudfront_CloudFrontWebDistributionAttributes, aws_cdk_lib_aws_cloudfront_CloudFrontWebDistribution, aws_cdk_lib_aws_cloudfront_CfnCachePolicyProps, aws_cdk_lib_aws_cloudfront_CfnCachePolicy, aws_cdk_lib_aws_cloudfront_CfnCachePolicy_CachePolicyConfigProperty, aws_cdk_lib_aws_cloudfront_CfnCachePolicy_CookiesConfigProperty, aws_cdk_lib_aws_cloudfront_CfnCachePolicy_HeadersConfigProperty, aws_cdk_lib_aws_cloudfront_CfnCachePolicy_ParametersInCacheKeyAndForwardedToOriginProperty, aws_cdk_lib_aws_cloudfront_CfnCachePolicy_QueryStringsConfigProperty, aws_cdk_lib_aws_cloudfront_CfnCloudFrontOriginAccessIdentityProps, aws_cdk_lib_aws_cloudfront_CfnCloudFrontOriginAccessIdentity, aws_cdk_lib_aws_cloudfront_CfnCloudFrontOriginAccessIdentity_CloudFrontOriginAccessIdentityConfigProperty, aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicyProps, aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicy, aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicy_ContinuousDeploymentPolicyConfigProperty, aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicy_SessionStickinessConfigProperty, aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicy_SingleHeaderConfigProperty, aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicy_SingleWeightConfigProperty, aws_cdk_lib_aws_cloudfront_CfnContinuousDeploymentPolicy_TrafficConfigProperty, aws_cdk_lib_aws_cloudfront_CfnDistributionProps, aws_cdk_lib_aws_cloudfront_CfnDistribution, aws_cdk_lib_aws_cloudfront_CfnDistribution_CacheBehaviorProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_CookiesProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_CustomErrorResponseProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_CustomOriginConfigProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_DefaultCacheBehaviorProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_DistributionConfigProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_ForwardedValuesProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_FunctionAssociationProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_GeoRestrictionProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_LambdaFunctionAssociationProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_LegacyCustomOriginProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_LegacyS3OriginProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_LoggingProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginCustomHeaderProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginGroupProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginGroupFailoverCriteriaProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginGroupMemberProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginGroupMembersProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginGroupsProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_OriginShieldProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_RestrictionsProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_S3OriginConfigProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_StatusCodesProperty, aws_cdk_lib_aws_cloudfront_CfnDistribution_ViewerCertificateProperty, aws_cdk_lib_aws_cloudfront_CfnFunctionProps, aws_cdk_lib_aws_cloudfront_CfnFunction, aws_cdk_lib_aws_cloudfront_CfnFunction_FunctionConfigProperty, aws_cdk_lib_aws_cloudfront_CfnFunction_FunctionMetadataProperty, aws_cdk_lib_aws_cloudfront_CfnKeyGroupProps, aws_cdk_lib_aws_cloudfront_CfnKeyGroup, aws_cdk_lib_aws_cloudfront_CfnKeyGroup_KeyGroupConfigProperty, aws_cdk_lib_aws_cloudfront_CfnMonitoringSubscriptionProps, aws_cdk_lib_aws_cloudfront_CfnMonitoringSubscription, aws_cdk_lib_aws_cloudfront_CfnMonitoringSubscription_MonitoringSubscriptionProperty, aws_cdk_lib_aws_cloudfront_CfnMonitoringSubscription_RealtimeMetricsSubscriptionConfigProperty, aws_cdk_lib_aws_cloudfront_CfnOriginAccessControlProps, aws_cdk_lib_aws_cloudfront_CfnOriginAccessControl, aws_cdk_lib_aws_cloudfront_CfnOriginAccessControl_OriginAccessControlConfigProperty, aws_cdk_lib_aws_cloudfront_CfnOriginRequestPolicyProps, aws_cdk_lib_aws_cloudfront_CfnOriginRequestPolicy, aws_cdk_lib_aws_cloudfront_CfnOriginRequestPolicy_CookiesConfigProperty, aws_cdk_lib_aws_cloudfront_CfnOriginRequestPolicy_HeadersConfigProperty, aws_cdk_lib_aws_cloudfront_CfnOriginRequestPolicy_OriginRequestPolicyConfigProperty, aws_cdk_lib_aws_cloudfront_CfnOriginRequestPolicy_QueryStringsConfigProperty, aws_cdk_lib_aws_cloudfront_CfnPublicKeyProps, aws_cdk_lib_aws_cloudfront_CfnPublicKey, aws_cdk_lib_aws_cloudfront_CfnPublicKey_PublicKeyConfigProperty, aws_cdk_lib_aws_cloudfront_CfnRealtimeLogConfigProps, aws_cdk_lib_aws_cloudfront_CfnRealtimeLogConfig, aws_cdk_lib_aws_cloudfront_CfnRealtimeLogConfig_EndPointProperty, aws_cdk_lib_aws_cloudfront_CfnRealtimeLogConfig_KinesisStreamConfigProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicyProps, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_AccessControlAllowHeadersProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_AccessControlAllowMethodsProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_AccessControlAllowOriginsProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_AccessControlExposeHeadersProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_ContentSecurityPolicyProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_ContentTypeOptionsProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_CorsConfigProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_CustomHeaderProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_CustomHeadersConfigProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_FrameOptionsProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_ReferrerPolicyProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_RemoveHeaderProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_RemoveHeadersConfigProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_ResponseHeadersPolicyConfigProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_SecurityHeadersConfigProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_ServerTimingHeadersConfigProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_StrictTransportSecurityProperty, aws_cdk_lib_aws_cloudfront_CfnResponseHeadersPolicy_XSSProtectionProperty, aws_cdk_lib_aws_cloudfront_CfnStreamingDistributionProps, aws_cdk_lib_aws_cloudfront_CfnStreamingDistribution, aws_cdk_lib_aws_cloudfront_CfnStreamingDistribution_LoggingProperty, aws_cdk_lib_aws_cloudfront_CfnStreamingDistribution_S3OriginProperty, aws_cdk_lib_aws_cloudfront_CfnStreamingDistribution_StreamingDistributionConfigProperty, aws_cdk_lib_aws_cloudfront_CfnStreamingDistribution_TrustedSignersProperty, aws_cdk_lib_aws_cloudfront_origins_HttpOriginProps, aws_cdk_lib_aws_cloudfront_origins_HttpOrigin, aws_cdk_lib_aws_cloudfront_origins_LoadBalancerV2OriginProps, aws_cdk_lib_aws_cloudfront_origins_LoadBalancerV2Origin, aws_cdk_lib_aws_cloudfront_origins_S3OriginProps, aws_cdk_lib_aws_cloudfront_origins_S3Origin, aws_cdk_lib_aws_cloudfront_origins_OriginGroupProps, aws_cdk_lib_aws_cloudfront_origins_OriginGroup, aws_cdk_lib_aws_cloudfront_origins_RestApiOriginProps, aws_cdk_lib_aws_cloudfront_origins_RestApiOrigin, aws_cdk_lib_aws_cloudtrail_TrailProps, aws_cdk_lib_aws_cloudtrail_ReadWriteType, aws_cdk_lib_aws_cloudtrail_InsightType, aws_cdk_lib_aws_cloudtrail_Trail, aws_cdk_lib_aws_cloudtrail_AddEventSelectorOptions, aws_cdk_lib_aws_cloudtrail_ManagementEventSources, aws_cdk_lib_aws_cloudtrail_S3EventSelector, aws_cdk_lib_aws_cloudtrail_DataResourceType, aws_cdk_lib_aws_cloudtrail_CfnChannelProps, aws_cdk_lib_aws_cloudtrail_CfnChannel, aws_cdk_lib_aws_cloudtrail_CfnChannel_DestinationProperty, aws_cdk_lib_aws_cloudtrail_CfnEventDataStoreProps, aws_cdk_lib_aws_cloudtrail_CfnEventDataStore, aws_cdk_lib_aws_cloudtrail_CfnEventDataStore_AdvancedEventSelectorProperty, aws_cdk_lib_aws_cloudtrail_CfnEventDataStore_AdvancedFieldSelectorProperty, aws_cdk_lib_aws_cloudtrail_CfnResourcePolicyProps, aws_cdk_lib_aws_cloudtrail_CfnResourcePolicy, aws_cdk_lib_aws_cloudtrail_CfnTrailProps, aws_cdk_lib_aws_cloudtrail_CfnTrail, aws_cdk_lib_aws_cloudtrail_CfnTrail_DataResourceProperty, aws_cdk_lib_aws_cloudtrail_CfnTrail_EventSelectorProperty, aws_cdk_lib_aws_cloudtrail_CfnTrail_InsightSelectorProperty, aws_cdk_lib_aws_cloudwatch_AlarmProps, aws_cdk_lib_aws_cloudwatch_ComparisonOperator, aws_cdk_lib_aws_cloudwatch_TreatMissingData, aws_cdk_lib_aws_cloudwatch_Alarm, aws_cdk_lib_aws_cloudwatch_IAlarmAction, aws_cdk_lib_aws_cloudwatch_AlarmActionConfig, aws_cdk_lib_aws_cloudwatch_IAlarmRule, aws_cdk_lib_aws_cloudwatch_IAlarm, aws_cdk_lib_aws_cloudwatch_AlarmBase, aws_cdk_lib_aws_cloudwatch_AlarmState, aws_cdk_lib_aws_cloudwatch_AlarmRule, aws_cdk_lib_aws_cloudwatch_CompositeAlarmProps, aws_cdk_lib_aws_cloudwatch_CompositeAlarm, aws_cdk_lib_aws_cloudwatch_PeriodOverride, aws_cdk_lib_aws_cloudwatch_DashboardProps, aws_cdk_lib_aws_cloudwatch_Dashboard, aws_cdk_lib_aws_cloudwatch_MetricWidgetProps, aws_cdk_lib_aws_cloudwatch_YAxisProps, aws_cdk_lib_aws_cloudwatch_AlarmWidgetProps, aws_cdk_lib_aws_cloudwatch_AlarmWidget, aws_cdk_lib_aws_cloudwatch_GraphWidgetView, aws_cdk_lib_aws_cloudwatch_GaugeWidgetProps, aws_cdk_lib_aws_cloudwatch_GaugeWidget, aws_cdk_lib_aws_cloudwatch_GraphWidgetProps, aws_cdk_lib_aws_cloudwatch_GraphWidget, aws_cdk_lib_aws_cloudwatch_SingleValueWidgetProps, aws_cdk_lib_aws_cloudwatch_SingleValueWidget, aws_cdk_lib_aws_cloudwatch_CustomWidgetProps, aws_cdk_lib_aws_cloudwatch_CustomWidget, aws_cdk_lib_aws_cloudwatch_HorizontalAnnotation, aws_cdk_lib_aws_cloudwatch_Shading, aws_cdk_lib_aws_cloudwatch_Color, aws_cdk_lib_aws_cloudwatch_LegendPosition, aws_cdk_lib_aws_cloudwatch_Row, aws_cdk_lib_aws_cloudwatch_Column, aws_cdk_lib_aws_cloudwatch_SpacerProps, aws_cdk_lib_aws_cloudwatch_Spacer, aws_cdk_lib_aws_cloudwatch_CommonMetricOptions, aws_cdk_lib_aws_cloudwatch_MetricProps, aws_cdk_lib_aws_cloudwatch_MetricOptions, aws_cdk_lib_aws_cloudwatch_MathExpressionOptions, aws_cdk_lib_aws_cloudwatch_MathExpressionProps, aws_cdk_lib_aws_cloudwatch_Metric, aws_cdk_lib_aws_cloudwatch_MathExpression, aws_cdk_lib_aws_cloudwatch_CreateAlarmOptions, aws_cdk_lib_aws_cloudwatch_IMetric, aws_cdk_lib_aws_cloudwatch_Dimension, aws_cdk_lib_aws_cloudwatch_Statistic, aws_cdk_lib_aws_cloudwatch_Unit, aws_cdk_lib_aws_cloudwatch_MetricConfig, aws_cdk_lib_aws_cloudwatch_MetricStatConfig, aws_cdk_lib_aws_cloudwatch_MetricExpressionConfig, aws_cdk_lib_aws_cloudwatch_LogQueryVisualizationType, aws_cdk_lib_aws_cloudwatch_LogQueryWidgetProps, aws_cdk_lib_aws_cloudwatch_LogQueryWidget, aws_cdk_lib_aws_cloudwatch_TextWidgetBackground, aws_cdk_lib_aws_cloudwatch_TextWidgetProps, aws_cdk_lib_aws_cloudwatch_TextWidget, aws_cdk_lib_aws_cloudwatch_IWidget, aws_cdk_lib_aws_cloudwatch_ConcreteWidget, aws_cdk_lib_aws_cloudwatch_AlarmStatusWidgetSortBy, aws_cdk_lib_aws_cloudwatch_AlarmStatusWidgetProps, aws_cdk_lib_aws_cloudwatch_AlarmStatusWidget, aws_cdk_lib_aws_cloudwatch_Stats, aws_cdk_lib_aws_cloudwatch_CfnAlarmProps, aws_cdk_lib_aws_cloudwatch_CfnAlarm, aws_cdk_lib_aws_cloudwatch_CfnAlarm_DimensionProperty, aws_cdk_lib_aws_cloudwatch_CfnAlarm_MetricProperty, aws_cdk_lib_aws_cloudwatch_CfnAlarm_MetricDataQueryProperty, aws_cdk_lib_aws_cloudwatch_CfnAlarm_MetricStatProperty, aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetectorProps, aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector, aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_ConfigurationProperty, aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_DimensionProperty, aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_MetricProperty, aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_MetricDataQueryProperty, aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_MetricMathAnomalyDetectorProperty, aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_MetricStatProperty, aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_RangeProperty, aws_cdk_lib_aws_cloudwatch_CfnAnomalyDetector_SingleMetricAnomalyDetectorProperty, aws_cdk_lib_aws_cloudwatch_CfnCompositeAlarmProps, aws_cdk_lib_aws_cloudwatch_CfnCompositeAlarm, aws_cdk_lib_aws_cloudwatch_CfnDashboardProps, aws_cdk_lib_aws_cloudwatch_CfnDashboard, aws_cdk_lib_aws_cloudwatch_CfnInsightRuleProps, aws_cdk_lib_aws_cloudwatch_CfnInsightRule, aws_cdk_lib_aws_cloudwatch_CfnMetricStreamProps, aws_cdk_lib_aws_cloudwatch_CfnMetricStream, aws_cdk_lib_aws_cloudwatch_CfnMetricStream_MetricStreamFilterProperty, aws_cdk_lib_aws_cloudwatch_CfnMetricStream_MetricStreamStatisticsConfigurationProperty, aws_cdk_lib_aws_cloudwatch_CfnMetricStream_MetricStreamStatisticsMetricProperty, aws_cdk_lib_aws_cloudwatch_actions_ApplicationScalingAction, aws_cdk_lib_aws_cloudwatch_actions_AutoScalingAction, aws_cdk_lib_aws_cloudwatch_actions_SnsAction, aws_cdk_lib_aws_cloudwatch_actions_Ec2InstanceAction, aws_cdk_lib_aws_cloudwatch_actions_Ec2Action, aws_cdk_lib_aws_cloudwatch_actions_OpsItemSeverity, aws_cdk_lib_aws_cloudwatch_actions_OpsItemCategory, aws_cdk_lib_aws_cloudwatch_actions_SsmAction, aws_cdk_lib_aws_cloudwatch_actions_SsmIncidentAction, aws_cdk_lib_aws_codeartifact_CfnDomainProps, aws_cdk_lib_aws_codeartifact_CfnDomain, aws_cdk_lib_aws_codeartifact_CfnRepositoryProps, aws_cdk_lib_aws_codeartifact_CfnRepository, aws_cdk_lib_aws_codebuild_StateChangeEvent, aws_cdk_lib_aws_codebuild_PhaseChangeEvent, aws_cdk_lib_aws_codebuild_PipelineProjectProps, aws_cdk_lib_aws_codebuild_PipelineProject, aws_cdk_lib_aws_codebuild_BatchBuildConfig, aws_cdk_lib_aws_codebuild_BuildEnvironmentCertificate, aws_cdk_lib_aws_codebuild_ProjectNotifyOnOptions, aws_cdk_lib_aws_codebuild_IProject, aws_cdk_lib_aws_codebuild_CommonProjectProps, aws_cdk_lib_aws_codebuild_ProjectProps, aws_cdk_lib_aws_codebuild_BindToCodePipelineOptions, aws_cdk_lib_aws_codebuild_Project, aws_cdk_lib_aws_codebuild_ComputeType, aws_cdk_lib_aws_codebuild_ImagePullPrincipalType, aws_cdk_lib_aws_codebuild_BuildEnvironment, aws_cdk_lib_aws_codebuild_IBuildImage, aws_cdk_lib_aws_codebuild_BuildImageBindOptions, aws_cdk_lib_aws_codebuild_BuildImageConfig, aws_cdk_lib_aws_codebuild_IBindableBuildImage, aws_cdk_lib_aws_codebuild_DockerImageOptions, aws_cdk_lib_aws_codebuild_LinuxBuildImage, aws_cdk_lib_aws_codebuild_WindowsImageType, aws_cdk_lib_aws_codebuild_WindowsBuildImage, aws_cdk_lib_aws_codebuild_BuildEnvironmentVariable, aws_cdk_lib_aws_codebuild_BuildEnvironmentVariableType, aws_cdk_lib_aws_codebuild_ProjectNotificationEvents, aws_cdk_lib_aws_codebuild_S3LoggingOptions, aws_cdk_lib_aws_codebuild_CloudWatchLoggingOptions, aws_cdk_lib_aws_codebuild_LoggingOptions, aws_cdk_lib_aws_codebuild_IReportGroup, aws_cdk_lib_aws_codebuild_ReportGroupType, aws_cdk_lib_aws_codebuild_ReportGroupProps, aws_cdk_lib_aws_codebuild_ReportGroup, aws_cdk_lib_aws_codebuild_SourceConfig, aws_cdk_lib_aws_codebuild_ISource, aws_cdk_lib_aws_codebuild_SourceProps, aws_cdk_lib_aws_codebuild_Source, aws_cdk_lib_aws_codebuild_EventAction, aws_cdk_lib_aws_codebuild_FilterGroup, aws_cdk_lib_aws_codebuild_CodeCommitSourceProps, aws_cdk_lib_aws_codebuild_S3SourceProps, aws_cdk_lib_aws_codebuild_GitHubSourceProps, aws_cdk_lib_aws_codebuild_GitHubEnterpriseSourceProps, aws_cdk_lib_aws_codebuild_BitBucketSourceProps, aws_cdk_lib_aws_codebuild_GitHubSourceCredentialsProps, aws_cdk_lib_aws_codebuild_GitHubSourceCredentials, aws_cdk_lib_aws_codebuild_GitHubEnterpriseSourceCredentialsProps, aws_cdk_lib_aws_codebuild_GitHubEnterpriseSourceCredentials, aws_cdk_lib_aws_codebuild_BitBucketSourceCredentialsProps, aws_cdk_lib_aws_codebuild_BitBucketSourceCredentials, aws_cdk_lib_aws_codebuild_ArtifactsConfig, aws_cdk_lib_aws_codebuild_IArtifacts, aws_cdk_lib_aws_codebuild_ArtifactsProps, aws_cdk_lib_aws_codebuild_Artifacts, aws_cdk_lib_aws_codebuild_S3ArtifactsProps, aws_cdk_lib_aws_codebuild_BucketCacheOptions, aws_cdk_lib_aws_codebuild_LocalCacheMode, aws_cdk_lib_aws_codebuild_Cache, aws_cdk_lib_aws_codebuild_BuildSpec, aws_cdk_lib_aws_codebuild_FileSystemConfig, aws_cdk_lib_aws_codebuild_IFileSystemLocation, aws_cdk_lib_aws_codebuild_FileSystemLocation, aws_cdk_lib_aws_codebuild_EfsFileSystemLocationProps, aws_cdk_lib_aws_codebuild_LinuxGpuBuildImage, aws_cdk_lib_aws_codebuild_UntrustedCodeBoundaryPolicyProps, aws_cdk_lib_aws_codebuild_UntrustedCodeBoundaryPolicy, aws_cdk_lib_aws_codebuild_LinuxArmBuildImage, aws_cdk_lib_aws_codebuild_CfnProjectProps, aws_cdk_lib_aws_codebuild_CfnProject, aws_cdk_lib_aws_codebuild_CfnProject_ArtifactsProperty, aws_cdk_lib_aws_codebuild_CfnProject_BatchRestrictionsProperty, aws_cdk_lib_aws_codebuild_CfnProject_BuildStatusConfigProperty, aws_cdk_lib_aws_codebuild_CfnProject_CloudWatchLogsConfigProperty, aws_cdk_lib_aws_codebuild_CfnProject_EnvironmentProperty, aws_cdk_lib_aws_codebuild_CfnProject_EnvironmentVariableProperty, aws_cdk_lib_aws_codebuild_CfnProject_GitSubmodulesConfigProperty, aws_cdk_lib_aws_codebuild_CfnProject_LogsConfigProperty, aws_cdk_lib_aws_codebuild_CfnProject_ProjectBuildBatchConfigProperty, aws_cdk_lib_aws_codebuild_CfnProject_ProjectCacheProperty, aws_cdk_lib_aws_codebuild_CfnProject_ProjectFileSystemLocationProperty, aws_cdk_lib_aws_codebuild_CfnProject_ProjectSourceVersionProperty, aws_cdk_lib_aws_codebuild_CfnProject_ProjectTriggersProperty, aws_cdk_lib_aws_codebuild_CfnProject_RegistryCredentialProperty, aws_cdk_lib_aws_codebuild_CfnProject_S3LogsConfigProperty, aws_cdk_lib_aws_codebuild_CfnProject_SourceProperty, aws_cdk_lib_aws_codebuild_CfnProject_SourceAuthProperty, aws_cdk_lib_aws_codebuild_CfnProject_VpcConfigProperty, aws_cdk_lib_aws_codebuild_CfnProject_WebhookFilterProperty, aws_cdk_lib_aws_codebuild_CfnReportGroupProps, aws_cdk_lib_aws_codebuild_CfnReportGroup, aws_cdk_lib_aws_codebuild_CfnReportGroup_ReportExportConfigProperty, aws_cdk_lib_aws_codebuild_CfnReportGroup_S3ReportExportConfigProperty, aws_cdk_lib_aws_codebuild_CfnSourceCredentialProps, aws_cdk_lib_aws_codebuild_CfnSourceCredential, aws_cdk_lib_aws_codecommit_ReferenceEvent, aws_cdk_lib_aws_codecommit_RepositoryNotifyOnOptions, aws_cdk_lib_aws_codecommit_IRepository, aws_cdk_lib_aws_codecommit_OnCommitOptions, aws_cdk_lib_aws_codecommit_RepositoryProps, aws_cdk_lib_aws_codecommit_Repository, aws_cdk_lib_aws_codecommit_RepositoryTriggerOptions, aws_cdk_lib_aws_codecommit_RepositoryEventTrigger, aws_cdk_lib_aws_codecommit_RepositoryNotificationEvents, aws_cdk_lib_aws_codecommit_CodeConfig, aws_cdk_lib_aws_codecommit_Code, aws_cdk_lib_aws_codecommit_CfnRepositoryProps, aws_cdk_lib_aws_codecommit_CfnRepository, aws_cdk_lib_aws_codecommit_CfnRepository_CodeProperty, aws_cdk_lib_aws_codecommit_CfnRepository_RepositoryTriggerProperty, aws_cdk_lib_aws_codecommit_CfnRepository_S3Property, aws_cdk_lib_aws_codedeploy_IBaseDeploymentConfig, aws_cdk_lib_aws_codedeploy_BaseDeploymentConfigOptions, aws_cdk_lib_aws_codedeploy_ComputePlatform, aws_cdk_lib_aws_codedeploy_BaseDeploymentConfigProps, aws_cdk_lib_aws_codedeploy_BaseDeploymentConfig, aws_cdk_lib_aws_codedeploy_MinimumHealthyHosts, aws_cdk_lib_aws_codedeploy_AutoRollbackConfig, aws_cdk_lib_aws_codedeploy_TrafficRoutingConfig, aws_cdk_lib_aws_codedeploy_CanaryTrafficRoutingConfig, aws_cdk_lib_aws_codedeploy_LinearTrafficRoutingConfig, aws_cdk_lib_aws_codedeploy_TrafficRouting, aws_cdk_lib_aws_codedeploy_BaseTrafficShiftingConfigProps, aws_cdk_lib_aws_codedeploy_AllAtOnceTrafficRouting, aws_cdk_lib_aws_codedeploy_TimeBasedCanaryTrafficRoutingProps, aws_cdk_lib_aws_codedeploy_TimeBasedCanaryTrafficRouting, aws_cdk_lib_aws_codedeploy_TimeBasedLinearTrafficRoutingProps, aws_cdk_lib_aws_codedeploy_TimeBasedLinearTrafficRouting, aws_cdk_lib_aws_codedeploy_IEcsApplication, aws_cdk_lib_aws_codedeploy_EcsApplicationProps, aws_cdk_lib_aws_codedeploy_EcsApplication, aws_cdk_lib_aws_codedeploy_IEcsDeploymentConfig, aws_cdk_lib_aws_codedeploy_EcsDeploymentConfigProps, aws_cdk_lib_aws_codedeploy_EcsDeploymentConfig, aws_cdk_lib_aws_codedeploy_IEcsDeploymentGroup, aws_cdk_lib_aws_codedeploy_EcsBlueGreenDeploymentConfig, aws_cdk_lib_aws_codedeploy_EcsDeploymentGroupProps, aws_cdk_lib_aws_codedeploy_EcsDeploymentGroup, aws_cdk_lib_aws_codedeploy_EcsDeploymentGroupAttributes, aws_cdk_lib_aws_codedeploy_ILambdaApplication, aws_cdk_lib_aws_codedeploy_LambdaApplicationProps, aws_cdk_lib_aws_codedeploy_LambdaApplication, aws_cdk_lib_aws_codedeploy_CustomLambdaDeploymentConfigType, aws_cdk_lib_aws_codedeploy_CustomLambdaDeploymentConfigProps, aws_cdk_lib_aws_codedeploy_CustomLambdaDeploymentConfig, aws_cdk_lib_aws_codedeploy_ILambdaDeploymentConfig, aws_cdk_lib_aws_codedeploy_LambdaDeploymentConfigImportProps, aws_cdk_lib_aws_codedeploy_LambdaDeploymentConfigProps, aws_cdk_lib_aws_codedeploy_LambdaDeploymentConfig, aws_cdk_lib_aws_codedeploy_ILambdaDeploymentGroup, aws_cdk_lib_aws_codedeploy_LambdaDeploymentGroupProps, aws_cdk_lib_aws_codedeploy_LambdaDeploymentGroup, aws_cdk_lib_aws_codedeploy_LambdaDeploymentGroupAttributes, aws_cdk_lib_aws_codedeploy_IServerApplication, aws_cdk_lib_aws_codedeploy_ServerApplicationProps, aws_cdk_lib_aws_codedeploy_ServerApplication, aws_cdk_lib_aws_codedeploy_IServerDeploymentConfig, aws_cdk_lib_aws_codedeploy_ServerDeploymentConfigProps, aws_cdk_lib_aws_codedeploy_ServerDeploymentConfig, aws_cdk_lib_aws_codedeploy_IServerDeploymentGroup, aws_cdk_lib_aws_codedeploy_ServerDeploymentGroupAttributes, aws_cdk_lib_aws_codedeploy_InstanceTagSet, aws_cdk_lib_aws_codedeploy_ServerDeploymentGroupProps, aws_cdk_lib_aws_codedeploy_ServerDeploymentGroup, aws_cdk_lib_aws_codedeploy_LoadBalancerGeneration, aws_cdk_lib_aws_codedeploy_LoadBalancer, aws_cdk_lib_aws_codedeploy_CfnApplicationProps, aws_cdk_lib_aws_codedeploy_CfnApplication, aws_cdk_lib_aws_codedeploy_CfnDeploymentConfigProps, aws_cdk_lib_aws_codedeploy_CfnDeploymentConfig, aws_cdk_lib_aws_codedeploy_CfnDeploymentConfig_MinimumHealthyHostsProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentConfig_TimeBasedCanaryProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentConfig_TimeBasedLinearProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentConfig_TrafficRoutingConfigProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroupProps, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_AlarmProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_AlarmConfigurationProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_AutoRollbackConfigurationProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_BlueGreenDeploymentConfigurationProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_BlueInstanceTerminationOptionProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_DeploymentProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_DeploymentReadyOptionProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_DeploymentStyleProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_EC2TagFilterProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_EC2TagSetProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_EC2TagSetListObjectProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_ECSServiceProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_ELBInfoProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_GitHubLocationProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_GreenFleetProvisioningOptionProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_LoadBalancerInfoProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_OnPremisesTagSetProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_OnPremisesTagSetListObjectProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_RevisionLocationProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_S3LocationProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_TagFilterProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_TargetGroupInfoProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_TargetGroupPairInfoProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_TrafficRouteProperty, aws_cdk_lib_aws_codedeploy_CfnDeploymentGroup_TriggerConfigProperty, aws_cdk_lib_aws_codeguruprofiler_CfnProfilingGroupProps, aws_cdk_lib_aws_codeguruprofiler_CfnProfilingGroup, aws_cdk_lib_aws_codeguruprofiler_CfnProfilingGroup_AgentPermissionsProperty, aws_cdk_lib_aws_codeguruprofiler_CfnProfilingGroup_ChannelProperty, aws_cdk_lib_aws_codeguruprofiler_ComputePlatform, aws_cdk_lib_aws_codeguruprofiler_IProfilingGroup, aws_cdk_lib_aws_codeguruprofiler_ProfilingGroupProps, aws_cdk_lib_aws_codeguruprofiler_ProfilingGroup, aws_cdk_lib_aws_codegurureviewer_CfnRepositoryAssociationProps, aws_cdk_lib_aws_codegurureviewer_CfnRepositoryAssociation, aws_cdk_lib_aws_codepipeline_ActionCategory, aws_cdk_lib_aws_codepipeline_ActionArtifactBounds, aws_cdk_lib_aws_codepipeline_GlobalVariables, aws_cdk_lib_aws_codepipeline_ActionProperties, aws_cdk_lib_aws_codepipeline_ActionBindOptions, aws_cdk_lib_aws_codepipeline_ActionConfig, aws_cdk_lib_aws_codepipeline_PipelineNotifyOnOptions, aws_cdk_lib_aws_codepipeline_IAction, aws_cdk_lib_aws_codepipeline_IPipeline, aws_cdk_lib_aws_codepipeline_IStage, aws_cdk_lib_aws_codepipeline_CommonActionProps, aws_cdk_lib_aws_codepipeline_CommonAwsActionProps, aws_cdk_lib_aws_codepipeline_Action, aws_cdk_lib_aws_codepipeline_PipelineNotificationEvents, aws_cdk_lib_aws_codepipeline_Artifact, aws_cdk_lib_aws_codepipeline_ArtifactPath, aws_cdk_lib_aws_codepipeline_StagePlacement, aws_cdk_lib_aws_codepipeline_StageProps, aws_cdk_lib_aws_codepipeline_StageOptions, aws_cdk_lib_aws_codepipeline_PipelineProps, aws_cdk_lib_aws_codepipeline_Pipeline, aws_cdk_lib_aws_codepipeline_CrossRegionSupport, aws_cdk_lib_aws_codepipeline_CustomActionProperty, aws_cdk_lib_aws_codepipeline_CustomActionRegistrationProps, aws_cdk_lib_aws_codepipeline_CustomActionRegistration, aws_cdk_lib_aws_codepipeline_CfnCustomActionTypeProps, aws_cdk_lib_aws_codepipeline_CfnCustomActionType, aws_cdk_lib_aws_codepipeline_CfnCustomActionType_ArtifactDetailsProperty, aws_cdk_lib_aws_codepipeline_CfnCustomActionType_ConfigurationPropertiesProperty, aws_cdk_lib_aws_codepipeline_CfnCustomActionType_SettingsProperty, aws_cdk_lib_aws_codepipeline_CfnPipelineProps, aws_cdk_lib_aws_codepipeline_CfnPipeline, aws_cdk_lib_aws_codepipeline_CfnPipeline_ActionDeclarationProperty, aws_cdk_lib_aws_codepipeline_CfnPipeline_ActionTypeIdProperty, aws_cdk_lib_aws_codepipeline_CfnPipeline_ArtifactStoreProperty, aws_cdk_lib_aws_codepipeline_CfnPipeline_ArtifactStoreMapProperty, aws_cdk_lib_aws_codepipeline_CfnPipeline_BlockerDeclarationProperty, aws_cdk_lib_aws_codepipeline_CfnPipeline_EncryptionKeyProperty, aws_cdk_lib_aws_codepipeline_CfnPipeline_InputArtifactProperty, aws_cdk_lib_aws_codepipeline_CfnPipeline_OutputArtifactProperty, aws_cdk_lib_aws_codepipeline_CfnPipeline_StageDeclarationProperty, aws_cdk_lib_aws_codepipeline_CfnPipeline_StageTransitionProperty, aws_cdk_lib_aws_codepipeline_CfnWebhookProps, aws_cdk_lib_aws_codepipeline_CfnWebhook, aws_cdk_lib_aws_codepipeline_CfnWebhook_WebhookAuthConfigurationProperty, aws_cdk_lib_aws_codepipeline_CfnWebhook_WebhookFilterRuleProperty, aws_cdk_lib_aws_codepipeline_actions_AlexaSkillDeployActionProps, aws_cdk_lib_aws_codepipeline_actions_AlexaSkillDeployAction, aws_cdk_lib_aws_codepipeline_actions_CodeStarSourceVariables, aws_cdk_lib_aws_codepipeline_actions_CodeStarConnectionsSourceActionProps, aws_cdk_lib_aws_codepipeline_actions_CodeStarConnectionsSourceAction, aws_cdk_lib_aws_codepipeline_actions_CloudFormationExecuteChangeSetActionProps, aws_cdk_lib_aws_codepipeline_actions_CloudFormationExecuteChangeSetAction, aws_cdk_lib_aws_codepipeline_actions_CloudFormationCreateReplaceChangeSetActionProps, aws_cdk_lib_aws_codepipeline_actions_CloudFormationCreateReplaceChangeSetAction, aws_cdk_lib_aws_codepipeline_actions_CloudFormationCreateUpdateStackActionProps, aws_cdk_lib_aws_codepipeline_actions_CloudFormationCreateUpdateStackAction, aws_cdk_lib_aws_codepipeline_actions_CloudFormationDeleteStackActionProps, aws_cdk_lib_aws_codepipeline_actions_CloudFormationDeleteStackAction, aws_cdk_lib_aws_codepipeline_actions_CloudFormationDeployStackSetActionProps, aws_cdk_lib_aws_codepipeline_actions_CloudFormationDeployStackSetAction, aws_cdk_lib_aws_codepipeline_actions_CloudFormationDeployStackInstancesActionProps, aws_cdk_lib_aws_codepipeline_actions_CloudFormationDeployStackInstancesAction, aws_cdk_lib_aws_codepipeline_actions_CommonCloudFormationStackSetOptions, aws_cdk_lib_aws_codepipeline_actions_StackSetTemplate, aws_cdk_lib_aws_codepipeline_actions_StackInstances, aws_cdk_lib_aws_codepipeline_actions_StackSetParameters, aws_cdk_lib_aws_codepipeline_actions_StackSetDeploymentModel, aws_cdk_lib_aws_codepipeline_actions_OrganizationsDeploymentProps, aws_cdk_lib_aws_codepipeline_actions_StackSetOrganizationsAutoDeployment, aws_cdk_lib_aws_codepipeline_actions_SelfManagedDeploymentProps, aws_cdk_lib_aws_codepipeline_actions_CodeBuildActionType, aws_cdk_lib_aws_codepipeline_actions_CodeBuildActionProps, aws_cdk_lib_aws_codepipeline_actions_CodeBuildAction, aws_cdk_lib_aws_codepipeline_actions_CodeCommitTrigger, aws_cdk_lib_aws_codepipeline_actions_CodeCommitSourceVariables, aws_cdk_lib_aws_codepipeline_actions_CodeCommitSourceActionProps, aws_cdk_lib_aws_codepipeline_actions_CodeCommitSourceAction, aws_cdk_lib_aws_codepipeline_actions_CodeDeployEcsContainerImageInput, aws_cdk_lib_aws_codepipeline_actions_CodeDeployEcsDeployActionProps, aws_cdk_lib_aws_codepipeline_actions_CodeDeployEcsDeployAction, aws_cdk_lib_aws_codepipeline_actions_CodeDeployServerDeployActionProps, aws_cdk_lib_aws_codepipeline_actions_CodeDeployServerDeployAction, aws_cdk_lib_aws_codepipeline_actions_EcrSourceVariables, aws_cdk_lib_aws_codepipeline_actions_EcrSourceActionProps, aws_cdk_lib_aws_codepipeline_actions_EcrSourceAction, aws_cdk_lib_aws_codepipeline_actions_EcsDeployActionProps, aws_cdk_lib_aws_codepipeline_actions_EcsDeployAction, aws_cdk_lib_aws_codepipeline_actions_ElasticBeanstalkDeployActionProps, aws_cdk_lib_aws_codepipeline_actions_ElasticBeanstalkDeployAction, aws_cdk_lib_aws_codepipeline_actions_GitHubTrigger, aws_cdk_lib_aws_codepipeline_actions_GitHubSourceVariables, aws_cdk_lib_aws_codepipeline_actions_GitHubSourceActionProps, aws_cdk_lib_aws_codepipeline_actions_GitHubSourceAction, aws_cdk_lib_aws_codepipeline_actions_JenkinsActionType, aws_cdk_lib_aws_codepipeline_actions_JenkinsActionProps, aws_cdk_lib_aws_codepipeline_actions_JenkinsAction, aws_cdk_lib_aws_codepipeline_actions_IJenkinsProvider, aws_cdk_lib_aws_codepipeline_actions_JenkinsProviderAttributes, aws_cdk_lib_aws_codepipeline_actions_JenkinsProviderProps, aws_cdk_lib_aws_codepipeline_actions_BaseJenkinsProvider, aws_cdk_lib_aws_codepipeline_actions_JenkinsProvider, aws_cdk_lib_aws_codepipeline_actions_LambdaInvokeActionProps, aws_cdk_lib_aws_codepipeline_actions_LambdaInvokeAction, aws_cdk_lib_aws_codepipeline_actions_ManualApprovalActionProps, aws_cdk_lib_aws_codepipeline_actions_ManualApprovalAction, aws_cdk_lib_aws_codepipeline_actions_CacheControl, aws_cdk_lib_aws_codepipeline_actions_S3DeployActionProps, aws_cdk_lib_aws_codepipeline_actions_S3DeployAction, aws_cdk_lib_aws_codepipeline_actions_S3Trigger, aws_cdk_lib_aws_codepipeline_actions_S3SourceVariables, aws_cdk_lib_aws_codepipeline_actions_S3SourceActionProps, aws_cdk_lib_aws_codepipeline_actions_S3SourceAction, aws_cdk_lib_aws_codepipeline_actions_StateMachineInput, aws_cdk_lib_aws_codepipeline_actions_StepFunctionsInvokeActionProps, aws_cdk_lib_aws_codepipeline_actions_StepFunctionInvokeAction, aws_cdk_lib_aws_codepipeline_actions_ServiceCatalogDeployActionBeta1Props, aws_cdk_lib_aws_codepipeline_actions_ServiceCatalogDeployActionBeta1, aws_cdk_lib_aws_codepipeline_actions_Action, aws_cdk_lib_aws_codestar_CfnGitHubRepositoryProps, aws_cdk_lib_aws_codestar_CfnGitHubRepository, aws_cdk_lib_aws_codestar_CfnGitHubRepository_CodeProperty, aws_cdk_lib_aws_codestar_CfnGitHubRepository_S3Property, aws_cdk_lib_aws_codestarconnections_CfnConnectionProps, aws_cdk_lib_aws_codestarconnections_CfnConnection, aws_cdk_lib_aws_codestarnotifications_CfnNotificationRuleProps, aws_cdk_lib_aws_codestarnotifications_CfnNotificationRule, aws_cdk_lib_aws_codestarnotifications_CfnNotificationRule_TargetProperty, aws_cdk_lib_aws_codestarnotifications_DetailType, aws_cdk_lib_aws_codestarnotifications_NotificationRuleOptions, aws_cdk_lib_aws_codestarnotifications_NotificationRuleProps, aws_cdk_lib_aws_codestarnotifications_INotificationRule, aws_cdk_lib_aws_codestarnotifications_NotificationRule, aws_cdk_lib_aws_codestarnotifications_NotificationRuleSourceConfig, aws_cdk_lib_aws_codestarnotifications_INotificationRuleSource, aws_cdk_lib_aws_codestarnotifications_NotificationRuleTargetConfig, aws_cdk_lib_aws_codestarnotifications_INotificationRuleTarget, aws_cdk_lib_aws_cognito_CfnIdentityPoolProps, aws_cdk_lib_aws_cognito_CfnIdentityPool, aws_cdk_lib_aws_cognito_CfnIdentityPool_CognitoIdentityProviderProperty, aws_cdk_lib_aws_cognito_CfnIdentityPool_CognitoStreamsProperty, aws_cdk_lib_aws_cognito_CfnIdentityPool_PushSyncProperty, aws_cdk_lib_aws_cognito_CfnIdentityPoolRoleAttachmentProps, aws_cdk_lib_aws_cognito_CfnIdentityPoolRoleAttachment, aws_cdk_lib_aws_cognito_CfnIdentityPoolRoleAttachment_MappingRuleProperty, aws_cdk_lib_aws_cognito_CfnIdentityPoolRoleAttachment_RoleMappingProperty, aws_cdk_lib_aws_cognito_CfnIdentityPoolRoleAttachment_RulesConfigurationTypeProperty, aws_cdk_lib_aws_cognito_CfnUserPoolProps, aws_cdk_lib_aws_cognito_CfnUserPool, aws_cdk_lib_aws_cognito_CfnUserPool_AccountRecoverySettingProperty, aws_cdk_lib_aws_cognito_CfnUserPool_AdminCreateUserConfigProperty, aws_cdk_lib_aws_cognito_CfnUserPool_CustomEmailSenderProperty, aws_cdk_lib_aws_cognito_CfnUserPool_CustomSMSSenderProperty, aws_cdk_lib_aws_cognito_CfnUserPool_DeviceConfigurationProperty, aws_cdk_lib_aws_cognito_CfnUserPool_EmailConfigurationProperty, aws_cdk_lib_aws_cognito_CfnUserPool_InviteMessageTemplateProperty, aws_cdk_lib_aws_cognito_CfnUserPool_LambdaConfigProperty, aws_cdk_lib_aws_cognito_CfnUserPool_NumberAttributeConstraintsProperty, aws_cdk_lib_aws_cognito_CfnUserPool_PasswordPolicyProperty, aws_cdk_lib_aws_cognito_CfnUserPool_PoliciesProperty, aws_cdk_lib_aws_cognito_CfnUserPool_RecoveryOptionProperty, aws_cdk_lib_aws_cognito_CfnUserPool_SchemaAttributeProperty, aws_cdk_lib_aws_cognito_CfnUserPool_SmsConfigurationProperty, aws_cdk_lib_aws_cognito_CfnUserPool_StringAttributeConstraintsProperty, aws_cdk_lib_aws_cognito_CfnUserPool_UserAttributeUpdateSettingsProperty, aws_cdk_lib_aws_cognito_CfnUserPool_UserPoolAddOnsProperty, aws_cdk_lib_aws_cognito_CfnUserPool_UsernameConfigurationProperty, aws_cdk_lib_aws_cognito_CfnUserPool_VerificationMessageTemplateProperty, aws_cdk_lib_aws_cognito_CfnUserPoolClientProps, aws_cdk_lib_aws_cognito_CfnUserPoolClient, aws_cdk_lib_aws_cognito_CfnUserPoolClient_AnalyticsConfigurationProperty, aws_cdk_lib_aws_cognito_CfnUserPoolClient_TokenValidityUnitsProperty, aws_cdk_lib_aws_cognito_CfnUserPoolDomainProps, aws_cdk_lib_aws_cognito_CfnUserPoolDomain, aws_cdk_lib_aws_cognito_CfnUserPoolDomain_CustomDomainConfigTypeProperty, aws_cdk_lib_aws_cognito_CfnUserPoolGroupProps, aws_cdk_lib_aws_cognito_CfnUserPoolGroup, aws_cdk_lib_aws_cognito_CfnUserPoolIdentityProviderProps, aws_cdk_lib_aws_cognito_CfnUserPoolIdentityProvider, aws_cdk_lib_aws_cognito_CfnUserPoolResourceServerProps, aws_cdk_lib_aws_cognito_CfnUserPoolResourceServer, aws_cdk_lib_aws_cognito_CfnUserPoolResourceServer_ResourceServerScopeTypeProperty, aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachmentProps, aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment, aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_AccountTakeoverActionTypeProperty, aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_AccountTakeoverActionsTypeProperty, aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_AccountTakeoverRiskConfigurationTypeProperty, aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_CompromisedCredentialsActionsTypeProperty, aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_CompromisedCredentialsRiskConfigurationTypeProperty, aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_NotifyConfigurationTypeProperty, aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_NotifyEmailTypeProperty, aws_cdk_lib_aws_cognito_CfnUserPoolRiskConfigurationAttachment_RiskExceptionConfigurationTypeProperty, aws_cdk_lib_aws_cognito_CfnUserPoolUICustomizationAttachmentProps, aws_cdk_lib_aws_cognito_CfnUserPoolUICustomizationAttachment, aws_cdk_lib_aws_cognito_CfnUserPoolUserProps, aws_cdk_lib_aws_cognito_CfnUserPoolUser, aws_cdk_lib_aws_cognito_CfnUserPoolUser_AttributeTypeProperty, aws_cdk_lib_aws_cognito_CfnUserPoolUserToGroupAttachmentProps, aws_cdk_lib_aws_cognito_CfnUserPoolUserToGroupAttachment, aws_cdk_lib_aws_cognito_SignInAliases, aws_cdk_lib_aws_cognito_AutoVerifiedAttrs, aws_cdk_lib_aws_cognito_KeepOriginalAttrs, aws_cdk_lib_aws_cognito_UserPoolTriggers, aws_cdk_lib_aws_cognito_UserPoolOperation, aws_cdk_lib_aws_cognito_VerificationEmailStyle, aws_cdk_lib_aws_cognito_UserVerificationConfig, aws_cdk_lib_aws_cognito_UserInvitationConfig, aws_cdk_lib_aws_cognito_Mfa, aws_cdk_lib_aws_cognito_MfaSecondFactor, aws_cdk_lib_aws_cognito_PasswordPolicy, aws_cdk_lib_aws_cognito_EmailSettings, aws_cdk_lib_aws_cognito_AccountRecovery, aws_cdk_lib_aws_cognito_DeviceTracking, aws_cdk_lib_aws_cognito_AdvancedSecurityMode, aws_cdk_lib_aws_cognito_UserPoolProps, aws_cdk_lib_aws_cognito_IUserPool, aws_cdk_lib_aws_cognito_UserPool, aws_cdk_lib_aws_cognito_StandardAttributes, aws_cdk_lib_aws_cognito_StandardAttribute, aws_cdk_lib_aws_cognito_ICustomAttribute, aws_cdk_lib_aws_cognito_CustomAttributeConfig, aws_cdk_lib_aws_cognito_CustomAttributeProps, aws_cdk_lib_aws_cognito_StringAttributeConstraints, aws_cdk_lib_aws_cognito_StringAttributeProps, aws_cdk_lib_aws_cognito_StringAttribute, aws_cdk_lib_aws_cognito_NumberAttributeConstraints, aws_cdk_lib_aws_cognito_NumberAttributeProps, aws_cdk_lib_aws_cognito_NumberAttribute, aws_cdk_lib_aws_cognito_BooleanAttribute, aws_cdk_lib_aws_cognito_DateTimeAttribute, aws_cdk_lib_aws_cognito_StandardAttributesMask, aws_cdk_lib_aws_cognito_ClientAttributes, aws_cdk_lib_aws_cognito_AuthFlow, aws_cdk_lib_aws_cognito_OAuthSettings, aws_cdk_lib_aws_cognito_OAuthFlows, aws_cdk_lib_aws_cognito_OAuthScope, aws_cdk_lib_aws_cognito_UserPoolClientIdentityProvider, aws_cdk_lib_aws_cognito_UserPoolClientOptions, aws_cdk_lib_aws_cognito_UserPoolClientProps, aws_cdk_lib_aws_cognito_IUserPoolClient, aws_cdk_lib_aws_cognito_UserPoolClient, aws_cdk_lib_aws_cognito_IUserPoolDomain, aws_cdk_lib_aws_cognito_CustomDomainOptions, aws_cdk_lib_aws_cognito_CognitoDomainOptions, aws_cdk_lib_aws_cognito_UserPoolDomainOptions, aws_cdk_lib_aws_cognito_UserPoolDomainProps, aws_cdk_lib_aws_cognito_UserPoolDomain, aws_cdk_lib_aws_cognito_BaseUrlOptions, aws_cdk_lib_aws_cognito_SignInUrlOptions, aws_cdk_lib_aws_cognito_UserPoolSESOptions, aws_cdk_lib_aws_cognito_UserPoolEmail, aws_cdk_lib_aws_cognito_IUserPoolIdentityProvider, aws_cdk_lib_aws_cognito_UserPoolIdentityProvider, aws_cdk_lib_aws_cognito_ProviderAttribute, aws_cdk_lib_aws_cognito_AttributeMapping, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderProps, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderAppleProps, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderApple, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderAmazonProps, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderAmazon, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderFacebookProps, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderFacebook, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderGoogleProps, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderGoogle, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderOidcProps, aws_cdk_lib_aws_cognito_OidcEndpoints, aws_cdk_lib_aws_cognito_OidcAttributeRequestMethod, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderOidc, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderSamlProps, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderSamlMetadataType, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderSamlMetadata, aws_cdk_lib_aws_cognito_UserPoolIdentityProviderSaml, aws_cdk_lib_aws_cognito_IUserPoolResourceServer, aws_cdk_lib_aws_cognito_ResourceServerScopeProps, aws_cdk_lib_aws_cognito_ResourceServerScope, aws_cdk_lib_aws_cognito_UserPoolResourceServerOptions, aws_cdk_lib_aws_cognito_UserPoolResourceServerProps, aws_cdk_lib_aws_cognito_UserPoolResourceServer, aws_cdk_lib_aws_comprehend_CfnFlywheelProps, aws_cdk_lib_aws_comprehend_CfnFlywheel, aws_cdk_lib_aws_comprehend_CfnFlywheel_DataSecurityConfigProperty, aws_cdk_lib_aws_comprehend_CfnFlywheel_DocumentClassificationConfigProperty, aws_cdk_lib_aws_comprehend_CfnFlywheel_EntityRecognitionConfigProperty, aws_cdk_lib_aws_comprehend_CfnFlywheel_EntityTypesListItemProperty, aws_cdk_lib_aws_comprehend_CfnFlywheel_TaskConfigProperty, aws_cdk_lib_aws_comprehend_CfnFlywheel_VpcConfigProperty, aws_cdk_lib_aws_config_IRule, aws_cdk_lib_aws_config_RuleScope, aws_cdk_lib_aws_config_MaximumExecutionFrequency, aws_cdk_lib_aws_config_RuleProps, aws_cdk_lib_aws_config_ManagedRuleProps, aws_cdk_lib_aws_config_ManagedRule, aws_cdk_lib_aws_config_CustomRuleProps, aws_cdk_lib_aws_config_CustomRule, aws_cdk_lib_aws_config_CustomPolicyProps, aws_cdk_lib_aws_config_CustomPolicy, aws_cdk_lib_aws_config_ManagedRuleIdentifiers, aws_cdk_lib_aws_config_ResourceType, aws_cdk_lib_aws_config_AccessKeysRotatedProps, aws_cdk_lib_aws_config_AccessKeysRotated, aws_cdk_lib_aws_config_CloudFormationStackDriftDetectionCheckProps, aws_cdk_lib_aws_config_CloudFormationStackDriftDetectionCheck, aws_cdk_lib_aws_config_CloudFormationStackNotificationCheckProps, aws_cdk_lib_aws_config_CloudFormationStackNotificationCheck, aws_cdk_lib_aws_config_CfnAggregationAuthorizationProps, aws_cdk_lib_aws_config_CfnAggregationAuthorization, aws_cdk_lib_aws_config_CfnConfigRuleProps, aws_cdk_lib_aws_config_CfnConfigRule, aws_cdk_lib_aws_config_CfnConfigRule_CustomPolicyDetailsProperty, aws_cdk_lib_aws_config_CfnConfigRule_ScopeProperty, aws_cdk_lib_aws_config_CfnConfigRule_SourceProperty, aws_cdk_lib_aws_config_CfnConfigRule_SourceDetailProperty, aws_cdk_lib_aws_config_CfnConfigurationAggregatorProps, aws_cdk_lib_aws_config_CfnConfigurationAggregator, aws_cdk_lib_aws_config_CfnConfigurationAggregator_AccountAggregationSourceProperty, aws_cdk_lib_aws_config_CfnConfigurationAggregator_OrganizationAggregationSourceProperty, aws_cdk_lib_aws_config_CfnConfigurationRecorderProps, aws_cdk_lib_aws_config_CfnConfigurationRecorder, aws_cdk_lib_aws_config_CfnConfigurationRecorder_RecordingGroupProperty, aws_cdk_lib_aws_config_CfnConformancePackProps, aws_cdk_lib_aws_config_CfnConformancePack, aws_cdk_lib_aws_config_CfnConformancePack_ConformancePackInputParameterProperty, aws_cdk_lib_aws_config_CfnConformancePack_TemplateSSMDocumentDetailsProperty, aws_cdk_lib_aws_config_CfnDeliveryChannelProps, aws_cdk_lib_aws_config_CfnDeliveryChannel, aws_cdk_lib_aws_config_CfnDeliveryChannel_ConfigSnapshotDeliveryPropertiesProperty, aws_cdk_lib_aws_config_CfnOrganizationConfigRuleProps, aws_cdk_lib_aws_config_CfnOrganizationConfigRule, aws_cdk_lib_aws_config_CfnOrganizationConfigRule_OrganizationCustomPolicyRuleMetadataProperty, aws_cdk_lib_aws_config_CfnOrganizationConfigRule_OrganizationCustomRuleMetadataProperty, aws_cdk_lib_aws_config_CfnOrganizationConfigRule_OrganizationManagedRuleMetadataProperty, aws_cdk_lib_aws_config_CfnOrganizationConformancePackProps, aws_cdk_lib_aws_config_CfnOrganizationConformancePack, aws_cdk_lib_aws_config_CfnOrganizationConformancePack_ConformancePackInputParameterProperty, aws_cdk_lib_aws_config_CfnRemediationConfigurationProps, aws_cdk_lib_aws_config_CfnRemediationConfiguration, aws_cdk_lib_aws_config_CfnRemediationConfiguration_ExecutionControlsProperty, aws_cdk_lib_aws_config_CfnRemediationConfiguration_RemediationParameterValueProperty, aws_cdk_lib_aws_config_CfnRemediationConfiguration_ResourceValueProperty, aws_cdk_lib_aws_config_CfnRemediationConfiguration_SsmControlsProperty, aws_cdk_lib_aws_config_CfnRemediationConfiguration_StaticValueProperty, aws_cdk_lib_aws_config_CfnStoredQueryProps, aws_cdk_lib_aws_config_CfnStoredQuery, aws_cdk_lib_aws_connect_CfnApprovedOriginProps, aws_cdk_lib_aws_connect_CfnApprovedOrigin, aws_cdk_lib_aws_connect_CfnContactFlowProps, aws_cdk_lib_aws_connect_CfnContactFlow, aws_cdk_lib_aws_connect_CfnContactFlowModuleProps, aws_cdk_lib_aws_connect_CfnContactFlowModule, aws_cdk_lib_aws_connect_CfnHoursOfOperationProps, aws_cdk_lib_aws_connect_CfnHoursOfOperation, aws_cdk_lib_aws_connect_CfnHoursOfOperation_HoursOfOperationConfigProperty, aws_cdk_lib_aws_connect_CfnHoursOfOperation_HoursOfOperationTimeSliceProperty, aws_cdk_lib_aws_connect_CfnInstanceProps, aws_cdk_lib_aws_connect_CfnInstance, aws_cdk_lib_aws_connect_CfnInstance_AttributesProperty, aws_cdk_lib_aws_connect_CfnInstanceStorageConfigProps, aws_cdk_lib_aws_connect_CfnInstanceStorageConfig, aws_cdk_lib_aws_connect_CfnInstanceStorageConfig_EncryptionConfigProperty, aws_cdk_lib_aws_connect_CfnInstanceStorageConfig_KinesisFirehoseConfigProperty, aws_cdk_lib_aws_connect_CfnInstanceStorageConfig_KinesisStreamConfigProperty, aws_cdk_lib_aws_connect_CfnInstanceStorageConfig_KinesisVideoStreamConfigProperty, aws_cdk_lib_aws_connect_CfnInstanceStorageConfig_S3ConfigProperty, aws_cdk_lib_aws_connect_CfnIntegrationAssociationProps, aws_cdk_lib_aws_connect_CfnIntegrationAssociation, aws_cdk_lib_aws_connect_CfnPhoneNumberProps, aws_cdk_lib_aws_connect_CfnPhoneNumber, aws_cdk_lib_aws_connect_CfnQuickConnectProps, aws_cdk_lib_aws_connect_CfnQuickConnect, aws_cdk_lib_aws_connect_CfnQuickConnect_PhoneNumberQuickConnectConfigProperty, aws_cdk_lib_aws_connect_CfnQuickConnect_QueueQuickConnectConfigProperty, aws_cdk_lib_aws_connect_CfnQuickConnect_QuickConnectConfigProperty, aws_cdk_lib_aws_connect_CfnQuickConnect_UserQuickConnectConfigProperty, aws_cdk_lib_aws_connect_CfnRuleProps, aws_cdk_lib_aws_connect_CfnRule, aws_cdk_lib_aws_connect_CfnRule_ActionsProperty, aws_cdk_lib_aws_connect_CfnRule_EventBridgeActionProperty, aws_cdk_lib_aws_connect_CfnRule_NotificationRecipientTypeProperty, aws_cdk_lib_aws_connect_CfnRule_ReferenceProperty, aws_cdk_lib_aws_connect_CfnRule_RuleTriggerEventSourceProperty, aws_cdk_lib_aws_connect_CfnRule_SendNotificationActionProperty, aws_cdk_lib_aws_connect_CfnRule_TaskActionProperty, aws_cdk_lib_aws_connect_CfnSecurityKeyProps, aws_cdk_lib_aws_connect_CfnSecurityKey, aws_cdk_lib_aws_connect_CfnTaskTemplateProps, aws_cdk_lib_aws_connect_CfnTaskTemplate, aws_cdk_lib_aws_connect_CfnTaskTemplate_ConstraintsProperty, aws_cdk_lib_aws_connect_CfnTaskTemplate_DefaultFieldValueProperty, aws_cdk_lib_aws_connect_CfnTaskTemplate_FieldProperty, aws_cdk_lib_aws_connect_CfnTaskTemplate_FieldIdentifierProperty, aws_cdk_lib_aws_connect_CfnTaskTemplate_InvisibleFieldInfoProperty, aws_cdk_lib_aws_connect_CfnTaskTemplate_ReadOnlyFieldInfoProperty, aws_cdk_lib_aws_connect_CfnTaskTemplate_RequiredFieldInfoProperty, aws_cdk_lib_aws_connect_CfnUserProps, aws_cdk_lib_aws_connect_CfnUser, aws_cdk_lib_aws_connect_CfnUser_UserIdentityInfoProperty, aws_cdk_lib_aws_connect_CfnUser_UserPhoneConfigProperty, aws_cdk_lib_aws_connect_CfnUserHierarchyGroupProps, aws_cdk_lib_aws_connect_CfnUserHierarchyGroup, aws_cdk_lib_aws_connectcampaigns_CfnCampaignProps, aws_cdk_lib_aws_connectcampaigns_CfnCampaign, aws_cdk_lib_aws_connectcampaigns_CfnCampaign_AnswerMachineDetectionConfigProperty, aws_cdk_lib_aws_connectcampaigns_CfnCampaign_DialerConfigProperty, aws_cdk_lib_aws_connectcampaigns_CfnCampaign_OutboundCallConfigProperty, aws_cdk_lib_aws_connectcampaigns_CfnCampaign_PredictiveDialerConfigProperty, aws_cdk_lib_aws_connectcampaigns_CfnCampaign_ProgressiveDialerConfigProperty, aws_cdk_lib_aws_controltower_CfnEnabledControlProps, aws_cdk_lib_aws_controltower_CfnEnabledControl, aws_cdk_lib_aws_cur_CfnReportDefinitionProps, aws_cdk_lib_aws_cur_CfnReportDefinition, aws_cdk_lib_aws_customerprofiles_CfnDomainProps, aws_cdk_lib_aws_customerprofiles_CfnDomain, aws_cdk_lib_aws_customerprofiles_CfnIntegrationProps, aws_cdk_lib_aws_customerprofiles_CfnIntegration, aws_cdk_lib_aws_customerprofiles_CfnIntegration_ConnectorOperatorProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_FlowDefinitionProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_IncrementalPullConfigProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_MarketoSourcePropertiesProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_ObjectTypeMappingProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_S3SourcePropertiesProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_SalesforceSourcePropertiesProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_ScheduledTriggerPropertiesProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_ServiceNowSourcePropertiesProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_SourceConnectorPropertiesProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_SourceFlowConfigProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_TaskProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_TaskPropertiesMapProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_TriggerConfigProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_TriggerPropertiesProperty, aws_cdk_lib_aws_customerprofiles_CfnIntegration_ZendeskSourcePropertiesProperty, aws_cdk_lib_aws_customerprofiles_CfnObjectTypeProps, aws_cdk_lib_aws_customerprofiles_CfnObjectType, aws_cdk_lib_aws_customerprofiles_CfnObjectType_FieldMapProperty, aws_cdk_lib_aws_customerprofiles_CfnObjectType_KeyMapProperty, aws_cdk_lib_aws_customerprofiles_CfnObjectType_ObjectTypeFieldProperty, aws_cdk_lib_aws_customerprofiles_CfnObjectType_ObjectTypeKeyProperty, aws_cdk_lib_aws_databrew_CfnDatasetProps, aws_cdk_lib_aws_databrew_CfnDataset, aws_cdk_lib_aws_databrew_CfnDataset_CsvOptionsProperty, aws_cdk_lib_aws_databrew_CfnDataset_DataCatalogInputDefinitionProperty, aws_cdk_lib_aws_databrew_CfnDataset_DatabaseInputDefinitionProperty, aws_cdk_lib_aws_databrew_CfnDataset_DatasetParameterProperty, aws_cdk_lib_aws_databrew_CfnDataset_DatetimeOptionsProperty, aws_cdk_lib_aws_databrew_CfnDataset_ExcelOptionsProperty, aws_cdk_lib_aws_databrew_CfnDataset_FilesLimitProperty, aws_cdk_lib_aws_databrew_CfnDataset_FilterExpressionProperty, aws_cdk_lib_aws_databrew_CfnDataset_FilterValueProperty, aws_cdk_lib_aws_databrew_CfnDataset_FormatOptionsProperty, aws_cdk_lib_aws_databrew_CfnDataset_InputProperty, aws_cdk_lib_aws_databrew_CfnDataset_JsonOptionsProperty, aws_cdk_lib_aws_databrew_CfnDataset_MetadataProperty, aws_cdk_lib_aws_databrew_CfnDataset_PathOptionsProperty, aws_cdk_lib_aws_databrew_CfnDataset_PathParameterProperty, aws_cdk_lib_aws_databrew_CfnDataset_S3LocationProperty, aws_cdk_lib_aws_databrew_CfnJobProps, aws_cdk_lib_aws_databrew_CfnJob, aws_cdk_lib_aws_databrew_CfnJob_AllowedStatisticsProperty, aws_cdk_lib_aws_databrew_CfnJob_ColumnSelectorProperty, aws_cdk_lib_aws_databrew_CfnJob_ColumnStatisticsConfigurationProperty, aws_cdk_lib_aws_databrew_CfnJob_CsvOutputOptionsProperty, aws_cdk_lib_aws_databrew_CfnJob_DataCatalogOutputProperty, aws_cdk_lib_aws_databrew_CfnJob_DatabaseOutputProperty, aws_cdk_lib_aws_databrew_CfnJob_DatabaseTableOutputOptionsProperty, aws_cdk_lib_aws_databrew_CfnJob_EntityDetectorConfigurationProperty, aws_cdk_lib_aws_databrew_CfnJob_JobSampleProperty, aws_cdk_lib_aws_databrew_CfnJob_OutputProperty, aws_cdk_lib_aws_databrew_CfnJob_OutputFormatOptionsProperty, aws_cdk_lib_aws_databrew_CfnJob_OutputLocationProperty, aws_cdk_lib_aws_databrew_CfnJob_ProfileConfigurationProperty, aws_cdk_lib_aws_databrew_CfnJob_RecipeProperty, aws_cdk_lib_aws_databrew_CfnJob_S3LocationProperty, aws_cdk_lib_aws_databrew_CfnJob_S3TableOutputOptionsProperty, aws_cdk_lib_aws_databrew_CfnJob_StatisticOverrideProperty, aws_cdk_lib_aws_databrew_CfnJob_StatisticsConfigurationProperty, aws_cdk_lib_aws_databrew_CfnJob_ValidationConfigurationProperty, aws_cdk_lib_aws_databrew_CfnProjectProps, aws_cdk_lib_aws_databrew_CfnProject, aws_cdk_lib_aws_databrew_CfnProject_SampleProperty, aws_cdk_lib_aws_databrew_CfnRecipeProps, aws_cdk_lib_aws_databrew_CfnRecipe, aws_cdk_lib_aws_databrew_CfnRecipe_ActionProperty, aws_cdk_lib_aws_databrew_CfnRecipe_ConditionExpressionProperty, aws_cdk_lib_aws_databrew_CfnRecipe_DataCatalogInputDefinitionProperty, aws_cdk_lib_aws_databrew_CfnRecipe_InputProperty, aws_cdk_lib_aws_databrew_CfnRecipe_RecipeParametersProperty, aws_cdk_lib_aws_databrew_CfnRecipe_RecipeStepProperty, aws_cdk_lib_aws_databrew_CfnRecipe_S3LocationProperty, aws_cdk_lib_aws_databrew_CfnRecipe_SecondaryInputProperty, aws_cdk_lib_aws_databrew_CfnRulesetProps, aws_cdk_lib_aws_databrew_CfnRuleset, aws_cdk_lib_aws_databrew_CfnRuleset_ColumnSelectorProperty, aws_cdk_lib_aws_databrew_CfnRuleset_RuleProperty, aws_cdk_lib_aws_databrew_CfnRuleset_SubstitutionValueProperty, aws_cdk_lib_aws_databrew_CfnRuleset_ThresholdProperty, aws_cdk_lib_aws_databrew_CfnScheduleProps, aws_cdk_lib_aws_databrew_CfnSchedule, aws_cdk_lib_aws_datapipeline_CfnPipelineProps, aws_cdk_lib_aws_datapipeline_CfnPipeline, aws_cdk_lib_aws_datapipeline_CfnPipeline_FieldProperty, aws_cdk_lib_aws_datapipeline_CfnPipeline_ParameterAttributeProperty, aws_cdk_lib_aws_datapipeline_CfnPipeline_ParameterObjectProperty, aws_cdk_lib_aws_datapipeline_CfnPipeline_ParameterValueProperty, aws_cdk_lib_aws_datapipeline_CfnPipeline_PipelineObjectProperty, aws_cdk_lib_aws_datapipeline_CfnPipeline_PipelineTagProperty, aws_cdk_lib_aws_datasync_CfnAgentProps, aws_cdk_lib_aws_datasync_CfnAgent, aws_cdk_lib_aws_datasync_CfnLocationEFSProps, aws_cdk_lib_aws_datasync_CfnLocationEFS, aws_cdk_lib_aws_datasync_CfnLocationEFS_Ec2ConfigProperty, aws_cdk_lib_aws_datasync_CfnLocationFSxLustreProps, aws_cdk_lib_aws_datasync_CfnLocationFSxLustre, aws_cdk_lib_aws_datasync_CfnLocationFSxONTAPProps, aws_cdk_lib_aws_datasync_CfnLocationFSxONTAP, aws_cdk_lib_aws_datasync_CfnLocationFSxONTAP_NFSProperty, aws_cdk_lib_aws_datasync_CfnLocationFSxONTAP_NfsMountOptionsProperty, aws_cdk_lib_aws_datasync_CfnLocationFSxONTAP_ProtocolProperty, aws_cdk_lib_aws_datasync_CfnLocationFSxONTAP_SMBProperty, aws_cdk_lib_aws_datasync_CfnLocationFSxONTAP_SmbMountOptionsProperty, aws_cdk_lib_aws_datasync_CfnLocationFSxOpenZFSProps, aws_cdk_lib_aws_datasync_CfnLocationFSxOpenZFS, aws_cdk_lib_aws_datasync_CfnLocationFSxOpenZFS_MountOptionsProperty, aws_cdk_lib_aws_datasync_CfnLocationFSxOpenZFS_NFSProperty, aws_cdk_lib_aws_datasync_CfnLocationFSxOpenZFS_ProtocolProperty, aws_cdk_lib_aws_datasync_CfnLocationFSxWindowsProps, aws_cdk_lib_aws_datasync_CfnLocationFSxWindows, aws_cdk_lib_aws_datasync_CfnLocationHDFSProps, aws_cdk_lib_aws_datasync_CfnLocationHDFS, aws_cdk_lib_aws_datasync_CfnLocationHDFS_NameNodeProperty, aws_cdk_lib_aws_datasync_CfnLocationHDFS_QopConfigurationProperty, aws_cdk_lib_aws_datasync_CfnLocationNFSProps, aws_cdk_lib_aws_datasync_CfnLocationNFS, aws_cdk_lib_aws_datasync_CfnLocationNFS_MountOptionsProperty, aws_cdk_lib_aws_datasync_CfnLocationNFS_OnPremConfigProperty, aws_cdk_lib_aws_datasync_CfnLocationObjectStorageProps, aws_cdk_lib_aws_datasync_CfnLocationObjectStorage, aws_cdk_lib_aws_datasync_CfnLocationS3Props, aws_cdk_lib_aws_datasync_CfnLocationS3, aws_cdk_lib_aws_datasync_CfnLocationS3_S3ConfigProperty, aws_cdk_lib_aws_datasync_CfnLocationSMBProps, aws_cdk_lib_aws_datasync_CfnLocationSMB, aws_cdk_lib_aws_datasync_CfnLocationSMB_MountOptionsProperty, aws_cdk_lib_aws_datasync_CfnTaskProps, aws_cdk_lib_aws_datasync_CfnTask, aws_cdk_lib_aws_datasync_CfnTask_FilterRuleProperty, aws_cdk_lib_aws_datasync_CfnTask_OptionsProperty, aws_cdk_lib_aws_datasync_CfnTask_TaskScheduleProperty, aws_cdk_lib_aws_dax_CfnClusterProps, aws_cdk_lib_aws_dax_CfnCluster, aws_cdk_lib_aws_dax_CfnCluster_SSESpecificationProperty, aws_cdk_lib_aws_dax_CfnParameterGroupProps, aws_cdk_lib_aws_dax_CfnParameterGroup, aws_cdk_lib_aws_dax_CfnSubnetGroupProps, aws_cdk_lib_aws_dax_CfnSubnetGroup, aws_cdk_lib_aws_detective_CfnGraphProps, aws_cdk_lib_aws_detective_CfnGraph, aws_cdk_lib_aws_detective_CfnMemberInvitationProps, aws_cdk_lib_aws_detective_CfnMemberInvitation, aws_cdk_lib_aws_devicefarm_CfnDevicePoolProps, aws_cdk_lib_aws_devicefarm_CfnDevicePool, aws_cdk_lib_aws_devicefarm_CfnDevicePool_RuleProperty, aws_cdk_lib_aws_devicefarm_CfnInstanceProfileProps, aws_cdk_lib_aws_devicefarm_CfnInstanceProfile, aws_cdk_lib_aws_devicefarm_CfnNetworkProfileProps, aws_cdk_lib_aws_devicefarm_CfnNetworkProfile, aws_cdk_lib_aws_devicefarm_CfnProjectProps, aws_cdk_lib_aws_devicefarm_CfnProject, aws_cdk_lib_aws_devicefarm_CfnTestGridProjectProps, aws_cdk_lib_aws_devicefarm_CfnTestGridProject, aws_cdk_lib_aws_devicefarm_CfnTestGridProject_VpcConfigProperty, aws_cdk_lib_aws_devicefarm_CfnVPCEConfigurationProps, aws_cdk_lib_aws_devicefarm_CfnVPCEConfiguration, aws_cdk_lib_aws_devopsguru_CfnNotificationChannelProps, aws_cdk_lib_aws_devopsguru_CfnNotificationChannel, aws_cdk_lib_aws_devopsguru_CfnNotificationChannel_NotificationChannelConfigProperty, aws_cdk_lib_aws_devopsguru_CfnNotificationChannel_NotificationFilterConfigProperty, aws_cdk_lib_aws_devopsguru_CfnNotificationChannel_SnsChannelConfigProperty, aws_cdk_lib_aws_devopsguru_CfnResourceCollectionProps, aws_cdk_lib_aws_devopsguru_CfnResourceCollection, aws_cdk_lib_aws_devopsguru_CfnResourceCollection_CloudFormationCollectionFilterProperty, aws_cdk_lib_aws_devopsguru_CfnResourceCollection_ResourceCollectionFilterProperty, aws_cdk_lib_aws_devopsguru_CfnResourceCollection_TagCollectionProperty, aws_cdk_lib_aws_directoryservice_CfnMicrosoftADProps, aws_cdk_lib_aws_directoryservice_CfnMicrosoftAD, aws_cdk_lib_aws_directoryservice_CfnMicrosoftAD_VpcSettingsProperty, aws_cdk_lib_aws_directoryservice_CfnSimpleADProps, aws_cdk_lib_aws_directoryservice_CfnSimpleAD, aws_cdk_lib_aws_directoryservice_CfnSimpleAD_VpcSettingsProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicyProps, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_ActionProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_ArchiveRetainRuleProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_ArchiveRuleProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_CreateRuleProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_CrossRegionCopyActionProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_CrossRegionCopyDeprecateRuleProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_CrossRegionCopyRetainRuleProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_CrossRegionCopyRuleProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_DeprecateRuleProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_EncryptionConfigurationProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_EventParametersProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_EventSourceProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_FastRestoreRuleProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_ParametersProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_PolicyDetailsProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_RetainRuleProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_RetentionArchiveTierProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_ScheduleProperty, aws_cdk_lib_aws_dlm_CfnLifecyclePolicy_ShareRuleProperty, aws_cdk_lib_aws_dms_CfnCertificateProps, aws_cdk_lib_aws_dms_CfnCertificate, aws_cdk_lib_aws_dms_CfnEndpointProps, aws_cdk_lib_aws_dms_CfnEndpoint, aws_cdk_lib_aws_dms_CfnEndpoint_DocDbSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_DynamoDbSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_ElasticsearchSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_GcpMySQLSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_IbmDb2SettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_KafkaSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_KinesisSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_MicrosoftSqlServerSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_MongoDbSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_MySqlSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_NeptuneSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_OracleSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_PostgreSqlSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_RedisSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_RedshiftSettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_S3SettingsProperty, aws_cdk_lib_aws_dms_CfnEndpoint_SybaseSettingsProperty, aws_cdk_lib_aws_dms_CfnEventSubscriptionProps, aws_cdk_lib_aws_dms_CfnEventSubscription, aws_cdk_lib_aws_dms_CfnReplicationInstanceProps, aws_cdk_lib_aws_dms_CfnReplicationInstance, aws_cdk_lib_aws_dms_CfnReplicationSubnetGroupProps, aws_cdk_lib_aws_dms_CfnReplicationSubnetGroup, aws_cdk_lib_aws_dms_CfnReplicationTaskProps, aws_cdk_lib_aws_dms_CfnReplicationTask, aws_cdk_lib_aws_docdb_DatabaseClusterProps, aws_cdk_lib_aws_docdb_DatabaseCluster, aws_cdk_lib_aws_docdb_IDatabaseCluster, aws_cdk_lib_aws_docdb_DatabaseClusterAttributes, aws_cdk_lib_aws_docdb_DatabaseSecretProps, aws_cdk_lib_aws_docdb_DatabaseSecret, aws_cdk_lib_aws_docdb_Endpoint, aws_cdk_lib_aws_docdb_IDatabaseInstance, aws_cdk_lib_aws_docdb_DatabaseInstanceAttributes, aws_cdk_lib_aws_docdb_DatabaseInstanceProps, aws_cdk_lib_aws_docdb_DatabaseInstance, aws_cdk_lib_aws_docdb_IClusterParameterGroup, aws_cdk_lib_aws_docdb_ClusterParameterGroupProps, aws_cdk_lib_aws_docdb_ClusterParameterGroup, aws_cdk_lib_aws_docdb_BackupProps, aws_cdk_lib_aws_docdb_Login, aws_cdk_lib_aws_docdb_RotationMultiUserOptions, aws_cdk_lib_aws_docdb_CfnDBClusterProps, aws_cdk_lib_aws_docdb_CfnDBCluster, aws_cdk_lib_aws_docdb_CfnDBClusterParameterGroupProps, aws_cdk_lib_aws_docdb_CfnDBClusterParameterGroup, aws_cdk_lib_aws_docdb_CfnDBInstanceProps, aws_cdk_lib_aws_docdb_CfnDBInstance, aws_cdk_lib_aws_docdb_CfnDBSubnetGroupProps, aws_cdk_lib_aws_docdb_CfnDBSubnetGroup, aws_cdk_lib_aws_docdbelastic_CfnClusterProps, aws_cdk_lib_aws_docdbelastic_CfnCluster, aws_cdk_lib_aws_dynamodb_CfnGlobalTableProps, aws_cdk_lib_aws_dynamodb_CfnGlobalTable, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_AttributeDefinitionProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_CapacityAutoScalingSettingsProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_ContributorInsightsSpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_GlobalSecondaryIndexProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_KeySchemaProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_KinesisStreamSpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_LocalSecondaryIndexProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_PointInTimeRecoverySpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_ProjectionProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_ReadProvisionedThroughputSettingsProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_ReplicaGlobalSecondaryIndexSpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_ReplicaSSESpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_ReplicaSpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_SSESpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_StreamSpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_TargetTrackingScalingPolicyConfigurationProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_TimeToLiveSpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnGlobalTable_WriteProvisionedThroughputSettingsProperty, aws_cdk_lib_aws_dynamodb_CfnTableProps, aws_cdk_lib_aws_dynamodb_CfnTable, aws_cdk_lib_aws_dynamodb_CfnTable_AttributeDefinitionProperty, aws_cdk_lib_aws_dynamodb_CfnTable_ContributorInsightsSpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnTable_CsvProperty, aws_cdk_lib_aws_dynamodb_CfnTable_GlobalSecondaryIndexProperty, aws_cdk_lib_aws_dynamodb_CfnTable_ImportSourceSpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnTable_InputFormatOptionsProperty, aws_cdk_lib_aws_dynamodb_CfnTable_KeySchemaProperty, aws_cdk_lib_aws_dynamodb_CfnTable_KinesisStreamSpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnTable_LocalSecondaryIndexProperty, aws_cdk_lib_aws_dynamodb_CfnTable_PointInTimeRecoverySpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnTable_ProjectionProperty, aws_cdk_lib_aws_dynamodb_CfnTable_ProvisionedThroughputProperty, aws_cdk_lib_aws_dynamodb_CfnTable_S3BucketSourceProperty, aws_cdk_lib_aws_dynamodb_CfnTable_SSESpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnTable_StreamSpecificationProperty, aws_cdk_lib_aws_dynamodb_CfnTable_TimeToLiveSpecificationProperty, aws_cdk_lib_aws_dynamodb_SystemErrorsForOperationsMetricOptions, aws_cdk_lib_aws_dynamodb_OperationsMetricOptions, aws_cdk_lib_aws_dynamodb_Operation, aws_cdk_lib_aws_dynamodb_Attribute, aws_cdk_lib_aws_dynamodb_TableEncryption, aws_cdk_lib_aws_dynamodb_SchemaOptions, aws_cdk_lib_aws_dynamodb_TableOptions, aws_cdk_lib_aws_dynamodb_TableProps, aws_cdk_lib_aws_dynamodb_SecondaryIndexProps, aws_cdk_lib_aws_dynamodb_GlobalSecondaryIndexProps, aws_cdk_lib_aws_dynamodb_LocalSecondaryIndexProps, aws_cdk_lib_aws_dynamodb_ITable, aws_cdk_lib_aws_dynamodb_TableAttributes, aws_cdk_lib_aws_dynamodb_Table, aws_cdk_lib_aws_dynamodb_AttributeType, aws_cdk_lib_aws_dynamodb_BillingMode, aws_cdk_lib_aws_dynamodb_ProjectionType, aws_cdk_lib_aws_dynamodb_StreamViewType, aws_cdk_lib_aws_dynamodb_TableClass, aws_cdk_lib_aws_dynamodb_IScalableTableAttribute, aws_cdk_lib_aws_dynamodb_EnableScalingProps, aws_cdk_lib_aws_dynamodb_UtilizationScalingProps, aws_cdk_lib_aws_ec2_InstanceRequireImdsv2AspectProps, aws_cdk_lib_aws_ec2_InstanceRequireImdsv2Aspect, aws_cdk_lib_aws_ec2_LaunchTemplateRequireImdsv2AspectProps, aws_cdk_lib_aws_ec2_LaunchTemplateRequireImdsv2Aspect, aws_cdk_lib_aws_ec2_BastionHostLinuxProps, aws_cdk_lib_aws_ec2_BastionHostLinux, aws_cdk_lib_aws_ec2_IConnectable, aws_cdk_lib_aws_ec2_ConnectionsProps, aws_cdk_lib_aws_ec2_Connections, aws_cdk_lib_aws_ec2_CloudFormationInit, aws_cdk_lib_aws_ec2_InitConfig, aws_cdk_lib_aws_ec2_ConfigSetProps, aws_cdk_lib_aws_ec2_AttachInitOptions, aws_cdk_lib_aws_ec2_InitServiceRestartHandle, aws_cdk_lib_aws_ec2_InitElement, aws_cdk_lib_aws_ec2_InitCommandOptions, aws_cdk_lib_aws_ec2_InitCommandWaitDuration, aws_cdk_lib_aws_ec2_InitCommand, aws_cdk_lib_aws_ec2_InitFileOptions, aws_cdk_lib_aws_ec2_InitFileAssetOptions, aws_cdk_lib_aws_ec2_InitFile, aws_cdk_lib_aws_ec2_InitGroup, aws_cdk_lib_aws_ec2_InitUserOptions, aws_cdk_lib_aws_ec2_InitUser, aws_cdk_lib_aws_ec2_LocationPackageOptions, aws_cdk_lib_aws_ec2_NamedPackageOptions, aws_cdk_lib_aws_ec2_InitPackage, aws_cdk_lib_aws_ec2_InitServiceOptions, aws_cdk_lib_aws_ec2_InitService, aws_cdk_lib_aws_ec2_InitSourceOptions, aws_cdk_lib_aws_ec2_InitSourceAssetOptions, aws_cdk_lib_aws_ec2_InitSource, aws_cdk_lib_aws_ec2_ServiceManager, aws_cdk_lib_aws_ec2_SystemdConfigFileOptions, aws_cdk_lib_aws_ec2_InstanceClass, aws_cdk_lib_aws_ec2_InstanceArchitecture, aws_cdk_lib_aws_ec2_InstanceSize, aws_cdk_lib_aws_ec2_InstanceType, aws_cdk_lib_aws_ec2_IInstance, aws_cdk_lib_aws_ec2_InstanceProps, aws_cdk_lib_aws_ec2_Instance, aws_cdk_lib_aws_ec2_ApplyCloudFormationInitOptions, aws_cdk_lib_aws_ec2_CpuCredits, aws_cdk_lib_aws_ec2_InstanceInitiatedShutdownBehavior, aws_cdk_lib_aws_ec2_ILaunchTemplate, aws_cdk_lib_aws_ec2_SpotInstanceInterruption, aws_cdk_lib_aws_ec2_SpotRequestType, aws_cdk_lib_aws_ec2_LaunchTemplateSpotOptions, aws_cdk_lib_aws_ec2_LaunchTemplateHttpTokens, aws_cdk_lib_aws_ec2_LaunchTemplateProps, aws_cdk_lib_aws_ec2_LaunchTemplateSpecialVersions, aws_cdk_lib_aws_ec2_LaunchTemplateAttributes, aws_cdk_lib_aws_ec2_LaunchTemplate, aws_cdk_lib_aws_ec2_IMachineImage, aws_cdk_lib_aws_ec2_MachineImage, aws_cdk_lib_aws_ec2_MachineImageConfig, aws_cdk_lib_aws_ec2_GenericSSMParameterImage, aws_cdk_lib_aws_ec2_SsmParameterImageOptions, aws_cdk_lib_aws_ec2_WindowsImageProps, aws_cdk_lib_aws_ec2_WindowsImage, aws_cdk_lib_aws_ec2_AmazonLinuxCpuType, aws_cdk_lib_aws_ec2_AmazonLinuxImageProps, aws_cdk_lib_aws_ec2_AmazonLinuxImage, aws_cdk_lib_aws_ec2_AmazonLinuxGeneration, aws_cdk_lib_aws_ec2_AmazonLinuxKernel, aws_cdk_lib_aws_ec2_AmazonLinuxEdition, aws_cdk_lib_aws_ec2_AmazonLinuxVirt, aws_cdk_lib_aws_ec2_AmazonLinuxStorage, aws_cdk_lib_aws_ec2_GenericLinuxImageProps, aws_cdk_lib_aws_ec2_GenericWindowsImageProps, aws_cdk_lib_aws_ec2_GenericLinuxImage, aws_cdk_lib_aws_ec2_GenericWindowsImage, aws_cdk_lib_aws_ec2_OperatingSystemType, aws_cdk_lib_aws_ec2_LookupMachineImage, aws_cdk_lib_aws_ec2_LookupMachineImageProps, aws_cdk_lib_aws_ec2_NatTrafficDirection, aws_cdk_lib_aws_ec2_GatewayConfig, aws_cdk_lib_aws_ec2_NatProvider, aws_cdk_lib_aws_ec2_ConfigureNatOptions, aws_cdk_lib_aws_ec2_NatGatewayProps, aws_cdk_lib_aws_ec2_NatInstanceProps, aws_cdk_lib_aws_ec2_NatInstanceProvider, aws_cdk_lib_aws_ec2_NatInstanceImage, aws_cdk_lib_aws_ec2_INetworkAcl, aws_cdk_lib_aws_ec2_NetworkAclProps, aws_cdk_lib_aws_ec2_NetworkAcl, aws_cdk_lib_aws_ec2_Action, aws_cdk_lib_aws_ec2_INetworkAclEntry, aws_cdk_lib_aws_ec2_TrafficDirection, aws_cdk_lib_aws_ec2_CommonNetworkAclEntryOptions, aws_cdk_lib_aws_ec2_NetworkAclEntryProps, aws_cdk_lib_aws_ec2_NetworkAclEntry, aws_cdk_lib_aws_ec2_ISubnetNetworkAclAssociation, aws_cdk_lib_aws_ec2_SubnetNetworkAclAssociationProps, aws_cdk_lib_aws_ec2_SubnetNetworkAclAssociation, aws_cdk_lib_aws_ec2_AclCidr, aws_cdk_lib_aws_ec2_AclCidrConfig, aws_cdk_lib_aws_ec2_AclTraffic, aws_cdk_lib_aws_ec2_AclTrafficConfig, aws_cdk_lib_aws_ec2_AclIcmp, aws_cdk_lib_aws_ec2_AclPortRange, aws_cdk_lib_aws_ec2_Protocol, aws_cdk_lib_aws_ec2_PortProps, aws_cdk_lib_aws_ec2_Port, aws_cdk_lib_aws_ec2_ISecurityGroup, aws_cdk_lib_aws_ec2_RuleScope, aws_cdk_lib_aws_ec2_SecurityGroupProps, aws_cdk_lib_aws_ec2_SecurityGroupImportOptions, aws_cdk_lib_aws_ec2_SecurityGroup, aws_cdk_lib_aws_ec2_ConnectionRule, aws_cdk_lib_aws_ec2_SubnetFilter, aws_cdk_lib_aws_ec2_IPeer, aws_cdk_lib_aws_ec2_Peer, aws_cdk_lib_aws_ec2_BlockDevice, aws_cdk_lib_aws_ec2_EbsDeviceOptionsBase, aws_cdk_lib_aws_ec2_EbsDeviceOptions, aws_cdk_lib_aws_ec2_EbsDeviceSnapshotOptions, aws_cdk_lib_aws_ec2_EbsDeviceProps, aws_cdk_lib_aws_ec2_BlockDeviceVolume, aws_cdk_lib_aws_ec2_EbsDeviceVolumeType, aws_cdk_lib_aws_ec2_IVolume, aws_cdk_lib_aws_ec2_VolumeProps, aws_cdk_lib_aws_ec2_VolumeAttributes, aws_cdk_lib_aws_ec2_Volume, aws_cdk_lib_aws_ec2_ISubnet, aws_cdk_lib_aws_ec2_IRouteTable, aws_cdk_lib_aws_ec2_IVpc, aws_cdk_lib_aws_ec2_SubnetType, aws_cdk_lib_aws_ec2_SubnetSelection, aws_cdk_lib_aws_ec2_SelectedSubnets, aws_cdk_lib_aws_ec2_VpcAttributes, aws_cdk_lib_aws_ec2_SubnetAttributes, aws_cdk_lib_aws_ec2_VpcProps, aws_cdk_lib_aws_ec2_DefaultInstanceTenancy, aws_cdk_lib_aws_ec2_SubnetConfiguration, aws_cdk_lib_aws_ec2_Vpc, aws_cdk_lib_aws_ec2_SubnetProps, aws_cdk_lib_aws_ec2_Subnet, aws_cdk_lib_aws_ec2_AddRouteOptions, aws_cdk_lib_aws_ec2_RouterType, aws_cdk_lib_aws_ec2_PublicSubnetProps, aws_cdk_lib_aws_ec2_IPublicSubnet, aws_cdk_lib_aws_ec2_PublicSubnetAttributes, aws_cdk_lib_aws_ec2_PublicSubnet, aws_cdk_lib_aws_ec2_PrivateSubnetProps, aws_cdk_lib_aws_ec2_IPrivateSubnet, aws_cdk_lib_aws_ec2_PrivateSubnetAttributes, aws_cdk_lib_aws_ec2_PrivateSubnet, aws_cdk_lib_aws_ec2_VpcLookupOptions, aws_cdk_lib_aws_ec2_IVpnConnection, aws_cdk_lib_aws_ec2_IVpnGateway, aws_cdk_lib_aws_ec2_VpnTunnelOption, aws_cdk_lib_aws_ec2_VpnConnectionOptions, aws_cdk_lib_aws_ec2_VpnGatewayProps, aws_cdk_lib_aws_ec2_EnableVpnGatewayOptions, aws_cdk_lib_aws_ec2_VpnConnectionProps, aws_cdk_lib_aws_ec2_VpnConnectionType, aws_cdk_lib_aws_ec2_VpnGateway, aws_cdk_lib_aws_ec2_VpnConnectionAttributes, aws_cdk_lib_aws_ec2_VpnConnectionBase, aws_cdk_lib_aws_ec2_VpnConnection, aws_cdk_lib_aws_ec2_IVpcEndpoint, aws_cdk_lib_aws_ec2_VpcEndpoint, aws_cdk_lib_aws_ec2_IGatewayVpcEndpoint, aws_cdk_lib_aws_ec2_VpcEndpointType, aws_cdk_lib_aws_ec2_IGatewayVpcEndpointService, aws_cdk_lib_aws_ec2_GatewayVpcEndpointAwsService, aws_cdk_lib_aws_ec2_GatewayVpcEndpointOptions, aws_cdk_lib_aws_ec2_GatewayVpcEndpointProps, aws_cdk_lib_aws_ec2_GatewayVpcEndpoint, aws_cdk_lib_aws_ec2_IInterfaceVpcEndpointService, aws_cdk_lib_aws_ec2_InterfaceVpcEndpointService, aws_cdk_lib_aws_ec2_InterfaceVpcEndpointAwsService, aws_cdk_lib_aws_ec2_InterfaceVpcEndpointOptions, aws_cdk_lib_aws_ec2_InterfaceVpcEndpointProps, aws_cdk_lib_aws_ec2_IInterfaceVpcEndpoint, aws_cdk_lib_aws_ec2_InterfaceVpcEndpoint, aws_cdk_lib_aws_ec2_InterfaceVpcEndpointAttributes, aws_cdk_lib_aws_ec2_IVpcEndpointServiceLoadBalancer, aws_cdk_lib_aws_ec2_IVpcEndpointService, aws_cdk_lib_aws_ec2_VpcEndpointService, aws_cdk_lib_aws_ec2_VpcEndpointServiceProps, aws_cdk_lib_aws_ec2_LinuxUserDataOptions, aws_cdk_lib_aws_ec2_WindowsUserDataOptions, aws_cdk_lib_aws_ec2_S3DownloadOptions, aws_cdk_lib_aws_ec2_ExecuteFileOptions, aws_cdk_lib_aws_ec2_UserData, aws_cdk_lib_aws_ec2_MultipartBodyOptions, aws_cdk_lib_aws_ec2_MultipartBody, aws_cdk_lib_aws_ec2_MultipartUserDataOptions, aws_cdk_lib_aws_ec2_MultipartUserData, aws_cdk_lib_aws_ec2_WindowsVersion, aws_cdk_lib_aws_ec2_IFlowLog, aws_cdk_lib_aws_ec2_FlowLogTrafficType, aws_cdk_lib_aws_ec2_FlowLogDestinationType, aws_cdk_lib_aws_ec2_FlowLogResourceType, aws_cdk_lib_aws_ec2_FlowLogFileFormat, aws_cdk_lib_aws_ec2_S3DestinationOptions, aws_cdk_lib_aws_ec2_DestinationOptions, aws_cdk_lib_aws_ec2_FlowLogDestination, aws_cdk_lib_aws_ec2_FlowLogDestinationConfig, aws_cdk_lib_aws_ec2_FlowLogMaxAggregationInterval, aws_cdk_lib_aws_ec2_LogFormat, aws_cdk_lib_aws_ec2_FlowLogOptions, aws_cdk_lib_aws_ec2_FlowLogProps, aws_cdk_lib_aws_ec2_FlowLog, aws_cdk_lib_aws_ec2_IClientVpnEndpoint, aws_cdk_lib_aws_ec2_IClientVpnConnectionHandler, aws_cdk_lib_aws_ec2_TransportProtocol, aws_cdk_lib_aws_ec2_VpnPort, aws_cdk_lib_aws_ec2_ClientVpnEndpointOptions, aws_cdk_lib_aws_ec2_ClientVpnSessionTimeout, aws_cdk_lib_aws_ec2_ClientVpnUserBasedAuthentication, aws_cdk_lib_aws_ec2_ClientVpnEndpointProps, aws_cdk_lib_aws_ec2_ClientVpnEndpointAttributes, aws_cdk_lib_aws_ec2_ClientVpnEndpoint, aws_cdk_lib_aws_ec2_ClientVpnAuthorizationRuleOptions, aws_cdk_lib_aws_ec2_ClientVpnAuthorizationRuleProps, aws_cdk_lib_aws_ec2_ClientVpnAuthorizationRule, aws_cdk_lib_aws_ec2_ClientVpnRouteOptions, aws_cdk_lib_aws_ec2_ClientVpnRouteTarget, aws_cdk_lib_aws_ec2_ClientVpnRouteProps, aws_cdk_lib_aws_ec2_ClientVpnRoute, aws_cdk_lib_aws_ec2_IpAddresses, aws_cdk_lib_aws_ec2_IIpAddresses, aws_cdk_lib_aws_ec2_VpcIpamOptions, aws_cdk_lib_aws_ec2_RequestedSubnet, aws_cdk_lib_aws_ec2_AllocateCidrRequest, aws_cdk_lib_aws_ec2_SubnetIpamOptions, aws_cdk_lib_aws_ec2_AllocatedSubnet, aws_cdk_lib_aws_ec2_AwsIpamProps, aws_cdk_lib_aws_ec2_IPlacementGroup, aws_cdk_lib_aws_ec2_PlacementGroupProps, aws_cdk_lib_aws_ec2_PlacementGroupSpreadLevel, aws_cdk_lib_aws_ec2_PlacementGroupStrategy, aws_cdk_lib_aws_ec2_PlacementGroup, aws_cdk_lib_aws_ec2_CfnCapacityReservationProps, aws_cdk_lib_aws_ec2_CfnCapacityReservation, aws_cdk_lib_aws_ec2_CfnCapacityReservation_TagSpecificationProperty, aws_cdk_lib_aws_ec2_CfnCapacityReservationFleetProps, aws_cdk_lib_aws_ec2_CfnCapacityReservationFleet, aws_cdk_lib_aws_ec2_CfnCapacityReservationFleet_InstanceTypeSpecificationProperty, aws_cdk_lib_aws_ec2_CfnCapacityReservationFleet_TagSpecificationProperty, aws_cdk_lib_aws_ec2_CfnCarrierGatewayProps, aws_cdk_lib_aws_ec2_CfnCarrierGateway, aws_cdk_lib_aws_ec2_CfnClientVpnAuthorizationRuleProps, aws_cdk_lib_aws_ec2_CfnClientVpnAuthorizationRule, aws_cdk_lib_aws_ec2_CfnClientVpnEndpointProps, aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint, aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_CertificateAuthenticationRequestProperty, aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_ClientAuthenticationRequestProperty, aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_ClientConnectOptionsProperty, aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_ClientLoginBannerOptionsProperty, aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_ConnectionLogOptionsProperty, aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_DirectoryServiceAuthenticationRequestProperty, aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_FederatedAuthenticationRequestProperty, aws_cdk_lib_aws_ec2_CfnClientVpnEndpoint_TagSpecificationProperty, aws_cdk_lib_aws_ec2_CfnClientVpnRouteProps, aws_cdk_lib_aws_ec2_CfnClientVpnRoute, aws_cdk_lib_aws_ec2_CfnClientVpnTargetNetworkAssociationProps, aws_cdk_lib_aws_ec2_CfnClientVpnTargetNetworkAssociation, aws_cdk_lib_aws_ec2_CfnCustomerGatewayProps, aws_cdk_lib_aws_ec2_CfnCustomerGateway, aws_cdk_lib_aws_ec2_CfnDHCPOptionsProps, aws_cdk_lib_aws_ec2_CfnDHCPOptions, aws_cdk_lib_aws_ec2_CfnEC2FleetProps, aws_cdk_lib_aws_ec2_CfnEC2Fleet, aws_cdk_lib_aws_ec2_CfnEC2Fleet_AcceleratorCountRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_AcceleratorTotalMemoryMiBRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_BaselineEbsBandwidthMbpsRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_CapacityRebalanceProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_CapacityReservationOptionsRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_FleetLaunchTemplateConfigRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_FleetLaunchTemplateOverridesRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_FleetLaunchTemplateSpecificationRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_InstanceRequirementsRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_MaintenanceStrategiesProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_MemoryGiBPerVCpuRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_MemoryMiBRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_NetworkBandwidthGbpsRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_NetworkInterfaceCountRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_OnDemandOptionsRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_PlacementProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_SpotOptionsRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_TagSpecificationProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_TargetCapacitySpecificationRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_TotalLocalStorageGBRequestProperty, aws_cdk_lib_aws_ec2_CfnEC2Fleet_VCpuCountRangeRequestProperty, aws_cdk_lib_aws_ec2_CfnEIPProps, aws_cdk_lib_aws_ec2_CfnEIP, aws_cdk_lib_aws_ec2_CfnEIPAssociationProps, aws_cdk_lib_aws_ec2_CfnEIPAssociation, aws_cdk_lib_aws_ec2_CfnEgressOnlyInternetGatewayProps, aws_cdk_lib_aws_ec2_CfnEgressOnlyInternetGateway, aws_cdk_lib_aws_ec2_CfnEnclaveCertificateIamRoleAssociationProps, aws_cdk_lib_aws_ec2_CfnEnclaveCertificateIamRoleAssociation, aws_cdk_lib_aws_ec2_CfnFlowLogProps, aws_cdk_lib_aws_ec2_CfnFlowLog, aws_cdk_lib_aws_ec2_CfnFlowLog_DestinationOptionsProperty, aws_cdk_lib_aws_ec2_CfnGatewayRouteTableAssociationProps, aws_cdk_lib_aws_ec2_CfnGatewayRouteTableAssociation, aws_cdk_lib_aws_ec2_CfnHostProps, aws_cdk_lib_aws_ec2_CfnHost, aws_cdk_lib_aws_ec2_CfnIPAMProps, aws_cdk_lib_aws_ec2_CfnIPAM, aws_cdk_lib_aws_ec2_CfnIPAM_IpamOperatingRegionProperty, aws_cdk_lib_aws_ec2_CfnIPAMAllocationProps, aws_cdk_lib_aws_ec2_CfnIPAMAllocation, aws_cdk_lib_aws_ec2_CfnIPAMPoolProps, aws_cdk_lib_aws_ec2_CfnIPAMPool, aws_cdk_lib_aws_ec2_CfnIPAMPool_ProvisionedCidrProperty, aws_cdk_lib_aws_ec2_CfnIPAMPoolCidrProps, aws_cdk_lib_aws_ec2_CfnIPAMPoolCidr, aws_cdk_lib_aws_ec2_CfnIPAMResourceDiscoveryProps, aws_cdk_lib_aws_ec2_CfnIPAMResourceDiscovery, aws_cdk_lib_aws_ec2_CfnIPAMResourceDiscovery_IpamOperatingRegionProperty, aws_cdk_lib_aws_ec2_CfnIPAMResourceDiscoveryAssociationProps, aws_cdk_lib_aws_ec2_CfnIPAMResourceDiscoveryAssociation, aws_cdk_lib_aws_ec2_CfnIPAMScopeProps, aws_cdk_lib_aws_ec2_CfnIPAMScope, aws_cdk_lib_aws_ec2_CfnInstanceProps, aws_cdk_lib_aws_ec2_CfnInstance, aws_cdk_lib_aws_ec2_CfnInstance_AssociationParameterProperty, aws_cdk_lib_aws_ec2_CfnInstance_BlockDeviceMappingProperty, aws_cdk_lib_aws_ec2_CfnInstance_CpuOptionsProperty, aws_cdk_lib_aws_ec2_CfnInstance_CreditSpecificationProperty, aws_cdk_lib_aws_ec2_CfnInstance_EbsProperty, aws_cdk_lib_aws_ec2_CfnInstance_ElasticGpuSpecificationProperty, aws_cdk_lib_aws_ec2_CfnInstance_ElasticInferenceAcceleratorProperty, aws_cdk_lib_aws_ec2_CfnInstance_EnclaveOptionsProperty, aws_cdk_lib_aws_ec2_CfnInstance_HibernationOptionsProperty, aws_cdk_lib_aws_ec2_CfnInstance_InstanceIpv6AddressProperty, aws_cdk_lib_aws_ec2_CfnInstance_LaunchTemplateSpecificationProperty, aws_cdk_lib_aws_ec2_CfnInstance_LicenseSpecificationProperty, aws_cdk_lib_aws_ec2_CfnInstance_NetworkInterfaceProperty, aws_cdk_lib_aws_ec2_CfnInstance_NoDeviceProperty, aws_cdk_lib_aws_ec2_CfnInstance_PrivateDnsNameOptionsProperty, aws_cdk_lib_aws_ec2_CfnInstance_PrivateIpAddressSpecificationProperty, aws_cdk_lib_aws_ec2_CfnInstance_SsmAssociationProperty, aws_cdk_lib_aws_ec2_CfnInstance_VolumeProperty, aws_cdk_lib_aws_ec2_CfnInternetGatewayProps, aws_cdk_lib_aws_ec2_CfnInternetGateway, aws_cdk_lib_aws_ec2_CfnKeyPairProps, aws_cdk_lib_aws_ec2_CfnKeyPair, aws_cdk_lib_aws_ec2_CfnLaunchTemplateProps, aws_cdk_lib_aws_ec2_CfnLaunchTemplate, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_AcceleratorCountProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_AcceleratorTotalMemoryMiBProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_BaselineEbsBandwidthMbpsProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_BlockDeviceMappingProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_CapacityReservationSpecificationProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_CapacityReservationTargetProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_CpuOptionsProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_CreditSpecificationProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_EbsProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_ElasticGpuSpecificationProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_EnclaveOptionsProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_HibernationOptionsProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_IamInstanceProfileProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_InstanceMarketOptionsProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_InstanceRequirementsProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_Ipv4PrefixSpecificationProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_Ipv6AddProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_Ipv6PrefixSpecificationProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_LaunchTemplateDataProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_LaunchTemplateElasticInferenceAcceleratorProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_LaunchTemplateTagSpecificationProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_LicenseSpecificationProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_MaintenanceOptionsProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_MemoryGiBPerVCpuProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_MemoryMiBProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_MetadataOptionsProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_MonitoringProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_NetworkBandwidthGbpsProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_NetworkInterfaceProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_NetworkInterfaceCountProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_PlacementProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_PrivateDnsNameOptionsProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_PrivateIpAddProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_SpotOptionsProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_TagSpecificationProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_TotalLocalStorageGBProperty, aws_cdk_lib_aws_ec2_CfnLaunchTemplate_VCpuCountProperty, aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteProps, aws_cdk_lib_aws_ec2_CfnLocalGatewayRoute, aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteTableProps, aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteTable, aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteTableVPCAssociationProps, aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteTableVPCAssociation, aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteTableVirtualInterfaceGroupAssociationProps, aws_cdk_lib_aws_ec2_CfnLocalGatewayRouteTableVirtualInterfaceGroupAssociation, aws_cdk_lib_aws_ec2_CfnNatGatewayProps, aws_cdk_lib_aws_ec2_CfnNatGateway, aws_cdk_lib_aws_ec2_CfnNetworkAclProps, aws_cdk_lib_aws_ec2_CfnNetworkAcl, aws_cdk_lib_aws_ec2_CfnNetworkAclEntryProps, aws_cdk_lib_aws_ec2_CfnNetworkAclEntry, aws_cdk_lib_aws_ec2_CfnNetworkAclEntry_IcmpProperty, aws_cdk_lib_aws_ec2_CfnNetworkAclEntry_PortRangeProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScopeProps, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScope, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScope_AccessScopePathRequestProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScope_PacketHeaderStatementRequestProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScope_PathStatementRequestProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScope_ResourceStatementRequestProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScope_ThroughResourcesStatementRequestProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScopeAnalysisProps, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAccessScopeAnalysis, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysisProps, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AdditionalDetailProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AlternatePathHintProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisAclRuleProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisComponentProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisLoadBalancerListenerProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisLoadBalancerTargetProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisPacketHeaderProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisRouteTableRouteProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_AnalysisSecurityGroupRuleProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_ExplanationProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_PathComponentProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_PortRangeProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsAnalysis_TransitGatewayRouteTableRouteProperty, aws_cdk_lib_aws_ec2_CfnNetworkInsightsPathProps, aws_cdk_lib_aws_ec2_CfnNetworkInsightsPath, aws_cdk_lib_aws_ec2_CfnNetworkInterfaceProps, aws_cdk_lib_aws_ec2_CfnNetworkInterface, aws_cdk_lib_aws_ec2_CfnNetworkInterface_InstanceIpv6AddressProperty, aws_cdk_lib_aws_ec2_CfnNetworkInterface_PrivateIpAddressSpecificationProperty, aws_cdk_lib_aws_ec2_CfnNetworkInterfaceAttachmentProps, aws_cdk_lib_aws_ec2_CfnNetworkInterfaceAttachment, aws_cdk_lib_aws_ec2_CfnNetworkInterfacePermissionProps, aws_cdk_lib_aws_ec2_CfnNetworkInterfacePermission, aws_cdk_lib_aws_ec2_CfnNetworkPerformanceMetricSubscriptionProps, aws_cdk_lib_aws_ec2_CfnNetworkPerformanceMetricSubscription, aws_cdk_lib_aws_ec2_CfnPlacementGroupProps, aws_cdk_lib_aws_ec2_CfnPlacementGroup, aws_cdk_lib_aws_ec2_CfnPrefixListProps, aws_cdk_lib_aws_ec2_CfnPrefixList, aws_cdk_lib_aws_ec2_CfnPrefixList_EntryProperty, aws_cdk_lib_aws_ec2_CfnRouteProps, aws_cdk_lib_aws_ec2_CfnRoute, aws_cdk_lib_aws_ec2_CfnRouteTableProps, aws_cdk_lib_aws_ec2_CfnRouteTable, aws_cdk_lib_aws_ec2_CfnSecurityGroupProps, aws_cdk_lib_aws_ec2_CfnSecurityGroup, aws_cdk_lib_aws_ec2_CfnSecurityGroup_EgressProperty, aws_cdk_lib_aws_ec2_CfnSecurityGroup_IngressProperty, aws_cdk_lib_aws_ec2_CfnSecurityGroupEgressProps, aws_cdk_lib_aws_ec2_CfnSecurityGroupEgress, aws_cdk_lib_aws_ec2_CfnSecurityGroupIngressProps, aws_cdk_lib_aws_ec2_CfnSecurityGroupIngress, aws_cdk_lib_aws_ec2_CfnSpotFleetProps, aws_cdk_lib_aws_ec2_CfnSpotFleet, aws_cdk_lib_aws_ec2_CfnSpotFleet_AcceleratorCountRequestProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_AcceleratorTotalMemoryMiBRequestProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_BaselineEbsBandwidthMbpsRequestProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_BlockDeviceMappingProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_ClassicLoadBalancerProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_ClassicLoadBalancersConfigProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_EbsBlockDeviceProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_FleetLaunchTemplateSpecificationProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_GroupIdentifierProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_IamInstanceProfileSpecificationProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_InstanceIpv6AddressProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_InstanceNetworkInterfaceSpecificationProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_InstanceRequirementsRequestProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_LaunchTemplateConfigProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_LaunchTemplateOverridesProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_LoadBalancersConfigProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_MemoryGiBPerVCpuRequestProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_MemoryMiBRequestProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_NetworkBandwidthGbpsRequestProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_NetworkInterfaceCountRequestProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_PrivateIpAddressSpecificationProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotCapacityRebalanceProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotFleetLaunchSpecificationProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotFleetMonitoringProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotFleetRequestConfigDataProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotFleetTagSpecificationProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotMaintenanceStrategiesProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_SpotPlacementProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_TargetGroupProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_TargetGroupsConfigProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_TotalLocalStorageGBRequestProperty, aws_cdk_lib_aws_ec2_CfnSpotFleet_VCpuCountRangeRequestProperty, aws_cdk_lib_aws_ec2_CfnSubnetProps, aws_cdk_lib_aws_ec2_CfnSubnet, aws_cdk_lib_aws_ec2_CfnSubnet_PrivateDnsNameOptionsOnLaunchProperty, aws_cdk_lib_aws_ec2_CfnSubnetCidrBlockProps, aws_cdk_lib_aws_ec2_CfnSubnetCidrBlock, aws_cdk_lib_aws_ec2_CfnSubnetNetworkAclAssociationProps, aws_cdk_lib_aws_ec2_CfnSubnetNetworkAclAssociation, aws_cdk_lib_aws_ec2_CfnSubnetRouteTableAssociationProps, aws_cdk_lib_aws_ec2_CfnSubnetRouteTableAssociation, aws_cdk_lib_aws_ec2_CfnTrafficMirrorFilterProps, aws_cdk_lib_aws_ec2_CfnTrafficMirrorFilter, aws_cdk_lib_aws_ec2_CfnTrafficMirrorFilterRuleProps, aws_cdk_lib_aws_ec2_CfnTrafficMirrorFilterRule, aws_cdk_lib_aws_ec2_CfnTrafficMirrorFilterRule_TrafficMirrorPortRangeProperty, aws_cdk_lib_aws_ec2_CfnTrafficMirrorSessionProps, aws_cdk_lib_aws_ec2_CfnTrafficMirrorSession, aws_cdk_lib_aws_ec2_CfnTrafficMirrorTargetProps, aws_cdk_lib_aws_ec2_CfnTrafficMirrorTarget, aws_cdk_lib_aws_ec2_CfnTransitGatewayProps, aws_cdk_lib_aws_ec2_CfnTransitGateway, aws_cdk_lib_aws_ec2_CfnTransitGatewayAttachmentProps, aws_cdk_lib_aws_ec2_CfnTransitGatewayAttachment, aws_cdk_lib_aws_ec2_CfnTransitGatewayAttachment_OptionsProperty, aws_cdk_lib_aws_ec2_CfnTransitGatewayConnectProps, aws_cdk_lib_aws_ec2_CfnTransitGatewayConnect, aws_cdk_lib_aws_ec2_CfnTransitGatewayConnect_TransitGatewayConnectOptionsProperty, aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastDomainProps, aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastDomain, aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastDomain_OptionsProperty, aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastDomainAssociationProps, aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastDomainAssociation, aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastGroupMemberProps, aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastGroupMember, aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastGroupSourceProps, aws_cdk_lib_aws_ec2_CfnTransitGatewayMulticastGroupSource, aws_cdk_lib_aws_ec2_CfnTransitGatewayPeeringAttachmentProps, aws_cdk_lib_aws_ec2_CfnTransitGatewayPeeringAttachment, aws_cdk_lib_aws_ec2_CfnTransitGatewayPeeringAttachment_PeeringAttachmentStatusProperty, aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteProps, aws_cdk_lib_aws_ec2_CfnTransitGatewayRoute, aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteTableProps, aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteTable, aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteTableAssociationProps, aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteTableAssociation, aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteTablePropagationProps, aws_cdk_lib_aws_ec2_CfnTransitGatewayRouteTablePropagation, aws_cdk_lib_aws_ec2_CfnTransitGatewayVpcAttachmentProps, aws_cdk_lib_aws_ec2_CfnTransitGatewayVpcAttachment, aws_cdk_lib_aws_ec2_CfnTransitGatewayVpcAttachment_OptionsProperty, aws_cdk_lib_aws_ec2_CfnVPCProps, aws_cdk_lib_aws_ec2_CfnVPC, aws_cdk_lib_aws_ec2_CfnVPCCidrBlockProps, aws_cdk_lib_aws_ec2_CfnVPCCidrBlock, aws_cdk_lib_aws_ec2_CfnVPCDHCPOptionsAssociationProps, aws_cdk_lib_aws_ec2_CfnVPCDHCPOptionsAssociation, aws_cdk_lib_aws_ec2_CfnVPCEndpointProps, aws_cdk_lib_aws_ec2_CfnVPCEndpoint, aws_cdk_lib_aws_ec2_CfnVPCEndpointConnectionNotificationProps, aws_cdk_lib_aws_ec2_CfnVPCEndpointConnectionNotification, aws_cdk_lib_aws_ec2_CfnVPCEndpointServiceProps, aws_cdk_lib_aws_ec2_CfnVPCEndpointService, aws_cdk_lib_aws_ec2_CfnVPCEndpointServicePermissionsProps, aws_cdk_lib_aws_ec2_CfnVPCEndpointServicePermissions, aws_cdk_lib_aws_ec2_CfnVPCGatewayAttachmentProps, aws_cdk_lib_aws_ec2_CfnVPCGatewayAttachment, aws_cdk_lib_aws_ec2_CfnVPCPeeringConnectionProps, aws_cdk_lib_aws_ec2_CfnVPCPeeringConnection, aws_cdk_lib_aws_ec2_CfnVPNConnectionProps, aws_cdk_lib_aws_ec2_CfnVPNConnection, aws_cdk_lib_aws_ec2_CfnVPNConnection_VpnTunnelOptionsSpecificationProperty, aws_cdk_lib_aws_ec2_CfnVPNConnectionRouteProps, aws_cdk_lib_aws_ec2_CfnVPNConnectionRoute, aws_cdk_lib_aws_ec2_CfnVPNGatewayProps, aws_cdk_lib_aws_ec2_CfnVPNGateway, aws_cdk_lib_aws_ec2_CfnVPNGatewayRoutePropagationProps, aws_cdk_lib_aws_ec2_CfnVPNGatewayRoutePropagation, aws_cdk_lib_aws_ec2_CfnVolumeProps, aws_cdk_lib_aws_ec2_CfnVolume, aws_cdk_lib_aws_ec2_CfnVolumeAttachmentProps, aws_cdk_lib_aws_ec2_CfnVolumeAttachment, aws_cdk_lib_aws_ecr_CfnPublicRepositoryProps, aws_cdk_lib_aws_ecr_CfnPublicRepository, aws_cdk_lib_aws_ecr_CfnPublicRepository_RepositoryCatalogDataProperty, aws_cdk_lib_aws_ecr_CfnPullThroughCacheRuleProps, aws_cdk_lib_aws_ecr_CfnPullThroughCacheRule, aws_cdk_lib_aws_ecr_CfnRegistryPolicyProps, aws_cdk_lib_aws_ecr_CfnRegistryPolicy, aws_cdk_lib_aws_ecr_CfnReplicationConfigurationProps, aws_cdk_lib_aws_ecr_CfnReplicationConfiguration, aws_cdk_lib_aws_ecr_CfnReplicationConfiguration_ReplicationConfigurationProperty, aws_cdk_lib_aws_ecr_CfnReplicationConfiguration_ReplicationDestinationProperty, aws_cdk_lib_aws_ecr_CfnReplicationConfiguration_ReplicationRuleProperty, aws_cdk_lib_aws_ecr_CfnReplicationConfiguration_RepositoryFilterProperty, aws_cdk_lib_aws_ecr_CfnRepositoryProps, aws_cdk_lib_aws_ecr_CfnRepository, aws_cdk_lib_aws_ecr_CfnRepository_EncryptionConfigurationProperty, aws_cdk_lib_aws_ecr_CfnRepository_ImageScanningConfigurationProperty, aws_cdk_lib_aws_ecr_CfnRepository_LifecyclePolicyProperty, aws_cdk_lib_aws_ecr_IRepository, aws_cdk_lib_aws_ecr_RepositoryBase, aws_cdk_lib_aws_ecr_OnCloudTrailImagePushedOptions, aws_cdk_lib_aws_ecr_OnImageScanCompletedOptions, aws_cdk_lib_aws_ecr_RepositoryProps, aws_cdk_lib_aws_ecr_RepositoryAttributes, aws_cdk_lib_aws_ecr_Repository, aws_cdk_lib_aws_ecr_TagMutability, aws_cdk_lib_aws_ecr_RepositoryEncryption, aws_cdk_lib_aws_ecr_LifecycleRule, aws_cdk_lib_aws_ecr_TagStatus, aws_cdk_lib_aws_ecr_AuthorizationToken, aws_cdk_lib_aws_ecr_PublicGalleryAuthorizationToken, aws_cdk_lib_aws_ecr_assets_NetworkMode, aws_cdk_lib_aws_ecr_assets_Platform, aws_cdk_lib_aws_ecr_assets_DockerImageAssetInvalidationOptions, aws_cdk_lib_aws_ecr_assets_DockerCacheOption, aws_cdk_lib_aws_ecr_assets_DockerImageAssetOptions, aws_cdk_lib_aws_ecr_assets_DockerImageAssetProps, aws_cdk_lib_aws_ecr_assets_DockerImageAsset, aws_cdk_lib_aws_ecr_assets_TarballImageAssetProps, aws_cdk_lib_aws_ecr_assets_TarballImageAsset, aws_cdk_lib_aws_ecs_IService, aws_cdk_lib_aws_ecs_DeploymentController, aws_cdk_lib_aws_ecs_DeploymentCircuitBreaker, aws_cdk_lib_aws_ecs_EcsTarget, aws_cdk_lib_aws_ecs_IEcsLoadBalancerTarget, aws_cdk_lib_aws_ecs_ServiceConnectProps, aws_cdk_lib_aws_ecs_ServiceConnectService, aws_cdk_lib_aws_ecs_BaseServiceOptions, aws_cdk_lib_aws_ecs_BaseServiceProps, aws_cdk_lib_aws_ecs_ListenerConfig, aws_cdk_lib_aws_ecs_IBaseService, aws_cdk_lib_aws_ecs_BaseService, aws_cdk_lib_aws_ecs_CloudMapOptions, aws_cdk_lib_aws_ecs_AssociateCloudMapServiceOptions, aws_cdk_lib_aws_ecs_LaunchType, aws_cdk_lib_aws_ecs_DeploymentControllerType, aws_cdk_lib_aws_ecs_PropagatedTagSource, aws_cdk_lib_aws_ecs_ScalableTaskCountProps, aws_cdk_lib_aws_ecs_ScalableTaskCount, aws_cdk_lib_aws_ecs_CpuUtilizationScalingProps, aws_cdk_lib_aws_ecs_MemoryUtilizationScalingProps, aws_cdk_lib_aws_ecs_RequestCountScalingProps, aws_cdk_lib_aws_ecs_TrackCustomMetricProps, aws_cdk_lib_aws_ecs_ITaskDefinition, aws_cdk_lib_aws_ecs_CommonTaskDefinitionProps, aws_cdk_lib_aws_ecs_TaskDefinitionProps, aws_cdk_lib_aws_ecs_CommonTaskDefinitionAttributes, aws_cdk_lib_aws_ecs_TaskDefinitionAttributes, aws_cdk_lib_aws_ecs_TaskDefinition, aws_cdk_lib_aws_ecs_NetworkMode, aws_cdk_lib_aws_ecs_IpcMode, aws_cdk_lib_aws_ecs_PidMode, aws_cdk_lib_aws_ecs_InferenceAccelerator, aws_cdk_lib_aws_ecs_Volume, aws_cdk_lib_aws_ecs_Host, aws_cdk_lib_aws_ecs_LoadBalancerTargetOptions, aws_cdk_lib_aws_ecs_DockerVolumeConfiguration, aws_cdk_lib_aws_ecs_AuthorizationConfig, aws_cdk_lib_aws_ecs_EfsVolumeConfiguration, aws_cdk_lib_aws_ecs_Scope, aws_cdk_lib_aws_ecs_Compatibility, aws_cdk_lib_aws_ecs_ITaskDefinitionExtension, aws_cdk_lib_aws_ecs_SecretVersionInfo, aws_cdk_lib_aws_ecs_Secret, aws_cdk_lib_aws_ecs_ContainerDefinitionOptions, aws_cdk_lib_aws_ecs_ContainerDefinitionProps, aws_cdk_lib_aws_ecs_ContainerDefinition, aws_cdk_lib_aws_ecs_HealthCheck, aws_cdk_lib_aws_ecs_Ulimit, aws_cdk_lib_aws_ecs_UlimitName, aws_cdk_lib_aws_ecs_ContainerDependency, aws_cdk_lib_aws_ecs_ContainerDependencyCondition, aws_cdk_lib_aws_ecs_PortMapping, aws_cdk_lib_aws_ecs_PortMap, aws_cdk_lib_aws_ecs_ServiceConnect, aws_cdk_lib_aws_ecs_Protocol, aws_cdk_lib_aws_ecs_AppProtocol, aws_cdk_lib_aws_ecs_ScratchSpace, aws_cdk_lib_aws_ecs_MountPoint, aws_cdk_lib_aws_ecs_VolumeFrom, aws_cdk_lib_aws_ecs_SystemControl, aws_cdk_lib_aws_ecs_ContainerImage, aws_cdk_lib_aws_ecs_ContainerImageConfig, aws_cdk_lib_aws_ecs_AmiHardwareType, aws_cdk_lib_aws_ecs_WindowsOptimizedVersion, aws_cdk_lib_aws_ecs_EcsOptimizedImageOptions, aws_cdk_lib_aws_ecs_EcsOptimizedImage, aws_cdk_lib_aws_ecs_BottlerocketEcsVariant, aws_cdk_lib_aws_ecs_BottleRocketImageProps, aws_cdk_lib_aws_ecs_BottleRocketImage, aws_cdk_lib_aws_ecs_ClusterProps, aws_cdk_lib_aws_ecs_MachineImageType, aws_cdk_lib_aws_ecs_Cluster, aws_cdk_lib_aws_ecs_ICluster, aws_cdk_lib_aws_ecs_ClusterAttributes, aws_cdk_lib_aws_ecs_AddAutoScalingGroupCapacityOptions, aws_cdk_lib_aws_ecs_AddCapacityOptions, aws_cdk_lib_aws_ecs_CloudMapNamespaceOptions, aws_cdk_lib_aws_ecs_CapacityProviderStrategy, aws_cdk_lib_aws_ecs_ExecuteCommandConfiguration, aws_cdk_lib_aws_ecs_ExecuteCommandLogging, aws_cdk_lib_aws_ecs_ExecuteCommandLogConfiguration, aws_cdk_lib_aws_ecs_AsgCapacityProviderProps, aws_cdk_lib_aws_ecs_AsgCapacityProvider, aws_cdk_lib_aws_ecs_EnvironmentFile, aws_cdk_lib_aws_ecs_AssetEnvironmentFile, aws_cdk_lib_aws_ecs_S3EnvironmentFile, aws_cdk_lib_aws_ecs_EnvironmentFileConfig, aws_cdk_lib_aws_ecs_EnvironmentFileType, aws_cdk_lib_aws_ecs_FirelensLogRouterType, aws_cdk_lib_aws_ecs_FirelensConfigFileType, aws_cdk_lib_aws_ecs_FirelensOptions, aws_cdk_lib_aws_ecs_FirelensConfig, aws_cdk_lib_aws_ecs_FirelensLogRouterProps, aws_cdk_lib_aws_ecs_FirelensLogRouterDefinitionOptions, aws_cdk_lib_aws_ecs_FirelensLogRouter, aws_cdk_lib_aws_ecs_BinPackResource, aws_cdk_lib_aws_ecs_PlacementStrategy, aws_cdk_lib_aws_ecs_PlacementConstraint, aws_cdk_lib_aws_ecs_Ec2ServiceProps, aws_cdk_lib_aws_ecs_IEc2Service, aws_cdk_lib_aws_ecs_Ec2ServiceAttributes, aws_cdk_lib_aws_ecs_Ec2Service, aws_cdk_lib_aws_ecs_BuiltInAttributes, aws_cdk_lib_aws_ecs_Ec2TaskDefinitionProps, aws_cdk_lib_aws_ecs_IEc2TaskDefinition, aws_cdk_lib_aws_ecs_Ec2TaskDefinitionAttributes, aws_cdk_lib_aws_ecs_Ec2TaskDefinition, aws_cdk_lib_aws_ecs_FargateServiceProps, aws_cdk_lib_aws_ecs_IFargateService, aws_cdk_lib_aws_ecs_FargateServiceAttributes, aws_cdk_lib_aws_ecs_FargateService, aws_cdk_lib_aws_ecs_FargatePlatformVersion, aws_cdk_lib_aws_ecs_FargateTaskDefinitionProps, aws_cdk_lib_aws_ecs_IFargateTaskDefinition, aws_cdk_lib_aws_ecs_FargateTaskDefinitionAttributes, aws_cdk_lib_aws_ecs_FargateTaskDefinition, aws_cdk_lib_aws_ecs_ExternalServiceProps, aws_cdk_lib_aws_ecs_IExternalService, aws_cdk_lib_aws_ecs_ExternalServiceAttributes, aws_cdk_lib_aws_ecs_ExternalService, aws_cdk_lib_aws_ecs_ExternalTaskDefinitionProps, aws_cdk_lib_aws_ecs_IExternalTaskDefinition, aws_cdk_lib_aws_ecs_ExternalTaskDefinitionAttributes, aws_cdk_lib_aws_ecs_ExternalTaskDefinition, aws_cdk_lib_aws_ecs_LinuxParametersProps, aws_cdk_lib_aws_ecs_LinuxParameters, aws_cdk_lib_aws_ecs_Device, aws_cdk_lib_aws_ecs_Tmpfs, aws_cdk_lib_aws_ecs_Capability, aws_cdk_lib_aws_ecs_DevicePermission, aws_cdk_lib_aws_ecs_TmpfsMountOption, aws_cdk_lib_aws_ecs_AssetImageProps, aws_cdk_lib_aws_ecs_AssetImage, aws_cdk_lib_aws_ecs_RepositoryImageProps, aws_cdk_lib_aws_ecs_RepositoryImage, aws_cdk_lib_aws_ecs_EcrImage, aws_cdk_lib_aws_ecs_TagParameterContainerImage, aws_cdk_lib_aws_ecs_AwsLogDriverMode, aws_cdk_lib_aws_ecs_AwsLogDriverProps, aws_cdk_lib_aws_ecs_AwsLogDriver, aws_cdk_lib_aws_ecs_BaseLogDriverProps, aws_cdk_lib_aws_ecs_FireLensLogDriverProps, aws_cdk_lib_aws_ecs_FireLensLogDriver, aws_cdk_lib_aws_ecs_FluentdLogDriverProps, aws_cdk_lib_aws_ecs_FluentdLogDriver, aws_cdk_lib_aws_ecs_GelfCompressionType, aws_cdk_lib_aws_ecs_GelfLogDriverProps, aws_cdk_lib_aws_ecs_GelfLogDriver, aws_cdk_lib_aws_ecs_JournaldLogDriverProps, aws_cdk_lib_aws_ecs_JournaldLogDriver, aws_cdk_lib_aws_ecs_JsonFileLogDriverProps, aws_cdk_lib_aws_ecs_JsonFileLogDriver, aws_cdk_lib_aws_ecs_SplunkLogFormat, aws_cdk_lib_aws_ecs_SplunkLogDriverProps, aws_cdk_lib_aws_ecs_SplunkLogDriver, aws_cdk_lib_aws_ecs_SyslogLogDriverProps, aws_cdk_lib_aws_ecs_SyslogLogDriver, aws_cdk_lib_aws_ecs_LogDriver, aws_cdk_lib_aws_ecs_LogDriverConfig, aws_cdk_lib_aws_ecs_GenericLogDriverProps, aws_cdk_lib_aws_ecs_GenericLogDriver, aws_cdk_lib_aws_ecs_LogDrivers, aws_cdk_lib_aws_ecs_AppMeshProxyConfigurationProps, aws_cdk_lib_aws_ecs_AppMeshProxyConfigurationConfigProps, aws_cdk_lib_aws_ecs_AppMeshProxyConfiguration, aws_cdk_lib_aws_ecs_ProxyConfiguration, aws_cdk_lib_aws_ecs_ProxyConfigurations, aws_cdk_lib_aws_ecs_CpuArchitecture, aws_cdk_lib_aws_ecs_OperatingSystemFamily, aws_cdk_lib_aws_ecs_RuntimePlatform, aws_cdk_lib_aws_ecs_CfnCapacityProviderProps, aws_cdk_lib_aws_ecs_CfnCapacityProvider, aws_cdk_lib_aws_ecs_CfnCapacityProvider_AutoScalingGroupProviderProperty, aws_cdk_lib_aws_ecs_CfnCapacityProvider_ManagedScalingProperty, aws_cdk_lib_aws_ecs_CfnClusterProps, aws_cdk_lib_aws_ecs_CfnCluster, aws_cdk_lib_aws_ecs_CfnCluster_CapacityProviderStrategyItemProperty, aws_cdk_lib_aws_ecs_CfnCluster_ClusterConfigurationProperty, aws_cdk_lib_aws_ecs_CfnCluster_ClusterSettingsProperty, aws_cdk_lib_aws_ecs_CfnCluster_ExecuteCommandConfigurationProperty, aws_cdk_lib_aws_ecs_CfnCluster_ExecuteCommandLogConfigurationProperty, aws_cdk_lib_aws_ecs_CfnCluster_ServiceConnectDefaultsProperty, aws_cdk_lib_aws_ecs_CfnClusterCapacityProviderAssociationsProps, aws_cdk_lib_aws_ecs_CfnClusterCapacityProviderAssociations, aws_cdk_lib_aws_ecs_CfnClusterCapacityProviderAssociations_CapacityProviderStrategyProperty, aws_cdk_lib_aws_ecs_CfnPrimaryTaskSetProps, aws_cdk_lib_aws_ecs_CfnPrimaryTaskSet, aws_cdk_lib_aws_ecs_CfnServiceProps, aws_cdk_lib_aws_ecs_CfnService, aws_cdk_lib_aws_ecs_CfnService_AwsVpcConfigurationProperty, aws_cdk_lib_aws_ecs_CfnService_CapacityProviderStrategyItemProperty, aws_cdk_lib_aws_ecs_CfnService_DeploymentAlarmsProperty, aws_cdk_lib_aws_ecs_CfnService_DeploymentCircuitBreakerProperty, aws_cdk_lib_aws_ecs_CfnService_DeploymentConfigurationProperty, aws_cdk_lib_aws_ecs_CfnService_DeploymentControllerProperty, aws_cdk_lib_aws_ecs_CfnService_LoadBalancerProperty, aws_cdk_lib_aws_ecs_CfnService_LogConfigurationProperty, aws_cdk_lib_aws_ecs_CfnService_NetworkConfigurationProperty, aws_cdk_lib_aws_ecs_CfnService_PlacementConstraintProperty, aws_cdk_lib_aws_ecs_CfnService_PlacementStrategyProperty, aws_cdk_lib_aws_ecs_CfnService_SecretProperty, aws_cdk_lib_aws_ecs_CfnService_ServiceConnectClientAliasProperty, aws_cdk_lib_aws_ecs_CfnService_ServiceConnectConfigurationProperty, aws_cdk_lib_aws_ecs_CfnService_ServiceConnectServiceProperty, aws_cdk_lib_aws_ecs_CfnService_ServiceRegistryProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinitionProps, aws_cdk_lib_aws_ecs_CfnTaskDefinition, aws_cdk_lib_aws_ecs_CfnTaskDefinition_AuthorizationConfigProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_ContainerDefinitionProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_ContainerDependencyProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_DeviceProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_DockerVolumeConfigurationProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_EFSVolumeConfigurationProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_EnvironmentFileProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_EphemeralStorageProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_FirelensConfigurationProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_HealthCheckProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_HostEntryProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_HostVolumePropertiesProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_InferenceAcceleratorProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_KernelCapabilitiesProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_KeyValuePairProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_LinuxParametersProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_LogConfigurationProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_MountPointProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_PortMappingProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_ProxyConfigurationProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_RepositoryCredentialsProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_ResourceRequirementProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_RuntimePlatformProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_SecretProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_SystemControlProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_TaskDefinitionPlacementConstraintProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_TmpfsProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_UlimitProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_VolumeProperty, aws_cdk_lib_aws_ecs_CfnTaskDefinition_VolumeFromProperty, aws_cdk_lib_aws_ecs_CfnTaskSetProps, aws_cdk_lib_aws_ecs_CfnTaskSet, aws_cdk_lib_aws_ecs_CfnTaskSet_AwsVpcConfigurationProperty, aws_cdk_lib_aws_ecs_CfnTaskSet_LoadBalancerProperty, aws_cdk_lib_aws_ecs_CfnTaskSet_NetworkConfigurationProperty, aws_cdk_lib_aws_ecs_CfnTaskSet_ScaleProperty, aws_cdk_lib_aws_ecs_CfnTaskSet_ServiceRegistryProperty, aws_cdk_lib_aws_ecs_patterns_QueueProcessingEc2ServiceProps, aws_cdk_lib_aws_ecs_patterns_QueueProcessingEc2Service, aws_cdk_lib_aws_ecs_patterns_QueueProcessingFargateServiceProps, aws_cdk_lib_aws_ecs_patterns_QueueProcessingFargateService, aws_cdk_lib_aws_ecs_patterns_QueueProcessingServiceBaseProps, aws_cdk_lib_aws_ecs_patterns_QueueProcessingServiceBase, aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedEc2ServiceProps, aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedEc2Service, aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedFargateServiceProps, aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedFargateService, aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedServiceRecordType, aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedServiceBaseProps, aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedTaskImageOptions, aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedServiceBase, aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedEc2ServiceProps, aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedEc2Service, aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedFargateServiceProps, aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedFargateService, aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedServiceRecordType, aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedServiceBaseProps, aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedTaskImageOptions, aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedServiceBase, aws_cdk_lib_aws_ecs_patterns_FargateServiceBaseProps, aws_cdk_lib_aws_ecs_patterns_ScheduledEc2TaskProps, aws_cdk_lib_aws_ecs_patterns_ScheduledEc2TaskImageOptions, aws_cdk_lib_aws_ecs_patterns_ScheduledEc2TaskDefinitionOptions, aws_cdk_lib_aws_ecs_patterns_ScheduledEc2Task, aws_cdk_lib_aws_ecs_patterns_ScheduledFargateTaskProps, aws_cdk_lib_aws_ecs_patterns_ScheduledFargateTaskImageOptions, aws_cdk_lib_aws_ecs_patterns_ScheduledFargateTaskDefinitionOptions, aws_cdk_lib_aws_ecs_patterns_ScheduledFargateTask, aws_cdk_lib_aws_ecs_patterns_ScheduledTaskBaseProps, aws_cdk_lib_aws_ecs_patterns_ScheduledTaskImageProps, aws_cdk_lib_aws_ecs_patterns_ScheduledTaskBase, aws_cdk_lib_aws_ecs_patterns_ApplicationMultipleTargetGroupsServiceBaseProps, aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancedTaskImageProps, aws_cdk_lib_aws_ecs_patterns_ApplicationTargetProps, aws_cdk_lib_aws_ecs_patterns_ApplicationLoadBalancerProps, aws_cdk_lib_aws_ecs_patterns_ApplicationListenerProps, aws_cdk_lib_aws_ecs_patterns_ApplicationMultipleTargetGroupsServiceBase, aws_cdk_lib_aws_ecs_patterns_ApplicationMultipleTargetGroupsEc2ServiceProps, aws_cdk_lib_aws_ecs_patterns_ApplicationMultipleTargetGroupsEc2Service, aws_cdk_lib_aws_ecs_patterns_ApplicationMultipleTargetGroupsFargateServiceProps, aws_cdk_lib_aws_ecs_patterns_ApplicationMultipleTargetGroupsFargateService, aws_cdk_lib_aws_ecs_patterns_NetworkMultipleTargetGroupsServiceBaseProps, aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancedTaskImageProps, aws_cdk_lib_aws_ecs_patterns_NetworkLoadBalancerProps, aws_cdk_lib_aws_ecs_patterns_NetworkListenerProps, aws_cdk_lib_aws_ecs_patterns_NetworkTargetProps, aws_cdk_lib_aws_ecs_patterns_NetworkMultipleTargetGroupsServiceBase, aws_cdk_lib_aws_ecs_patterns_NetworkMultipleTargetGroupsEc2ServiceProps, aws_cdk_lib_aws_ecs_patterns_NetworkMultipleTargetGroupsEc2Service, aws_cdk_lib_aws_ecs_patterns_NetworkMultipleTargetGroupsFargateServiceProps, aws_cdk_lib_aws_ecs_patterns_NetworkMultipleTargetGroupsFargateService, aws_cdk_lib_aws_efs_IAccessPoint, aws_cdk_lib_aws_efs_Acl, aws_cdk_lib_aws_efs_PosixUser, aws_cdk_lib_aws_efs_AccessPointOptions, aws_cdk_lib_aws_efs_AccessPointProps, aws_cdk_lib_aws_efs_AccessPointAttributes, aws_cdk_lib_aws_efs_AccessPoint, aws_cdk_lib_aws_efs_LifecyclePolicy, aws_cdk_lib_aws_efs_OutOfInfrequentAccessPolicy, aws_cdk_lib_aws_efs_PerformanceMode, aws_cdk_lib_aws_efs_ThroughputMode, aws_cdk_lib_aws_efs_IFileSystem, aws_cdk_lib_aws_efs_FileSystemProps, aws_cdk_lib_aws_efs_FileSystemAttributes, aws_cdk_lib_aws_efs_FileSystem, aws_cdk_lib_aws_efs_CfnAccessPointProps, aws_cdk_lib_aws_efs_CfnAccessPoint, aws_cdk_lib_aws_efs_CfnAccessPoint_AccessPointTagProperty, aws_cdk_lib_aws_efs_CfnAccessPoint_CreationInfoProperty, aws_cdk_lib_aws_efs_CfnAccessPoint_PosixUserProperty, aws_cdk_lib_aws_efs_CfnAccessPoint_RootDirectoryProperty, aws_cdk_lib_aws_efs_CfnFileSystemProps, aws_cdk_lib_aws_efs_CfnFileSystem, aws_cdk_lib_aws_efs_CfnFileSystem_BackupPolicyProperty, aws_cdk_lib_aws_efs_CfnFileSystem_ElasticFileSystemTagProperty, aws_cdk_lib_aws_efs_CfnFileSystem_LifecyclePolicyProperty, aws_cdk_lib_aws_efs_CfnMountTargetProps, aws_cdk_lib_aws_efs_CfnMountTarget, aws_cdk_lib_aws_eks_AwsAuthProps, aws_cdk_lib_aws_eks_AwsAuth, aws_cdk_lib_aws_eks_AwsAuthMapping, aws_cdk_lib_aws_eks_ICluster, aws_cdk_lib_aws_eks_ClusterAttributes, aws_cdk_lib_aws_eks_CommonClusterOptions, aws_cdk_lib_aws_eks_ClusterOptions, aws_cdk_lib_aws_eks_EndpointAccess, aws_cdk_lib_aws_eks_ClusterProps, aws_cdk_lib_aws_eks_KubernetesVersion, aws_cdk_lib_aws_eks_ClusterLoggingTypes, aws_cdk_lib_aws_eks_ServiceLoadBalancerAddressOptions, aws_cdk_lib_aws_eks_IngressLoadBalancerAddressOptions, aws_cdk_lib_aws_eks_Cluster, aws_cdk_lib_aws_eks_AutoScalingGroupCapacityOptions, aws_cdk_lib_aws_eks_BootstrapOptions, aws_cdk_lib_aws_eks_AutoScalingGroupOptions, aws_cdk_lib_aws_eks_EksOptimizedImageProps, aws_cdk_lib_aws_eks_EksOptimizedImage, aws_cdk_lib_aws_eks_NodeType, aws_cdk_lib_aws_eks_CpuArch, aws_cdk_lib_aws_eks_CoreDnsComputeType, aws_cdk_lib_aws_eks_DefaultCapacityType, aws_cdk_lib_aws_eks_MachineImageType, aws_cdk_lib_aws_eks_CfnAddonProps, aws_cdk_lib_aws_eks_CfnAddon, aws_cdk_lib_aws_eks_CfnClusterProps, aws_cdk_lib_aws_eks_CfnCluster, aws_cdk_lib_aws_eks_CfnCluster_ClusterLoggingProperty, aws_cdk_lib_aws_eks_CfnCluster_ControlPlanePlacementProperty, aws_cdk_lib_aws_eks_CfnCluster_EncryptionConfigProperty, aws_cdk_lib_aws_eks_CfnCluster_KubernetesNetworkConfigProperty, aws_cdk_lib_aws_eks_CfnCluster_LoggingProperty, aws_cdk_lib_aws_eks_CfnCluster_LoggingTypeConfigProperty, aws_cdk_lib_aws_eks_CfnCluster_OutpostConfigProperty, aws_cdk_lib_aws_eks_CfnCluster_ProviderProperty, aws_cdk_lib_aws_eks_CfnCluster_ResourcesVpcConfigProperty, aws_cdk_lib_aws_eks_CfnFargateProfileProps, aws_cdk_lib_aws_eks_CfnFargateProfile, aws_cdk_lib_aws_eks_CfnFargateProfile_LabelProperty, aws_cdk_lib_aws_eks_CfnFargateProfile_SelectorProperty, aws_cdk_lib_aws_eks_CfnIdentityProviderConfigProps, aws_cdk_lib_aws_eks_CfnIdentityProviderConfig, aws_cdk_lib_aws_eks_CfnIdentityProviderConfig_OidcIdentityProviderConfigProperty, aws_cdk_lib_aws_eks_CfnIdentityProviderConfig_RequiredClaimProperty, aws_cdk_lib_aws_eks_CfnNodegroupProps, aws_cdk_lib_aws_eks_CfnNodegroup, aws_cdk_lib_aws_eks_CfnNodegroup_LaunchTemplateSpecificationProperty, aws_cdk_lib_aws_eks_CfnNodegroup_RemoteAccessProperty, aws_cdk_lib_aws_eks_CfnNodegroup_ScalingConfigProperty, aws_cdk_lib_aws_eks_CfnNodegroup_TaintProperty, aws_cdk_lib_aws_eks_CfnNodegroup_UpdateConfigProperty, aws_cdk_lib_aws_eks_FargateProfileOptions, aws_cdk_lib_aws_eks_FargateProfileProps, aws_cdk_lib_aws_eks_Selector, aws_cdk_lib_aws_eks_FargateProfile, aws_cdk_lib_aws_eks_HelmChartOptions, aws_cdk_lib_aws_eks_HelmChartProps, aws_cdk_lib_aws_eks_HelmChart, aws_cdk_lib_aws_eks_KubernetesPatchProps, aws_cdk_lib_aws_eks_PatchType, aws_cdk_lib_aws_eks_KubernetesPatch, aws_cdk_lib_aws_eks_KubernetesManifestOptions, aws_cdk_lib_aws_eks_KubernetesManifestProps, aws_cdk_lib_aws_eks_KubernetesManifest, aws_cdk_lib_aws_eks_KubernetesObjectValueProps, aws_cdk_lib_aws_eks_KubernetesObjectValue, aws_cdk_lib_aws_eks_KubectlProviderProps, aws_cdk_lib_aws_eks_KubectlProviderAttributes, aws_cdk_lib_aws_eks_IKubectlProvider, aws_cdk_lib_aws_eks_KubectlProvider, aws_cdk_lib_aws_eks_FargateClusterProps, aws_cdk_lib_aws_eks_FargateCluster, aws_cdk_lib_aws_eks_ServiceAccountOptions, aws_cdk_lib_aws_eks_ServiceAccountProps, aws_cdk_lib_aws_eks_ServiceAccount, aws_cdk_lib_aws_eks_INodegroup, aws_cdk_lib_aws_eks_NodegroupAmiType, aws_cdk_lib_aws_eks_CapacityType, aws_cdk_lib_aws_eks_NodegroupRemoteAccess, aws_cdk_lib_aws_eks_LaunchTemplateSpec, aws_cdk_lib_aws_eks_TaintEffect, aws_cdk_lib_aws_eks_TaintSpec, aws_cdk_lib_aws_eks_NodegroupOptions, aws_cdk_lib_aws_eks_NodegroupProps, aws_cdk_lib_aws_eks_Nodegroup, aws_cdk_lib_aws_eks_OpenIdConnectProviderProps, aws_cdk_lib_aws_eks_OpenIdConnectProvider, aws_cdk_lib_aws_eks_AlbControllerVersion, aws_cdk_lib_aws_eks_AlbScheme, aws_cdk_lib_aws_eks_AlbControllerOptions, aws_cdk_lib_aws_eks_AlbControllerProps, aws_cdk_lib_aws_eks_AlbController, aws_cdk_lib_aws_elasticache_CfnCacheClusterProps, aws_cdk_lib_aws_elasticache_CfnCacheCluster, aws_cdk_lib_aws_elasticache_CfnCacheCluster_CloudWatchLogsDestinationDetailsProperty, aws_cdk_lib_aws_elasticache_CfnCacheCluster_DestinationDetailsProperty, aws_cdk_lib_aws_elasticache_CfnCacheCluster_KinesisFirehoseDestinationDetailsProperty, aws_cdk_lib_aws_elasticache_CfnCacheCluster_LogDeliveryConfigurationRequestProperty, aws_cdk_lib_aws_elasticache_CfnGlobalReplicationGroupProps, aws_cdk_lib_aws_elasticache_CfnGlobalReplicationGroup, aws_cdk_lib_aws_elasticache_CfnGlobalReplicationGroup_GlobalReplicationGroupMemberProperty, aws_cdk_lib_aws_elasticache_CfnGlobalReplicationGroup_RegionalConfigurationProperty, aws_cdk_lib_aws_elasticache_CfnGlobalReplicationGroup_ReshardingConfigurationProperty, aws_cdk_lib_aws_elasticache_CfnParameterGroupProps, aws_cdk_lib_aws_elasticache_CfnParameterGroup, aws_cdk_lib_aws_elasticache_CfnReplicationGroupProps, aws_cdk_lib_aws_elasticache_CfnReplicationGroup, aws_cdk_lib_aws_elasticache_CfnReplicationGroup_CloudWatchLogsDestinationDetailsProperty, aws_cdk_lib_aws_elasticache_CfnReplicationGroup_DestinationDetailsProperty, aws_cdk_lib_aws_elasticache_CfnReplicationGroup_KinesisFirehoseDestinationDetailsProperty, aws_cdk_lib_aws_elasticache_CfnReplicationGroup_LogDeliveryConfigurationRequestProperty, aws_cdk_lib_aws_elasticache_CfnReplicationGroup_NodeGroupConfigurationProperty, aws_cdk_lib_aws_elasticache_CfnSecurityGroupProps, aws_cdk_lib_aws_elasticache_CfnSecurityGroup, aws_cdk_lib_aws_elasticache_CfnSecurityGroupIngressProps, aws_cdk_lib_aws_elasticache_CfnSecurityGroupIngress, aws_cdk_lib_aws_elasticache_CfnSubnetGroupProps, aws_cdk_lib_aws_elasticache_CfnSubnetGroup, aws_cdk_lib_aws_elasticache_CfnUserProps, aws_cdk_lib_aws_elasticache_CfnUser, aws_cdk_lib_aws_elasticache_CfnUser_AuthenticationModeProperty, aws_cdk_lib_aws_elasticache_CfnUserGroupProps, aws_cdk_lib_aws_elasticache_CfnUserGroup, aws_cdk_lib_aws_elasticbeanstalk_CfnApplicationProps, aws_cdk_lib_aws_elasticbeanstalk_CfnApplication, aws_cdk_lib_aws_elasticbeanstalk_CfnApplication_ApplicationResourceLifecycleConfigProperty, aws_cdk_lib_aws_elasticbeanstalk_CfnApplication_ApplicationVersionLifecycleConfigProperty, aws_cdk_lib_aws_elasticbeanstalk_CfnApplication_MaxAgeRuleProperty, aws_cdk_lib_aws_elasticbeanstalk_CfnApplication_MaxCountRuleProperty, aws_cdk_lib_aws_elasticbeanstalk_CfnApplicationVersionProps, aws_cdk_lib_aws_elasticbeanstalk_CfnApplicationVersion, aws_cdk_lib_aws_elasticbeanstalk_CfnApplicationVersion_SourceBundleProperty, aws_cdk_lib_aws_elasticbeanstalk_CfnConfigurationTemplateProps, aws_cdk_lib_aws_elasticbeanstalk_CfnConfigurationTemplate, aws_cdk_lib_aws_elasticbeanstalk_CfnConfigurationTemplate_ConfigurationOptionSettingProperty, aws_cdk_lib_aws_elasticbeanstalk_CfnConfigurationTemplate_SourceConfigurationProperty, aws_cdk_lib_aws_elasticbeanstalk_CfnEnvironmentProps, aws_cdk_lib_aws_elasticbeanstalk_CfnEnvironment, aws_cdk_lib_aws_elasticbeanstalk_CfnEnvironment_OptionSettingProperty, aws_cdk_lib_aws_elasticbeanstalk_CfnEnvironment_TierProperty, aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancerProps, aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer, aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_AccessLoggingPolicyProperty, aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_AppCookieStickinessPolicyProperty, aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_ConnectionDrainingPolicyProperty, aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_ConnectionSettingsProperty, aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_HealthCheckProperty, aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_LBCookieStickinessPolicyProperty, aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_ListenersProperty, aws_cdk_lib_aws_elasticloadbalancing_CfnLoadBalancer_PoliciesProperty, aws_cdk_lib_aws_elasticloadbalancing_LoadBalancerProps, aws_cdk_lib_aws_elasticloadbalancing_HealthCheck, aws_cdk_lib_aws_elasticloadbalancing_ILoadBalancerTarget, aws_cdk_lib_aws_elasticloadbalancing_LoadBalancerListener, aws_cdk_lib_aws_elasticloadbalancing_LoadBalancingProtocol, aws_cdk_lib_aws_elasticloadbalancing_LoadBalancer, aws_cdk_lib_aws_elasticloadbalancing_InstanceTarget, aws_cdk_lib_aws_elasticloadbalancing_ListenerPort, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerProps, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_ActionProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_AuthenticateCognitoConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_AuthenticateOidcConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_CertificateProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_FixedResponseConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_ForwardConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_RedirectConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_TargetGroupStickinessConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListener_TargetGroupTupleProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerCertificateProps, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerCertificate, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerCertificate_CertificateProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRuleProps, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_ActionProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_AuthenticateCognitoConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_AuthenticateOidcConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_FixedResponseConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_ForwardConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_HostHeaderConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_HttpHeaderConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_HttpRequestMethodConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_PathPatternConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_QueryStringConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_QueryStringKeyValueProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_RedirectConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_RuleConditionProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_SourceIpConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_TargetGroupStickinessConfigProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnListenerRule_TargetGroupTupleProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnLoadBalancerProps, aws_cdk_lib_aws_elasticloadbalancingv2_CfnLoadBalancer, aws_cdk_lib_aws_elasticloadbalancingv2_CfnLoadBalancer_LoadBalancerAttributeProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnLoadBalancer_SubnetMappingProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnTargetGroupProps, aws_cdk_lib_aws_elasticloadbalancingv2_CfnTargetGroup, aws_cdk_lib_aws_elasticloadbalancingv2_CfnTargetGroup_MatcherProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnTargetGroup_TargetDescriptionProperty, aws_cdk_lib_aws_elasticloadbalancingv2_CfnTargetGroup_TargetGroupAttributeProperty, aws_cdk_lib_aws_elasticloadbalancingv2_BaseApplicationListenerProps, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerProps, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerLookupOptions, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListener, aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationListener, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerAttributes, aws_cdk_lib_aws_elasticloadbalancingv2_AddRuleProps, aws_cdk_lib_aws_elasticloadbalancingv2_AddApplicationTargetGroupsProps, aws_cdk_lib_aws_elasticloadbalancingv2_AddApplicationActionProps, aws_cdk_lib_aws_elasticloadbalancingv2_AddApplicationTargetsProps, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerCertificateProps, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerCertificate, aws_cdk_lib_aws_elasticloadbalancingv2_BaseApplicationListenerRuleProps, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerRuleProps, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationListenerRule, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationLoadBalancerProps, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationLoadBalancerLookupOptions, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationLoadBalancer, aws_cdk_lib_aws_elasticloadbalancingv2_HttpCodeElb, aws_cdk_lib_aws_elasticloadbalancingv2_HttpCodeTarget, aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationLoadBalancerMetrics, aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationLoadBalancer, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationLoadBalancerAttributes, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationLoadBalancerRedirectConfig, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationTargetGroupProps, aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationTargetGroupMetrics, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationTargetGroup, aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationTargetGroup, aws_cdk_lib_aws_elasticloadbalancingv2_IApplicationLoadBalancerTarget, aws_cdk_lib_aws_elasticloadbalancingv2_ListenerAction, aws_cdk_lib_aws_elasticloadbalancingv2_ForwardOptions, aws_cdk_lib_aws_elasticloadbalancingv2_WeightedTargetGroup, aws_cdk_lib_aws_elasticloadbalancingv2_FixedResponseOptions, aws_cdk_lib_aws_elasticloadbalancingv2_RedirectOptions, aws_cdk_lib_aws_elasticloadbalancingv2_AuthenticateOidcOptions, aws_cdk_lib_aws_elasticloadbalancingv2_UnauthenticatedAction, aws_cdk_lib_aws_elasticloadbalancingv2_ListenerCondition, aws_cdk_lib_aws_elasticloadbalancingv2_QueryStringCondition, aws_cdk_lib_aws_elasticloadbalancingv2_BaseNetworkListenerProps, aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListenerProps, aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListenerLookupOptions, aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListener, aws_cdk_lib_aws_elasticloadbalancingv2_INetworkListener, aws_cdk_lib_aws_elasticloadbalancingv2_AddNetworkActionProps, aws_cdk_lib_aws_elasticloadbalancingv2_AddNetworkTargetsProps, aws_cdk_lib_aws_elasticloadbalancingv2_NetworkLoadBalancerProps, aws_cdk_lib_aws_elasticloadbalancingv2_NetworkLoadBalancerAttributes, aws_cdk_lib_aws_elasticloadbalancingv2_NetworkLoadBalancerLookupOptions, aws_cdk_lib_aws_elasticloadbalancingv2_NetworkLoadBalancer, aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancerMetrics, aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancer, aws_cdk_lib_aws_elasticloadbalancingv2_NetworkTargetGroupProps, aws_cdk_lib_aws_elasticloadbalancingv2_INetworkTargetGroupMetrics, aws_cdk_lib_aws_elasticloadbalancingv2_NetworkTargetGroup, aws_cdk_lib_aws_elasticloadbalancingv2_INetworkTargetGroup, aws_cdk_lib_aws_elasticloadbalancingv2_INetworkLoadBalancerTarget, aws_cdk_lib_aws_elasticloadbalancingv2_NetworkListenerAction, aws_cdk_lib_aws_elasticloadbalancingv2_NetworkForwardOptions, aws_cdk_lib_aws_elasticloadbalancingv2_NetworkWeightedTargetGroup, aws_cdk_lib_aws_elasticloadbalancingv2_BaseListenerLookupOptions, aws_cdk_lib_aws_elasticloadbalancingv2_IListener, aws_cdk_lib_aws_elasticloadbalancingv2_BaseListener, aws_cdk_lib_aws_elasticloadbalancingv2_BaseLoadBalancerProps, aws_cdk_lib_aws_elasticloadbalancingv2_ILoadBalancerV2, aws_cdk_lib_aws_elasticloadbalancingv2_BaseLoadBalancerLookupOptions, aws_cdk_lib_aws_elasticloadbalancingv2_BaseLoadBalancer, aws_cdk_lib_aws_elasticloadbalancingv2_BaseTargetGroupProps, aws_cdk_lib_aws_elasticloadbalancingv2_HealthCheck, aws_cdk_lib_aws_elasticloadbalancingv2_TargetGroupBase, aws_cdk_lib_aws_elasticloadbalancingv2_TargetGroupAttributes, aws_cdk_lib_aws_elasticloadbalancingv2_ITargetGroup, aws_cdk_lib_aws_elasticloadbalancingv2_LoadBalancerTargetProps, aws_cdk_lib_aws_elasticloadbalancingv2_IpAddressType, aws_cdk_lib_aws_elasticloadbalancingv2_Protocol, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocol, aws_cdk_lib_aws_elasticloadbalancingv2_ApplicationProtocolVersion, aws_cdk_lib_aws_elasticloadbalancingv2_SslPolicy, aws_cdk_lib_aws_elasticloadbalancingv2_TargetType, aws_cdk_lib_aws_elasticloadbalancingv2_AlpnPolicy, aws_cdk_lib_aws_elasticloadbalancingv2_TargetGroupLoadBalancingAlgorithmType, aws_cdk_lib_aws_elasticloadbalancingv2_DesyncMitigationMode, aws_cdk_lib_aws_elasticloadbalancingv2_IListenerCertificate, aws_cdk_lib_aws_elasticloadbalancingv2_ListenerCertificate, aws_cdk_lib_aws_elasticloadbalancingv2_IListenerAction, aws_cdk_lib_aws_elasticloadbalancingv2_actions_AuthenticateCognitoActionProps, aws_cdk_lib_aws_elasticloadbalancingv2_actions_AuthenticateCognitoAction, aws_cdk_lib_aws_elasticloadbalancingv2_targets_AlbArnTarget, aws_cdk_lib_aws_elasticloadbalancingv2_targets_AlbTarget, aws_cdk_lib_aws_elasticloadbalancingv2_targets_IpTarget, aws_cdk_lib_aws_elasticloadbalancingv2_targets_InstanceIdTarget, aws_cdk_lib_aws_elasticloadbalancingv2_targets_InstanceTarget, aws_cdk_lib_aws_elasticloadbalancingv2_targets_LambdaTarget, aws_cdk_lib_aws_elasticsearch_ElasticsearchVersion, aws_cdk_lib_aws_elasticsearch_CapacityConfig, aws_cdk_lib_aws_elasticsearch_ZoneAwarenessConfig, aws_cdk_lib_aws_elasticsearch_EbsOptions, aws_cdk_lib_aws_elasticsearch_LoggingOptions, aws_cdk_lib_aws_elasticsearch_EncryptionAtRestOptions, aws_cdk_lib_aws_elasticsearch_CognitoOptions, aws_cdk_lib_aws_elasticsearch_TLSSecurityPolicy, aws_cdk_lib_aws_elasticsearch_AdvancedSecurityOptions, aws_cdk_lib_aws_elasticsearch_CustomEndpointOptions, aws_cdk_lib_aws_elasticsearch_DomainProps, aws_cdk_lib_aws_elasticsearch_IDomain, aws_cdk_lib_aws_elasticsearch_DomainAttributes, aws_cdk_lib_aws_elasticsearch_Domain, aws_cdk_lib_aws_elasticsearch_CfnDomainProps, aws_cdk_lib_aws_elasticsearch_CfnDomain, aws_cdk_lib_aws_elasticsearch_CfnDomain_AdvancedSecurityOptionsInputProperty, aws_cdk_lib_aws_elasticsearch_CfnDomain_CognitoOptionsProperty, aws_cdk_lib_aws_elasticsearch_CfnDomain_ColdStorageOptionsProperty, aws_cdk_lib_aws_elasticsearch_CfnDomain_DomainEndpointOptionsProperty, aws_cdk_lib_aws_elasticsearch_CfnDomain_EBSOptionsProperty, aws_cdk_lib_aws_elasticsearch_CfnDomain_ElasticsearchClusterConfigProperty, aws_cdk_lib_aws_elasticsearch_CfnDomain_EncryptionAtRestOptionsProperty, aws_cdk_lib_aws_elasticsearch_CfnDomain_LogPublishingOptionProperty, aws_cdk_lib_aws_elasticsearch_CfnDomain_MasterUserOptionsProperty, aws_cdk_lib_aws_elasticsearch_CfnDomain_NodeToNodeEncryptionOptionsProperty, aws_cdk_lib_aws_elasticsearch_CfnDomain_SnapshotOptionsProperty, aws_cdk_lib_aws_elasticsearch_CfnDomain_VPCOptionsProperty, aws_cdk_lib_aws_elasticsearch_CfnDomain_ZoneAwarenessConfigProperty, aws_cdk_lib_aws_emr_CfnClusterProps, aws_cdk_lib_aws_emr_CfnCluster, aws_cdk_lib_aws_emr_CfnCluster_ApplicationProperty, aws_cdk_lib_aws_emr_CfnCluster_AutoScalingPolicyProperty, aws_cdk_lib_aws_emr_CfnCluster_AutoTerminationPolicyProperty, aws_cdk_lib_aws_emr_CfnCluster_BootstrapActionConfigProperty, aws_cdk_lib_aws_emr_CfnCluster_CloudWatchAlarmDefinitionProperty, aws_cdk_lib_aws_emr_CfnCluster_ComputeLimitsProperty, aws_cdk_lib_aws_emr_CfnCluster_ConfigurationProperty, aws_cdk_lib_aws_emr_CfnCluster_EbsBlockDeviceConfigProperty, aws_cdk_lib_aws_emr_CfnCluster_EbsConfigurationProperty, aws_cdk_lib_aws_emr_CfnCluster_HadoopJarStepConfigProperty, aws_cdk_lib_aws_emr_CfnCluster_InstanceFleetConfigProperty, aws_cdk_lib_aws_emr_CfnCluster_InstanceFleetProvisioningSpecificationsProperty, aws_cdk_lib_aws_emr_CfnCluster_InstanceGroupConfigProperty, aws_cdk_lib_aws_emr_CfnCluster_InstanceTypeConfigProperty, aws_cdk_lib_aws_emr_CfnCluster_JobFlowInstancesConfigProperty, aws_cdk_lib_aws_emr_CfnCluster_KerberosAttributesProperty, aws_cdk_lib_aws_emr_CfnCluster_KeyValueProperty, aws_cdk_lib_aws_emr_CfnCluster_ManagedScalingPolicyProperty, aws_cdk_lib_aws_emr_CfnCluster_MetricDimensionProperty, aws_cdk_lib_aws_emr_CfnCluster_OnDemandProvisioningSpecificationProperty, aws_cdk_lib_aws_emr_CfnCluster_PlacementTypeProperty, aws_cdk_lib_aws_emr_CfnCluster_ScalingActionProperty, aws_cdk_lib_aws_emr_CfnCluster_ScalingConstraintsProperty, aws_cdk_lib_aws_emr_CfnCluster_ScalingRuleProperty, aws_cdk_lib_aws_emr_CfnCluster_ScalingTriggerProperty, aws_cdk_lib_aws_emr_CfnCluster_ScriptBootstrapActionConfigProperty, aws_cdk_lib_aws_emr_CfnCluster_SimpleScalingPolicyConfigurationProperty, aws_cdk_lib_aws_emr_CfnCluster_SpotProvisioningSpecificationProperty, aws_cdk_lib_aws_emr_CfnCluster_StepConfigProperty, aws_cdk_lib_aws_emr_CfnCluster_VolumeSpecificationProperty, aws_cdk_lib_aws_emr_CfnInstanceFleetConfigProps, aws_cdk_lib_aws_emr_CfnInstanceFleetConfig, aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_ConfigurationProperty, aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_EbsBlockDeviceConfigProperty, aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_EbsConfigurationProperty, aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_InstanceFleetProvisioningSpecificationsProperty, aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_InstanceTypeConfigProperty, aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_OnDemandProvisioningSpecificationProperty, aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_SpotProvisioningSpecificationProperty, aws_cdk_lib_aws_emr_CfnInstanceFleetConfig_VolumeSpecificationProperty, aws_cdk_lib_aws_emr_CfnInstanceGroupConfigProps, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_AutoScalingPolicyProperty, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_CloudWatchAlarmDefinitionProperty, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_ConfigurationProperty, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_EbsBlockDeviceConfigProperty, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_EbsConfigurationProperty, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_MetricDimensionProperty, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_ScalingActionProperty, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_ScalingConstraintsProperty, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_ScalingRuleProperty, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_ScalingTriggerProperty, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_SimpleScalingPolicyConfigurationProperty, aws_cdk_lib_aws_emr_CfnInstanceGroupConfig_VolumeSpecificationProperty, aws_cdk_lib_aws_emr_CfnSecurityConfigurationProps, aws_cdk_lib_aws_emr_CfnSecurityConfiguration, aws_cdk_lib_aws_emr_CfnStepProps, aws_cdk_lib_aws_emr_CfnStep, aws_cdk_lib_aws_emr_CfnStep_HadoopJarStepConfigProperty, aws_cdk_lib_aws_emr_CfnStep_KeyValueProperty, aws_cdk_lib_aws_emr_CfnStudioProps, aws_cdk_lib_aws_emr_CfnStudio, aws_cdk_lib_aws_emr_CfnStudioSessionMappingProps, aws_cdk_lib_aws_emr_CfnStudioSessionMapping, aws_cdk_lib_aws_emrcontainers_CfnVirtualClusterProps, aws_cdk_lib_aws_emrcontainers_CfnVirtualCluster, aws_cdk_lib_aws_emrcontainers_CfnVirtualCluster_ContainerInfoProperty, aws_cdk_lib_aws_emrcontainers_CfnVirtualCluster_ContainerProviderProperty, aws_cdk_lib_aws_emrcontainers_CfnVirtualCluster_EksInfoProperty, aws_cdk_lib_aws_emrserverless_CfnApplicationProps, aws_cdk_lib_aws_emrserverless_CfnApplication, aws_cdk_lib_aws_emrserverless_CfnApplication_AutoStartConfigurationProperty, aws_cdk_lib_aws_emrserverless_CfnApplication_AutoStopConfigurationProperty, aws_cdk_lib_aws_emrserverless_CfnApplication_ImageConfigurationInputProperty, aws_cdk_lib_aws_emrserverless_CfnApplication_InitialCapacityConfigProperty, aws_cdk_lib_aws_emrserverless_CfnApplication_InitialCapacityConfigKeyValuePairProperty, aws_cdk_lib_aws_emrserverless_CfnApplication_MaximumAllowedResourcesProperty, aws_cdk_lib_aws_emrserverless_CfnApplication_NetworkConfigurationProperty, aws_cdk_lib_aws_emrserverless_CfnApplication_WorkerConfigurationProperty, aws_cdk_lib_aws_emrserverless_CfnApplication_WorkerTypeSpecificationInputProperty, aws_cdk_lib_aws_events_RuleTargetInput, aws_cdk_lib_aws_events_RuleTargetInputProperties, aws_cdk_lib_aws_events_EventField, aws_cdk_lib_aws_events_RuleProps, aws_cdk_lib_aws_events_Rule, aws_cdk_lib_aws_events_IRule, aws_cdk_lib_aws_events_IRuleTarget, aws_cdk_lib_aws_events_RuleTargetConfig, aws_cdk_lib_aws_events_IEventBus, aws_cdk_lib_aws_events_EventBusProps, aws_cdk_lib_aws_events_EventBusAttributes, aws_cdk_lib_aws_events_EventBus, aws_cdk_lib_aws_events_EventBusPolicyProps, aws_cdk_lib_aws_events_EventBusPolicy, aws_cdk_lib_aws_events_Match, aws_cdk_lib_aws_events_EventPattern, aws_cdk_lib_aws_events_Schedule, aws_cdk_lib_aws_events_CronOptions, aws_cdk_lib_aws_events_EventCommonOptions, aws_cdk_lib_aws_events_OnEventOptions, aws_cdk_lib_aws_events_BaseArchiveProps, aws_cdk_lib_aws_events_ArchiveProps, aws_cdk_lib_aws_events_Archive, aws_cdk_lib_aws_events_ConnectionProps, aws_cdk_lib_aws_events_Authorization, aws_cdk_lib_aws_events_OAuthAuthorizationProps, aws_cdk_lib_aws_events_HttpParameter, aws_cdk_lib_aws_events_IConnection, aws_cdk_lib_aws_events_ConnectionAttributes, aws_cdk_lib_aws_events_Connection, aws_cdk_lib_aws_events_HttpMethod, aws_cdk_lib_aws_events_ApiDestinationProps, aws_cdk_lib_aws_events_IApiDestination, aws_cdk_lib_aws_events_ApiDestination, aws_cdk_lib_aws_events_CfnApiDestinationProps, aws_cdk_lib_aws_events_CfnApiDestination, aws_cdk_lib_aws_events_CfnArchiveProps, aws_cdk_lib_aws_events_CfnArchive, aws_cdk_lib_aws_events_CfnConnectionProps, aws_cdk_lib_aws_events_CfnConnection, aws_cdk_lib_aws_events_CfnConnection_ApiKeyAuthParametersProperty, aws_cdk_lib_aws_events_CfnConnection_AuthParametersProperty, aws_cdk_lib_aws_events_CfnConnection_BasicAuthParametersProperty, aws_cdk_lib_aws_events_CfnConnection_ClientParametersProperty, aws_cdk_lib_aws_events_CfnConnection_ConnectionHttpParametersProperty, aws_cdk_lib_aws_events_CfnConnection_OAuthParametersProperty, aws_cdk_lib_aws_events_CfnConnection_ParameterProperty, aws_cdk_lib_aws_events_CfnEndpointProps, aws_cdk_lib_aws_events_CfnEndpoint, aws_cdk_lib_aws_events_CfnEndpoint_EndpointEventBusProperty, aws_cdk_lib_aws_events_CfnEndpoint_FailoverConfigProperty, aws_cdk_lib_aws_events_CfnEndpoint_PrimaryProperty, aws_cdk_lib_aws_events_CfnEndpoint_ReplicationConfigProperty, aws_cdk_lib_aws_events_CfnEndpoint_RoutingConfigProperty, aws_cdk_lib_aws_events_CfnEndpoint_SecondaryProperty, aws_cdk_lib_aws_events_CfnEventBusProps, aws_cdk_lib_aws_events_CfnEventBus, aws_cdk_lib_aws_events_CfnEventBus_TagEntryProperty, aws_cdk_lib_aws_events_CfnEventBusPolicyProps, aws_cdk_lib_aws_events_CfnEventBusPolicy, aws_cdk_lib_aws_events_CfnEventBusPolicy_ConditionProperty, aws_cdk_lib_aws_events_CfnRuleProps, aws_cdk_lib_aws_events_CfnRule, aws_cdk_lib_aws_events_CfnRule_AwsVpcConfigurationProperty, aws_cdk_lib_aws_events_CfnRule_BatchArrayPropertiesProperty, aws_cdk_lib_aws_events_CfnRule_BatchParametersProperty, aws_cdk_lib_aws_events_CfnRule_BatchRetryStrategyProperty, aws_cdk_lib_aws_events_CfnRule_CapacityProviderStrategyItemProperty, aws_cdk_lib_aws_events_CfnRule_DeadLetterConfigProperty, aws_cdk_lib_aws_events_CfnRule_EcsParametersProperty, aws_cdk_lib_aws_events_CfnRule_HttpParametersProperty, aws_cdk_lib_aws_events_CfnRule_InputTransformerProperty, aws_cdk_lib_aws_events_CfnRule_KinesisParametersProperty, aws_cdk_lib_aws_events_CfnRule_NetworkConfigurationProperty, aws_cdk_lib_aws_events_CfnRule_PlacementConstraintProperty, aws_cdk_lib_aws_events_CfnRule_PlacementStrategyProperty, aws_cdk_lib_aws_events_CfnRule_RedshiftDataParametersProperty, aws_cdk_lib_aws_events_CfnRule_RetryPolicyProperty, aws_cdk_lib_aws_events_CfnRule_RunCommandParametersProperty, aws_cdk_lib_aws_events_CfnRule_RunCommandTargetProperty, aws_cdk_lib_aws_events_CfnRule_SageMakerPipelineParameterProperty, aws_cdk_lib_aws_events_CfnRule_SageMakerPipelineParametersProperty, aws_cdk_lib_aws_events_CfnRule_SqsParametersProperty, aws_cdk_lib_aws_events_CfnRule_TagProperty, aws_cdk_lib_aws_events_CfnRule_TargetProperty, aws_cdk_lib_aws_events_targets_BatchJobProps, aws_cdk_lib_aws_events_targets_BatchJob, aws_cdk_lib_aws_events_targets_CodePipelineTargetOptions, aws_cdk_lib_aws_events_targets_CodePipeline, aws_cdk_lib_aws_events_targets_SnsTopicProps, aws_cdk_lib_aws_events_targets_SnsTopic, aws_cdk_lib_aws_events_targets_SqsQueueProps, aws_cdk_lib_aws_events_targets_SqsQueue, aws_cdk_lib_aws_events_targets_CodeBuildProjectProps, aws_cdk_lib_aws_events_targets_CodeBuildProject, aws_cdk_lib_aws_events_targets_AwsApiInput, aws_cdk_lib_aws_events_targets_AwsApiProps, aws_cdk_lib_aws_events_targets_AwsApi, aws_cdk_lib_aws_events_targets_LambdaFunctionProps, aws_cdk_lib_aws_events_targets_LambdaFunction, aws_cdk_lib_aws_events_targets_ContainerOverride, aws_cdk_lib_aws_events_targets_TaskEnvironmentVariable, aws_cdk_lib_aws_events_targets_EcsTaskProps, aws_cdk_lib_aws_events_targets_EcsTask, aws_cdk_lib_aws_events_targets_EventBusProps, aws_cdk_lib_aws_events_targets_EventBus, aws_cdk_lib_aws_events_targets_SfnStateMachineProps, aws_cdk_lib_aws_events_targets_SfnStateMachine, aws_cdk_lib_aws_events_targets_KinesisStreamProps, aws_cdk_lib_aws_events_targets_KinesisStream, aws_cdk_lib_aws_events_targets_LogGroupTargetInputOptions, aws_cdk_lib_aws_events_targets_LogGroupTargetInput, aws_cdk_lib_aws_events_targets_LogGroupProps, aws_cdk_lib_aws_events_targets_CloudWatchLogGroup, aws_cdk_lib_aws_events_targets_KinesisFirehoseStreamProps, aws_cdk_lib_aws_events_targets_KinesisFirehoseStream, aws_cdk_lib_aws_events_targets_ApiGatewayProps, aws_cdk_lib_aws_events_targets_ApiGateway, aws_cdk_lib_aws_events_targets_ApiDestinationProps, aws_cdk_lib_aws_events_targets_ApiDestination, aws_cdk_lib_aws_events_targets_TargetBaseProps, aws_cdk_lib_aws_eventschemas_CfnDiscovererProps, aws_cdk_lib_aws_eventschemas_CfnDiscoverer, aws_cdk_lib_aws_eventschemas_CfnDiscoverer_TagsEntryProperty, aws_cdk_lib_aws_eventschemas_CfnRegistryProps, aws_cdk_lib_aws_eventschemas_CfnRegistry, aws_cdk_lib_aws_eventschemas_CfnRegistry_TagsEntryProperty, aws_cdk_lib_aws_eventschemas_CfnRegistryPolicyProps, aws_cdk_lib_aws_eventschemas_CfnRegistryPolicy, aws_cdk_lib_aws_eventschemas_CfnSchemaProps, aws_cdk_lib_aws_eventschemas_CfnSchema, aws_cdk_lib_aws_eventschemas_CfnSchema_TagsEntryProperty, aws_cdk_lib_aws_evidently_CfnExperimentProps, aws_cdk_lib_aws_evidently_CfnExperiment, aws_cdk_lib_aws_evidently_CfnExperiment_MetricGoalObjectProperty, aws_cdk_lib_aws_evidently_CfnExperiment_OnlineAbConfigObjectProperty, aws_cdk_lib_aws_evidently_CfnExperiment_RunningStatusObjectProperty, aws_cdk_lib_aws_evidently_CfnExperiment_TreatmentObjectProperty, aws_cdk_lib_aws_evidently_CfnExperiment_TreatmentToWeightProperty, aws_cdk_lib_aws_evidently_CfnFeatureProps, aws_cdk_lib_aws_evidently_CfnFeature, aws_cdk_lib_aws_evidently_CfnFeature_EntityOverrideProperty, aws_cdk_lib_aws_evidently_CfnFeature_VariationObjectProperty, aws_cdk_lib_aws_evidently_CfnLaunchProps, aws_cdk_lib_aws_evidently_CfnLaunch, aws_cdk_lib_aws_evidently_CfnLaunch_ExecutionStatusObjectProperty, aws_cdk_lib_aws_evidently_CfnLaunch_GroupToWeightProperty, aws_cdk_lib_aws_evidently_CfnLaunch_LaunchGroupObjectProperty, aws_cdk_lib_aws_evidently_CfnLaunch_MetricDefinitionObjectProperty, aws_cdk_lib_aws_evidently_CfnLaunch_SegmentOverrideProperty, aws_cdk_lib_aws_evidently_CfnLaunch_StepConfigProperty, aws_cdk_lib_aws_evidently_CfnProjectProps, aws_cdk_lib_aws_evidently_CfnProject, aws_cdk_lib_aws_evidently_CfnProject_AppConfigResourceObjectProperty, aws_cdk_lib_aws_evidently_CfnProject_DataDeliveryObjectProperty, aws_cdk_lib_aws_evidently_CfnProject_S3DestinationProperty, aws_cdk_lib_aws_evidently_CfnSegmentProps, aws_cdk_lib_aws_evidently_CfnSegment, aws_cdk_lib_aws_finspace_CfnEnvironmentProps, aws_cdk_lib_aws_finspace_CfnEnvironment, aws_cdk_lib_aws_finspace_CfnEnvironment_FederationParametersProperty, aws_cdk_lib_aws_finspace_CfnEnvironment_SuperuserParametersProperty, aws_cdk_lib_aws_fis_CfnExperimentTemplateProps, aws_cdk_lib_aws_fis_CfnExperimentTemplate, aws_cdk_lib_aws_fis_CfnExperimentTemplate_CloudWatchLogsConfigurationProperty, aws_cdk_lib_aws_fis_CfnExperimentTemplate_ExperimentTemplateActionProperty, aws_cdk_lib_aws_fis_CfnExperimentTemplate_ExperimentTemplateLogConfigurationProperty, aws_cdk_lib_aws_fis_CfnExperimentTemplate_ExperimentTemplateStopConditionProperty, aws_cdk_lib_aws_fis_CfnExperimentTemplate_ExperimentTemplateTargetProperty, aws_cdk_lib_aws_fis_CfnExperimentTemplate_ExperimentTemplateTargetFilterProperty, aws_cdk_lib_aws_fis_CfnExperimentTemplate_S3ConfigurationProperty, aws_cdk_lib_aws_fms_CfnNotificationChannelProps, aws_cdk_lib_aws_fms_CfnNotificationChannel, aws_cdk_lib_aws_fms_CfnPolicyProps, aws_cdk_lib_aws_fms_CfnPolicy, aws_cdk_lib_aws_fms_CfnPolicy_IEMapProperty, aws_cdk_lib_aws_fms_CfnPolicy_NetworkFirewallPolicyProperty, aws_cdk_lib_aws_fms_CfnPolicy_PolicyOptionProperty, aws_cdk_lib_aws_fms_CfnPolicy_PolicyTagProperty, aws_cdk_lib_aws_fms_CfnPolicy_ResourceTagProperty, aws_cdk_lib_aws_fms_CfnPolicy_SecurityServicePolicyDataProperty, aws_cdk_lib_aws_fms_CfnPolicy_ThirdPartyFirewallPolicyProperty, aws_cdk_lib_aws_fms_CfnResourceSetProps, aws_cdk_lib_aws_fms_CfnResourceSet, aws_cdk_lib_aws_forecast_CfnDatasetProps, aws_cdk_lib_aws_forecast_CfnDataset, aws_cdk_lib_aws_forecast_CfnDataset_AttributesItemsProperty, aws_cdk_lib_aws_forecast_CfnDataset_EncryptionConfigProperty, aws_cdk_lib_aws_forecast_CfnDataset_SchemaProperty, aws_cdk_lib_aws_forecast_CfnDataset_TagsItemsProperty, aws_cdk_lib_aws_forecast_CfnDatasetGroupProps, aws_cdk_lib_aws_forecast_CfnDatasetGroup, aws_cdk_lib_aws_frauddetector_CfnDetectorProps, aws_cdk_lib_aws_frauddetector_CfnDetector, aws_cdk_lib_aws_frauddetector_CfnDetector_EntityTypeProperty, aws_cdk_lib_aws_frauddetector_CfnDetector_EventTypeProperty, aws_cdk_lib_aws_frauddetector_CfnDetector_EventVariableProperty, aws_cdk_lib_aws_frauddetector_CfnDetector_LabelProperty, aws_cdk_lib_aws_frauddetector_CfnDetector_ModelProperty, aws_cdk_lib_aws_frauddetector_CfnDetector_OutcomeProperty, aws_cdk_lib_aws_frauddetector_CfnDetector_RuleProperty, aws_cdk_lib_aws_frauddetector_CfnEntityTypeProps, aws_cdk_lib_aws_frauddetector_CfnEntityType, aws_cdk_lib_aws_frauddetector_CfnEventTypeProps, aws_cdk_lib_aws_frauddetector_CfnEventType, aws_cdk_lib_aws_frauddetector_CfnEventType_EntityTypeProperty, aws_cdk_lib_aws_frauddetector_CfnEventType_EventVariableProperty, aws_cdk_lib_aws_frauddetector_CfnEventType_LabelProperty, aws_cdk_lib_aws_frauddetector_CfnLabelProps, aws_cdk_lib_aws_frauddetector_CfnLabel, aws_cdk_lib_aws_frauddetector_CfnOutcomeProps, aws_cdk_lib_aws_frauddetector_CfnOutcome, aws_cdk_lib_aws_frauddetector_CfnVariableProps, aws_cdk_lib_aws_frauddetector_CfnVariable, aws_cdk_lib_aws_fsx_IFileSystem, aws_cdk_lib_aws_fsx_FileSystemProps, aws_cdk_lib_aws_fsx_FileSystemBase, aws_cdk_lib_aws_fsx_FileSystemAttributes, aws_cdk_lib_aws_fsx_CfnDataRepositoryAssociationProps, aws_cdk_lib_aws_fsx_CfnDataRepositoryAssociation, aws_cdk_lib_aws_fsx_CfnDataRepositoryAssociation_AutoExportPolicyProperty, aws_cdk_lib_aws_fsx_CfnDataRepositoryAssociation_AutoImportPolicyProperty, aws_cdk_lib_aws_fsx_CfnDataRepositoryAssociation_S3Property, aws_cdk_lib_aws_fsx_CfnFileSystemProps, aws_cdk_lib_aws_fsx_CfnFileSystem, aws_cdk_lib_aws_fsx_CfnFileSystem_AuditLogConfigurationProperty, aws_cdk_lib_aws_fsx_CfnFileSystem_ClientConfigurationsProperty, aws_cdk_lib_aws_fsx_CfnFileSystem_DiskIopsConfigurationProperty, aws_cdk_lib_aws_fsx_CfnFileSystem_LustreConfigurationProperty, aws_cdk_lib_aws_fsx_CfnFileSystem_NfsExportsProperty, aws_cdk_lib_aws_fsx_CfnFileSystem_OntapConfigurationProperty, aws_cdk_lib_aws_fsx_CfnFileSystem_OpenZFSConfigurationProperty, aws_cdk_lib_aws_fsx_CfnFileSystem_RootVolumeConfigurationProperty, aws_cdk_lib_aws_fsx_CfnFileSystem_SelfManagedActiveDirectoryConfigurationProperty, aws_cdk_lib_aws_fsx_CfnFileSystem_UserAndGroupQuotasProperty, aws_cdk_lib_aws_fsx_CfnFileSystem_WindowsConfigurationProperty, aws_cdk_lib_aws_fsx_CfnSnapshotProps, aws_cdk_lib_aws_fsx_CfnSnapshot, aws_cdk_lib_aws_fsx_CfnStorageVirtualMachineProps, aws_cdk_lib_aws_fsx_CfnStorageVirtualMachine, aws_cdk_lib_aws_fsx_CfnStorageVirtualMachine_ActiveDirectoryConfigurationProperty, aws_cdk_lib_aws_fsx_CfnStorageVirtualMachine_SelfManagedActiveDirectoryConfigurationProperty, aws_cdk_lib_aws_fsx_CfnVolumeProps, aws_cdk_lib_aws_fsx_CfnVolume, aws_cdk_lib_aws_fsx_CfnVolume_ClientConfigurationsProperty, aws_cdk_lib_aws_fsx_CfnVolume_NfsExportsProperty, aws_cdk_lib_aws_fsx_CfnVolume_OntapConfigurationProperty, aws_cdk_lib_aws_fsx_CfnVolume_OpenZFSConfigurationProperty, aws_cdk_lib_aws_fsx_CfnVolume_OriginSnapshotProperty, aws_cdk_lib_aws_fsx_CfnVolume_TieringPolicyProperty, aws_cdk_lib_aws_fsx_CfnVolume_UserAndGroupQuotasProperty, aws_cdk_lib_aws_fsx_LustreDeploymentType, aws_cdk_lib_aws_fsx_LustreAutoImportPolicy, aws_cdk_lib_aws_fsx_LustreDataCompressionType, aws_cdk_lib_aws_fsx_LustreConfiguration, aws_cdk_lib_aws_fsx_LustreFileSystemProps, aws_cdk_lib_aws_fsx_LustreFileSystem, aws_cdk_lib_aws_fsx_Weekday, aws_cdk_lib_aws_fsx_LustreMaintenanceTimeProps, aws_cdk_lib_aws_fsx_LustreMaintenanceTime, aws_cdk_lib_aws_gamelift_CfnAliasProps, aws_cdk_lib_aws_gamelift_CfnAlias, aws_cdk_lib_aws_gamelift_CfnAlias_RoutingStrategyProperty, aws_cdk_lib_aws_gamelift_CfnBuildProps, aws_cdk_lib_aws_gamelift_CfnBuild, aws_cdk_lib_aws_gamelift_CfnBuild_StorageLocationProperty, aws_cdk_lib_aws_gamelift_CfnFleetProps, aws_cdk_lib_aws_gamelift_CfnFleet, aws_cdk_lib_aws_gamelift_CfnFleet_AnywhereConfigurationProperty, aws_cdk_lib_aws_gamelift_CfnFleet_CertificateConfigurationProperty, aws_cdk_lib_aws_gamelift_CfnFleet_IpPermissionProperty, aws_cdk_lib_aws_gamelift_CfnFleet_LocationCapacityProperty, aws_cdk_lib_aws_gamelift_CfnFleet_LocationConfigurationProperty, aws_cdk_lib_aws_gamelift_CfnFleet_ResourceCreationLimitPolicyProperty, aws_cdk_lib_aws_gamelift_CfnFleet_RuntimeConfigurationProperty, aws_cdk_lib_aws_gamelift_CfnFleet_ServerProcessProperty, aws_cdk_lib_aws_gamelift_CfnGameServerGroupProps, aws_cdk_lib_aws_gamelift_CfnGameServerGroup, aws_cdk_lib_aws_gamelift_CfnGameServerGroup_AutoScalingPolicyProperty, aws_cdk_lib_aws_gamelift_CfnGameServerGroup_InstanceDefinitionProperty, aws_cdk_lib_aws_gamelift_CfnGameServerGroup_LaunchTemplateProperty, aws_cdk_lib_aws_gamelift_CfnGameServerGroup_TargetTrackingConfigurationProperty, aws_cdk_lib_aws_gamelift_CfnGameSessionQueueProps, aws_cdk_lib_aws_gamelift_CfnGameSessionQueue, aws_cdk_lib_aws_gamelift_CfnGameSessionQueue_DestinationProperty, aws_cdk_lib_aws_gamelift_CfnGameSessionQueue_FilterConfigurationProperty, aws_cdk_lib_aws_gamelift_CfnGameSessionQueue_PlayerLatencyPolicyProperty, aws_cdk_lib_aws_gamelift_CfnGameSessionQueue_PriorityConfigurationProperty, aws_cdk_lib_aws_gamelift_CfnLocationProps, aws_cdk_lib_aws_gamelift_CfnLocation, aws_cdk_lib_aws_gamelift_CfnMatchmakingConfigurationProps, aws_cdk_lib_aws_gamelift_CfnMatchmakingConfiguration, aws_cdk_lib_aws_gamelift_CfnMatchmakingConfiguration_GamePropertyProperty, aws_cdk_lib_aws_gamelift_CfnMatchmakingRuleSetProps, aws_cdk_lib_aws_gamelift_CfnMatchmakingRuleSet, aws_cdk_lib_aws_gamelift_CfnScriptProps, aws_cdk_lib_aws_gamelift_CfnScript, aws_cdk_lib_aws_gamelift_CfnScript_S3LocationProperty, aws_cdk_lib_aws_globalaccelerator_CfnAcceleratorProps, aws_cdk_lib_aws_globalaccelerator_CfnAccelerator, aws_cdk_lib_aws_globalaccelerator_CfnEndpointGroupProps, aws_cdk_lib_aws_globalaccelerator_CfnEndpointGroup, aws_cdk_lib_aws_globalaccelerator_CfnEndpointGroup_EndpointConfigurationProperty, aws_cdk_lib_aws_globalaccelerator_CfnEndpointGroup_PortOverrideProperty, aws_cdk_lib_aws_globalaccelerator_CfnListenerProps, aws_cdk_lib_aws_globalaccelerator_CfnListener, aws_cdk_lib_aws_globalaccelerator_CfnListener_PortRangeProperty, aws_cdk_lib_aws_globalaccelerator_IAccelerator, aws_cdk_lib_aws_globalaccelerator_AcceleratorProps, aws_cdk_lib_aws_globalaccelerator_AcceleratorAttributes, aws_cdk_lib_aws_globalaccelerator_Accelerator, aws_cdk_lib_aws_globalaccelerator_IListener, aws_cdk_lib_aws_globalaccelerator_ListenerOptions, aws_cdk_lib_aws_globalaccelerator_ListenerProps, aws_cdk_lib_aws_globalaccelerator_PortRange, aws_cdk_lib_aws_globalaccelerator_ConnectionProtocol, aws_cdk_lib_aws_globalaccelerator_ClientAffinity, aws_cdk_lib_aws_globalaccelerator_Listener, aws_cdk_lib_aws_globalaccelerator_IEndpointGroup, aws_cdk_lib_aws_globalaccelerator_EndpointGroupOptions, aws_cdk_lib_aws_globalaccelerator_PortOverride, aws_cdk_lib_aws_globalaccelerator_HealthCheckProtocol, aws_cdk_lib_aws_globalaccelerator_EndpointGroupProps, aws_cdk_lib_aws_globalaccelerator_EndpointGroup, aws_cdk_lib_aws_globalaccelerator_IEndpoint, aws_cdk_lib_aws_globalaccelerator_RawEndpointProps, aws_cdk_lib_aws_globalaccelerator_RawEndpoint, aws_cdk_lib_aws_globalaccelerator_endpoints_ApplicationLoadBalancerEndpointOptions, aws_cdk_lib_aws_globalaccelerator_endpoints_ApplicationLoadBalancerEndpoint, aws_cdk_lib_aws_globalaccelerator_endpoints_NetworkLoadBalancerEndpointProps, aws_cdk_lib_aws_globalaccelerator_endpoints_NetworkLoadBalancerEndpoint, aws_cdk_lib_aws_globalaccelerator_endpoints_InstanceEndpointProps, aws_cdk_lib_aws_globalaccelerator_endpoints_InstanceEndpoint, aws_cdk_lib_aws_globalaccelerator_endpoints_CfnEipEndpointProps, aws_cdk_lib_aws_globalaccelerator_endpoints_CfnEipEndpoint, aws_cdk_lib_aws_glue_CfnClassifierProps, aws_cdk_lib_aws_glue_CfnClassifier, aws_cdk_lib_aws_glue_CfnClassifier_CsvClassifierProperty, aws_cdk_lib_aws_glue_CfnClassifier_GrokClassifierProperty, aws_cdk_lib_aws_glue_CfnClassifier_JsonClassifierProperty, aws_cdk_lib_aws_glue_CfnClassifier_XMLClassifierProperty, aws_cdk_lib_aws_glue_CfnConnectionProps, aws_cdk_lib_aws_glue_CfnConnection, aws_cdk_lib_aws_glue_CfnConnection_ConnectionInputProperty, aws_cdk_lib_aws_glue_CfnConnection_PhysicalConnectionRequirementsProperty, aws_cdk_lib_aws_glue_CfnCrawlerProps, aws_cdk_lib_aws_glue_CfnCrawler, aws_cdk_lib_aws_glue_CfnCrawler_CatalogTargetProperty, aws_cdk_lib_aws_glue_CfnCrawler_DynamoDBTargetProperty, aws_cdk_lib_aws_glue_CfnCrawler_JdbcTargetProperty, aws_cdk_lib_aws_glue_CfnCrawler_MongoDBTargetProperty, aws_cdk_lib_aws_glue_CfnCrawler_RecrawlPolicyProperty, aws_cdk_lib_aws_glue_CfnCrawler_S3TargetProperty, aws_cdk_lib_aws_glue_CfnCrawler_ScheduleProperty, aws_cdk_lib_aws_glue_CfnCrawler_SchemaChangePolicyProperty, aws_cdk_lib_aws_glue_CfnCrawler_TargetsProperty, aws_cdk_lib_aws_glue_CfnDataCatalogEncryptionSettingsProps, aws_cdk_lib_aws_glue_CfnDataCatalogEncryptionSettings, aws_cdk_lib_aws_glue_CfnDataCatalogEncryptionSettings_ConnectionPasswordEncryptionProperty, aws_cdk_lib_aws_glue_CfnDataCatalogEncryptionSettings_DataCatalogEncryptionSettingsProperty, aws_cdk_lib_aws_glue_CfnDataCatalogEncryptionSettings_EncryptionAtRestProperty, aws_cdk_lib_aws_glue_CfnDatabaseProps, aws_cdk_lib_aws_glue_CfnDatabase, aws_cdk_lib_aws_glue_CfnDatabase_DataLakePrincipalProperty, aws_cdk_lib_aws_glue_CfnDatabase_DatabaseIdentifierProperty, aws_cdk_lib_aws_glue_CfnDatabase_DatabaseInputProperty, aws_cdk_lib_aws_glue_CfnDatabase_PrincipalPrivilegesProperty, aws_cdk_lib_aws_glue_CfnDevEndpointProps, aws_cdk_lib_aws_glue_CfnDevEndpoint, aws_cdk_lib_aws_glue_CfnJobProps, aws_cdk_lib_aws_glue_CfnJob, aws_cdk_lib_aws_glue_CfnJob_ConnectionsListProperty, aws_cdk_lib_aws_glue_CfnJob_ExecutionPropertyProperty, aws_cdk_lib_aws_glue_CfnJob_JobCommandProperty, aws_cdk_lib_aws_glue_CfnJob_NotificationPropertyProperty, aws_cdk_lib_aws_glue_CfnMLTransformProps, aws_cdk_lib_aws_glue_CfnMLTransform, aws_cdk_lib_aws_glue_CfnMLTransform_FindMatchesParametersProperty, aws_cdk_lib_aws_glue_CfnMLTransform_GlueTablesProperty, aws_cdk_lib_aws_glue_CfnMLTransform_InputRecordTablesProperty, aws_cdk_lib_aws_glue_CfnMLTransform_MLUserDataEncryptionProperty, aws_cdk_lib_aws_glue_CfnMLTransform_TransformEncryptionProperty, aws_cdk_lib_aws_glue_CfnMLTransform_TransformParametersProperty, aws_cdk_lib_aws_glue_CfnPartitionProps, aws_cdk_lib_aws_glue_CfnPartition, aws_cdk_lib_aws_glue_CfnPartition_ColumnProperty, aws_cdk_lib_aws_glue_CfnPartition_OrderProperty, aws_cdk_lib_aws_glue_CfnPartition_PartitionInputProperty, aws_cdk_lib_aws_glue_CfnPartition_SchemaIdProperty, aws_cdk_lib_aws_glue_CfnPartition_SchemaReferenceProperty, aws_cdk_lib_aws_glue_CfnPartition_SerdeInfoProperty, aws_cdk_lib_aws_glue_CfnPartition_SkewedInfoProperty, aws_cdk_lib_aws_glue_CfnPartition_StorageDescriptorProperty, aws_cdk_lib_aws_glue_CfnRegistryProps, aws_cdk_lib_aws_glue_CfnRegistry, aws_cdk_lib_aws_glue_CfnSchemaProps, aws_cdk_lib_aws_glue_CfnSchema, aws_cdk_lib_aws_glue_CfnSchema_RegistryProperty, aws_cdk_lib_aws_glue_CfnSchema_SchemaVersionProperty, aws_cdk_lib_aws_glue_CfnSchemaVersionProps, aws_cdk_lib_aws_glue_CfnSchemaVersion, aws_cdk_lib_aws_glue_CfnSchemaVersion_SchemaProperty, aws_cdk_lib_aws_glue_CfnSchemaVersionMetadataProps, aws_cdk_lib_aws_glue_CfnSchemaVersionMetadata, aws_cdk_lib_aws_glue_CfnSecurityConfigurationProps, aws_cdk_lib_aws_glue_CfnSecurityConfiguration, aws_cdk_lib_aws_glue_CfnSecurityConfiguration_CloudWatchEncryptionProperty, aws_cdk_lib_aws_glue_CfnSecurityConfiguration_EncryptionConfigurationProperty, aws_cdk_lib_aws_glue_CfnSecurityConfiguration_JobBookmarksEncryptionProperty, aws_cdk_lib_aws_glue_CfnSecurityConfiguration_S3EncryptionProperty, aws_cdk_lib_aws_glue_CfnTableProps, aws_cdk_lib_aws_glue_CfnTable, aws_cdk_lib_aws_glue_CfnTable_ColumnProperty, aws_cdk_lib_aws_glue_CfnTable_OrderProperty, aws_cdk_lib_aws_glue_CfnTable_SchemaIdProperty, aws_cdk_lib_aws_glue_CfnTable_SchemaReferenceProperty, aws_cdk_lib_aws_glue_CfnTable_SerdeInfoProperty, aws_cdk_lib_aws_glue_CfnTable_SkewedInfoProperty, aws_cdk_lib_aws_glue_CfnTable_StorageDescriptorProperty, aws_cdk_lib_aws_glue_CfnTable_TableIdentifierProperty, aws_cdk_lib_aws_glue_CfnTable_TableInputProperty, aws_cdk_lib_aws_glue_CfnTriggerProps, aws_cdk_lib_aws_glue_CfnTrigger, aws_cdk_lib_aws_glue_CfnTrigger_ActionProperty, aws_cdk_lib_aws_glue_CfnTrigger_ConditionProperty, aws_cdk_lib_aws_glue_CfnTrigger_EventBatchingConditionProperty, aws_cdk_lib_aws_glue_CfnTrigger_NotificationPropertyProperty, aws_cdk_lib_aws_glue_CfnTrigger_PredicateProperty, aws_cdk_lib_aws_glue_CfnWorkflowProps, aws_cdk_lib_aws_glue_CfnWorkflow, aws_cdk_lib_aws_grafana_CfnWorkspaceProps, aws_cdk_lib_aws_grafana_CfnWorkspace, aws_cdk_lib_aws_grafana_CfnWorkspace_AssertionAttributesProperty, aws_cdk_lib_aws_grafana_CfnWorkspace_IdpMetadataProperty, aws_cdk_lib_aws_grafana_CfnWorkspace_RoleValuesProperty, aws_cdk_lib_aws_grafana_CfnWorkspace_SamlConfigurationProperty, aws_cdk_lib_aws_grafana_CfnWorkspace_VpcConfigurationProperty, aws_cdk_lib_aws_greengrass_CfnConnectorDefinitionProps, aws_cdk_lib_aws_greengrass_CfnConnectorDefinition, aws_cdk_lib_aws_greengrass_CfnConnectorDefinition_ConnectorProperty, aws_cdk_lib_aws_greengrass_CfnConnectorDefinition_ConnectorDefinitionVersionProperty, aws_cdk_lib_aws_greengrass_CfnConnectorDefinitionVersionProps, aws_cdk_lib_aws_greengrass_CfnConnectorDefinitionVersion, aws_cdk_lib_aws_greengrass_CfnConnectorDefinitionVersion_ConnectorProperty, aws_cdk_lib_aws_greengrass_CfnCoreDefinitionProps, aws_cdk_lib_aws_greengrass_CfnCoreDefinition, aws_cdk_lib_aws_greengrass_CfnCoreDefinition_CoreProperty, aws_cdk_lib_aws_greengrass_CfnCoreDefinition_CoreDefinitionVersionProperty, aws_cdk_lib_aws_greengrass_CfnCoreDefinitionVersionProps, aws_cdk_lib_aws_greengrass_CfnCoreDefinitionVersion, aws_cdk_lib_aws_greengrass_CfnCoreDefinitionVersion_CoreProperty, aws_cdk_lib_aws_greengrass_CfnDeviceDefinitionProps, aws_cdk_lib_aws_greengrass_CfnDeviceDefinition, aws_cdk_lib_aws_greengrass_CfnDeviceDefinition_DeviceProperty, aws_cdk_lib_aws_greengrass_CfnDeviceDefinition_DeviceDefinitionVersionProperty, aws_cdk_lib_aws_greengrass_CfnDeviceDefinitionVersionProps, aws_cdk_lib_aws_greengrass_CfnDeviceDefinitionVersion, aws_cdk_lib_aws_greengrass_CfnDeviceDefinitionVersion_DeviceProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionProps, aws_cdk_lib_aws_greengrass_CfnFunctionDefinition, aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_DefaultConfigProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_EnvironmentProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_ExecutionProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_FunctionProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_FunctionConfigurationProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_FunctionDefinitionVersionProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_ResourceAccessPolicyProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinition_RunAsProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersionProps, aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion, aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_DefaultConfigProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_EnvironmentProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_ExecutionProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_FunctionProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_FunctionConfigurationProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_ResourceAccessPolicyProperty, aws_cdk_lib_aws_greengrass_CfnFunctionDefinitionVersion_RunAsProperty, aws_cdk_lib_aws_greengrass_CfnGroupProps, aws_cdk_lib_aws_greengrass_CfnGroup, aws_cdk_lib_aws_greengrass_CfnGroup_GroupVersionProperty, aws_cdk_lib_aws_greengrass_CfnGroupVersionProps, aws_cdk_lib_aws_greengrass_CfnGroupVersion, aws_cdk_lib_aws_greengrass_CfnLoggerDefinitionProps, aws_cdk_lib_aws_greengrass_CfnLoggerDefinition, aws_cdk_lib_aws_greengrass_CfnLoggerDefinition_LoggerProperty, aws_cdk_lib_aws_greengrass_CfnLoggerDefinition_LoggerDefinitionVersionProperty, aws_cdk_lib_aws_greengrass_CfnLoggerDefinitionVersionProps, aws_cdk_lib_aws_greengrass_CfnLoggerDefinitionVersion, aws_cdk_lib_aws_greengrass_CfnLoggerDefinitionVersion_LoggerProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinitionProps, aws_cdk_lib_aws_greengrass_CfnResourceDefinition, aws_cdk_lib_aws_greengrass_CfnResourceDefinition_GroupOwnerSettingProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinition_LocalDeviceResourceDataProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinition_LocalVolumeResourceDataProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinition_ResourceDataContainerProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinition_ResourceDefinitionVersionProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinition_ResourceDownloadOwnerSettingProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinition_ResourceInstanceProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinition_S3MachineLearningModelResourceDataProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinition_SageMakerMachineLearningModelResourceDataProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinition_SecretsManagerSecretResourceDataProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersionProps, aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion, aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_GroupOwnerSettingProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_LocalDeviceResourceDataProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_LocalVolumeResourceDataProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_ResourceDataContainerProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_ResourceDownloadOwnerSettingProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_ResourceInstanceProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_S3MachineLearningModelResourceDataProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_SageMakerMachineLearningModelResourceDataProperty, aws_cdk_lib_aws_greengrass_CfnResourceDefinitionVersion_SecretsManagerSecretResourceDataProperty, aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinitionProps, aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinition, aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinition_SubscriptionProperty, aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinition_SubscriptionDefinitionVersionProperty, aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinitionVersionProps, aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinitionVersion, aws_cdk_lib_aws_greengrass_CfnSubscriptionDefinitionVersion_SubscriptionProperty, aws_cdk_lib_aws_greengrassv2_CfnComponentVersionProps, aws_cdk_lib_aws_greengrassv2_CfnComponentVersion, aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_ComponentDependencyRequirementProperty, aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_ComponentPlatformProperty, aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaContainerParamsProperty, aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaDeviceMountProperty, aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaEventSourceProperty, aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaExecutionParametersProperty, aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaFunctionRecipeSourceProperty, aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaLinuxProcessParamsProperty, aws_cdk_lib_aws_greengrassv2_CfnComponentVersion_LambdaVolumeMountProperty, aws_cdk_lib_aws_greengrassv2_CfnDeploymentProps, aws_cdk_lib_aws_greengrassv2_CfnDeployment, aws_cdk_lib_aws_greengrassv2_CfnDeployment_ComponentConfigurationUpdateProperty, aws_cdk_lib_aws_greengrassv2_CfnDeployment_ComponentDeploymentSpecificationProperty, aws_cdk_lib_aws_greengrassv2_CfnDeployment_ComponentRunWithProperty, aws_cdk_lib_aws_greengrassv2_CfnDeployment_DeploymentComponentUpdatePolicyProperty, aws_cdk_lib_aws_greengrassv2_CfnDeployment_DeploymentConfigurationValidationPolicyProperty, aws_cdk_lib_aws_greengrassv2_CfnDeployment_DeploymentIoTJobConfigurationProperty, aws_cdk_lib_aws_greengrassv2_CfnDeployment_DeploymentPoliciesProperty, aws_cdk_lib_aws_greengrassv2_CfnDeployment_IoTJobAbortConfigProperty, aws_cdk_lib_aws_greengrassv2_CfnDeployment_IoTJobAbortCriteriaProperty, aws_cdk_lib_aws_greengrassv2_CfnDeployment_IoTJobExecutionsRolloutConfigProperty, aws_cdk_lib_aws_greengrassv2_CfnDeployment_IoTJobExponentialRolloutRateProperty, aws_cdk_lib_aws_greengrassv2_CfnDeployment_IoTJobTimeoutConfigProperty, aws_cdk_lib_aws_greengrassv2_CfnDeployment_SystemResourceLimitsProperty, aws_cdk_lib_aws_groundstation_CfnConfigProps, aws_cdk_lib_aws_groundstation_CfnConfig, aws_cdk_lib_aws_groundstation_CfnConfig_AntennaDownlinkConfigProperty, aws_cdk_lib_aws_groundstation_CfnConfig_AntennaDownlinkDemodDecodeConfigProperty, aws_cdk_lib_aws_groundstation_CfnConfig_AntennaUplinkConfigProperty, aws_cdk_lib_aws_groundstation_CfnConfig_ConfigDataProperty, aws_cdk_lib_aws_groundstation_CfnConfig_DataflowEndpointConfigProperty, aws_cdk_lib_aws_groundstation_CfnConfig_DecodeConfigProperty, aws_cdk_lib_aws_groundstation_CfnConfig_DemodulationConfigProperty, aws_cdk_lib_aws_groundstation_CfnConfig_EirpProperty, aws_cdk_lib_aws_groundstation_CfnConfig_FrequencyProperty, aws_cdk_lib_aws_groundstation_CfnConfig_FrequencyBandwidthProperty, aws_cdk_lib_aws_groundstation_CfnConfig_S3RecordingConfigProperty, aws_cdk_lib_aws_groundstation_CfnConfig_SpectrumConfigProperty, aws_cdk_lib_aws_groundstation_CfnConfig_TrackingConfigProperty, aws_cdk_lib_aws_groundstation_CfnConfig_UplinkEchoConfigProperty, aws_cdk_lib_aws_groundstation_CfnConfig_UplinkSpectrumConfigProperty, aws_cdk_lib_aws_groundstation_CfnDataflowEndpointGroupProps, aws_cdk_lib_aws_groundstation_CfnDataflowEndpointGroup, aws_cdk_lib_aws_groundstation_CfnDataflowEndpointGroup_DataflowEndpointProperty, aws_cdk_lib_aws_groundstation_CfnDataflowEndpointGroup_EndpointDetailsProperty, aws_cdk_lib_aws_groundstation_CfnDataflowEndpointGroup_SecurityDetailsProperty, aws_cdk_lib_aws_groundstation_CfnDataflowEndpointGroup_SocketAddressProperty, aws_cdk_lib_aws_groundstation_CfnMissionProfileProps, aws_cdk_lib_aws_groundstation_CfnMissionProfile, aws_cdk_lib_aws_groundstation_CfnMissionProfile_DataflowEdgeProperty, aws_cdk_lib_aws_guardduty_CfnDetectorProps, aws_cdk_lib_aws_guardduty_CfnDetector, aws_cdk_lib_aws_guardduty_CfnDetector_CFNDataSourceConfigurationsProperty, aws_cdk_lib_aws_guardduty_CfnDetector_CFNKubernetesAuditLogsConfigurationProperty, aws_cdk_lib_aws_guardduty_CfnDetector_CFNKubernetesConfigurationProperty, aws_cdk_lib_aws_guardduty_CfnDetector_CFNMalwareProtectionConfigurationProperty, aws_cdk_lib_aws_guardduty_CfnDetector_CFNS3LogsConfigurationProperty, aws_cdk_lib_aws_guardduty_CfnDetector_CFNScanEc2InstanceWithFindingsConfigurationProperty, aws_cdk_lib_aws_guardduty_CfnDetector_FeatureAdditionalConfigurationProperty, aws_cdk_lib_aws_guardduty_CfnDetector_FeatureConfigurationsProperty, aws_cdk_lib_aws_guardduty_CfnFilterProps, aws_cdk_lib_aws_guardduty_CfnFilter, aws_cdk_lib_aws_guardduty_CfnFilter_ConditionProperty, aws_cdk_lib_aws_guardduty_CfnFilter_FindingCriteriaProperty, aws_cdk_lib_aws_guardduty_CfnIPSetProps, aws_cdk_lib_aws_guardduty_CfnIPSet, aws_cdk_lib_aws_guardduty_CfnMasterProps, aws_cdk_lib_aws_guardduty_CfnMaster, aws_cdk_lib_aws_guardduty_CfnMemberProps, aws_cdk_lib_aws_guardduty_CfnMember, aws_cdk_lib_aws_guardduty_CfnThreatIntelSetProps, aws_cdk_lib_aws_guardduty_CfnThreatIntelSet, aws_cdk_lib_aws_healthlake_CfnFHIRDatastoreProps, aws_cdk_lib_aws_healthlake_CfnFHIRDatastore, aws_cdk_lib_aws_healthlake_CfnFHIRDatastore_CreatedAtProperty, aws_cdk_lib_aws_healthlake_CfnFHIRDatastore_KmsEncryptionConfigProperty, aws_cdk_lib_aws_healthlake_CfnFHIRDatastore_PreloadDataConfigProperty, aws_cdk_lib_aws_healthlake_CfnFHIRDatastore_SseConfigurationProperty, aws_cdk_lib_aws_iam_PolicyDocumentProps, aws_cdk_lib_aws_iam_PolicyDocument, aws_cdk_lib_aws_iam_PolicyStatement, aws_cdk_lib_aws_iam_Effect, aws_cdk_lib_aws_iam_PolicyStatementProps, aws_cdk_lib_aws_iam_IManagedPolicy, aws_cdk_lib_aws_iam_ManagedPolicyProps, aws_cdk_lib_aws_iam_ManagedPolicy, aws_cdk_lib_aws_iam_RoleProps, aws_cdk_lib_aws_iam_FromRoleArnOptions, aws_cdk_lib_aws_iam_CustomizeRolesOptions, aws_cdk_lib_aws_iam_FromRoleNameOptions, aws_cdk_lib_aws_iam_Role, aws_cdk_lib_aws_iam_IRole, aws_cdk_lib_aws_iam_WithoutPolicyUpdatesOptions, aws_cdk_lib_aws_iam_IPolicy, aws_cdk_lib_aws_iam_PolicyProps, aws_cdk_lib_aws_iam_Policy, aws_cdk_lib_aws_iam_IUser, aws_cdk_lib_aws_iam_UserProps, aws_cdk_lib_aws_iam_UserAttributes, aws_cdk_lib_aws_iam_User, aws_cdk_lib_aws_iam_IGroup, aws_cdk_lib_aws_iam_GroupProps, aws_cdk_lib_aws_iam_Group, aws_cdk_lib_aws_iam_LazyRoleProps, aws_cdk_lib_aws_iam_LazyRole, aws_cdk_lib_aws_iam_IGrantable, aws_cdk_lib_aws_iam_IPrincipal, aws_cdk_lib_aws_iam_IComparablePrincipal, aws_cdk_lib_aws_iam_ComparablePrincipal, aws_cdk_lib_aws_iam_IAssumeRolePrincipal, aws_cdk_lib_aws_iam_AddToPrincipalPolicyResult, aws_cdk_lib_aws_iam_PrincipalBase, aws_cdk_lib_aws_iam_PrincipalWithConditions, aws_cdk_lib_aws_iam_SessionTagsPrincipal, aws_cdk_lib_aws_iam_PrincipalPolicyFragment, aws_cdk_lib_aws_iam_ArnPrincipal, aws_cdk_lib_aws_iam_AccountPrincipal, aws_cdk_lib_aws_iam_ServicePrincipalOpts, aws_cdk_lib_aws_iam_ServicePrincipal, aws_cdk_lib_aws_iam_OrganizationPrincipal, aws_cdk_lib_aws_iam_CanonicalUserPrincipal, aws_cdk_lib_aws_iam_FederatedPrincipal, aws_cdk_lib_aws_iam_WebIdentityPrincipal, aws_cdk_lib_aws_iam_OpenIdConnectPrincipal, aws_cdk_lib_aws_iam_SamlPrincipal, aws_cdk_lib_aws_iam_SamlConsolePrincipal, aws_cdk_lib_aws_iam_AccountRootPrincipal, aws_cdk_lib_aws_iam_AnyPrincipal, aws_cdk_lib_aws_iam_StarPrincipal, aws_cdk_lib_aws_iam_CompositePrincipal, aws_cdk_lib_aws_iam_IIdentity, aws_cdk_lib_aws_iam_CommonGrantOptions, aws_cdk_lib_aws_iam_GrantWithResourceOptions, aws_cdk_lib_aws_iam_GrantOnPrincipalOptions, aws_cdk_lib_aws_iam_GrantOnPrincipalAndResourceOptions, aws_cdk_lib_aws_iam_Grant, aws_cdk_lib_aws_iam_IResourceWithPolicy, aws_cdk_lib_aws_iam_AddToResourcePolicyResult, aws_cdk_lib_aws_iam_CompositeDependable, aws_cdk_lib_aws_iam_UnknownPrincipalProps, aws_cdk_lib_aws_iam_UnknownPrincipal, aws_cdk_lib_aws_iam_IOpenIdConnectProvider, aws_cdk_lib_aws_iam_OpenIdConnectProviderProps, aws_cdk_lib_aws_iam_OpenIdConnectProvider, aws_cdk_lib_aws_iam_PermissionsBoundary, aws_cdk_lib_aws_iam_ISamlProvider, aws_cdk_lib_aws_iam_SamlProviderProps, aws_cdk_lib_aws_iam_SamlMetadataDocument, aws_cdk_lib_aws_iam_SamlProvider, aws_cdk_lib_aws_iam_AccessKeyStatus, aws_cdk_lib_aws_iam_IAccessKey, aws_cdk_lib_aws_iam_AccessKeyProps, aws_cdk_lib_aws_iam_AccessKey, aws_cdk_lib_aws_iam_CfnAccessKeyProps, aws_cdk_lib_aws_iam_CfnAccessKey, aws_cdk_lib_aws_iam_CfnGroupProps, aws_cdk_lib_aws_iam_CfnGroup, aws_cdk_lib_aws_iam_CfnGroup_PolicyProperty, aws_cdk_lib_aws_iam_CfnInstanceProfileProps, aws_cdk_lib_aws_iam_CfnInstanceProfile, aws_cdk_lib_aws_iam_CfnManagedPolicyProps, aws_cdk_lib_aws_iam_CfnManagedPolicy, aws_cdk_lib_aws_iam_CfnOIDCProviderProps, aws_cdk_lib_aws_iam_CfnOIDCProvider, aws_cdk_lib_aws_iam_CfnPolicyProps, aws_cdk_lib_aws_iam_CfnPolicy, aws_cdk_lib_aws_iam_CfnRoleProps, aws_cdk_lib_aws_iam_CfnRole, aws_cdk_lib_aws_iam_CfnRole_PolicyProperty, aws_cdk_lib_aws_iam_CfnSAMLProviderProps, aws_cdk_lib_aws_iam_CfnSAMLProvider, aws_cdk_lib_aws_iam_CfnServerCertificateProps, aws_cdk_lib_aws_iam_CfnServerCertificate, aws_cdk_lib_aws_iam_CfnServiceLinkedRoleProps, aws_cdk_lib_aws_iam_CfnServiceLinkedRole, aws_cdk_lib_aws_iam_CfnUserProps, aws_cdk_lib_aws_iam_CfnUser, aws_cdk_lib_aws_iam_CfnUser_LoginProfileProperty, aws_cdk_lib_aws_iam_CfnUser_PolicyProperty, aws_cdk_lib_aws_iam_CfnUserToGroupAdditionProps, aws_cdk_lib_aws_iam_CfnUserToGroupAddition, aws_cdk_lib_aws_iam_CfnVirtualMFADeviceProps, aws_cdk_lib_aws_iam_CfnVirtualMFADevice, aws_cdk_lib_aws_identitystore_CfnGroupProps, aws_cdk_lib_aws_identitystore_CfnGroup, aws_cdk_lib_aws_identitystore_CfnGroupMembershipProps, aws_cdk_lib_aws_identitystore_CfnGroupMembership, aws_cdk_lib_aws_identitystore_CfnGroupMembership_MemberIdProperty, aws_cdk_lib_aws_imagebuilder_CfnComponentProps, aws_cdk_lib_aws_imagebuilder_CfnComponent, aws_cdk_lib_aws_imagebuilder_CfnContainerRecipeProps, aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe, aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe_ComponentConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe_ComponentParameterProperty, aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe_EbsInstanceBlockDeviceSpecificationProperty, aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe_InstanceBlockDeviceMappingProperty, aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe_InstanceConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnContainerRecipe_TargetContainerRepositoryProperty, aws_cdk_lib_aws_imagebuilder_CfnDistributionConfigurationProps, aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration, aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_AmiDistributionConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_ContainerDistributionConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_DistributionProperty, aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_FastLaunchConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_FastLaunchLaunchTemplateSpecificationProperty, aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_FastLaunchSnapshotConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_LaunchPermissionConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_LaunchTemplateConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnDistributionConfiguration_TargetContainerRepositoryProperty, aws_cdk_lib_aws_imagebuilder_CfnImageProps, aws_cdk_lib_aws_imagebuilder_CfnImage, aws_cdk_lib_aws_imagebuilder_CfnImage_EcrConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnImage_ImageScanningConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnImage_ImageTestsConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnImagePipelineProps, aws_cdk_lib_aws_imagebuilder_CfnImagePipeline, aws_cdk_lib_aws_imagebuilder_CfnImagePipeline_EcrConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnImagePipeline_ImageScanningConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnImagePipeline_ImageTestsConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnImagePipeline_ScheduleProperty, aws_cdk_lib_aws_imagebuilder_CfnImageRecipeProps, aws_cdk_lib_aws_imagebuilder_CfnImageRecipe, aws_cdk_lib_aws_imagebuilder_CfnImageRecipe_AdditionalInstanceConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnImageRecipe_ComponentConfigurationProperty, aws_cdk_lib_aws_imagebuilder_CfnImageRecipe_ComponentParameterProperty, aws_cdk_lib_aws_imagebuilder_CfnImageRecipe_EbsInstanceBlockDeviceSpecificationProperty, aws_cdk_lib_aws_imagebuilder_CfnImageRecipe_InstanceBlockDeviceMappingProperty, aws_cdk_lib_aws_imagebuilder_CfnImageRecipe_SystemsManagerAgentProperty, aws_cdk_lib_aws_imagebuilder_CfnInfrastructureConfigurationProps, aws_cdk_lib_aws_imagebuilder_CfnInfrastructureConfiguration, aws_cdk_lib_aws_imagebuilder_CfnInfrastructureConfiguration_InstanceMetadataOptionsProperty, aws_cdk_lib_aws_imagebuilder_CfnInfrastructureConfiguration_LoggingProperty, aws_cdk_lib_aws_imagebuilder_CfnInfrastructureConfiguration_S3LogsProperty, aws_cdk_lib_aws_inspector_CfnAssessmentTargetProps, aws_cdk_lib_aws_inspector_CfnAssessmentTarget, aws_cdk_lib_aws_inspector_CfnAssessmentTemplateProps, aws_cdk_lib_aws_inspector_CfnAssessmentTemplate, aws_cdk_lib_aws_inspector_CfnResourceGroupProps, aws_cdk_lib_aws_inspector_CfnResourceGroup, aws_cdk_lib_aws_inspectorv2_CfnFilterProps, aws_cdk_lib_aws_inspectorv2_CfnFilter, aws_cdk_lib_aws_inspectorv2_CfnFilter_DateFilterProperty, aws_cdk_lib_aws_inspectorv2_CfnFilter_FilterCriteriaProperty, aws_cdk_lib_aws_inspectorv2_CfnFilter_MapFilterProperty, aws_cdk_lib_aws_inspectorv2_CfnFilter_NumberFilterProperty, aws_cdk_lib_aws_inspectorv2_CfnFilter_PackageFilterProperty, aws_cdk_lib_aws_inspectorv2_CfnFilter_PortRangeFilterProperty, aws_cdk_lib_aws_inspectorv2_CfnFilter_StringFilterProperty, aws_cdk_lib_aws_internetmonitor_CfnMonitorProps, aws_cdk_lib_aws_internetmonitor_CfnMonitor, aws_cdk_lib_aws_iot_CfnAccountAuditConfigurationProps, aws_cdk_lib_aws_iot_CfnAccountAuditConfiguration, aws_cdk_lib_aws_iot_CfnAccountAuditConfiguration_AuditCheckConfigurationProperty, aws_cdk_lib_aws_iot_CfnAccountAuditConfiguration_AuditCheckConfigurationsProperty, aws_cdk_lib_aws_iot_CfnAccountAuditConfiguration_AuditNotificationTargetProperty, aws_cdk_lib_aws_iot_CfnAccountAuditConfiguration_AuditNotificationTargetConfigurationsProperty, aws_cdk_lib_aws_iot_CfnAuthorizerProps, aws_cdk_lib_aws_iot_CfnAuthorizer, aws_cdk_lib_aws_iot_CfnCACertificateProps, aws_cdk_lib_aws_iot_CfnCACertificate, aws_cdk_lib_aws_iot_CfnCACertificate_RegistrationConfigProperty, aws_cdk_lib_aws_iot_CfnCertificateProps, aws_cdk_lib_aws_iot_CfnCertificate, aws_cdk_lib_aws_iot_CfnCustomMetricProps, aws_cdk_lib_aws_iot_CfnCustomMetric, aws_cdk_lib_aws_iot_CfnDimensionProps, aws_cdk_lib_aws_iot_CfnDimension, aws_cdk_lib_aws_iot_CfnDomainConfigurationProps, aws_cdk_lib_aws_iot_CfnDomainConfiguration, aws_cdk_lib_aws_iot_CfnDomainConfiguration_AuthorizerConfigProperty, aws_cdk_lib_aws_iot_CfnDomainConfiguration_ServerCertificateSummaryProperty, aws_cdk_lib_aws_iot_CfnFleetMetricProps, aws_cdk_lib_aws_iot_CfnFleetMetric, aws_cdk_lib_aws_iot_CfnFleetMetric_AggregationTypeProperty, aws_cdk_lib_aws_iot_CfnJobTemplateProps, aws_cdk_lib_aws_iot_CfnJobTemplate, aws_cdk_lib_aws_iot_CfnJobTemplate_AbortConfigProperty, aws_cdk_lib_aws_iot_CfnJobTemplate_AbortCriteriaProperty, aws_cdk_lib_aws_iot_CfnJobTemplate_ExponentialRolloutRateProperty, aws_cdk_lib_aws_iot_CfnJobTemplate_JobExecutionsRetryConfigProperty, aws_cdk_lib_aws_iot_CfnJobTemplate_JobExecutionsRolloutConfigProperty, aws_cdk_lib_aws_iot_CfnJobTemplate_MaintenanceWindowProperty, aws_cdk_lib_aws_iot_CfnJobTemplate_PresignedUrlConfigProperty, aws_cdk_lib_aws_iot_CfnJobTemplate_RateIncreaseCriteriaProperty, aws_cdk_lib_aws_iot_CfnJobTemplate_RetryCriteriaProperty, aws_cdk_lib_aws_iot_CfnJobTemplate_TimeoutConfigProperty, aws_cdk_lib_aws_iot_CfnLoggingProps, aws_cdk_lib_aws_iot_CfnLogging, aws_cdk_lib_aws_iot_CfnMitigationActionProps, aws_cdk_lib_aws_iot_CfnMitigationAction, aws_cdk_lib_aws_iot_CfnMitigationAction_ActionParamsProperty, aws_cdk_lib_aws_iot_CfnMitigationAction_AddThingsToThingGroupParamsProperty, aws_cdk_lib_aws_iot_CfnMitigationAction_EnableIoTLoggingParamsProperty, aws_cdk_lib_aws_iot_CfnMitigationAction_PublishFindingToSnsParamsProperty, aws_cdk_lib_aws_iot_CfnMitigationAction_ReplaceDefaultPolicyVersionParamsProperty, aws_cdk_lib_aws_iot_CfnMitigationAction_UpdateCACertificateParamsProperty, aws_cdk_lib_aws_iot_CfnMitigationAction_UpdateDeviceCertificateParamsProperty, aws_cdk_lib_aws_iot_CfnPolicyProps, aws_cdk_lib_aws_iot_CfnPolicy, aws_cdk_lib_aws_iot_CfnPolicyPrincipalAttachmentProps, aws_cdk_lib_aws_iot_CfnPolicyPrincipalAttachment, aws_cdk_lib_aws_iot_CfnProvisioningTemplateProps, aws_cdk_lib_aws_iot_CfnProvisioningTemplate, aws_cdk_lib_aws_iot_CfnProvisioningTemplate_ProvisioningHookProperty, aws_cdk_lib_aws_iot_CfnResourceSpecificLoggingProps, aws_cdk_lib_aws_iot_CfnResourceSpecificLogging, aws_cdk_lib_aws_iot_CfnRoleAliasProps, aws_cdk_lib_aws_iot_CfnRoleAlias, aws_cdk_lib_aws_iot_CfnScheduledAuditProps, aws_cdk_lib_aws_iot_CfnScheduledAudit, aws_cdk_lib_aws_iot_CfnSecurityProfileProps, aws_cdk_lib_aws_iot_CfnSecurityProfile, aws_cdk_lib_aws_iot_CfnSecurityProfile_AlertTargetProperty, aws_cdk_lib_aws_iot_CfnSecurityProfile_BehaviorProperty, aws_cdk_lib_aws_iot_CfnSecurityProfile_BehaviorCriteriaProperty, aws_cdk_lib_aws_iot_CfnSecurityProfile_MachineLearningDetectionConfigProperty, aws_cdk_lib_aws_iot_CfnSecurityProfile_MetricDimensionProperty, aws_cdk_lib_aws_iot_CfnSecurityProfile_MetricToRetainProperty, aws_cdk_lib_aws_iot_CfnSecurityProfile_MetricValueProperty, aws_cdk_lib_aws_iot_CfnSecurityProfile_StatisticalThresholdProperty, aws_cdk_lib_aws_iot_CfnThingProps, aws_cdk_lib_aws_iot_CfnThing, aws_cdk_lib_aws_iot_CfnThing_AttributePayloadProperty, aws_cdk_lib_aws_iot_CfnThingPrincipalAttachmentProps, aws_cdk_lib_aws_iot_CfnThingPrincipalAttachment, aws_cdk_lib_aws_iot_CfnTopicRuleProps, aws_cdk_lib_aws_iot_CfnTopicRule, aws_cdk_lib_aws_iot_CfnTopicRule_ActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_AssetPropertyTimestampProperty, aws_cdk_lib_aws_iot_CfnTopicRule_AssetPropertyValueProperty, aws_cdk_lib_aws_iot_CfnTopicRule_AssetPropertyVariantProperty, aws_cdk_lib_aws_iot_CfnTopicRule_CloudwatchAlarmActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_CloudwatchLogsActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_CloudwatchMetricActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_DynamoDBActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_DynamoDBv2ActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_ElasticsearchActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_FirehoseActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_HttpActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_HttpActionHeaderProperty, aws_cdk_lib_aws_iot_CfnTopicRule_HttpAuthorizationProperty, aws_cdk_lib_aws_iot_CfnTopicRule_IotAnalyticsActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_IotEventsActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_IotSiteWiseActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_KafkaActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_KinesisActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_LambdaActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_LocationActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_OpenSearchActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_PutAssetPropertyValueEntryProperty, aws_cdk_lib_aws_iot_CfnTopicRule_PutItemInputProperty, aws_cdk_lib_aws_iot_CfnTopicRule_RepublishActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_RepublishActionHeadersProperty, aws_cdk_lib_aws_iot_CfnTopicRule_S3ActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_SigV4AuthorizationProperty, aws_cdk_lib_aws_iot_CfnTopicRule_SnsActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_SqsActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_StepFunctionsActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_TimestampProperty, aws_cdk_lib_aws_iot_CfnTopicRule_TimestreamActionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_TimestreamDimensionProperty, aws_cdk_lib_aws_iot_CfnTopicRule_TimestreamTimestampProperty, aws_cdk_lib_aws_iot_CfnTopicRule_TopicRulePayloadProperty, aws_cdk_lib_aws_iot_CfnTopicRule_UserPropertyProperty, aws_cdk_lib_aws_iot_CfnTopicRuleDestinationProps, aws_cdk_lib_aws_iot_CfnTopicRuleDestination, aws_cdk_lib_aws_iot_CfnTopicRuleDestination_HttpUrlDestinationSummaryProperty, aws_cdk_lib_aws_iot_CfnTopicRuleDestination_VpcDestinationPropertiesProperty, aws_cdk_lib_aws_iot1click_CfnDeviceProps, aws_cdk_lib_aws_iot1click_CfnDevice, aws_cdk_lib_aws_iot1click_CfnPlacementProps, aws_cdk_lib_aws_iot1click_CfnPlacement, aws_cdk_lib_aws_iot1click_CfnProjectProps, aws_cdk_lib_aws_iot1click_CfnProject, aws_cdk_lib_aws_iot1click_CfnProject_DeviceTemplateProperty, aws_cdk_lib_aws_iot1click_CfnProject_PlacementTemplateProperty, aws_cdk_lib_aws_iotanalytics_CfnChannelProps, aws_cdk_lib_aws_iotanalytics_CfnChannel, aws_cdk_lib_aws_iotanalytics_CfnChannel_ChannelStorageProperty, aws_cdk_lib_aws_iotanalytics_CfnChannel_CustomerManagedS3Property, aws_cdk_lib_aws_iotanalytics_CfnChannel_RetentionPeriodProperty, aws_cdk_lib_aws_iotanalytics_CfnDatasetProps, aws_cdk_lib_aws_iotanalytics_CfnDataset, aws_cdk_lib_aws_iotanalytics_CfnDataset_ActionProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_ContainerActionProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_DatasetContentDeliveryRuleProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_DatasetContentDeliveryRuleDestinationProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_DatasetContentVersionValueProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_DeltaTimeProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_DeltaTimeSessionWindowConfigurationProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_FilterProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_GlueConfigurationProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_IotEventsDestinationConfigurationProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_LateDataRuleProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_LateDataRuleConfigurationProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_OutputFileUriValueProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_QueryActionProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_ResourceConfigurationProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_RetentionPeriodProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_S3DestinationConfigurationProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_ScheduleProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_TriggerProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_TriggeringDatasetProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_VariableProperty, aws_cdk_lib_aws_iotanalytics_CfnDataset_VersioningConfigurationProperty, aws_cdk_lib_aws_iotanalytics_CfnDatastoreProps, aws_cdk_lib_aws_iotanalytics_CfnDatastore, aws_cdk_lib_aws_iotanalytics_CfnDatastore_ColumnProperty, aws_cdk_lib_aws_iotanalytics_CfnDatastore_CustomerManagedS3Property, aws_cdk_lib_aws_iotanalytics_CfnDatastore_CustomerManagedS3StorageProperty, aws_cdk_lib_aws_iotanalytics_CfnDatastore_DatastorePartitionProperty, aws_cdk_lib_aws_iotanalytics_CfnDatastore_DatastorePartitionsProperty, aws_cdk_lib_aws_iotanalytics_CfnDatastore_DatastoreStorageProperty, aws_cdk_lib_aws_iotanalytics_CfnDatastore_FileFormatConfigurationProperty, aws_cdk_lib_aws_iotanalytics_CfnDatastore_IotSiteWiseMultiLayerStorageProperty, aws_cdk_lib_aws_iotanalytics_CfnDatastore_ParquetConfigurationProperty, aws_cdk_lib_aws_iotanalytics_CfnDatastore_PartitionProperty, aws_cdk_lib_aws_iotanalytics_CfnDatastore_RetentionPeriodProperty, aws_cdk_lib_aws_iotanalytics_CfnDatastore_SchemaDefinitionProperty, aws_cdk_lib_aws_iotanalytics_CfnDatastore_TimestampPartitionProperty, aws_cdk_lib_aws_iotanalytics_CfnPipelineProps, aws_cdk_lib_aws_iotanalytics_CfnPipeline, aws_cdk_lib_aws_iotanalytics_CfnPipeline_ActivityProperty, aws_cdk_lib_aws_iotanalytics_CfnPipeline_AddAttributesProperty, aws_cdk_lib_aws_iotanalytics_CfnPipeline_ChannelProperty, aws_cdk_lib_aws_iotanalytics_CfnPipeline_DatastoreProperty, aws_cdk_lib_aws_iotanalytics_CfnPipeline_DeviceRegistryEnrichProperty, aws_cdk_lib_aws_iotanalytics_CfnPipeline_DeviceShadowEnrichProperty, aws_cdk_lib_aws_iotanalytics_CfnPipeline_FilterProperty, aws_cdk_lib_aws_iotanalytics_CfnPipeline_LambdaProperty, aws_cdk_lib_aws_iotanalytics_CfnPipeline_MathProperty, aws_cdk_lib_aws_iotanalytics_CfnPipeline_RemoveAttributesProperty, aws_cdk_lib_aws_iotanalytics_CfnPipeline_SelectAttributesProperty, aws_cdk_lib_aws_iotcoredeviceadvisor_CfnSuiteDefinitionProps, aws_cdk_lib_aws_iotcoredeviceadvisor_CfnSuiteDefinition, aws_cdk_lib_aws_iotcoredeviceadvisor_CfnSuiteDefinition_DeviceUnderTestProperty, aws_cdk_lib_aws_iotcoredeviceadvisor_CfnSuiteDefinition_SuiteDefinitionConfigurationProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModelProps, aws_cdk_lib_aws_iotevents_CfnAlarmModel, aws_cdk_lib_aws_iotevents_CfnAlarmModel_AcknowledgeFlowProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_AlarmActionProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_AlarmCapabilitiesProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_AlarmEventActionsProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_AlarmRuleProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_AssetPropertyTimestampProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_AssetPropertyValueProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_AssetPropertyVariantProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_DynamoDBProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_DynamoDBv2Property, aws_cdk_lib_aws_iotevents_CfnAlarmModel_FirehoseProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_InitializationConfigurationProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_IotEventsProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_IotSiteWiseProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_IotTopicPublishProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_LambdaProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_PayloadProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_SimpleRuleProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_SnsProperty, aws_cdk_lib_aws_iotevents_CfnAlarmModel_SqsProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModelProps, aws_cdk_lib_aws_iotevents_CfnDetectorModel, aws_cdk_lib_aws_iotevents_CfnDetectorModel_ActionProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_AssetPropertyTimestampProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_AssetPropertyValueProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_AssetPropertyVariantProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_ClearTimerProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_DetectorModelDefinitionProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_DynamoDBProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_DynamoDBv2Property, aws_cdk_lib_aws_iotevents_CfnDetectorModel_EventProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_FirehoseProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_IotEventsProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_IotSiteWiseProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_IotTopicPublishProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_LambdaProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_OnEnterProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_OnExitProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_OnInputProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_PayloadProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_ResetTimerProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_SetTimerProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_SetVariableProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_SnsProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_SqsProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_StateProperty, aws_cdk_lib_aws_iotevents_CfnDetectorModel_TransitionEventProperty, aws_cdk_lib_aws_iotevents_CfnInputProps, aws_cdk_lib_aws_iotevents_CfnInput, aws_cdk_lib_aws_iotevents_CfnInput_AttributeProperty, aws_cdk_lib_aws_iotevents_CfnInput_InputDefinitionProperty, aws_cdk_lib_aws_iotfleethub_CfnApplicationProps, aws_cdk_lib_aws_iotfleethub_CfnApplication, aws_cdk_lib_aws_iotfleetwise_CfnCampaignProps, aws_cdk_lib_aws_iotfleetwise_CfnCampaign, aws_cdk_lib_aws_iotfleetwise_CfnCampaign_CollectionSchemeProperty, aws_cdk_lib_aws_iotfleetwise_CfnCampaign_ConditionBasedCollectionSchemeProperty, aws_cdk_lib_aws_iotfleetwise_CfnCampaign_SignalInformationProperty, aws_cdk_lib_aws_iotfleetwise_CfnCampaign_TimeBasedCollectionSchemeProperty, aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifestProps, aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest, aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest_CanInterfaceProperty, aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest_CanSignalProperty, aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest_NetworkInterfacesItemsProperty, aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest_ObdInterfaceProperty, aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest_ObdSignalProperty, aws_cdk_lib_aws_iotfleetwise_CfnDecoderManifest_SignalDecodersItemsProperty, aws_cdk_lib_aws_iotfleetwise_CfnFleetProps, aws_cdk_lib_aws_iotfleetwise_CfnFleet, aws_cdk_lib_aws_iotfleetwise_CfnModelManifestProps, aws_cdk_lib_aws_iotfleetwise_CfnModelManifest, aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalogProps, aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog, aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog_ActuatorProperty, aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog_AttributeProperty, aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog_BranchProperty, aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog_NodeProperty, aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog_NodeCountsProperty, aws_cdk_lib_aws_iotfleetwise_CfnSignalCatalog_SensorProperty, aws_cdk_lib_aws_iotfleetwise_CfnVehicleProps, aws_cdk_lib_aws_iotfleetwise_CfnVehicle, aws_cdk_lib_aws_iotsitewise_CfnAccessPolicyProps, aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy, aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_AccessPolicyIdentityProperty, aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_AccessPolicyResourceProperty, aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_IamRoleProperty, aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_IamUserProperty, aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_PortalProperty, aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_ProjectProperty, aws_cdk_lib_aws_iotsitewise_CfnAccessPolicy_UserProperty, aws_cdk_lib_aws_iotsitewise_CfnAssetProps, aws_cdk_lib_aws_iotsitewise_CfnAsset, aws_cdk_lib_aws_iotsitewise_CfnAsset_AssetHierarchyProperty, aws_cdk_lib_aws_iotsitewise_CfnAsset_AssetPropertyProperty, aws_cdk_lib_aws_iotsitewise_CfnAssetModelProps, aws_cdk_lib_aws_iotsitewise_CfnAssetModel, aws_cdk_lib_aws_iotsitewise_CfnAssetModel_AssetModelCompositeModelProperty, aws_cdk_lib_aws_iotsitewise_CfnAssetModel_AssetModelHierarchyProperty, aws_cdk_lib_aws_iotsitewise_CfnAssetModel_AssetModelPropertyProperty, aws_cdk_lib_aws_iotsitewise_CfnAssetModel_AttributeProperty, aws_cdk_lib_aws_iotsitewise_CfnAssetModel_ExpressionVariableProperty, aws_cdk_lib_aws_iotsitewise_CfnAssetModel_MetricProperty, aws_cdk_lib_aws_iotsitewise_CfnAssetModel_MetricWindowProperty, aws_cdk_lib_aws_iotsitewise_CfnAssetModel_PropertyTypeProperty, aws_cdk_lib_aws_iotsitewise_CfnAssetModel_TransformProperty, aws_cdk_lib_aws_iotsitewise_CfnAssetModel_TumblingWindowProperty, aws_cdk_lib_aws_iotsitewise_CfnAssetModel_VariableValueProperty, aws_cdk_lib_aws_iotsitewise_CfnDashboardProps, aws_cdk_lib_aws_iotsitewise_CfnDashboard, aws_cdk_lib_aws_iotsitewise_CfnGatewayProps, aws_cdk_lib_aws_iotsitewise_CfnGateway, aws_cdk_lib_aws_iotsitewise_CfnGateway_GatewayCapabilitySummaryProperty, aws_cdk_lib_aws_iotsitewise_CfnGateway_GatewayPlatformProperty, aws_cdk_lib_aws_iotsitewise_CfnGateway_GreengrassProperty, aws_cdk_lib_aws_iotsitewise_CfnGateway_GreengrassV2Property, aws_cdk_lib_aws_iotsitewise_CfnPortalProps, aws_cdk_lib_aws_iotsitewise_CfnPortal, aws_cdk_lib_aws_iotsitewise_CfnPortal_AlarmsProperty, aws_cdk_lib_aws_iotsitewise_CfnProjectProps, aws_cdk_lib_aws_iotsitewise_CfnProject, aws_cdk_lib_aws_iotthingsgraph_CfnFlowTemplateProps, aws_cdk_lib_aws_iotthingsgraph_CfnFlowTemplate, aws_cdk_lib_aws_iotthingsgraph_CfnFlowTemplate_DefinitionDocumentProperty, aws_cdk_lib_aws_iottwinmaker_CfnComponentTypeProps, aws_cdk_lib_aws_iottwinmaker_CfnComponentType, aws_cdk_lib_aws_iottwinmaker_CfnComponentType_DataConnectorProperty, aws_cdk_lib_aws_iottwinmaker_CfnComponentType_DataTypeProperty, aws_cdk_lib_aws_iottwinmaker_CfnComponentType_DataValueProperty, aws_cdk_lib_aws_iottwinmaker_CfnComponentType_ErrorProperty, aws_cdk_lib_aws_iottwinmaker_CfnComponentType_FunctionProperty, aws_cdk_lib_aws_iottwinmaker_CfnComponentType_LambdaFunctionProperty, aws_cdk_lib_aws_iottwinmaker_CfnComponentType_PropertyDefinitionProperty, aws_cdk_lib_aws_iottwinmaker_CfnComponentType_PropertyGroupProperty, aws_cdk_lib_aws_iottwinmaker_CfnComponentType_RelationshipProperty, aws_cdk_lib_aws_iottwinmaker_CfnComponentType_RelationshipValueProperty, aws_cdk_lib_aws_iottwinmaker_CfnComponentType_StatusProperty, aws_cdk_lib_aws_iottwinmaker_CfnEntityProps, aws_cdk_lib_aws_iottwinmaker_CfnEntity, aws_cdk_lib_aws_iottwinmaker_CfnEntity_ComponentProperty, aws_cdk_lib_aws_iottwinmaker_CfnEntity_DataTypeProperty, aws_cdk_lib_aws_iottwinmaker_CfnEntity_DataValueProperty, aws_cdk_lib_aws_iottwinmaker_CfnEntity_DefinitionProperty, aws_cdk_lib_aws_iottwinmaker_CfnEntity_ErrorProperty, aws_cdk_lib_aws_iottwinmaker_CfnEntity_PropertyProperty, aws_cdk_lib_aws_iottwinmaker_CfnEntity_PropertyGroupProperty, aws_cdk_lib_aws_iottwinmaker_CfnEntity_RelationshipProperty, aws_cdk_lib_aws_iottwinmaker_CfnEntity_RelationshipValueProperty, aws_cdk_lib_aws_iottwinmaker_CfnEntity_StatusProperty, aws_cdk_lib_aws_iottwinmaker_CfnSceneProps, aws_cdk_lib_aws_iottwinmaker_CfnScene, aws_cdk_lib_aws_iottwinmaker_CfnSyncJobProps, aws_cdk_lib_aws_iottwinmaker_CfnSyncJob, aws_cdk_lib_aws_iottwinmaker_CfnWorkspaceProps, aws_cdk_lib_aws_iottwinmaker_CfnWorkspace, aws_cdk_lib_aws_iotwireless_CfnDestinationProps, aws_cdk_lib_aws_iotwireless_CfnDestination, aws_cdk_lib_aws_iotwireless_CfnDeviceProfileProps, aws_cdk_lib_aws_iotwireless_CfnDeviceProfile, aws_cdk_lib_aws_iotwireless_CfnDeviceProfile_LoRaWANDeviceProfileProperty, aws_cdk_lib_aws_iotwireless_CfnFuotaTaskProps, aws_cdk_lib_aws_iotwireless_CfnFuotaTask, aws_cdk_lib_aws_iotwireless_CfnFuotaTask_LoRaWANProperty, aws_cdk_lib_aws_iotwireless_CfnMulticastGroupProps, aws_cdk_lib_aws_iotwireless_CfnMulticastGroup, aws_cdk_lib_aws_iotwireless_CfnMulticastGroup_LoRaWANProperty, aws_cdk_lib_aws_iotwireless_CfnNetworkAnalyzerConfigurationProps, aws_cdk_lib_aws_iotwireless_CfnNetworkAnalyzerConfiguration, aws_cdk_lib_aws_iotwireless_CfnNetworkAnalyzerConfiguration_TraceContentProperty, aws_cdk_lib_aws_iotwireless_CfnPartnerAccountProps, aws_cdk_lib_aws_iotwireless_CfnPartnerAccount, aws_cdk_lib_aws_iotwireless_CfnPartnerAccount_SidewalkAccountInfoProperty, aws_cdk_lib_aws_iotwireless_CfnPartnerAccount_SidewalkAccountInfoWithFingerprintProperty, aws_cdk_lib_aws_iotwireless_CfnPartnerAccount_SidewalkUpdateAccountProperty, aws_cdk_lib_aws_iotwireless_CfnServiceProfileProps, aws_cdk_lib_aws_iotwireless_CfnServiceProfile, aws_cdk_lib_aws_iotwireless_CfnServiceProfile_LoRaWANServiceProfileProperty, aws_cdk_lib_aws_iotwireless_CfnTaskDefinitionProps, aws_cdk_lib_aws_iotwireless_CfnTaskDefinition, aws_cdk_lib_aws_iotwireless_CfnTaskDefinition_LoRaWANGatewayVersionProperty, aws_cdk_lib_aws_iotwireless_CfnTaskDefinition_LoRaWANUpdateGatewayTaskCreateProperty, aws_cdk_lib_aws_iotwireless_CfnTaskDefinition_LoRaWANUpdateGatewayTaskEntryProperty, aws_cdk_lib_aws_iotwireless_CfnTaskDefinition_UpdateWirelessGatewayTaskCreateProperty, aws_cdk_lib_aws_iotwireless_CfnWirelessDeviceProps, aws_cdk_lib_aws_iotwireless_CfnWirelessDevice, aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_AbpV10xProperty, aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_AbpV11Property, aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_LoRaWANDeviceProperty, aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_OtaaV10xProperty, aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_OtaaV11Property, aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_SessionKeysAbpV10xProperty, aws_cdk_lib_aws_iotwireless_CfnWirelessDevice_SessionKeysAbpV11Property, aws_cdk_lib_aws_iotwireless_CfnWirelessGatewayProps, aws_cdk_lib_aws_iotwireless_CfnWirelessGateway, aws_cdk_lib_aws_iotwireless_CfnWirelessGateway_LoRaWANGatewayProperty, aws_cdk_lib_aws_ivs_CfnChannelProps, aws_cdk_lib_aws_ivs_CfnChannel, aws_cdk_lib_aws_ivs_CfnPlaybackKeyPairProps, aws_cdk_lib_aws_ivs_CfnPlaybackKeyPair, aws_cdk_lib_aws_ivs_CfnRecordingConfigurationProps, aws_cdk_lib_aws_ivs_CfnRecordingConfiguration, aws_cdk_lib_aws_ivs_CfnRecordingConfiguration_DestinationConfigurationProperty, aws_cdk_lib_aws_ivs_CfnRecordingConfiguration_S3DestinationConfigurationProperty, aws_cdk_lib_aws_ivs_CfnRecordingConfiguration_ThumbnailConfigurationProperty, aws_cdk_lib_aws_ivs_CfnStreamKeyProps, aws_cdk_lib_aws_ivs_CfnStreamKey, aws_cdk_lib_aws_ivschat_CfnLoggingConfigurationProps, aws_cdk_lib_aws_ivschat_CfnLoggingConfiguration, aws_cdk_lib_aws_ivschat_CfnLoggingConfiguration_CloudWatchLogsDestinationConfigurationProperty, aws_cdk_lib_aws_ivschat_CfnLoggingConfiguration_DestinationConfigurationProperty, aws_cdk_lib_aws_ivschat_CfnLoggingConfiguration_FirehoseDestinationConfigurationProperty, aws_cdk_lib_aws_ivschat_CfnLoggingConfiguration_S3DestinationConfigurationProperty, aws_cdk_lib_aws_ivschat_CfnRoomProps, aws_cdk_lib_aws_ivschat_CfnRoom, aws_cdk_lib_aws_ivschat_CfnRoom_MessageReviewHandlerProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnectorProps, aws_cdk_lib_aws_kafkaconnect_CfnConnector, aws_cdk_lib_aws_kafkaconnect_CfnConnector_ApacheKafkaClusterProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_AutoScalingProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_CapacityProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_CloudWatchLogsLogDeliveryProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_CustomPluginProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_FirehoseLogDeliveryProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_KafkaClusterProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_KafkaClusterClientAuthenticationProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_KafkaClusterEncryptionInTransitProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_LogDeliveryProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_PluginProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_ProvisionedCapacityProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_S3LogDeliveryProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_ScaleInPolicyProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_ScaleOutPolicyProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_VpcProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_WorkerConfigurationProperty, aws_cdk_lib_aws_kafkaconnect_CfnConnector_WorkerLogDeliveryProperty, aws_cdk_lib_aws_kendra_CfnDataSourceProps, aws_cdk_lib_aws_kendra_CfnDataSource, aws_cdk_lib_aws_kendra_CfnDataSource_AccessControlListConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_AclConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ColumnConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceAttachmentConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceAttachmentToIndexFieldMappingProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceBlogConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceBlogToIndexFieldMappingProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ConfluencePageConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ConfluencePageToIndexFieldMappingProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceSpaceConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ConfluenceSpaceToIndexFieldMappingProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ConnectionConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_CustomDocumentEnrichmentConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_DataSourceConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_DataSourceToIndexFieldMappingProperty, aws_cdk_lib_aws_kendra_CfnDataSource_DataSourceVpcConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_DatabaseConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_DocumentAttributeConditionProperty, aws_cdk_lib_aws_kendra_CfnDataSource_DocumentAttributeTargetProperty, aws_cdk_lib_aws_kendra_CfnDataSource_DocumentAttributeValueProperty, aws_cdk_lib_aws_kendra_CfnDataSource_DocumentsMetadataConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_GoogleDriveConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_HookConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_InlineCustomDocumentEnrichmentConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_OneDriveConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_OneDriveUsersProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ProxyConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_S3DataSourceConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_S3PathProperty, aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceChatterFeedConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceCustomKnowledgeArticleTypeConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceKnowledgeArticleConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceStandardKnowledgeArticleTypeConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceStandardObjectAttachmentConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_SalesforceStandardObjectConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ServiceNowConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ServiceNowKnowledgeArticleConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_ServiceNowServiceCatalogConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_SharePointConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_SqlConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_WebCrawlerAuthenticationConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_WebCrawlerBasicAuthenticationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_WebCrawlerConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_WebCrawlerSeedUrlConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_WebCrawlerSiteMapsConfigurationProperty, aws_cdk_lib_aws_kendra_CfnDataSource_WebCrawlerUrlsProperty, aws_cdk_lib_aws_kendra_CfnDataSource_WorkDocsConfigurationProperty, aws_cdk_lib_aws_kendra_CfnFaqProps, aws_cdk_lib_aws_kendra_CfnFaq, aws_cdk_lib_aws_kendra_CfnFaq_S3PathProperty, aws_cdk_lib_aws_kendra_CfnIndexProps, aws_cdk_lib_aws_kendra_CfnIndex, aws_cdk_lib_aws_kendra_CfnIndex_CapacityUnitsConfigurationProperty, aws_cdk_lib_aws_kendra_CfnIndex_DocumentMetadataConfigurationProperty, aws_cdk_lib_aws_kendra_CfnIndex_JsonTokenTypeConfigurationProperty, aws_cdk_lib_aws_kendra_CfnIndex_JwtTokenTypeConfigurationProperty, aws_cdk_lib_aws_kendra_CfnIndex_RelevanceProperty, aws_cdk_lib_aws_kendra_CfnIndex_SearchProperty, aws_cdk_lib_aws_kendra_CfnIndex_ServerSideEncryptionConfigurationProperty, aws_cdk_lib_aws_kendra_CfnIndex_UserTokenConfigurationProperty, aws_cdk_lib_aws_kendra_CfnIndex_ValueImportanceItemProperty, aws_cdk_lib_aws_kendraranking_CfnExecutionPlanProps, aws_cdk_lib_aws_kendraranking_CfnExecutionPlan, aws_cdk_lib_aws_kendraranking_CfnExecutionPlan_CapacityUnitsConfigurationProperty, aws_cdk_lib_aws_kinesis_IStream, aws_cdk_lib_aws_kinesis_StreamAttributes, aws_cdk_lib_aws_kinesis_StreamProps, aws_cdk_lib_aws_kinesis_Stream, aws_cdk_lib_aws_kinesis_StreamEncryption, aws_cdk_lib_aws_kinesis_StreamMode, aws_cdk_lib_aws_kinesis_CfnStreamProps, aws_cdk_lib_aws_kinesis_CfnStream, aws_cdk_lib_aws_kinesis_CfnStream_StreamEncryptionProperty, aws_cdk_lib_aws_kinesis_CfnStream_StreamModeDetailsProperty, aws_cdk_lib_aws_kinesis_CfnStreamConsumerProps, aws_cdk_lib_aws_kinesis_CfnStreamConsumer, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationProps, aws_cdk_lib_aws_kinesisanalytics_CfnApplication, aws_cdk_lib_aws_kinesisanalytics_CfnApplication_CSVMappingParametersProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplication_InputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplication_InputLambdaProcessorProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplication_InputParallelismProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplication_InputProcessingConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplication_InputSchemaProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplication_JSONMappingParametersProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplication_KinesisFirehoseInputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplication_KinesisStreamsInputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplication_MappingParametersProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplication_RecordColumnProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplication_RecordFormatProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputProps, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutput, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutput_DestinationSchemaProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutput_KinesisFirehoseOutputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutput_KinesisStreamsOutputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutput_LambdaOutputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutput_OutputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceProps, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_CSVMappingParametersProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_JSONMappingParametersProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_MappingParametersProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_RecordColumnProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_RecordFormatProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_ReferenceDataSourceProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_ReferenceSchemaProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSource_S3ReferenceDataSourceProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2Props, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ApplicationCodeConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ApplicationConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ApplicationMaintenanceConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ApplicationRestoreConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ApplicationSnapshotConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_CSVMappingParametersProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_CatalogConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_CheckpointConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_CodeContentProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_CustomArtifactConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_DeployAsApplicationConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_EnvironmentPropertiesProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_FlinkApplicationConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_FlinkRunConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_GlueDataCatalogConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_InputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_InputLambdaProcessorProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_InputParallelismProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_InputProcessingConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_InputSchemaProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_JSONMappingParametersProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_KinesisFirehoseInputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_KinesisStreamsInputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_MappingParametersProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_MavenReferenceProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_MonitoringConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ParallelismConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_PropertyGroupProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_RecordColumnProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_RecordFormatProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_RunConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_S3ContentBaseLocationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_S3ContentLocationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_SqlApplicationConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_VpcConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ZeppelinApplicationConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationV2_ZeppelinMonitoringConfigurationProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationCloudWatchLoggingOptionV2Props, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationCloudWatchLoggingOptionV2, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationCloudWatchLoggingOptionV2_CloudWatchLoggingOptionProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2Props, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2_DestinationSchemaProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2_KinesisFirehoseOutputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2_KinesisStreamsOutputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2_LambdaOutputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationOutputV2_OutputProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2Props, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_CSVMappingParametersProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_JSONMappingParametersProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_MappingParametersProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_RecordColumnProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_RecordFormatProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_ReferenceDataSourceProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_ReferenceSchemaProperty, aws_cdk_lib_aws_kinesisanalytics_CfnApplicationReferenceDataSourceV2_S3ReferenceDataSourceProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationProps, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ApplicationCodeConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ApplicationConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ApplicationMaintenanceConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ApplicationRestoreConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ApplicationSnapshotConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_CSVMappingParametersProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_CatalogConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_CheckpointConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_CodeContentProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_CustomArtifactConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_DeployAsApplicationConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_EnvironmentPropertiesProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_FlinkApplicationConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_FlinkRunConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_GlueDataCatalogConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_InputProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_InputLambdaProcessorProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_InputParallelismProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_InputProcessingConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_InputSchemaProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_JSONMappingParametersProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_KinesisFirehoseInputProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_KinesisStreamsInputProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_MappingParametersProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_MavenReferenceProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_MonitoringConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ParallelismConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_PropertyGroupProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_RecordColumnProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_RecordFormatProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_RunConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_S3ContentBaseLocationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_S3ContentLocationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_SqlApplicationConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_VpcConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ZeppelinApplicationConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplication_ZeppelinMonitoringConfigurationProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationCloudWatchLoggingOptionProps, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationCloudWatchLoggingOption, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationCloudWatchLoggingOption_CloudWatchLoggingOptionProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutputProps, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutput, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutput_DestinationSchemaProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutput_KinesisFirehoseOutputProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutput_KinesisStreamsOutputProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutput_LambdaOutputProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationOutput_OutputProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSourceProps, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_CSVMappingParametersProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_JSONMappingParametersProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_MappingParametersProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_RecordColumnProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_RecordFormatProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_ReferenceDataSourceProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_ReferenceSchemaProperty, aws_cdk_lib_aws_kinesisanalyticsv2_CfnApplicationReferenceDataSource_S3ReferenceDataSourceProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStreamProps, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_AmazonOpenSearchServerlessBufferingHintsProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_AmazonOpenSearchServerlessDestinationConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_AmazonOpenSearchServerlessRetryOptionsProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_AmazonopensearchserviceBufferingHintsProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_AmazonopensearchserviceDestinationConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_AmazonopensearchserviceRetryOptionsProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_BufferingHintsProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_CloudWatchLoggingOptionsProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_CopyCommandProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_DataFormatConversionConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_DeliveryStreamEncryptionConfigurationInputProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_DeserializerProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_DynamicPartitioningConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ElasticsearchBufferingHintsProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ElasticsearchDestinationConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ElasticsearchRetryOptionsProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_EncryptionConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ExtendedS3DestinationConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_HiveJsonSerDeProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_HttpEndpointCommonAttributeProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_HttpEndpointConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_HttpEndpointDestinationConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_HttpEndpointRequestConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_InputFormatConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_KMSEncryptionConfigProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_KinesisStreamSourceConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_OpenXJsonSerDeProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_OrcSerDeProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_OutputFormatConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ParquetSerDeProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ProcessingConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ProcessorProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_ProcessorParameterProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_RedshiftDestinationConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_RedshiftRetryOptionsProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_RetryOptionsProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_S3DestinationConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_SchemaConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_SerializerProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_SplunkDestinationConfigurationProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_SplunkRetryOptionsProperty, aws_cdk_lib_aws_kinesisfirehose_CfnDeliveryStream_VpcConfigurationProperty, aws_cdk_lib_aws_kinesisvideo_CfnSignalingChannelProps, aws_cdk_lib_aws_kinesisvideo_CfnSignalingChannel, aws_cdk_lib_aws_kinesisvideo_CfnStreamProps, aws_cdk_lib_aws_kinesisvideo_CfnStream, aws_cdk_lib_aws_kms_IKey, aws_cdk_lib_aws_kms_KeySpec, aws_cdk_lib_aws_kms_KeyUsage, aws_cdk_lib_aws_kms_KeyProps, aws_cdk_lib_aws_kms_Key, aws_cdk_lib_aws_kms_KeyLookupOptions, aws_cdk_lib_aws_kms_IAlias, aws_cdk_lib_aws_kms_AliasProps, aws_cdk_lib_aws_kms_AliasAttributes, aws_cdk_lib_aws_kms_Alias, aws_cdk_lib_aws_kms_ViaServicePrincipal, aws_cdk_lib_aws_kms_CfnAliasProps, aws_cdk_lib_aws_kms_CfnAlias, aws_cdk_lib_aws_kms_CfnKeyProps, aws_cdk_lib_aws_kms_CfnKey, aws_cdk_lib_aws_kms_CfnReplicaKeyProps, aws_cdk_lib_aws_kms_CfnReplicaKey, aws_cdk_lib_aws_lakeformation_CfnDataCellsFilterProps, aws_cdk_lib_aws_lakeformation_CfnDataCellsFilter, aws_cdk_lib_aws_lakeformation_CfnDataCellsFilter_ColumnWildcardProperty, aws_cdk_lib_aws_lakeformation_CfnDataCellsFilter_RowFilterProperty, aws_cdk_lib_aws_lakeformation_CfnDataLakeSettingsProps, aws_cdk_lib_aws_lakeformation_CfnDataLakeSettings, aws_cdk_lib_aws_lakeformation_CfnDataLakeSettings_DataLakePrincipalProperty, aws_cdk_lib_aws_lakeformation_CfnPermissionsProps, aws_cdk_lib_aws_lakeformation_CfnPermissions, aws_cdk_lib_aws_lakeformation_CfnPermissions_ColumnWildcardProperty, aws_cdk_lib_aws_lakeformation_CfnPermissions_DataLakePrincipalProperty, aws_cdk_lib_aws_lakeformation_CfnPermissions_DataLocationResourceProperty, aws_cdk_lib_aws_lakeformation_CfnPermissions_DatabaseResourceProperty, aws_cdk_lib_aws_lakeformation_CfnPermissions_ResourceProperty, aws_cdk_lib_aws_lakeformation_CfnPermissions_TableResourceProperty, aws_cdk_lib_aws_lakeformation_CfnPermissions_TableWildcardProperty, aws_cdk_lib_aws_lakeformation_CfnPermissions_TableWithColumnsResourceProperty, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissionsProps, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_ColumnWildcardProperty, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_DataCellsFilterResourceProperty, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_DataLakePrincipalProperty, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_DataLocationResourceProperty, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_DatabaseResourceProperty, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_LFTagProperty, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_LFTagKeyResourceProperty, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_LFTagPolicyResourceProperty, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_ResourceProperty, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_TableResourceProperty, aws_cdk_lib_aws_lakeformation_CfnPrincipalPermissions_TableWithColumnsResourceProperty, aws_cdk_lib_aws_lakeformation_CfnResourceProps, aws_cdk_lib_aws_lakeformation_CfnResource, aws_cdk_lib_aws_lakeformation_CfnTagProps, aws_cdk_lib_aws_lakeformation_CfnTag, aws_cdk_lib_aws_lakeformation_CfnTagAssociationProps, aws_cdk_lib_aws_lakeformation_CfnTagAssociation, aws_cdk_lib_aws_lakeformation_CfnTagAssociation_DatabaseResourceProperty, aws_cdk_lib_aws_lakeformation_CfnTagAssociation_LFTagPairProperty, aws_cdk_lib_aws_lakeformation_CfnTagAssociation_ResourceProperty, aws_cdk_lib_aws_lakeformation_CfnTagAssociation_TableResourceProperty, aws_cdk_lib_aws_lakeformation_CfnTagAssociation_TableWithColumnsResourceProperty, aws_cdk_lib_aws_lambda_AdotInstrumentationConfig, aws_cdk_lib_aws_lambda_AdotLayerVersion, aws_cdk_lib_aws_lambda_AdotLambdaExecWrapper, aws_cdk_lib_aws_lambda_AdotLambdaLayerJavaSdkVersion, aws_cdk_lib_aws_lambda_AdotLambdaLayerJavaAutoInstrumentationVersion, aws_cdk_lib_aws_lambda_AdotLambdaLayerPythonSdkVersion, aws_cdk_lib_aws_lambda_AdotLambdaLayerJavaScriptSdkVersion, aws_cdk_lib_aws_lambda_AdotLambdaLayerGenericVersion, aws_cdk_lib_aws_lambda_IAlias, aws_cdk_lib_aws_lambda_AliasOptions, aws_cdk_lib_aws_lambda_AliasProps, aws_cdk_lib_aws_lambda_AliasAttributes, aws_cdk_lib_aws_lambda_Alias, aws_cdk_lib_aws_lambda_VersionWeight, aws_cdk_lib_aws_lambda_DlqDestinationConfig, aws_cdk_lib_aws_lambda_IEventSourceDlq, aws_cdk_lib_aws_lambda_IFunction, aws_cdk_lib_aws_lambda_FunctionAttributes, aws_cdk_lib_aws_lambda_FunctionBase, aws_cdk_lib_aws_lambda_QualifiedFunctionBase, aws_cdk_lib_aws_lambda_Tracing, aws_cdk_lib_aws_lambda_FunctionOptions, aws_cdk_lib_aws_lambda_FunctionProps, aws_cdk_lib_aws_lambda_Function, aws_cdk_lib_aws_lambda_EnvironmentOptions, aws_cdk_lib_aws_lambda_FunctionVersionUpgrade, aws_cdk_lib_aws_lambda_Handler, aws_cdk_lib_aws_lambda_DockerImageFunctionProps, aws_cdk_lib_aws_lambda_DockerImageCode, aws_cdk_lib_aws_lambda_DockerImageFunction, aws_cdk_lib_aws_lambda_LayerVersionOptions, aws_cdk_lib_aws_lambda_LayerVersionProps, aws_cdk_lib_aws_lambda_ILayerVersion, aws_cdk_lib_aws_lambda_LayerVersionPermission, aws_cdk_lib_aws_lambda_LayerVersionAttributes, aws_cdk_lib_aws_lambda_LayerVersion, aws_cdk_lib_aws_lambda_Permission, aws_cdk_lib_aws_lambda_LambdaRuntimeProps, aws_cdk_lib_aws_lambda_RuntimeFamily, aws_cdk_lib_aws_lambda_Runtime, aws_cdk_lib_aws_lambda_Code, aws_cdk_lib_aws_lambda_CodeConfig, aws_cdk_lib_aws_lambda_CodeImageConfig, aws_cdk_lib_aws_lambda_S3Code, aws_cdk_lib_aws_lambda_InlineCode, aws_cdk_lib_aws_lambda_AssetCode, aws_cdk_lib_aws_lambda_ResourceBindOptions, aws_cdk_lib_aws_lambda_CfnParametersCodeProps, aws_cdk_lib_aws_lambda_CfnParametersCode, aws_cdk_lib_aws_lambda_EcrImageCodeProps, aws_cdk_lib_aws_lambda_EcrImageCode, aws_cdk_lib_aws_lambda_AssetImageCodeProps, aws_cdk_lib_aws_lambda_AssetImageCode, aws_cdk_lib_aws_lambda_DockerBuildAssetOptions, aws_cdk_lib_aws_lambda_FileSystemConfig, aws_cdk_lib_aws_lambda_FileSystem, aws_cdk_lib_aws_lambda_IVersion, aws_cdk_lib_aws_lambda_VersionOptions, aws_cdk_lib_aws_lambda_VersionProps, aws_cdk_lib_aws_lambda_VersionAttributes, aws_cdk_lib_aws_lambda_Version, aws_cdk_lib_aws_lambda_SingletonFunctionProps, aws_cdk_lib_aws_lambda_SingletonFunction, aws_cdk_lib_aws_lambda_IEventSource, aws_cdk_lib_aws_lambda_SourceAccessConfigurationType, aws_cdk_lib_aws_lambda_SourceAccessConfiguration, aws_cdk_lib_aws_lambda_EventSourceMappingOptions, aws_cdk_lib_aws_lambda_EventSourceMappingProps, aws_cdk_lib_aws_lambda_IEventSourceMapping, aws_cdk_lib_aws_lambda_EventSourceMapping, aws_cdk_lib_aws_lambda_StartingPosition, aws_cdk_lib_aws_lambda_FilterRule, aws_cdk_lib_aws_lambda_FilterCriteria, aws_cdk_lib_aws_lambda_DestinationConfig, aws_cdk_lib_aws_lambda_DestinationType, aws_cdk_lib_aws_lambda_DestinationOptions, aws_cdk_lib_aws_lambda_IDestination, aws_cdk_lib_aws_lambda_EventInvokeConfigOptions, aws_cdk_lib_aws_lambda_EventInvokeConfigProps, aws_cdk_lib_aws_lambda_EventInvokeConfig, aws_cdk_lib_aws_lambda_IScalableFunctionAttribute, aws_cdk_lib_aws_lambda_UtilizationScalingOptions, aws_cdk_lib_aws_lambda_AutoScalingOptions, aws_cdk_lib_aws_lambda_UntrustedArtifactOnDeployment, aws_cdk_lib_aws_lambda_ICodeSigningConfig, aws_cdk_lib_aws_lambda_CodeSigningConfigProps, aws_cdk_lib_aws_lambda_CodeSigningConfig, aws_cdk_lib_aws_lambda_LambdaInsightsVersion, aws_cdk_lib_aws_lambda_LogRetentionRetryOptions, aws_cdk_lib_aws_lambda_Architecture, aws_cdk_lib_aws_lambda_FunctionUrlAuthType, aws_cdk_lib_aws_lambda_HttpMethod, aws_cdk_lib_aws_lambda_FunctionUrlCorsOptions, aws_cdk_lib_aws_lambda_IFunctionUrl, aws_cdk_lib_aws_lambda_FunctionUrlOptions, aws_cdk_lib_aws_lambda_FunctionUrlProps, aws_cdk_lib_aws_lambda_FunctionUrl, aws_cdk_lib_aws_lambda_RuntimeManagementMode, aws_cdk_lib_aws_lambda_CfnAliasProps, aws_cdk_lib_aws_lambda_CfnAlias, aws_cdk_lib_aws_lambda_CfnAlias_AliasRoutingConfigurationProperty, aws_cdk_lib_aws_lambda_CfnAlias_ProvisionedConcurrencyConfigurationProperty, aws_cdk_lib_aws_lambda_CfnAlias_VersionWeightProperty, aws_cdk_lib_aws_lambda_CfnCodeSigningConfigProps, aws_cdk_lib_aws_lambda_CfnCodeSigningConfig, aws_cdk_lib_aws_lambda_CfnCodeSigningConfig_AllowedPublishersProperty, aws_cdk_lib_aws_lambda_CfnCodeSigningConfig_CodeSigningPoliciesProperty, aws_cdk_lib_aws_lambda_CfnEventInvokeConfigProps, aws_cdk_lib_aws_lambda_CfnEventInvokeConfig, aws_cdk_lib_aws_lambda_CfnEventInvokeConfig_DestinationConfigProperty, aws_cdk_lib_aws_lambda_CfnEventInvokeConfig_OnFailureProperty, aws_cdk_lib_aws_lambda_CfnEventInvokeConfig_OnSuccessProperty, aws_cdk_lib_aws_lambda_CfnEventSourceMappingProps, aws_cdk_lib_aws_lambda_CfnEventSourceMapping, aws_cdk_lib_aws_lambda_CfnEventSourceMapping_AmazonManagedKafkaEventSourceConfigProperty, aws_cdk_lib_aws_lambda_CfnEventSourceMapping_DestinationConfigProperty, aws_cdk_lib_aws_lambda_CfnEventSourceMapping_DocumentDBEventSourceConfigProperty, aws_cdk_lib_aws_lambda_CfnEventSourceMapping_EndpointsProperty, aws_cdk_lib_aws_lambda_CfnEventSourceMapping_FilterProperty, aws_cdk_lib_aws_lambda_CfnEventSourceMapping_FilterCriteriaProperty, aws_cdk_lib_aws_lambda_CfnEventSourceMapping_OnFailureProperty, aws_cdk_lib_aws_lambda_CfnEventSourceMapping_ScalingConfigProperty, aws_cdk_lib_aws_lambda_CfnEventSourceMapping_SelfManagedEventSourceProperty, aws_cdk_lib_aws_lambda_CfnEventSourceMapping_SelfManagedKafkaEventSourceConfigProperty, aws_cdk_lib_aws_lambda_CfnEventSourceMapping_SourceAccessConfigurationProperty, aws_cdk_lib_aws_lambda_CfnFunctionProps, aws_cdk_lib_aws_lambda_CfnFunction, aws_cdk_lib_aws_lambda_CfnFunction_CodeProperty, aws_cdk_lib_aws_lambda_CfnFunction_DeadLetterConfigProperty, aws_cdk_lib_aws_lambda_CfnFunction_EnvironmentProperty, aws_cdk_lib_aws_lambda_CfnFunction_EphemeralStorageProperty, aws_cdk_lib_aws_lambda_CfnFunction_FileSystemConfigProperty, aws_cdk_lib_aws_lambda_CfnFunction_ImageConfigProperty, aws_cdk_lib_aws_lambda_CfnFunction_RuntimeManagementConfigProperty, aws_cdk_lib_aws_lambda_CfnFunction_SnapStartProperty, aws_cdk_lib_aws_lambda_CfnFunction_SnapStartResponseProperty, aws_cdk_lib_aws_lambda_CfnFunction_TracingConfigProperty, aws_cdk_lib_aws_lambda_CfnFunction_VpcConfigProperty, aws_cdk_lib_aws_lambda_CfnLayerVersionProps, aws_cdk_lib_aws_lambda_CfnLayerVersion, aws_cdk_lib_aws_lambda_CfnLayerVersion_ContentProperty, aws_cdk_lib_aws_lambda_CfnLayerVersionPermissionProps, aws_cdk_lib_aws_lambda_CfnLayerVersionPermission, aws_cdk_lib_aws_lambda_CfnPermissionProps, aws_cdk_lib_aws_lambda_CfnPermission, aws_cdk_lib_aws_lambda_CfnUrlProps, aws_cdk_lib_aws_lambda_CfnUrl, aws_cdk_lib_aws_lambda_CfnUrl_CorsProperty, aws_cdk_lib_aws_lambda_CfnVersionProps, aws_cdk_lib_aws_lambda_CfnVersion, aws_cdk_lib_aws_lambda_CfnVersion_ProvisionedConcurrencyConfigurationProperty, aws_cdk_lib_aws_lambda_destinations_EventBridgeDestination, aws_cdk_lib_aws_lambda_destinations_LambdaDestinationOptions, aws_cdk_lib_aws_lambda_destinations_LambdaDestination, aws_cdk_lib_aws_lambda_destinations_SnsDestination, aws_cdk_lib_aws_lambda_destinations_SqsDestination, aws_cdk_lib_aws_lambda_event_sources_ApiEventSource, aws_cdk_lib_aws_lambda_event_sources_DynamoEventSourceProps, aws_cdk_lib_aws_lambda_event_sources_DynamoEventSource, aws_cdk_lib_aws_lambda_event_sources_KafkaEventSourceProps, aws_cdk_lib_aws_lambda_event_sources_ManagedKafkaEventSourceProps, aws_cdk_lib_aws_lambda_event_sources_AuthenticationMethod, aws_cdk_lib_aws_lambda_event_sources_SelfManagedKafkaEventSourceProps, aws_cdk_lib_aws_lambda_event_sources_ManagedKafkaEventSource, aws_cdk_lib_aws_lambda_event_sources_SelfManagedKafkaEventSource, aws_cdk_lib_aws_lambda_event_sources_KinesisEventSourceProps, aws_cdk_lib_aws_lambda_event_sources_KinesisEventSource, aws_cdk_lib_aws_lambda_event_sources_S3EventSourceProps, aws_cdk_lib_aws_lambda_event_sources_S3EventSource, aws_cdk_lib_aws_lambda_event_sources_SnsEventSourceProps, aws_cdk_lib_aws_lambda_event_sources_SnsEventSource, aws_cdk_lib_aws_lambda_event_sources_SnsDlq, aws_cdk_lib_aws_lambda_event_sources_BaseStreamEventSourceProps, aws_cdk_lib_aws_lambda_event_sources_StreamEventSourceProps, aws_cdk_lib_aws_lambda_event_sources_StreamEventSource, aws_cdk_lib_aws_lambda_event_sources_SqsEventSourceProps, aws_cdk_lib_aws_lambda_event_sources_SqsEventSource, aws_cdk_lib_aws_lambda_event_sources_SqsDlq, aws_cdk_lib_aws_lambda_nodejs_NodejsFunctionProps, aws_cdk_lib_aws_lambda_nodejs_NodejsFunction, aws_cdk_lib_aws_lambda_nodejs_BundlingOptions, aws_cdk_lib_aws_lambda_nodejs_OutputFormat, aws_cdk_lib_aws_lambda_nodejs_ICommandHooks, aws_cdk_lib_aws_lambda_nodejs_LogLevel, aws_cdk_lib_aws_lambda_nodejs_SourceMapMode, aws_cdk_lib_aws_lambda_nodejs_Charset, aws_cdk_lib_aws_lex_CfnBotProps, aws_cdk_lib_aws_lex_CfnBot, aws_cdk_lib_aws_lex_CfnBot_AdvancedRecognitionSettingProperty, aws_cdk_lib_aws_lex_CfnBot_AllowedInputTypesProperty, aws_cdk_lib_aws_lex_CfnBot_AudioAndDTMFInputSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_AudioLogDestinationProperty, aws_cdk_lib_aws_lex_CfnBot_AudioLogSettingProperty, aws_cdk_lib_aws_lex_CfnBot_AudioSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_BotAliasLocaleSettingsProperty, aws_cdk_lib_aws_lex_CfnBot_BotAliasLocaleSettingsItemProperty, aws_cdk_lib_aws_lex_CfnBot_BotLocaleProperty, aws_cdk_lib_aws_lex_CfnBot_ButtonProperty, aws_cdk_lib_aws_lex_CfnBot_CloudWatchLogGroupLogDestinationProperty, aws_cdk_lib_aws_lex_CfnBot_CodeHookSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_ConditionProperty, aws_cdk_lib_aws_lex_CfnBot_ConditionalBranchProperty, aws_cdk_lib_aws_lex_CfnBot_ConditionalSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_ConversationLogSettingsProperty, aws_cdk_lib_aws_lex_CfnBot_CustomPayloadProperty, aws_cdk_lib_aws_lex_CfnBot_CustomVocabularyProperty, aws_cdk_lib_aws_lex_CfnBot_CustomVocabularyItemProperty, aws_cdk_lib_aws_lex_CfnBot_DTMFSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_DataPrivacyProperty, aws_cdk_lib_aws_lex_CfnBot_DefaultConditionalBranchProperty, aws_cdk_lib_aws_lex_CfnBot_DialogActionProperty, aws_cdk_lib_aws_lex_CfnBot_DialogCodeHookInvocationSettingProperty, aws_cdk_lib_aws_lex_CfnBot_DialogCodeHookSettingProperty, aws_cdk_lib_aws_lex_CfnBot_DialogStateProperty, aws_cdk_lib_aws_lex_CfnBot_ElicitationCodeHookInvocationSettingProperty, aws_cdk_lib_aws_lex_CfnBot_ExternalSourceSettingProperty, aws_cdk_lib_aws_lex_CfnBot_FulfillmentCodeHookSettingProperty, aws_cdk_lib_aws_lex_CfnBot_FulfillmentStartResponseSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_FulfillmentUpdateResponseSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_FulfillmentUpdatesSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_GrammarSlotTypeSettingProperty, aws_cdk_lib_aws_lex_CfnBot_GrammarSlotTypeSourceProperty, aws_cdk_lib_aws_lex_CfnBot_ImageResponseCardProperty, aws_cdk_lib_aws_lex_CfnBot_InitialResponseSettingProperty, aws_cdk_lib_aws_lex_CfnBot_InputContextProperty, aws_cdk_lib_aws_lex_CfnBot_IntentProperty, aws_cdk_lib_aws_lex_CfnBot_IntentClosingSettingProperty, aws_cdk_lib_aws_lex_CfnBot_IntentConfirmationSettingProperty, aws_cdk_lib_aws_lex_CfnBot_IntentOverrideProperty, aws_cdk_lib_aws_lex_CfnBot_KendraConfigurationProperty, aws_cdk_lib_aws_lex_CfnBot_LambdaCodeHookProperty, aws_cdk_lib_aws_lex_CfnBot_MessageProperty, aws_cdk_lib_aws_lex_CfnBot_MessageGroupProperty, aws_cdk_lib_aws_lex_CfnBot_MultipleValuesSettingProperty, aws_cdk_lib_aws_lex_CfnBot_ObfuscationSettingProperty, aws_cdk_lib_aws_lex_CfnBot_OutputContextProperty, aws_cdk_lib_aws_lex_CfnBot_PlainTextMessageProperty, aws_cdk_lib_aws_lex_CfnBot_PostDialogCodeHookInvocationSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_PostFulfillmentStatusSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_PromptAttemptSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_PromptSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_ResponseSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_S3BucketLogDestinationProperty, aws_cdk_lib_aws_lex_CfnBot_S3LocationProperty, aws_cdk_lib_aws_lex_CfnBot_SSMLMessageProperty, aws_cdk_lib_aws_lex_CfnBot_SampleUtteranceProperty, aws_cdk_lib_aws_lex_CfnBot_SampleValueProperty, aws_cdk_lib_aws_lex_CfnBot_SentimentAnalysisSettingsProperty, aws_cdk_lib_aws_lex_CfnBot_SessionAttributeProperty, aws_cdk_lib_aws_lex_CfnBot_SlotProperty, aws_cdk_lib_aws_lex_CfnBot_SlotCaptureSettingProperty, aws_cdk_lib_aws_lex_CfnBot_SlotDefaultValueProperty, aws_cdk_lib_aws_lex_CfnBot_SlotDefaultValueSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_SlotPriorityProperty, aws_cdk_lib_aws_lex_CfnBot_SlotTypeProperty, aws_cdk_lib_aws_lex_CfnBot_SlotTypeValueProperty, aws_cdk_lib_aws_lex_CfnBot_SlotValueProperty, aws_cdk_lib_aws_lex_CfnBot_SlotValueElicitationSettingProperty, aws_cdk_lib_aws_lex_CfnBot_SlotValueOverrideProperty, aws_cdk_lib_aws_lex_CfnBot_SlotValueOverrideMapProperty, aws_cdk_lib_aws_lex_CfnBot_SlotValueRegexFilterProperty, aws_cdk_lib_aws_lex_CfnBot_SlotValueSelectionSettingProperty, aws_cdk_lib_aws_lex_CfnBot_StillWaitingResponseSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_TestBotAliasSettingsProperty, aws_cdk_lib_aws_lex_CfnBot_TextInputSpecificationProperty, aws_cdk_lib_aws_lex_CfnBot_TextLogDestinationProperty, aws_cdk_lib_aws_lex_CfnBot_TextLogSettingProperty, aws_cdk_lib_aws_lex_CfnBot_VoiceSettingsProperty, aws_cdk_lib_aws_lex_CfnBot_WaitAndContinueSpecificationProperty, aws_cdk_lib_aws_lex_CfnBotAliasProps, aws_cdk_lib_aws_lex_CfnBotAlias, aws_cdk_lib_aws_lex_CfnBotAlias_AudioLogDestinationProperty, aws_cdk_lib_aws_lex_CfnBotAlias_AudioLogSettingProperty, aws_cdk_lib_aws_lex_CfnBotAlias_BotAliasLocaleSettingsProperty, aws_cdk_lib_aws_lex_CfnBotAlias_BotAliasLocaleSettingsItemProperty, aws_cdk_lib_aws_lex_CfnBotAlias_CloudWatchLogGroupLogDestinationProperty, aws_cdk_lib_aws_lex_CfnBotAlias_CodeHookSpecificationProperty, aws_cdk_lib_aws_lex_CfnBotAlias_ConversationLogSettingsProperty, aws_cdk_lib_aws_lex_CfnBotAlias_LambdaCodeHookProperty, aws_cdk_lib_aws_lex_CfnBotAlias_S3BucketLogDestinationProperty, aws_cdk_lib_aws_lex_CfnBotAlias_SentimentAnalysisSettingsProperty, aws_cdk_lib_aws_lex_CfnBotAlias_TextLogDestinationProperty, aws_cdk_lib_aws_lex_CfnBotAlias_TextLogSettingProperty, aws_cdk_lib_aws_lex_CfnBotVersionProps, aws_cdk_lib_aws_lex_CfnBotVersion, aws_cdk_lib_aws_lex_CfnBotVersion_BotVersionLocaleDetailsProperty, aws_cdk_lib_aws_lex_CfnBotVersion_BotVersionLocaleSpecificationProperty, aws_cdk_lib_aws_lex_CfnResourcePolicyProps, aws_cdk_lib_aws_lex_CfnResourcePolicy, aws_cdk_lib_aws_licensemanager_CfnGrantProps, aws_cdk_lib_aws_licensemanager_CfnGrant, aws_cdk_lib_aws_licensemanager_CfnLicenseProps, aws_cdk_lib_aws_licensemanager_CfnLicense, aws_cdk_lib_aws_licensemanager_CfnLicense_BorrowConfigurationProperty, aws_cdk_lib_aws_licensemanager_CfnLicense_ConsumptionConfigurationProperty, aws_cdk_lib_aws_licensemanager_CfnLicense_EntitlementProperty, aws_cdk_lib_aws_licensemanager_CfnLicense_IssuerDataProperty, aws_cdk_lib_aws_licensemanager_CfnLicense_MetadataProperty, aws_cdk_lib_aws_licensemanager_CfnLicense_ProvisionalConfigurationProperty, aws_cdk_lib_aws_licensemanager_CfnLicense_ValidityDateFormatProperty, aws_cdk_lib_aws_lightsail_CfnAlarmProps, aws_cdk_lib_aws_lightsail_CfnAlarm, aws_cdk_lib_aws_lightsail_CfnBucketProps, aws_cdk_lib_aws_lightsail_CfnBucket, aws_cdk_lib_aws_lightsail_CfnBucket_AccessRulesProperty, aws_cdk_lib_aws_lightsail_CfnCertificateProps, aws_cdk_lib_aws_lightsail_CfnCertificate, aws_cdk_lib_aws_lightsail_CfnContainerProps, aws_cdk_lib_aws_lightsail_CfnContainer, aws_cdk_lib_aws_lightsail_CfnContainer_ContainerProperty, aws_cdk_lib_aws_lightsail_CfnContainer_ContainerServiceDeploymentProperty, aws_cdk_lib_aws_lightsail_CfnContainer_EnvironmentVariableProperty, aws_cdk_lib_aws_lightsail_CfnContainer_HealthCheckConfigProperty, aws_cdk_lib_aws_lightsail_CfnContainer_PortInfoProperty, aws_cdk_lib_aws_lightsail_CfnContainer_PublicDomainNameProperty, aws_cdk_lib_aws_lightsail_CfnContainer_PublicEndpointProperty, aws_cdk_lib_aws_lightsail_CfnDatabaseProps, aws_cdk_lib_aws_lightsail_CfnDatabase, aws_cdk_lib_aws_lightsail_CfnDatabase_RelationalDatabaseParameterProperty, aws_cdk_lib_aws_lightsail_CfnDiskProps, aws_cdk_lib_aws_lightsail_CfnDisk, aws_cdk_lib_aws_lightsail_CfnDisk_AddOnProperty, aws_cdk_lib_aws_lightsail_CfnDisk_AutoSnapshotAddOnProperty, aws_cdk_lib_aws_lightsail_CfnDisk_LocationProperty, aws_cdk_lib_aws_lightsail_CfnDistributionProps, aws_cdk_lib_aws_lightsail_CfnDistribution, aws_cdk_lib_aws_lightsail_CfnDistribution_CacheBehaviorProperty, aws_cdk_lib_aws_lightsail_CfnDistribution_CacheBehaviorPerPathProperty, aws_cdk_lib_aws_lightsail_CfnDistribution_CacheSettingsProperty, aws_cdk_lib_aws_lightsail_CfnDistribution_CookieObjectProperty, aws_cdk_lib_aws_lightsail_CfnDistribution_HeaderObjectProperty, aws_cdk_lib_aws_lightsail_CfnDistribution_InputOriginProperty, aws_cdk_lib_aws_lightsail_CfnDistribution_QueryStringObjectProperty, aws_cdk_lib_aws_lightsail_CfnInstanceProps, aws_cdk_lib_aws_lightsail_CfnInstance, aws_cdk_lib_aws_lightsail_CfnInstance_AddOnProperty, aws_cdk_lib_aws_lightsail_CfnInstance_AutoSnapshotAddOnProperty, aws_cdk_lib_aws_lightsail_CfnInstance_DiskProperty, aws_cdk_lib_aws_lightsail_CfnInstance_HardwareProperty, aws_cdk_lib_aws_lightsail_CfnInstance_LocationProperty, aws_cdk_lib_aws_lightsail_CfnInstance_MonthlyTransferProperty, aws_cdk_lib_aws_lightsail_CfnInstance_NetworkingProperty, aws_cdk_lib_aws_lightsail_CfnInstance_PortProperty, aws_cdk_lib_aws_lightsail_CfnInstance_StateProperty, aws_cdk_lib_aws_lightsail_CfnLoadBalancerProps, aws_cdk_lib_aws_lightsail_CfnLoadBalancer, aws_cdk_lib_aws_lightsail_CfnLoadBalancerTlsCertificateProps, aws_cdk_lib_aws_lightsail_CfnLoadBalancerTlsCertificate, aws_cdk_lib_aws_lightsail_CfnStaticIpProps, aws_cdk_lib_aws_lightsail_CfnStaticIp, aws_cdk_lib_aws_location_CfnGeofenceCollectionProps, aws_cdk_lib_aws_location_CfnGeofenceCollection, aws_cdk_lib_aws_location_CfnMapProps, aws_cdk_lib_aws_location_CfnMap, aws_cdk_lib_aws_location_CfnMap_MapConfigurationProperty, aws_cdk_lib_aws_location_CfnPlaceIndexProps, aws_cdk_lib_aws_location_CfnPlaceIndex, aws_cdk_lib_aws_location_CfnPlaceIndex_DataSourceConfigurationProperty, aws_cdk_lib_aws_location_CfnRouteCalculatorProps, aws_cdk_lib_aws_location_CfnRouteCalculator, aws_cdk_lib_aws_location_CfnTrackerProps, aws_cdk_lib_aws_location_CfnTracker, aws_cdk_lib_aws_location_CfnTrackerConsumerProps, aws_cdk_lib_aws_location_CfnTrackerConsumer, aws_cdk_lib_aws_logs_CrossAccountDestinationProps, aws_cdk_lib_aws_logs_CrossAccountDestination, aws_cdk_lib_aws_logs_ILogGroup, aws_cdk_lib_aws_logs_RetentionDays, aws_cdk_lib_aws_logs_LogGroupProps, aws_cdk_lib_aws_logs_LogGroup, aws_cdk_lib_aws_logs_StreamOptions, aws_cdk_lib_aws_logs_SubscriptionFilterOptions, aws_cdk_lib_aws_logs_MetricFilterOptions, aws_cdk_lib_aws_logs_ILogStream, aws_cdk_lib_aws_logs_LogStreamProps, aws_cdk_lib_aws_logs_LogStream, aws_cdk_lib_aws_logs_MetricFilterProps, aws_cdk_lib_aws_logs_MetricFilter, aws_cdk_lib_aws_logs_IFilterPattern, aws_cdk_lib_aws_logs_JsonPattern, aws_cdk_lib_aws_logs_FilterPattern, aws_cdk_lib_aws_logs_SpaceDelimitedTextPattern, aws_cdk_lib_aws_logs_ColumnRestriction, aws_cdk_lib_aws_logs_ILogSubscriptionDestination, aws_cdk_lib_aws_logs_LogSubscriptionDestinationConfig, aws_cdk_lib_aws_logs_SubscriptionFilterProps, aws_cdk_lib_aws_logs_SubscriptionFilter, aws_cdk_lib_aws_logs_LogRetentionProps, aws_cdk_lib_aws_logs_LogRetentionRetryOptions, aws_cdk_lib_aws_logs_LogRetention, aws_cdk_lib_aws_logs_ResourcePolicyProps, aws_cdk_lib_aws_logs_ResourcePolicy, aws_cdk_lib_aws_logs_QueryStringProps, aws_cdk_lib_aws_logs_QueryString, aws_cdk_lib_aws_logs_QueryDefinitionProps, aws_cdk_lib_aws_logs_QueryDefinition, aws_cdk_lib_aws_logs_CfnDestinationProps, aws_cdk_lib_aws_logs_CfnDestination, aws_cdk_lib_aws_logs_CfnLogGroupProps, aws_cdk_lib_aws_logs_CfnLogGroup, aws_cdk_lib_aws_logs_CfnLogStreamProps, aws_cdk_lib_aws_logs_CfnLogStream, aws_cdk_lib_aws_logs_CfnMetricFilterProps, aws_cdk_lib_aws_logs_CfnMetricFilter, aws_cdk_lib_aws_logs_CfnMetricFilter_DimensionProperty, aws_cdk_lib_aws_logs_CfnMetricFilter_MetricTransformationProperty, aws_cdk_lib_aws_logs_CfnQueryDefinitionProps, aws_cdk_lib_aws_logs_CfnQueryDefinition, aws_cdk_lib_aws_logs_CfnResourcePolicyProps, aws_cdk_lib_aws_logs_CfnResourcePolicy, aws_cdk_lib_aws_logs_CfnSubscriptionFilterProps, aws_cdk_lib_aws_logs_CfnSubscriptionFilter, aws_cdk_lib_aws_logs_destinations_LambdaDestinationOptions, aws_cdk_lib_aws_logs_destinations_LambdaDestination, aws_cdk_lib_aws_logs_destinations_KinesisDestinationProps, aws_cdk_lib_aws_logs_destinations_KinesisDestination, aws_cdk_lib_aws_lookoutequipment_CfnInferenceSchedulerProps, aws_cdk_lib_aws_lookoutequipment_CfnInferenceScheduler, aws_cdk_lib_aws_lookoutequipment_CfnInferenceScheduler_DataInputConfigurationProperty, aws_cdk_lib_aws_lookoutequipment_CfnInferenceScheduler_DataOutputConfigurationProperty, aws_cdk_lib_aws_lookoutequipment_CfnInferenceScheduler_InputNameConfigurationProperty, aws_cdk_lib_aws_lookoutequipment_CfnInferenceScheduler_S3InputConfigurationProperty, aws_cdk_lib_aws_lookoutequipment_CfnInferenceScheduler_S3OutputConfigurationProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAlertProps, aws_cdk_lib_aws_lookoutmetrics_CfnAlert, aws_cdk_lib_aws_lookoutmetrics_CfnAlert_ActionProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAlert_LambdaConfigurationProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAlert_SNSConfigurationProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetectorProps, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_AnomalyDetectorConfigProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_AppFlowConfigProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_CloudwatchConfigProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_CsvFormatDescriptorProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_FileFormatDescriptorProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_JsonFormatDescriptorProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_MetricProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_MetricSetProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_MetricSourceProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_RDSSourceConfigProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_RedshiftSourceConfigProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_S3SourceConfigProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_TimestampColumnProperty, aws_cdk_lib_aws_lookoutmetrics_CfnAnomalyDetector_VpcConfigurationProperty, aws_cdk_lib_aws_lookoutvision_CfnProjectProps, aws_cdk_lib_aws_lookoutvision_CfnProject, aws_cdk_lib_aws_m2_CfnApplicationProps, aws_cdk_lib_aws_m2_CfnApplication, aws_cdk_lib_aws_m2_CfnApplication_DefinitionProperty, aws_cdk_lib_aws_m2_CfnEnvironmentProps, aws_cdk_lib_aws_m2_CfnEnvironment, aws_cdk_lib_aws_m2_CfnEnvironment_EfsStorageConfigurationProperty, aws_cdk_lib_aws_m2_CfnEnvironment_FsxStorageConfigurationProperty, aws_cdk_lib_aws_m2_CfnEnvironment_HighAvailabilityConfigProperty, aws_cdk_lib_aws_m2_CfnEnvironment_StorageConfigurationProperty, aws_cdk_lib_aws_macie_CfnAllowListProps, aws_cdk_lib_aws_macie_CfnAllowList, aws_cdk_lib_aws_macie_CfnAllowList_CriteriaProperty, aws_cdk_lib_aws_macie_CfnAllowList_S3WordsListProperty, aws_cdk_lib_aws_macie_CfnCustomDataIdentifierProps, aws_cdk_lib_aws_macie_CfnCustomDataIdentifier, aws_cdk_lib_aws_macie_CfnFindingsFilterProps, aws_cdk_lib_aws_macie_CfnFindingsFilter, aws_cdk_lib_aws_macie_CfnFindingsFilter_CriterionAdditionalPropertiesProperty, aws_cdk_lib_aws_macie_CfnFindingsFilter_FindingCriteriaProperty, aws_cdk_lib_aws_macie_CfnFindingsFilter_FindingsFilterListItemProperty, aws_cdk_lib_aws_macie_CfnSessionProps, aws_cdk_lib_aws_macie_CfnSession, aws_cdk_lib_aws_managedblockchain_CfnAccessorProps, aws_cdk_lib_aws_managedblockchain_CfnAccessor, aws_cdk_lib_aws_managedblockchain_CfnMemberProps, aws_cdk_lib_aws_managedblockchain_CfnMember, aws_cdk_lib_aws_managedblockchain_CfnMember_ApprovalThresholdPolicyProperty, aws_cdk_lib_aws_managedblockchain_CfnMember_MemberConfigurationProperty, aws_cdk_lib_aws_managedblockchain_CfnMember_MemberFabricConfigurationProperty, aws_cdk_lib_aws_managedblockchain_CfnMember_MemberFrameworkConfigurationProperty, aws_cdk_lib_aws_managedblockchain_CfnMember_NetworkConfigurationProperty, aws_cdk_lib_aws_managedblockchain_CfnMember_NetworkFabricConfigurationProperty, aws_cdk_lib_aws_managedblockchain_CfnMember_NetworkFrameworkConfigurationProperty, aws_cdk_lib_aws_managedblockchain_CfnMember_VotingPolicyProperty, aws_cdk_lib_aws_managedblockchain_CfnNodeProps, aws_cdk_lib_aws_managedblockchain_CfnNode, aws_cdk_lib_aws_managedblockchain_CfnNode_NodeConfigurationProperty, aws_cdk_lib_aws_mediaconnect_CfnFlowProps, aws_cdk_lib_aws_mediaconnect_CfnFlow, aws_cdk_lib_aws_mediaconnect_CfnFlow_EncryptionProperty, aws_cdk_lib_aws_mediaconnect_CfnFlow_FailoverConfigProperty, aws_cdk_lib_aws_mediaconnect_CfnFlow_SourceProperty, aws_cdk_lib_aws_mediaconnect_CfnFlow_SourcePriorityProperty, aws_cdk_lib_aws_mediaconnect_CfnFlowEntitlementProps, aws_cdk_lib_aws_mediaconnect_CfnFlowEntitlement, aws_cdk_lib_aws_mediaconnect_CfnFlowEntitlement_EncryptionProperty, aws_cdk_lib_aws_mediaconnect_CfnFlowOutputProps, aws_cdk_lib_aws_mediaconnect_CfnFlowOutput, aws_cdk_lib_aws_mediaconnect_CfnFlowOutput_EncryptionProperty, aws_cdk_lib_aws_mediaconnect_CfnFlowOutput_VpcInterfaceAttachmentProperty, aws_cdk_lib_aws_mediaconnect_CfnFlowSourceProps, aws_cdk_lib_aws_mediaconnect_CfnFlowSource, aws_cdk_lib_aws_mediaconnect_CfnFlowSource_EncryptionProperty, aws_cdk_lib_aws_mediaconnect_CfnFlowVpcInterfaceProps, aws_cdk_lib_aws_mediaconnect_CfnFlowVpcInterface, aws_cdk_lib_aws_mediaconvert_CfnJobTemplateProps, aws_cdk_lib_aws_mediaconvert_CfnJobTemplate, aws_cdk_lib_aws_mediaconvert_CfnJobTemplate_AccelerationSettingsProperty, aws_cdk_lib_aws_mediaconvert_CfnJobTemplate_HopDestinationProperty, aws_cdk_lib_aws_mediaconvert_CfnPresetProps, aws_cdk_lib_aws_mediaconvert_CfnPreset, aws_cdk_lib_aws_mediaconvert_CfnQueueProps, aws_cdk_lib_aws_mediaconvert_CfnQueue, aws_cdk_lib_aws_medialive_CfnChannelProps, aws_cdk_lib_aws_medialive_CfnChannel, aws_cdk_lib_aws_medialive_CfnChannel_AacSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Ac3SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_AncillarySourceSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_ArchiveCdnSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_ArchiveContainerSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_ArchiveGroupSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_ArchiveOutputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_ArchiveS3SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_AribDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_AribSourceSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioChannelMappingProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioCodecSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioDescriptionProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioHlsRenditionSelectionProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioLanguageSelectionProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioNormalizationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioOnlyHlsSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioPidSelectionProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioSelectorProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioSelectorSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioSilenceFailoverSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioTrackProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioTrackSelectionProperty, aws_cdk_lib_aws_medialive_CfnChannel_AudioWatermarkSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_AutomaticInputFailoverSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_AvailBlankingProperty, aws_cdk_lib_aws_medialive_CfnChannel_AvailConfigurationProperty, aws_cdk_lib_aws_medialive_CfnChannel_AvailSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_BlackoutSlateProperty, aws_cdk_lib_aws_medialive_CfnChannel_BurnInDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_CaptionDescriptionProperty, aws_cdk_lib_aws_medialive_CfnChannel_CaptionDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_CaptionLanguageMappingProperty, aws_cdk_lib_aws_medialive_CfnChannel_CaptionRectangleProperty, aws_cdk_lib_aws_medialive_CfnChannel_CaptionSelectorProperty, aws_cdk_lib_aws_medialive_CfnChannel_CaptionSelectorSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_CdiInputSpecificationProperty, aws_cdk_lib_aws_medialive_CfnChannel_ColorSpacePassthroughSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_DvbNitSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_DvbSdtSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_DvbSubDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_DvbSubSourceSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_DvbTdtSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Eac3SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_EbuTtDDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_EmbeddedDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_EmbeddedPlusScte20DestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_EmbeddedSourceSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_EncoderSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_FailoverConditionProperty, aws_cdk_lib_aws_medialive_CfnChannel_FailoverConditionSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_FeatureActivationsProperty, aws_cdk_lib_aws_medialive_CfnChannel_FecOutputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Fmp4HlsSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_FrameCaptureCdnSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_FrameCaptureGroupSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_FrameCaptureHlsSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_FrameCaptureOutputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_FrameCaptureS3SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_FrameCaptureSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_GlobalConfigurationProperty, aws_cdk_lib_aws_medialive_CfnChannel_H264ColorSpaceSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_H264FilterSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_H264SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_H265ColorSpaceSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_H265FilterSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_H265SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Hdr10SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_HlsAkamaiSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_HlsBasicPutSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_HlsCdnSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_HlsGroupSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_HlsInputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_HlsMediaStoreSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_HlsOutputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_HlsS3SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_HlsSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_HlsWebdavSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_HtmlMotionGraphicsSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_InputAttachmentProperty, aws_cdk_lib_aws_medialive_CfnChannel_InputChannelLevelProperty, aws_cdk_lib_aws_medialive_CfnChannel_InputLocationProperty, aws_cdk_lib_aws_medialive_CfnChannel_InputLossBehaviorProperty, aws_cdk_lib_aws_medialive_CfnChannel_InputLossFailoverSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_InputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_InputSpecificationProperty, aws_cdk_lib_aws_medialive_CfnChannel_KeyProviderSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_M2tsSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_M3u8SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_MediaPackageGroupSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_MediaPackageOutputDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_MediaPackageOutputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_MotionGraphicsConfigurationProperty, aws_cdk_lib_aws_medialive_CfnChannel_MotionGraphicsSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Mp2SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Mpeg2FilterSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Mpeg2SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_MsSmoothGroupSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_MsSmoothOutputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_MultiplexGroupSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_MultiplexOutputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_MultiplexProgramChannelDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_NetworkInputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_NielsenCBETProperty, aws_cdk_lib_aws_medialive_CfnChannel_NielsenConfigurationProperty, aws_cdk_lib_aws_medialive_CfnChannel_NielsenNaesIiNwProperty, aws_cdk_lib_aws_medialive_CfnChannel_NielsenWatermarksSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_OutputProperty, aws_cdk_lib_aws_medialive_CfnChannel_OutputDestinationProperty, aws_cdk_lib_aws_medialive_CfnChannel_OutputDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_OutputGroupProperty, aws_cdk_lib_aws_medialive_CfnChannel_OutputGroupSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_OutputLocationRefProperty, aws_cdk_lib_aws_medialive_CfnChannel_OutputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_PassThroughSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_RawSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Rec601SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Rec709SettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_RemixSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_RtmpCaptionInfoDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_RtmpGroupSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_RtmpOutputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Scte20PlusEmbeddedDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Scte20SourceSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Scte27DestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Scte27SourceSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_Scte35SpliceInsertProperty, aws_cdk_lib_aws_medialive_CfnChannel_Scte35TimeSignalAposProperty, aws_cdk_lib_aws_medialive_CfnChannel_SmpteTtDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_StandardHlsSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_StaticKeySettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_TeletextDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_TeletextSourceSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_TemporalFilterSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_TimecodeConfigProperty, aws_cdk_lib_aws_medialive_CfnChannel_TtmlDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_UdpContainerSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_UdpGroupSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_UdpOutputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_VideoBlackFailoverSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_VideoCodecSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_VideoDescriptionProperty, aws_cdk_lib_aws_medialive_CfnChannel_VideoSelectorProperty, aws_cdk_lib_aws_medialive_CfnChannel_VideoSelectorColorSpaceSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_VideoSelectorPidProperty, aws_cdk_lib_aws_medialive_CfnChannel_VideoSelectorProgramIdProperty, aws_cdk_lib_aws_medialive_CfnChannel_VideoSelectorSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_VpcOutputSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_WavSettingsProperty, aws_cdk_lib_aws_medialive_CfnChannel_WebvttDestinationSettingsProperty, aws_cdk_lib_aws_medialive_CfnInputProps, aws_cdk_lib_aws_medialive_CfnInput, aws_cdk_lib_aws_medialive_CfnInput_InputDestinationRequestProperty, aws_cdk_lib_aws_medialive_CfnInput_InputDeviceRequestProperty, aws_cdk_lib_aws_medialive_CfnInput_InputDeviceSettingsProperty, aws_cdk_lib_aws_medialive_CfnInput_InputSourceRequestProperty, aws_cdk_lib_aws_medialive_CfnInput_InputVpcRequestProperty, aws_cdk_lib_aws_medialive_CfnInput_MediaConnectFlowRequestProperty, aws_cdk_lib_aws_medialive_CfnInputSecurityGroupProps, aws_cdk_lib_aws_medialive_CfnInputSecurityGroup, aws_cdk_lib_aws_medialive_CfnInputSecurityGroup_InputWhitelistRuleCidrProperty, aws_cdk_lib_aws_mediapackage_CfnAssetProps, aws_cdk_lib_aws_mediapackage_CfnAsset, aws_cdk_lib_aws_mediapackage_CfnAsset_EgressEndpointProperty, aws_cdk_lib_aws_mediapackage_CfnChannelProps, aws_cdk_lib_aws_mediapackage_CfnChannel, aws_cdk_lib_aws_mediapackage_CfnChannel_HlsIngestProperty, aws_cdk_lib_aws_mediapackage_CfnChannel_IngestEndpointProperty, aws_cdk_lib_aws_mediapackage_CfnChannel_LogConfigurationProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpointProps, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_AuthorizationProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_CmafEncryptionProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_CmafPackageProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_DashEncryptionProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_DashPackageProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_EncryptionContractConfigurationProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_HlsEncryptionProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_HlsManifestProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_HlsPackageProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_MssEncryptionProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_MssPackageProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_SpekeKeyProviderProperty, aws_cdk_lib_aws_mediapackage_CfnOriginEndpoint_StreamSelectionProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfigurationProps, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_CmafEncryptionProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_CmafPackageProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_DashEncryptionProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_DashManifestProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_DashPackageProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_EncryptionContractConfigurationProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_HlsEncryptionProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_HlsManifestProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_HlsPackageProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_MssEncryptionProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_MssManifestProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_MssPackageProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_SpekeKeyProviderProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingConfiguration_StreamSelectionProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingGroupProps, aws_cdk_lib_aws_mediapackage_CfnPackagingGroup, aws_cdk_lib_aws_mediapackage_CfnPackagingGroup_AuthorizationProperty, aws_cdk_lib_aws_mediapackage_CfnPackagingGroup_LogConfigurationProperty, aws_cdk_lib_aws_mediastore_CfnContainerProps, aws_cdk_lib_aws_mediastore_CfnContainer, aws_cdk_lib_aws_mediastore_CfnContainer_CorsRuleProperty, aws_cdk_lib_aws_mediastore_CfnContainer_MetricPolicyProperty, aws_cdk_lib_aws_mediastore_CfnContainer_MetricPolicyRuleProperty, aws_cdk_lib_aws_mediatailor_CfnPlaybackConfigurationProps, aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration, aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_AdMarkerPassthroughProperty, aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_AvailSuppressionProperty, aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_BumperProperty, aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_CdnConfigurationProperty, aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_DashConfigurationProperty, aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_HlsConfigurationProperty, aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_LivePreRollConfigurationProperty, aws_cdk_lib_aws_mediatailor_CfnPlaybackConfiguration_ManifestProcessingRulesProperty, aws_cdk_lib_aws_memorydb_CfnACLProps, aws_cdk_lib_aws_memorydb_CfnACL, aws_cdk_lib_aws_memorydb_CfnClusterProps, aws_cdk_lib_aws_memorydb_CfnCluster, aws_cdk_lib_aws_memorydb_CfnCluster_EndpointProperty, aws_cdk_lib_aws_memorydb_CfnParameterGroupProps, aws_cdk_lib_aws_memorydb_CfnParameterGroup, aws_cdk_lib_aws_memorydb_CfnSubnetGroupProps, aws_cdk_lib_aws_memorydb_CfnSubnetGroup, aws_cdk_lib_aws_memorydb_CfnUserProps, aws_cdk_lib_aws_memorydb_CfnUser, aws_cdk_lib_aws_memorydb_CfnUser_AuthenticationModeProperty, aws_cdk_lib_aws_msk_CfnBatchScramSecretProps, aws_cdk_lib_aws_msk_CfnBatchScramSecret, aws_cdk_lib_aws_msk_CfnClusterProps, aws_cdk_lib_aws_msk_CfnCluster, aws_cdk_lib_aws_msk_CfnCluster_BrokerLogsProperty, aws_cdk_lib_aws_msk_CfnCluster_BrokerNodeGroupInfoProperty, aws_cdk_lib_aws_msk_CfnCluster_ClientAuthenticationProperty, aws_cdk_lib_aws_msk_CfnCluster_CloudWatchLogsProperty, aws_cdk_lib_aws_msk_CfnCluster_ConfigurationInfoProperty, aws_cdk_lib_aws_msk_CfnCluster_ConnectivityInfoProperty, aws_cdk_lib_aws_msk_CfnCluster_EBSStorageInfoProperty, aws_cdk_lib_aws_msk_CfnCluster_EncryptionAtRestProperty, aws_cdk_lib_aws_msk_CfnCluster_EncryptionInTransitProperty, aws_cdk_lib_aws_msk_CfnCluster_EncryptionInfoProperty, aws_cdk_lib_aws_msk_CfnCluster_FirehoseProperty, aws_cdk_lib_aws_msk_CfnCluster_IamProperty, aws_cdk_lib_aws_msk_CfnCluster_JmxExporterProperty, aws_cdk_lib_aws_msk_CfnCluster_LoggingInfoProperty, aws_cdk_lib_aws_msk_CfnCluster_NodeExporterProperty, aws_cdk_lib_aws_msk_CfnCluster_OpenMonitoringProperty, aws_cdk_lib_aws_msk_CfnCluster_PrometheusProperty, aws_cdk_lib_aws_msk_CfnCluster_ProvisionedThroughputProperty, aws_cdk_lib_aws_msk_CfnCluster_PublicAccessProperty, aws_cdk_lib_aws_msk_CfnCluster_S3Property, aws_cdk_lib_aws_msk_CfnCluster_SaslProperty, aws_cdk_lib_aws_msk_CfnCluster_ScramProperty, aws_cdk_lib_aws_msk_CfnCluster_StorageInfoProperty, aws_cdk_lib_aws_msk_CfnCluster_TlsProperty, aws_cdk_lib_aws_msk_CfnCluster_UnauthenticatedProperty, aws_cdk_lib_aws_msk_CfnCluster_VpcConnectivityProperty, aws_cdk_lib_aws_msk_CfnCluster_VpcConnectivityClientAuthenticationProperty, aws_cdk_lib_aws_msk_CfnCluster_VpcConnectivityIamProperty, aws_cdk_lib_aws_msk_CfnCluster_VpcConnectivitySaslProperty, aws_cdk_lib_aws_msk_CfnCluster_VpcConnectivityScramProperty, aws_cdk_lib_aws_msk_CfnCluster_VpcConnectivityTlsProperty, aws_cdk_lib_aws_msk_CfnConfigurationProps, aws_cdk_lib_aws_msk_CfnConfiguration, aws_cdk_lib_aws_msk_CfnServerlessClusterProps, aws_cdk_lib_aws_msk_CfnServerlessCluster, aws_cdk_lib_aws_msk_CfnServerlessCluster_ClientAuthenticationProperty, aws_cdk_lib_aws_msk_CfnServerlessCluster_IamProperty, aws_cdk_lib_aws_msk_CfnServerlessCluster_SaslProperty, aws_cdk_lib_aws_msk_CfnServerlessCluster_VpcConfigProperty, aws_cdk_lib_aws_mwaa_CfnEnvironmentProps, aws_cdk_lib_aws_mwaa_CfnEnvironment, aws_cdk_lib_aws_mwaa_CfnEnvironment_LoggingConfigurationProperty, aws_cdk_lib_aws_mwaa_CfnEnvironment_ModuleLoggingConfigurationProperty, aws_cdk_lib_aws_mwaa_CfnEnvironment_NetworkConfigurationProperty, aws_cdk_lib_aws_neptune_CfnDBClusterProps, aws_cdk_lib_aws_neptune_CfnDBCluster, aws_cdk_lib_aws_neptune_CfnDBCluster_DBClusterRoleProperty, aws_cdk_lib_aws_neptune_CfnDBClusterParameterGroupProps, aws_cdk_lib_aws_neptune_CfnDBClusterParameterGroup, aws_cdk_lib_aws_neptune_CfnDBInstanceProps, aws_cdk_lib_aws_neptune_CfnDBInstance, aws_cdk_lib_aws_neptune_CfnDBParameterGroupProps, aws_cdk_lib_aws_neptune_CfnDBParameterGroup, aws_cdk_lib_aws_neptune_CfnDBSubnetGroupProps, aws_cdk_lib_aws_neptune_CfnDBSubnetGroup, aws_cdk_lib_aws_networkfirewall_CfnFirewallProps, aws_cdk_lib_aws_networkfirewall_CfnFirewall, aws_cdk_lib_aws_networkfirewall_CfnFirewall_SubnetMappingProperty, aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicyProps, aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy, aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_ActionDefinitionProperty, aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_CustomActionProperty, aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_DimensionProperty, aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_FirewallPolicyProperty, aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_PublishMetricActionProperty, aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_StatefulEngineOptionsProperty, aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_StatefulRuleGroupOverrideProperty, aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_StatefulRuleGroupReferenceProperty, aws_cdk_lib_aws_networkfirewall_CfnFirewallPolicy_StatelessRuleGroupReferenceProperty, aws_cdk_lib_aws_networkfirewall_CfnLoggingConfigurationProps, aws_cdk_lib_aws_networkfirewall_CfnLoggingConfiguration, aws_cdk_lib_aws_networkfirewall_CfnLoggingConfiguration_LogDestinationConfigProperty, aws_cdk_lib_aws_networkfirewall_CfnLoggingConfiguration_LoggingConfigurationProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroupProps, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_ActionDefinitionProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_AddressProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_CustomActionProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_DimensionProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_HeaderProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_IPSetProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_IPSetReferenceProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_MatchAttributesProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_PortRangeProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_PortSetProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_PublishMetricActionProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_ReferenceSetsProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_RuleDefinitionProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_RuleGroupProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_RuleOptionProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_RuleVariablesProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_RulesSourceProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_RulesSourceListProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_StatefulRuleProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_StatefulRuleOptionsProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_StatelessRuleProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_StatelessRulesAndCustomActionsProperty, aws_cdk_lib_aws_networkfirewall_CfnRuleGroup_TCPFlagFieldProperty, aws_cdk_lib_aws_networkmanager_CfnConnectAttachmentProps, aws_cdk_lib_aws_networkmanager_CfnConnectAttachment, aws_cdk_lib_aws_networkmanager_CfnConnectAttachment_ConnectAttachmentOptionsProperty, aws_cdk_lib_aws_networkmanager_CfnConnectAttachment_ProposedSegmentChangeProperty, aws_cdk_lib_aws_networkmanager_CfnConnectPeerProps, aws_cdk_lib_aws_networkmanager_CfnConnectPeer, aws_cdk_lib_aws_networkmanager_CfnConnectPeer_BgpOptionsProperty, aws_cdk_lib_aws_networkmanager_CfnConnectPeer_ConnectPeerBgpConfigurationProperty, aws_cdk_lib_aws_networkmanager_CfnConnectPeer_ConnectPeerConfigurationProperty, aws_cdk_lib_aws_networkmanager_CfnCoreNetworkProps, aws_cdk_lib_aws_networkmanager_CfnCoreNetwork, aws_cdk_lib_aws_networkmanager_CfnCoreNetwork_CoreNetworkEdgeProperty, aws_cdk_lib_aws_networkmanager_CfnCoreNetwork_CoreNetworkSegmentProperty, aws_cdk_lib_aws_networkmanager_CfnCustomerGatewayAssociationProps, aws_cdk_lib_aws_networkmanager_CfnCustomerGatewayAssociation, aws_cdk_lib_aws_networkmanager_CfnDeviceProps, aws_cdk_lib_aws_networkmanager_CfnDevice, aws_cdk_lib_aws_networkmanager_CfnDevice_LocationProperty, aws_cdk_lib_aws_networkmanager_CfnGlobalNetworkProps, aws_cdk_lib_aws_networkmanager_CfnGlobalNetwork, aws_cdk_lib_aws_networkmanager_CfnLinkProps, aws_cdk_lib_aws_networkmanager_CfnLink, aws_cdk_lib_aws_networkmanager_CfnLink_BandwidthProperty, aws_cdk_lib_aws_networkmanager_CfnLinkAssociationProps, aws_cdk_lib_aws_networkmanager_CfnLinkAssociation, aws_cdk_lib_aws_networkmanager_CfnSiteProps, aws_cdk_lib_aws_networkmanager_CfnSite, aws_cdk_lib_aws_networkmanager_CfnSite_LocationProperty, aws_cdk_lib_aws_networkmanager_CfnSiteToSiteVpnAttachmentProps, aws_cdk_lib_aws_networkmanager_CfnSiteToSiteVpnAttachment, aws_cdk_lib_aws_networkmanager_CfnSiteToSiteVpnAttachment_ProposedSegmentChangeProperty, aws_cdk_lib_aws_networkmanager_CfnTransitGatewayPeeringProps, aws_cdk_lib_aws_networkmanager_CfnTransitGatewayPeering, aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRegistrationProps, aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRegistration, aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRouteTableAttachmentProps, aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRouteTableAttachment, aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRouteTableAttachment_ProposedSegmentChangeProperty, aws_cdk_lib_aws_networkmanager_CfnVpcAttachmentProps, aws_cdk_lib_aws_networkmanager_CfnVpcAttachment, aws_cdk_lib_aws_networkmanager_CfnVpcAttachment_ProposedSegmentChangeProperty, aws_cdk_lib_aws_networkmanager_CfnVpcAttachment_VpcOptionsProperty, aws_cdk_lib_aws_nimblestudio_CfnLaunchProfileProps, aws_cdk_lib_aws_nimblestudio_CfnLaunchProfile, aws_cdk_lib_aws_nimblestudio_CfnLaunchProfile_StreamConfigurationProperty, aws_cdk_lib_aws_nimblestudio_CfnLaunchProfile_StreamConfigurationSessionBackupProperty, aws_cdk_lib_aws_nimblestudio_CfnLaunchProfile_StreamConfigurationSessionStorageProperty, aws_cdk_lib_aws_nimblestudio_CfnLaunchProfile_StreamingSessionStorageRootProperty, aws_cdk_lib_aws_nimblestudio_CfnLaunchProfile_VolumeConfigurationProperty, aws_cdk_lib_aws_nimblestudio_CfnStreamingImageProps, aws_cdk_lib_aws_nimblestudio_CfnStreamingImage, aws_cdk_lib_aws_nimblestudio_CfnStreamingImage_StreamingImageEncryptionConfigurationProperty, aws_cdk_lib_aws_nimblestudio_CfnStudioProps, aws_cdk_lib_aws_nimblestudio_CfnStudio, aws_cdk_lib_aws_nimblestudio_CfnStudio_StudioEncryptionConfigurationProperty, aws_cdk_lib_aws_nimblestudio_CfnStudioComponentProps, aws_cdk_lib_aws_nimblestudio_CfnStudioComponent, aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_ActiveDirectoryComputerAttributeProperty, aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_ActiveDirectoryConfigurationProperty, aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_ComputeFarmConfigurationProperty, aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_LicenseServiceConfigurationProperty, aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_ScriptParameterKeyValueProperty, aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_SharedFileSystemConfigurationProperty, aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_StudioComponentConfigurationProperty, aws_cdk_lib_aws_nimblestudio_CfnStudioComponent_StudioComponentInitializationScriptProperty, aws_cdk_lib_aws_oam_CfnLinkProps, aws_cdk_lib_aws_oam_CfnLink, aws_cdk_lib_aws_oam_CfnSinkProps, aws_cdk_lib_aws_oam_CfnSink, aws_cdk_lib_aws_omics_CfnAnnotationStoreProps, aws_cdk_lib_aws_omics_CfnAnnotationStore, aws_cdk_lib_aws_omics_CfnAnnotationStore_ReferenceItemProperty, aws_cdk_lib_aws_omics_CfnAnnotationStore_SseConfigProperty, aws_cdk_lib_aws_omics_CfnAnnotationStore_StoreOptionsProperty, aws_cdk_lib_aws_omics_CfnAnnotationStore_TsvStoreOptionsProperty, aws_cdk_lib_aws_omics_CfnReferenceStoreProps, aws_cdk_lib_aws_omics_CfnReferenceStore, aws_cdk_lib_aws_omics_CfnReferenceStore_SseConfigProperty, aws_cdk_lib_aws_omics_CfnRunGroupProps, aws_cdk_lib_aws_omics_CfnRunGroup, aws_cdk_lib_aws_omics_CfnSequenceStoreProps, aws_cdk_lib_aws_omics_CfnSequenceStore, aws_cdk_lib_aws_omics_CfnSequenceStore_SseConfigProperty, aws_cdk_lib_aws_omics_CfnVariantStoreProps, aws_cdk_lib_aws_omics_CfnVariantStore, aws_cdk_lib_aws_omics_CfnVariantStore_ReferenceItemProperty, aws_cdk_lib_aws_omics_CfnVariantStore_SseConfigProperty, aws_cdk_lib_aws_omics_CfnWorkflowProps, aws_cdk_lib_aws_omics_CfnWorkflow, aws_cdk_lib_aws_omics_CfnWorkflow_WorkflowParameterProperty, aws_cdk_lib_aws_opensearchserverless_CfnAccessPolicyProps, aws_cdk_lib_aws_opensearchserverless_CfnAccessPolicy, aws_cdk_lib_aws_opensearchserverless_CfnCollectionProps, aws_cdk_lib_aws_opensearchserverless_CfnCollection, aws_cdk_lib_aws_opensearchserverless_CfnSecurityConfigProps, aws_cdk_lib_aws_opensearchserverless_CfnSecurityConfig, aws_cdk_lib_aws_opensearchserverless_CfnSecurityConfig_SamlConfigOptionsProperty, aws_cdk_lib_aws_opensearchserverless_CfnSecurityPolicyProps, aws_cdk_lib_aws_opensearchserverless_CfnSecurityPolicy, aws_cdk_lib_aws_opensearchserverless_CfnVpcEndpointProps, aws_cdk_lib_aws_opensearchserverless_CfnVpcEndpoint, aws_cdk_lib_aws_opensearchservice_CapacityConfig, aws_cdk_lib_aws_opensearchservice_ZoneAwarenessConfig, aws_cdk_lib_aws_opensearchservice_EbsOptions, aws_cdk_lib_aws_opensearchservice_LoggingOptions, aws_cdk_lib_aws_opensearchservice_EncryptionAtRestOptions, aws_cdk_lib_aws_opensearchservice_CognitoOptions, aws_cdk_lib_aws_opensearchservice_TLSSecurityPolicy, aws_cdk_lib_aws_opensearchservice_AdvancedSecurityOptions, aws_cdk_lib_aws_opensearchservice_CustomEndpointOptions, aws_cdk_lib_aws_opensearchservice_DomainProps, aws_cdk_lib_aws_opensearchservice_IDomain, aws_cdk_lib_aws_opensearchservice_DomainAttributes, aws_cdk_lib_aws_opensearchservice_Domain, aws_cdk_lib_aws_opensearchservice_EngineVersion, aws_cdk_lib_aws_opensearchservice_CfnDomainProps, aws_cdk_lib_aws_opensearchservice_CfnDomain, aws_cdk_lib_aws_opensearchservice_CfnDomain_AdvancedSecurityOptionsInputProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_ClusterConfigProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_CognitoOptionsProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_DomainEndpointOptionsProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_EBSOptionsProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_EncryptionAtRestOptionsProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_IdpProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_LogPublishingOptionProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_MasterUserOptionsProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_NodeToNodeEncryptionOptionsProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_OffPeakWindowProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_OffPeakWindowOptionsProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_SAMLOptionsProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_ServiceSoftwareOptionsProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_SnapshotOptionsProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_SoftwareUpdateOptionsProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_VPCOptionsProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_WindowStartTimeProperty, aws_cdk_lib_aws_opensearchservice_CfnDomain_ZoneAwarenessConfigProperty, aws_cdk_lib_aws_opsworks_CfnAppProps, aws_cdk_lib_aws_opsworks_CfnApp, aws_cdk_lib_aws_opsworks_CfnApp_DataSourceProperty, aws_cdk_lib_aws_opsworks_CfnApp_EnvironmentVariableProperty, aws_cdk_lib_aws_opsworks_CfnApp_SourceProperty, aws_cdk_lib_aws_opsworks_CfnApp_SslConfigurationProperty, aws_cdk_lib_aws_opsworks_CfnElasticLoadBalancerAttachmentProps, aws_cdk_lib_aws_opsworks_CfnElasticLoadBalancerAttachment, aws_cdk_lib_aws_opsworks_CfnInstanceProps, aws_cdk_lib_aws_opsworks_CfnInstance, aws_cdk_lib_aws_opsworks_CfnInstance_BlockDeviceMappingProperty, aws_cdk_lib_aws_opsworks_CfnInstance_EbsBlockDeviceProperty, aws_cdk_lib_aws_opsworks_CfnInstance_TimeBasedAutoScalingProperty, aws_cdk_lib_aws_opsworks_CfnLayerProps, aws_cdk_lib_aws_opsworks_CfnLayer, aws_cdk_lib_aws_opsworks_CfnLayer_AutoScalingThresholdsProperty, aws_cdk_lib_aws_opsworks_CfnLayer_LifecycleEventConfigurationProperty, aws_cdk_lib_aws_opsworks_CfnLayer_LoadBasedAutoScalingProperty, aws_cdk_lib_aws_opsworks_CfnLayer_RecipesProperty, aws_cdk_lib_aws_opsworks_CfnLayer_ShutdownEventConfigurationProperty, aws_cdk_lib_aws_opsworks_CfnLayer_VolumeConfigurationProperty, aws_cdk_lib_aws_opsworks_CfnStackProps, aws_cdk_lib_aws_opsworks_CfnStack, aws_cdk_lib_aws_opsworks_CfnStack_ChefConfigurationProperty, aws_cdk_lib_aws_opsworks_CfnStack_ElasticIpProperty, aws_cdk_lib_aws_opsworks_CfnStack_RdsDbInstanceProperty, aws_cdk_lib_aws_opsworks_CfnStack_SourceProperty, aws_cdk_lib_aws_opsworks_CfnStack_StackConfigurationManagerProperty, aws_cdk_lib_aws_opsworks_CfnUserProfileProps, aws_cdk_lib_aws_opsworks_CfnUserProfile, aws_cdk_lib_aws_opsworks_CfnVolumeProps, aws_cdk_lib_aws_opsworks_CfnVolume, aws_cdk_lib_aws_opsworkscm_CfnServerProps, aws_cdk_lib_aws_opsworkscm_CfnServer, aws_cdk_lib_aws_opsworkscm_CfnServer_EngineAttributeProperty, aws_cdk_lib_aws_organizations_CfnAccountProps, aws_cdk_lib_aws_organizations_CfnAccount, aws_cdk_lib_aws_organizations_CfnOrganizationalUnitProps, aws_cdk_lib_aws_organizations_CfnOrganizationalUnit, aws_cdk_lib_aws_organizations_CfnPolicyProps, aws_cdk_lib_aws_organizations_CfnPolicy, aws_cdk_lib_aws_organizations_CfnResourcePolicyProps, aws_cdk_lib_aws_organizations_CfnResourcePolicy, aws_cdk_lib_aws_panorama_CfnApplicationInstanceProps, aws_cdk_lib_aws_panorama_CfnApplicationInstance, aws_cdk_lib_aws_panorama_CfnApplicationInstance_ManifestOverridesPayloadProperty, aws_cdk_lib_aws_panorama_CfnApplicationInstance_ManifestPayloadProperty, aws_cdk_lib_aws_panorama_CfnPackageProps, aws_cdk_lib_aws_panorama_CfnPackage, aws_cdk_lib_aws_panorama_CfnPackage_StorageLocationProperty, aws_cdk_lib_aws_panorama_CfnPackageVersionProps, aws_cdk_lib_aws_panorama_CfnPackageVersion, aws_cdk_lib_aws_personalize_CfnDatasetProps, aws_cdk_lib_aws_personalize_CfnDataset, aws_cdk_lib_aws_personalize_CfnDataset_DataSourceProperty, aws_cdk_lib_aws_personalize_CfnDataset_DatasetImportJobProperty, aws_cdk_lib_aws_personalize_CfnDatasetGroupProps, aws_cdk_lib_aws_personalize_CfnDatasetGroup, aws_cdk_lib_aws_personalize_CfnSchemaProps, aws_cdk_lib_aws_personalize_CfnSchema, aws_cdk_lib_aws_personalize_CfnSolutionProps, aws_cdk_lib_aws_personalize_CfnSolution, aws_cdk_lib_aws_personalize_CfnSolution_AlgorithmHyperParameterRangesProperty, aws_cdk_lib_aws_personalize_CfnSolution_AutoMLConfigProperty, aws_cdk_lib_aws_personalize_CfnSolution_CategoricalHyperParameterRangeProperty, aws_cdk_lib_aws_personalize_CfnSolution_ContinuousHyperParameterRangeProperty, aws_cdk_lib_aws_personalize_CfnSolution_HpoConfigProperty, aws_cdk_lib_aws_personalize_CfnSolution_HpoObjectiveProperty, aws_cdk_lib_aws_personalize_CfnSolution_HpoResourceConfigProperty, aws_cdk_lib_aws_personalize_CfnSolution_IntegerHyperParameterRangeProperty, aws_cdk_lib_aws_personalize_CfnSolution_SolutionConfigProperty, aws_cdk_lib_aws_pinpoint_CfnADMChannelProps, aws_cdk_lib_aws_pinpoint_CfnADMChannel, aws_cdk_lib_aws_pinpoint_CfnAPNSChannelProps, aws_cdk_lib_aws_pinpoint_CfnAPNSChannel, aws_cdk_lib_aws_pinpoint_CfnAPNSSandboxChannelProps, aws_cdk_lib_aws_pinpoint_CfnAPNSSandboxChannel, aws_cdk_lib_aws_pinpoint_CfnAPNSVoipChannelProps, aws_cdk_lib_aws_pinpoint_CfnAPNSVoipChannel, aws_cdk_lib_aws_pinpoint_CfnAPNSVoipSandboxChannelProps, aws_cdk_lib_aws_pinpoint_CfnAPNSVoipSandboxChannel, aws_cdk_lib_aws_pinpoint_CfnAppProps, aws_cdk_lib_aws_pinpoint_CfnApp, aws_cdk_lib_aws_pinpoint_CfnApplicationSettingsProps, aws_cdk_lib_aws_pinpoint_CfnApplicationSettings, aws_cdk_lib_aws_pinpoint_CfnApplicationSettings_CampaignHookProperty, aws_cdk_lib_aws_pinpoint_CfnApplicationSettings_LimitsProperty, aws_cdk_lib_aws_pinpoint_CfnApplicationSettings_QuietTimeProperty, aws_cdk_lib_aws_pinpoint_CfnBaiduChannelProps, aws_cdk_lib_aws_pinpoint_CfnBaiduChannel, aws_cdk_lib_aws_pinpoint_CfnCampaignProps, aws_cdk_lib_aws_pinpoint_CfnCampaign, aws_cdk_lib_aws_pinpoint_CfnCampaign_AttributeDimensionProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_CampaignCustomMessageProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_CampaignEmailMessageProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_CampaignEventFilterProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_CampaignHookProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_CampaignInAppMessageProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_CampaignSmsMessageProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_CustomDeliveryConfigurationProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_DefaultButtonConfigurationProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_EventDimensionsProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_InAppMessageBodyConfigProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_InAppMessageButtonProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_InAppMessageContentProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_InAppMessageHeaderConfigProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_LimitsProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_MessageProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_MessageConfigurationProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_MetricDimensionProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_OverrideButtonConfigurationProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_QuietTimeProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_ScheduleProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_SetDimensionProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_TemplateProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_TemplateConfigurationProperty, aws_cdk_lib_aws_pinpoint_CfnCampaign_WriteTreatmentResourceProperty, aws_cdk_lib_aws_pinpoint_CfnEmailChannelProps, aws_cdk_lib_aws_pinpoint_CfnEmailChannel, aws_cdk_lib_aws_pinpoint_CfnEmailTemplateProps, aws_cdk_lib_aws_pinpoint_CfnEmailTemplate, aws_cdk_lib_aws_pinpoint_CfnEventStreamProps, aws_cdk_lib_aws_pinpoint_CfnEventStream, aws_cdk_lib_aws_pinpoint_CfnGCMChannelProps, aws_cdk_lib_aws_pinpoint_CfnGCMChannel, aws_cdk_lib_aws_pinpoint_CfnInAppTemplateProps, aws_cdk_lib_aws_pinpoint_CfnInAppTemplate, aws_cdk_lib_aws_pinpoint_CfnInAppTemplate_BodyConfigProperty, aws_cdk_lib_aws_pinpoint_CfnInAppTemplate_ButtonConfigProperty, aws_cdk_lib_aws_pinpoint_CfnInAppTemplate_DefaultButtonConfigurationProperty, aws_cdk_lib_aws_pinpoint_CfnInAppTemplate_HeaderConfigProperty, aws_cdk_lib_aws_pinpoint_CfnInAppTemplate_InAppMessageContentProperty, aws_cdk_lib_aws_pinpoint_CfnInAppTemplate_OverrideButtonConfigurationProperty, aws_cdk_lib_aws_pinpoint_CfnPushTemplateProps, aws_cdk_lib_aws_pinpoint_CfnPushTemplate, aws_cdk_lib_aws_pinpoint_CfnPushTemplate_APNSPushNotificationTemplateProperty, aws_cdk_lib_aws_pinpoint_CfnPushTemplate_AndroidPushNotificationTemplateProperty, aws_cdk_lib_aws_pinpoint_CfnPushTemplate_DefaultPushNotificationTemplateProperty, aws_cdk_lib_aws_pinpoint_CfnSMSChannelProps, aws_cdk_lib_aws_pinpoint_CfnSMSChannel, aws_cdk_lib_aws_pinpoint_CfnSegmentProps, aws_cdk_lib_aws_pinpoint_CfnSegment, aws_cdk_lib_aws_pinpoint_CfnSegment_AttributeDimensionProperty, aws_cdk_lib_aws_pinpoint_CfnSegment_BehaviorProperty, aws_cdk_lib_aws_pinpoint_CfnSegment_CoordinatesProperty, aws_cdk_lib_aws_pinpoint_CfnSegment_DemographicProperty, aws_cdk_lib_aws_pinpoint_CfnSegment_GPSPointProperty, aws_cdk_lib_aws_pinpoint_CfnSegment_GroupsProperty, aws_cdk_lib_aws_pinpoint_CfnSegment_LocationProperty, aws_cdk_lib_aws_pinpoint_CfnSegment_RecencyProperty, aws_cdk_lib_aws_pinpoint_CfnSegment_SegmentDimensionsProperty, aws_cdk_lib_aws_pinpoint_CfnSegment_SegmentGroupsProperty, aws_cdk_lib_aws_pinpoint_CfnSegment_SetDimensionProperty, aws_cdk_lib_aws_pinpoint_CfnSegment_SourceSegmentsProperty, aws_cdk_lib_aws_pinpoint_CfnSmsTemplateProps, aws_cdk_lib_aws_pinpoint_CfnSmsTemplate, aws_cdk_lib_aws_pinpoint_CfnVoiceChannelProps, aws_cdk_lib_aws_pinpoint_CfnVoiceChannel, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetProps, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet_DeliveryOptionsProperty, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet_ReputationOptionsProperty, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet_SendingOptionsProperty, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet_TagsProperty, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSet_TrackingOptionsProperty, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestinationProps, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination_CloudWatchDestinationProperty, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination_DimensionConfigurationProperty, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination_EventDestinationProperty, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination_KinesisFirehoseDestinationProperty, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination_PinpointDestinationProperty, aws_cdk_lib_aws_pinpointemail_CfnConfigurationSetEventDestination_SnsDestinationProperty, aws_cdk_lib_aws_pinpointemail_CfnDedicatedIpPoolProps, aws_cdk_lib_aws_pinpointemail_CfnDedicatedIpPool, aws_cdk_lib_aws_pinpointemail_CfnDedicatedIpPool_TagsProperty, aws_cdk_lib_aws_pinpointemail_CfnIdentityProps, aws_cdk_lib_aws_pinpointemail_CfnIdentity, aws_cdk_lib_aws_pinpointemail_CfnIdentity_MailFromAttributesProperty, aws_cdk_lib_aws_pinpointemail_CfnIdentity_TagsProperty, aws_cdk_lib_aws_pipes_CfnPipeProps, aws_cdk_lib_aws_pipes_CfnPipe, aws_cdk_lib_aws_pipes_CfnPipe_AwsVpcConfigurationProperty, aws_cdk_lib_aws_pipes_CfnPipe_BatchArrayPropertiesProperty, aws_cdk_lib_aws_pipes_CfnPipe_BatchContainerOverridesProperty, aws_cdk_lib_aws_pipes_CfnPipe_BatchEnvironmentVariableProperty, aws_cdk_lib_aws_pipes_CfnPipe_BatchJobDependencyProperty, aws_cdk_lib_aws_pipes_CfnPipe_BatchResourceRequirementProperty, aws_cdk_lib_aws_pipes_CfnPipe_BatchRetryStrategyProperty, aws_cdk_lib_aws_pipes_CfnPipe_CapacityProviderStrategyItemProperty, aws_cdk_lib_aws_pipes_CfnPipe_DeadLetterConfigProperty, aws_cdk_lib_aws_pipes_CfnPipe_EcsContainerOverrideProperty, aws_cdk_lib_aws_pipes_CfnPipe_EcsEnvironmentFileProperty, aws_cdk_lib_aws_pipes_CfnPipe_EcsEnvironmentVariableProperty, aws_cdk_lib_aws_pipes_CfnPipe_EcsEphemeralStorageProperty, aws_cdk_lib_aws_pipes_CfnPipe_EcsInferenceAcceleratorOverrideProperty, aws_cdk_lib_aws_pipes_CfnPipe_EcsResourceRequirementProperty, aws_cdk_lib_aws_pipes_CfnPipe_EcsTaskOverrideProperty, aws_cdk_lib_aws_pipes_CfnPipe_FilterProperty, aws_cdk_lib_aws_pipes_CfnPipe_FilterCriteriaProperty, aws_cdk_lib_aws_pipes_CfnPipe_MQBrokerAccessCredentialsProperty, aws_cdk_lib_aws_pipes_CfnPipe_MSKAccessCredentialsProperty, aws_cdk_lib_aws_pipes_CfnPipe_NetworkConfigurationProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeEnrichmentHttpParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeEnrichmentParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceActiveMQBrokerParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceDynamoDBStreamParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceKinesisStreamParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceManagedStreamingKafkaParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceRabbitMQBrokerParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceSelfManagedKafkaParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeSourceSqsQueueParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetBatchJobParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetCloudWatchLogsParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetEcsTaskParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetEventBridgeEventBusParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetHttpParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetKinesisStreamParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetLambdaFunctionParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetRedshiftDataParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetSageMakerPipelineParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetSqsQueueParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PipeTargetStateMachineParametersProperty, aws_cdk_lib_aws_pipes_CfnPipe_PlacementConstraintProperty, aws_cdk_lib_aws_pipes_CfnPipe_PlacementStrategyProperty, aws_cdk_lib_aws_pipes_CfnPipe_SageMakerPipelineParameterProperty, aws_cdk_lib_aws_pipes_CfnPipe_SelfManagedKafkaAccessConfigurationCredentialsProperty, aws_cdk_lib_aws_pipes_CfnPipe_SelfManagedKafkaAccessConfigurationVpcProperty, aws_cdk_lib_aws_qldb_CfnLedgerProps, aws_cdk_lib_aws_qldb_CfnLedger, aws_cdk_lib_aws_qldb_CfnStreamProps, aws_cdk_lib_aws_qldb_CfnStream, aws_cdk_lib_aws_qldb_CfnStream_KinesisConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysisProps, aws_cdk_lib_aws_quicksight_CfnAnalysis, aws_cdk_lib_aws_quicksight_CfnAnalysis_AggregationFunctionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AggregationSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AnalysisDefaultsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AnalysisDefinitionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AnalysisErrorProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AnalysisSourceEntityProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AnalysisSourceTemplateProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AnchorDateConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ArcAxisConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ArcAxisDisplayRangeProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ArcConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ArcOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisDataOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisDisplayMinMaxRangeProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisDisplayRangeProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisLabelReferenceOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisLinearScaleProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisLogarithmicScaleProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisScaleProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_AxisTickLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BarChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BarChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BarChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BarChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BarChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BinCountOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BinWidthOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BodySectionConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BodySectionContentProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotStyleOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_BoxPlotVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CalculatedFieldProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CalculatedMeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CascadingControlConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CascadingControlSourceProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CategoricalDimensionFieldProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CategoricalMeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CategoryDrillDownFilterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CategoryFilterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CategoryFilterConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ChartAxisLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ClusterMarkerProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ClusterMarkerConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ColorScaleProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ColorsConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ColumnConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ColumnHierarchyProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ColumnIdentifierProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ColumnSortProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ColumnTooltipItemProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ComboChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ComboChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ComboChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ComboChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ComboChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ComparisonConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ComparisonFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ComputationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingColorProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingCustomIconConditionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingCustomIconOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingGradientColorProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingIconProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingIconDisplayConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingIconSetProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ConditionalFormattingSolidColorProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ContributionAnalysisDefaultProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CurrencyDisplayFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomActionFilterOperationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomActionNavigationOperationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomActionSetParametersOperationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomActionURLOperationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomColorProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomContentConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomContentVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomFilterConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomFilterListConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomNarrativeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomParameterValuesProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_CustomValuesConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DataBarsOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DataColorProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DataFieldSeriesItemProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DataLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DataLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DataPathColorProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DataPathLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DataPathSortProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DataPathValueProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DataSetIdentifierDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DataSetReferenceProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DateAxisOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DateDimensionFieldProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DateMeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimeDefaultValuesProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimeFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimeHierarchyProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimeParameterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimeParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimePickerControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DateTimeValueWhenUnsetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DecimalDefaultValuesProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DecimalParameterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DecimalParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DecimalPlacesConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DecimalValueWhenUnsetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DefaultFreeFormLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DefaultGridLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DefaultInteractiveLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DefaultNewSheetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DefaultPaginatedLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DefaultSectionBasedLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DestinationParameterValueConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DimensionFieldProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DonutCenterOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DonutOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DrillDownFilterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DropDownControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_DynamicDefaultValueProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_EmptyVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_EntityProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ExcludePeriodConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ExplicitHierarchyProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FieldBasedTooltipProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FieldLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FieldSeriesItemProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FieldSortProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FieldSortOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FieldTooltipItemProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapShapeConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilledMapVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterDateTimePickerControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterDropDownControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterGroupProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterListConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterListControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterOperationSelectedFieldsConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterOperationTargetVisualsConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterRelativeDateTimeControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterScopeConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterSelectableValuesProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterSliderControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterTextAreaControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FilterTextFieldControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FontConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FontSizeProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FontWeightProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ForecastComputationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ForecastConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ForecastScenarioProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormLayoutCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormLayoutElementProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormLayoutElementBackgroundStyleProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormLayoutElementBorderStyleProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormLayoutScreenCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FreeFormSectionLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FunnelChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FunnelChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FunnelChartDataLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FunnelChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FunnelChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_FunnelChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartArcConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartPrimaryValueConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GaugeChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialCoordinateBoundsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialMapAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialMapConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialMapFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialMapStyleOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialMapVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialPointStyleOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GeospatialWindowOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GlobalTableBorderOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GradientColorProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GradientStopProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GridLayoutCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GridLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GridLayoutElementProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GridLayoutScreenCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_GrowthRateComputationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_HeaderFooterSectionConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_HeatMapAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_HeatMapConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_HeatMapFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_HeatMapSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_HeatMapVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_HistogramAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_HistogramBinOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_HistogramConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_HistogramFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_HistogramVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_InsightConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_InsightVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_IntegerDefaultValuesProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_IntegerParameterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_IntegerParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_IntegerValueWhenUnsetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ItemsLimitConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIPrimaryValueConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIProgressBarConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_KPISortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_KPIVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LayoutProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LegendOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartDefaultSeriesSettingsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartLineStyleSettingsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartMarkerStyleSettingsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartSeriesSettingsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LineChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LineSeriesAxisDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ListControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ListControlSearchOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ListControlSelectAllOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LoadingAnimationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LocalNavigationConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_LongFormatTextProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_MappedDataSetParameterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_MaximumLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_MaximumMinimumComputationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_MeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_MetricComparisonComputationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_MinimumLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_MissingDataConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NegativeValueConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NullValueFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NumberDisplayFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NumberFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericAxisOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericEqualityDrillDownFilterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericEqualityFilterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericRangeFilterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericRangeFilterValueProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericSeparatorConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericalAggregationFunctionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericalDimensionFieldProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_NumericalMeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PaginationConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PanelConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PanelTitleOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterDateTimePickerControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterDropDownControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterListControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterSelectableValuesProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterSliderControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterTextAreaControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ParameterTextFieldControlProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ParametersProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PercentVisibleRangeProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PercentageDisplayFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PercentileAggregationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PeriodOverPeriodComputationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PeriodToDateComputationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PieChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PieChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PieChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PieChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PieChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotFieldSortOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableCellConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableConditionalFormattingScopeProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableDataPathOptionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableFieldOptionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableFieldOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableFieldSubtotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTablePaginatedReportOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableSortByProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableTotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTableVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PivotTotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_PredefinedHierarchyProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ProgressBarOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartAreaStyleSettingsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartSeriesSettingsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_RadarChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_RangeEndsLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineCustomLabelConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineDataConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineDynamicDataConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineLabelConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineStaticDataConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineStyleConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ReferenceLineValueLabelConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_RelativeDateTimeControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_RelativeDatesFilterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ResourcePermissionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_RollingDateConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_RowAlternateColorOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SameSheetTargetVisualConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SankeyDiagramAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SankeyDiagramChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SankeyDiagramFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SankeyDiagramSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SankeyDiagramVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ScatterPlotCategoricallyAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ScatterPlotConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ScatterPlotFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ScatterPlotUnaggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ScatterPlotVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ScrollBarOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SecondaryValueOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionAfterPageBreakProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionBasedLayoutCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionBasedLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionBasedLayoutPaperCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionPageBreakConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SectionStyleProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SelectedSheetsFilterScopeConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SeriesItemProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SetParameterValueConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ShapeConditionalFormatProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetControlLayoutProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetControlLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetDefinitionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetElementConfigurationOverridesProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetElementRenderingRuleProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetTextBoxProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SheetVisualScopingConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ShortFormatTextProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SimpleClusterMarkerProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SliderControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SmallMultiplesOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SpacingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_StringDefaultValuesProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_StringFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_StringParameterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_StringParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_StringValueWhenUnsetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_SubtotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableBorderOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableCellConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableCellImageSizingConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableCellStyleProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldCustomIconContentProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldCustomTextContentProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldImageConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldLinkConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldLinkContentConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldOptionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldURLConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableInlineVisualizationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TablePaginatedReportOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableRowConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableSideBorderOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableUnaggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TableVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TextAreaControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TextConditionalFormatProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TextControlPlaceholderOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TextFieldControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_ThousandSeparatorOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TimeBasedForecastPropertiesProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TimeEqualityFilterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TimeRangeDrillDownFilterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TimeRangeFilterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TimeRangeFilterValueProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TooltipItemProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TooltipOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TopBottomFilterProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TopBottomMoversComputationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TopBottomRankedComputationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TotalAggregationComputationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TreeMapAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TreeMapConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TreeMapFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TreeMapSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TreeMapVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_TrendArrowOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_UnaggregatedFieldProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_UniqueValuesComputationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_VisibleRangeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_VisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_VisualCustomActionProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_VisualCustomActionOperationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_VisualPaletteProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_VisualSubtitleLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_VisualTitleLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WaterfallChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WaterfallChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WaterfallChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WaterfallChartOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WaterfallChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WaterfallVisualProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WhatIfPointScenarioProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WhatIfRangeScenarioProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WordCloudAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WordCloudChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WordCloudFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WordCloudOptionsProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WordCloudSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnAnalysis_WordCloudVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboardProps, aws_cdk_lib_aws_quicksight_CfnDashboard, aws_cdk_lib_aws_quicksight_CfnDashboard_AdHocFilteringOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AggregationFunctionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AggregationSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AnalysisDefaultsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AnchorDateConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ArcAxisConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ArcAxisDisplayRangeProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ArcConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ArcOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AxisDataOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AxisDisplayMinMaxRangeProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AxisDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AxisDisplayRangeProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AxisLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AxisLabelReferenceOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AxisLinearScaleProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AxisLogarithmicScaleProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AxisScaleProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_AxisTickLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BarChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BarChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BarChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BarChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BarChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BinCountOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BinWidthOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BodySectionConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BodySectionContentProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotStyleOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_BoxPlotVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CalculatedFieldProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CalculatedMeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CascadingControlConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CascadingControlSourceProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CategoricalDimensionFieldProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CategoricalMeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CategoryDrillDownFilterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CategoryFilterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CategoryFilterConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ChartAxisLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ClusterMarkerProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ClusterMarkerConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ColorScaleProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ColorsConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ColumnConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ColumnHierarchyProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ColumnIdentifierProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ColumnSortProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ColumnTooltipItemProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ComboChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ComboChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ComboChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ComboChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ComboChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ComparisonConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ComparisonFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ComputationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingColorProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingCustomIconConditionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingCustomIconOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingGradientColorProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingIconProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingIconDisplayConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingIconSetProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ConditionalFormattingSolidColorProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ContributionAnalysisDefaultProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CurrencyDisplayFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CustomActionFilterOperationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CustomActionNavigationOperationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CustomActionSetParametersOperationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CustomActionURLOperationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CustomColorProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CustomContentConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CustomContentVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CustomFilterConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CustomFilterListConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CustomNarrativeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CustomParameterValuesProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_CustomValuesConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardErrorProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardPublishOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardSourceEntityProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardSourceTemplateProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardVersionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardVersionDefinitionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DashboardVisualPublishOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataBarsOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataColorProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataFieldSeriesItemProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataPathColorProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataPathLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataPathSortProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataPathValueProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataPointDrillUpDownOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataPointMenuLabelOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataPointTooltipOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataSetIdentifierDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DataSetReferenceProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DateAxisOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DateDimensionFieldProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DateMeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimeDefaultValuesProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimeFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimeHierarchyProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimeParameterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimeParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimePickerControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DateTimeValueWhenUnsetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DecimalDefaultValuesProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DecimalParameterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DecimalParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DecimalPlacesConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DecimalValueWhenUnsetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DefaultFreeFormLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DefaultGridLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DefaultInteractiveLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DefaultNewSheetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DefaultPaginatedLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DefaultSectionBasedLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DestinationParameterValueConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DimensionFieldProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DonutCenterOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DonutOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DrillDownFilterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DropDownControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_DynamicDefaultValueProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_EmptyVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_EntityProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ExcludePeriodConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ExplicitHierarchyProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ExportHiddenFieldsOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ExportToCSVOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ExportWithHiddenFieldsOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FieldBasedTooltipProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FieldLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FieldSeriesItemProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FieldSortProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FieldSortOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FieldTooltipItemProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapShapeConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilledMapVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterDateTimePickerControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterDropDownControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterGroupProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterListConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterListControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterOperationSelectedFieldsConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterOperationTargetVisualsConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterRelativeDateTimeControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterScopeConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterSelectableValuesProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterSliderControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterTextAreaControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FilterTextFieldControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FontConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FontSizeProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FontWeightProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ForecastComputationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ForecastConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ForecastScenarioProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormLayoutCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormLayoutElementProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormLayoutElementBackgroundStyleProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormLayoutElementBorderStyleProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormLayoutScreenCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FreeFormSectionLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FunnelChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FunnelChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FunnelChartDataLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FunnelChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FunnelChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_FunnelChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartArcConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartPrimaryValueConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GaugeChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialCoordinateBoundsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialMapAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialMapConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialMapFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialMapStyleOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialMapVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialPointStyleOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GeospatialWindowOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GlobalTableBorderOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GradientColorProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GradientStopProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GridLayoutCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GridLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GridLayoutElementProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GridLayoutScreenCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_GrowthRateComputationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_HeaderFooterSectionConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_HeatMapAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_HeatMapConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_HeatMapFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_HeatMapSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_HeatMapVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_HistogramAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_HistogramBinOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_HistogramConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_HistogramFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_HistogramVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_InsightConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_InsightVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_IntegerDefaultValuesProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_IntegerParameterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_IntegerParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_IntegerValueWhenUnsetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ItemsLimitConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_KPIConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_KPIConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_KPIConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_KPIFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_KPIOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_KPIPrimaryValueConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_KPIProgressBarConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_KPISortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_KPIVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LayoutProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LegendOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartDefaultSeriesSettingsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartLineStyleSettingsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartMarkerStyleSettingsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartSeriesSettingsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LineChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LineSeriesAxisDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ListControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ListControlSearchOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ListControlSelectAllOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LoadingAnimationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LocalNavigationConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_LongFormatTextProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_MappedDataSetParameterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_MaximumLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_MaximumMinimumComputationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_MeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_MetricComparisonComputationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_MinimumLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_MissingDataConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NegativeValueConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NullValueFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NumberDisplayFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NumberFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NumericAxisOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NumericEqualityDrillDownFilterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NumericEqualityFilterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NumericFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NumericRangeFilterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NumericRangeFilterValueProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NumericSeparatorConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NumericalAggregationFunctionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NumericalDimensionFieldProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_NumericalMeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PaginationConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PanelConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PanelTitleOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterDateTimePickerControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterDropDownControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterListControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterSelectableValuesProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterSliderControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterTextAreaControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ParameterTextFieldControlProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ParametersProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PercentVisibleRangeProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PercentageDisplayFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PercentileAggregationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PeriodOverPeriodComputationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PeriodToDateComputationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PieChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PieChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PieChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PieChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PieChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotFieldSortOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableCellConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableConditionalFormattingScopeProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableDataPathOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableFieldOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableFieldOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableFieldSubtotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTablePaginatedReportOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableSortByProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableTotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTableVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PivotTotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_PredefinedHierarchyProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ProgressBarOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartAreaStyleSettingsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartSeriesSettingsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_RadarChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_RangeEndsLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineCustomLabelConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineDataConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineDynamicDataConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineLabelConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineStaticDataConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineStyleConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ReferenceLineValueLabelConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_RelativeDateTimeControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_RelativeDatesFilterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ResourcePermissionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_RollingDateConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_RowAlternateColorOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SameSheetTargetVisualConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SankeyDiagramAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SankeyDiagramChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SankeyDiagramFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SankeyDiagramSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SankeyDiagramVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ScatterPlotCategoricallyAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ScatterPlotConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ScatterPlotFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ScatterPlotUnaggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ScatterPlotVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ScrollBarOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SecondaryValueOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SectionAfterPageBreakProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SectionBasedLayoutCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SectionBasedLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SectionBasedLayoutPaperCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SectionLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SectionPageBreakConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SectionStyleProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SelectedSheetsFilterScopeConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SeriesItemProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SetParameterValueConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ShapeConditionalFormatProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SheetProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SheetControlLayoutProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SheetControlLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SheetControlsOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SheetDefinitionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SheetElementConfigurationOverridesProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SheetElementRenderingRuleProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SheetLayoutElementMaximizationOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SheetTextBoxProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SheetVisualScopingConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ShortFormatTextProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SimpleClusterMarkerProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SliderControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SmallMultiplesOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SpacingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_StringDefaultValuesProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_StringFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_StringParameterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_StringParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_StringValueWhenUnsetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_SubtotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableBorderOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableCellConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableCellImageSizingConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableCellStyleProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldCustomIconContentProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldCustomTextContentProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldImageConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldLinkConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldLinkContentConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldURLConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableInlineVisualizationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TablePaginatedReportOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableRowConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableSideBorderOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableUnaggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TableVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TextAreaControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TextConditionalFormatProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TextControlPlaceholderOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TextFieldControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_ThousandSeparatorOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TimeBasedForecastPropertiesProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TimeEqualityFilterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TimeRangeDrillDownFilterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TimeRangeFilterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TimeRangeFilterValueProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TooltipItemProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TooltipOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TopBottomFilterProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TopBottomMoversComputationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TopBottomRankedComputationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TotalAggregationComputationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TreeMapAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TreeMapConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TreeMapFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TreeMapSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TreeMapVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_TrendArrowOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_UnaggregatedFieldProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_UniqueValuesComputationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_VisibleRangeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_VisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_VisualAxisSortOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_VisualCustomActionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_VisualCustomActionOperationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_VisualMenuOptionProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_VisualPaletteProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_VisualSubtitleLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_VisualTitleLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WaterfallChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WaterfallChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WaterfallChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WaterfallChartOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WaterfallChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WaterfallVisualProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WhatIfPointScenarioProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WhatIfRangeScenarioProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WordCloudAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WordCloudChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WordCloudFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WordCloudOptionsProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WordCloudSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDashboard_WordCloudVisualProperty, aws_cdk_lib_aws_quicksight_CfnDataSetProps, aws_cdk_lib_aws_quicksight_CfnDataSet, aws_cdk_lib_aws_quicksight_CfnDataSet_CalculatedColumnProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_CastColumnTypeOperationProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_ColumnDescriptionProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_ColumnGroupProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_ColumnLevelPermissionRuleProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_ColumnTagProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_CreateColumnsOperationProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_CustomSqlProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_DataSetUsageConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_FieldFolderProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_FilterOperationProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_GeoSpatialColumnGroupProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_IngestionWaitPolicyProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_InputColumnProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_JoinInstructionProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_JoinKeyPropertiesProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_LogicalTableProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_LogicalTableSourceProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_OutputColumnProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_PhysicalTableProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_ProjectOperationProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_RelationalTableProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_RenameColumnOperationProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_ResourcePermissionProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_RowLevelPermissionDataSetProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_S3SourceProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_TagColumnOperationProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_TransformOperationProperty, aws_cdk_lib_aws_quicksight_CfnDataSet_UploadSettingsProperty, aws_cdk_lib_aws_quicksight_CfnDataSourceProps, aws_cdk_lib_aws_quicksight_CfnDataSource, aws_cdk_lib_aws_quicksight_CfnDataSource_AmazonElasticsearchParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_AmazonOpenSearchParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_AthenaParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_AuroraParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_AuroraPostgreSqlParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_CredentialPairProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_DataSourceCredentialsProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_DataSourceErrorInfoProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_DataSourceParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_DatabricksParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_ManifestFileLocationProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_MariaDbParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_MySqlParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_OracleParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_PostgreSqlParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_PrestoParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_RdsParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_RedshiftParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_ResourcePermissionProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_S3ParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_SnowflakeParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_SparkParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_SqlServerParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_SslPropertiesProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_TeradataParametersProperty, aws_cdk_lib_aws_quicksight_CfnDataSource_VpcConnectionPropertiesProperty, aws_cdk_lib_aws_quicksight_CfnTemplateProps, aws_cdk_lib_aws_quicksight_CfnTemplate, aws_cdk_lib_aws_quicksight_CfnTemplate_AggregationFunctionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AggregationSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AnalysisDefaultsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AnchorDateConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ArcAxisConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ArcAxisDisplayRangeProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ArcConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ArcOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AxisDataOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AxisDisplayMinMaxRangeProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AxisDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AxisDisplayRangeProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AxisLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AxisLabelReferenceOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AxisLinearScaleProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AxisLogarithmicScaleProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AxisScaleProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_AxisTickLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BarChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BarChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BarChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BarChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BarChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BinCountOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BinWidthOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BodySectionConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BodySectionContentProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotStyleOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_BoxPlotVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CalculatedFieldProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CalculatedMeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CascadingControlConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CascadingControlSourceProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CategoricalDimensionFieldProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CategoricalMeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CategoryDrillDownFilterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CategoryFilterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CategoryFilterConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ChartAxisLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ClusterMarkerProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ClusterMarkerConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ColorScaleProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ColorsConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnGroupColumnSchemaProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnGroupSchemaProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnHierarchyProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnIdentifierProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnSchemaProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnSortProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ColumnTooltipItemProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ComboChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ComboChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ComboChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ComboChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ComboChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ComparisonConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ComparisonFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ComputationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingColorProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingCustomIconConditionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingCustomIconOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingGradientColorProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingIconProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingIconDisplayConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingIconSetProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ConditionalFormattingSolidColorProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ContributionAnalysisDefaultProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CurrencyDisplayFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CustomActionFilterOperationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CustomActionNavigationOperationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CustomActionSetParametersOperationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CustomActionURLOperationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CustomColorProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CustomContentConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CustomContentVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CustomFilterConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CustomFilterListConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CustomNarrativeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CustomParameterValuesProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_CustomValuesConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DataBarsOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DataColorProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DataFieldSeriesItemProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DataLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DataLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DataPathColorProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DataPathLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DataPathSortProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DataPathValueProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DataSetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DataSetReferenceProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DataSetSchemaProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DateAxisOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DateDimensionFieldProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DateMeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DateTimeDefaultValuesProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DateTimeFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DateTimeHierarchyProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DateTimeParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DateTimePickerControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DateTimeValueWhenUnsetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DecimalDefaultValuesProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DecimalParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DecimalPlacesConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DecimalValueWhenUnsetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DefaultFreeFormLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DefaultGridLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DefaultInteractiveLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DefaultNewSheetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DefaultPaginatedLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DefaultSectionBasedLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DestinationParameterValueConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DimensionFieldProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DonutCenterOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DonutOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DrillDownFilterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DropDownControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_DynamicDefaultValueProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_EmptyVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_EntityProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ExcludePeriodConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ExplicitHierarchyProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FieldBasedTooltipProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FieldLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FieldSeriesItemProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FieldSortProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FieldSortOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FieldTooltipItemProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapShapeConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilledMapVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterDateTimePickerControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterDropDownControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterGroupProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterListConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterListControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterOperationSelectedFieldsConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterOperationTargetVisualsConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterRelativeDateTimeControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterScopeConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterSelectableValuesProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterSliderControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterTextAreaControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FilterTextFieldControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FontConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FontSizeProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FontWeightProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ForecastComputationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ForecastConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ForecastScenarioProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormLayoutCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormLayoutElementProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormLayoutElementBackgroundStyleProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormLayoutElementBorderStyleProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormLayoutScreenCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FreeFormSectionLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FunnelChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FunnelChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FunnelChartDataLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FunnelChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FunnelChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_FunnelChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartArcConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartPrimaryValueConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GaugeChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialCoordinateBoundsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialMapAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialMapConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialMapFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialMapStyleOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialMapVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialPointStyleOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GeospatialWindowOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GlobalTableBorderOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GradientColorProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GradientStopProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GridLayoutCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GridLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GridLayoutElementProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GridLayoutScreenCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_GrowthRateComputationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_HeaderFooterSectionConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_HeatMapAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_HeatMapConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_HeatMapFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_HeatMapSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_HeatMapVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_HistogramAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_HistogramBinOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_HistogramConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_HistogramFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_HistogramVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_InsightConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_InsightVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_IntegerDefaultValuesProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_IntegerParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_IntegerValueWhenUnsetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ItemsLimitConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_KPIConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_KPIConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_KPIConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_KPIFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_KPIOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_KPIPrimaryValueConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_KPIProgressBarConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_KPISortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_KPIVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LayoutProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LegendOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartDefaultSeriesSettingsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartLineStyleSettingsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartMarkerStyleSettingsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartSeriesSettingsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LineChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LineSeriesAxisDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ListControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ListControlSearchOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ListControlSelectAllOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LoadingAnimationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LocalNavigationConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_LongFormatTextProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_MappedDataSetParameterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_MaximumLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_MaximumMinimumComputationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_MeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_MetricComparisonComputationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_MinimumLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_MissingDataConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NegativeValueConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NullValueFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NumberDisplayFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NumberFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NumericAxisOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NumericEqualityDrillDownFilterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NumericEqualityFilterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NumericFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NumericRangeFilterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NumericRangeFilterValueProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NumericSeparatorConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NumericalAggregationFunctionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NumericalDimensionFieldProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_NumericalMeasureFieldProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PaginationConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PanelConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PanelTitleOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterDateTimePickerControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterDropDownControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterListControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterSelectableValuesProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterSliderControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterTextAreaControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ParameterTextFieldControlProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PercentVisibleRangeProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PercentageDisplayFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PercentileAggregationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PeriodOverPeriodComputationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PeriodToDateComputationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PieChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PieChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PieChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PieChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PieChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotFieldSortOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableCellConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableConditionalFormattingScopeProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableDataPathOptionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableFieldOptionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableFieldOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableFieldSubtotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTablePaginatedReportOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableSortByProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableTotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTableVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PivotTotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_PredefinedHierarchyProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ProgressBarOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartAreaStyleSettingsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartSeriesSettingsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_RadarChartVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_RangeEndsLabelTypeProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineCustomLabelConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineDataConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineDynamicDataConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineLabelConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineStaticDataConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineStyleConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ReferenceLineValueLabelConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_RelativeDateTimeControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_RelativeDatesFilterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ResourcePermissionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_RollingDateConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_RowAlternateColorOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SameSheetTargetVisualConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SankeyDiagramAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SankeyDiagramChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SankeyDiagramFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SankeyDiagramSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SankeyDiagramVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ScatterPlotCategoricallyAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ScatterPlotConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ScatterPlotFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ScatterPlotUnaggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ScatterPlotVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ScrollBarOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SecondaryValueOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SectionAfterPageBreakProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SectionBasedLayoutCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SectionBasedLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SectionBasedLayoutPaperCanvasSizeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SectionLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SectionPageBreakConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SectionStyleProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SelectedSheetsFilterScopeConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SeriesItemProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SetParameterValueConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ShapeConditionalFormatProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SheetProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SheetControlLayoutProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SheetControlLayoutConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SheetDefinitionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SheetElementConfigurationOverridesProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SheetElementRenderingRuleProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SheetTextBoxProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SheetVisualScopingConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ShortFormatTextProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SimpleClusterMarkerProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SliderControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SmallMultiplesOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SpacingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_StringDefaultValuesProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_StringFormatConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_StringParameterDeclarationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_StringValueWhenUnsetConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_SubtotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableBorderOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableCellConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableCellImageSizingConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableCellStyleProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableConditionalFormattingOptionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldCustomIconContentProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldCustomTextContentProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldImageConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldLinkConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldLinkContentConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldOptionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldURLConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableInlineVisualizationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TablePaginatedReportOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableRowConditionalFormattingProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableSideBorderOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableUnaggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TableVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TemplateErrorProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TemplateSourceAnalysisProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TemplateSourceEntityProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TemplateSourceTemplateProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TemplateVersionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TemplateVersionDefinitionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TextAreaControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TextConditionalFormatProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TextControlPlaceholderOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TextFieldControlDisplayOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_ThousandSeparatorOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TimeBasedForecastPropertiesProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TimeEqualityFilterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TimeRangeDrillDownFilterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TimeRangeFilterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TimeRangeFilterValueProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TooltipItemProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TooltipOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TopBottomFilterProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TopBottomMoversComputationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TopBottomRankedComputationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TotalAggregationComputationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TotalOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TreeMapAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TreeMapConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TreeMapFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TreeMapSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TreeMapVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_TrendArrowOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_UnaggregatedFieldProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_UniqueValuesComputationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_VisibleRangeOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_VisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_VisualCustomActionProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_VisualCustomActionOperationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_VisualPaletteProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_VisualSubtitleLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_VisualTitleLabelOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WaterfallChartAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WaterfallChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WaterfallChartFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WaterfallChartOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WaterfallChartSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WaterfallVisualProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WhatIfPointScenarioProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WhatIfRangeScenarioProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WordCloudAggregatedFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WordCloudChartConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WordCloudFieldWellsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WordCloudOptionsProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WordCloudSortConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTemplate_WordCloudVisualProperty, aws_cdk_lib_aws_quicksight_CfnThemeProps, aws_cdk_lib_aws_quicksight_CfnTheme, aws_cdk_lib_aws_quicksight_CfnTheme_BorderStyleProperty, aws_cdk_lib_aws_quicksight_CfnTheme_DataColorPaletteProperty, aws_cdk_lib_aws_quicksight_CfnTheme_FontProperty, aws_cdk_lib_aws_quicksight_CfnTheme_GutterStyleProperty, aws_cdk_lib_aws_quicksight_CfnTheme_MarginStyleProperty, aws_cdk_lib_aws_quicksight_CfnTheme_ResourcePermissionProperty, aws_cdk_lib_aws_quicksight_CfnTheme_SheetStyleProperty, aws_cdk_lib_aws_quicksight_CfnTheme_ThemeConfigurationProperty, aws_cdk_lib_aws_quicksight_CfnTheme_ThemeErrorProperty, aws_cdk_lib_aws_quicksight_CfnTheme_ThemeVersionProperty, aws_cdk_lib_aws_quicksight_CfnTheme_TileLayoutStyleProperty, aws_cdk_lib_aws_quicksight_CfnTheme_TileStyleProperty, aws_cdk_lib_aws_quicksight_CfnTheme_TypographyProperty, aws_cdk_lib_aws_quicksight_CfnTheme_UIColorPaletteProperty, aws_cdk_lib_aws_ram_CfnResourceShareProps, aws_cdk_lib_aws_ram_CfnResourceShare, aws_cdk_lib_aws_rds_IEngine, aws_cdk_lib_aws_rds_EngineVersion, aws_cdk_lib_aws_rds_InstanceUpdateBehaviour, aws_cdk_lib_aws_rds_DatabaseClusterBase, aws_cdk_lib_aws_rds_DatabaseClusterProps, aws_cdk_lib_aws_rds_DatabaseCluster, aws_cdk_lib_aws_rds_DatabaseClusterFromSnapshotProps, aws_cdk_lib_aws_rds_DatabaseClusterFromSnapshot, aws_cdk_lib_aws_rds_IDatabaseCluster, aws_cdk_lib_aws_rds_DatabaseClusterAttributes, aws_cdk_lib_aws_rds_ClusterEngineBindOptions, aws_cdk_lib_aws_rds_ClusterEngineConfig, aws_cdk_lib_aws_rds_ClusterEngineFeatures, aws_cdk_lib_aws_rds_IClusterEngine, aws_cdk_lib_aws_rds_AuroraEngineVersion, aws_cdk_lib_aws_rds_AuroraClusterEngineProps, aws_cdk_lib_aws_rds_AuroraMysqlEngineVersion, aws_cdk_lib_aws_rds_AuroraMysqlClusterEngineProps, aws_cdk_lib_aws_rds_AuroraPostgresEngineFeatures, aws_cdk_lib_aws_rds_AuroraPostgresEngineVersion, aws_cdk_lib_aws_rds_AuroraPostgresClusterEngineProps, aws_cdk_lib_aws_rds_DatabaseClusterEngine, aws_cdk_lib_aws_rds_InstanceEngineBindOptions, aws_cdk_lib_aws_rds_InstanceEngineConfig, aws_cdk_lib_aws_rds_InstanceEngineFeatures, aws_cdk_lib_aws_rds_IInstanceEngine, aws_cdk_lib_aws_rds_MariaDbEngineVersion, aws_cdk_lib_aws_rds_MariaDbInstanceEngineProps, aws_cdk_lib_aws_rds_MysqlEngineVersion, aws_cdk_lib_aws_rds_MySqlInstanceEngineProps, aws_cdk_lib_aws_rds_PostgresEngineFeatures, aws_cdk_lib_aws_rds_PostgresEngineVersion, aws_cdk_lib_aws_rds_PostgresInstanceEngineProps, aws_cdk_lib_aws_rds_OracleEngineVersion, aws_cdk_lib_aws_rds_OracleSe2InstanceEngineProps, aws_cdk_lib_aws_rds_OracleSe2CdbInstanceEngineProps, aws_cdk_lib_aws_rds_OracleEeInstanceEngineProps, aws_cdk_lib_aws_rds_OracleEeCdbInstanceEngineProps, aws_cdk_lib_aws_rds_SqlServerEngineVersion, aws_cdk_lib_aws_rds_SqlServerSeInstanceEngineProps, aws_cdk_lib_aws_rds_SqlServerExInstanceEngineProps, aws_cdk_lib_aws_rds_SqlServerWebInstanceEngineProps, aws_cdk_lib_aws_rds_SqlServerEeInstanceEngineProps, aws_cdk_lib_aws_rds_DatabaseInstanceEngine, aws_cdk_lib_aws_rds_InstanceProps, aws_cdk_lib_aws_rds_BackupProps, aws_cdk_lib_aws_rds_CredentialsBaseOptions, aws_cdk_lib_aws_rds_CredentialsFromUsernameOptions, aws_cdk_lib_aws_rds_Credentials, aws_cdk_lib_aws_rds_SnapshotCredentialsFromGeneratedPasswordOptions, aws_cdk_lib_aws_rds_SnapshotCredentials, aws_cdk_lib_aws_rds_CommonRotationUserOptions, aws_cdk_lib_aws_rds_RotationSingleUserOptions, aws_cdk_lib_aws_rds_RotationMultiUserOptions, aws_cdk_lib_aws_rds_PerformanceInsightRetention, aws_cdk_lib_aws_rds_ParameterGroupClusterBindOptions, aws_cdk_lib_aws_rds_ParameterGroupClusterConfig, aws_cdk_lib_aws_rds_ParameterGroupInstanceBindOptions, aws_cdk_lib_aws_rds_ParameterGroupInstanceConfig, aws_cdk_lib_aws_rds_IParameterGroup, aws_cdk_lib_aws_rds_ParameterGroupProps, aws_cdk_lib_aws_rds_ParameterGroup, aws_cdk_lib_aws_rds_DatabaseSecretProps, aws_cdk_lib_aws_rds_DatabaseSecret, aws_cdk_lib_aws_rds_Endpoint, aws_cdk_lib_aws_rds_IOptionGroup, aws_cdk_lib_aws_rds_OptionConfiguration, aws_cdk_lib_aws_rds_OptionGroupProps, aws_cdk_lib_aws_rds_OptionGroup, aws_cdk_lib_aws_rds_IDatabaseInstance, aws_cdk_lib_aws_rds_DatabaseInstanceAttributes, aws_cdk_lib_aws_rds_DatabaseInstanceBase, aws_cdk_lib_aws_rds_LicenseModel, aws_cdk_lib_aws_rds_ProcessorFeatures, aws_cdk_lib_aws_rds_StorageType, aws_cdk_lib_aws_rds_NetworkType, aws_cdk_lib_aws_rds_DatabaseInstanceNewProps, aws_cdk_lib_aws_rds_DatabaseInstanceSourceProps, aws_cdk_lib_aws_rds_DatabaseInstanceProps, aws_cdk_lib_aws_rds_DatabaseInstance, aws_cdk_lib_aws_rds_DatabaseInstanceFromSnapshotProps, aws_cdk_lib_aws_rds_DatabaseInstanceFromSnapshot, aws_cdk_lib_aws_rds_DatabaseInstanceReadReplicaProps, aws_cdk_lib_aws_rds_DatabaseInstanceReadReplica, aws_cdk_lib_aws_rds_SessionPinningFilter, aws_cdk_lib_aws_rds_ProxyTarget, aws_cdk_lib_aws_rds_ProxyTargetConfig, aws_cdk_lib_aws_rds_DatabaseProxyOptions, aws_cdk_lib_aws_rds_DatabaseProxyProps, aws_cdk_lib_aws_rds_DatabaseProxyAttributes, aws_cdk_lib_aws_rds_IDatabaseProxy, aws_cdk_lib_aws_rds_DatabaseProxy, aws_cdk_lib_aws_rds_IServerlessCluster, aws_cdk_lib_aws_rds_ServerlessClusterAttributes, aws_cdk_lib_aws_rds_AuroraCapacityUnit, aws_cdk_lib_aws_rds_ServerlessScalingOptions, aws_cdk_lib_aws_rds_ServerlessClusterProps, aws_cdk_lib_aws_rds_ServerlessCluster, aws_cdk_lib_aws_rds_ServerlessClusterFromSnapshotProps, aws_cdk_lib_aws_rds_ServerlessClusterFromSnapshot, aws_cdk_lib_aws_rds_ISubnetGroup, aws_cdk_lib_aws_rds_SubnetGroupProps, aws_cdk_lib_aws_rds_SubnetGroup, aws_cdk_lib_aws_rds_CfnDBClusterProps, aws_cdk_lib_aws_rds_CfnDBCluster, aws_cdk_lib_aws_rds_CfnDBCluster_DBClusterRoleProperty, aws_cdk_lib_aws_rds_CfnDBCluster_EndpointProperty, aws_cdk_lib_aws_rds_CfnDBCluster_MasterUserSecretProperty, aws_cdk_lib_aws_rds_CfnDBCluster_ReadEndpointProperty, aws_cdk_lib_aws_rds_CfnDBCluster_ScalingConfigurationProperty, aws_cdk_lib_aws_rds_CfnDBCluster_ServerlessV2ScalingConfigurationProperty, aws_cdk_lib_aws_rds_CfnDBClusterParameterGroupProps, aws_cdk_lib_aws_rds_CfnDBClusterParameterGroup, aws_cdk_lib_aws_rds_CfnDBInstanceProps, aws_cdk_lib_aws_rds_CfnDBInstance, aws_cdk_lib_aws_rds_CfnDBInstance_CertificateDetailsProperty, aws_cdk_lib_aws_rds_CfnDBInstance_DBInstanceRoleProperty, aws_cdk_lib_aws_rds_CfnDBInstance_EndpointProperty, aws_cdk_lib_aws_rds_CfnDBInstance_MasterUserSecretProperty, aws_cdk_lib_aws_rds_CfnDBInstance_ProcessorFeatureProperty, aws_cdk_lib_aws_rds_CfnDBParameterGroupProps, aws_cdk_lib_aws_rds_CfnDBParameterGroup, aws_cdk_lib_aws_rds_CfnDBProxyProps, aws_cdk_lib_aws_rds_CfnDBProxy, aws_cdk_lib_aws_rds_CfnDBProxy_AuthFormatProperty, aws_cdk_lib_aws_rds_CfnDBProxy_TagFormatProperty, aws_cdk_lib_aws_rds_CfnDBProxyEndpointProps, aws_cdk_lib_aws_rds_CfnDBProxyEndpoint, aws_cdk_lib_aws_rds_CfnDBProxyEndpoint_TagFormatProperty, aws_cdk_lib_aws_rds_CfnDBProxyTargetGroupProps, aws_cdk_lib_aws_rds_CfnDBProxyTargetGroup, aws_cdk_lib_aws_rds_CfnDBProxyTargetGroup_ConnectionPoolConfigurationInfoFormatProperty, aws_cdk_lib_aws_rds_CfnDBSecurityGroupProps, aws_cdk_lib_aws_rds_CfnDBSecurityGroup, aws_cdk_lib_aws_rds_CfnDBSecurityGroup_IngressProperty, aws_cdk_lib_aws_rds_CfnDBSecurityGroupIngressProps, aws_cdk_lib_aws_rds_CfnDBSecurityGroupIngress, aws_cdk_lib_aws_rds_CfnDBSubnetGroupProps, aws_cdk_lib_aws_rds_CfnDBSubnetGroup, aws_cdk_lib_aws_rds_CfnEventSubscriptionProps, aws_cdk_lib_aws_rds_CfnEventSubscription, aws_cdk_lib_aws_rds_CfnGlobalClusterProps, aws_cdk_lib_aws_rds_CfnGlobalCluster, aws_cdk_lib_aws_rds_CfnOptionGroupProps, aws_cdk_lib_aws_rds_CfnOptionGroup, aws_cdk_lib_aws_rds_CfnOptionGroup_OptionConfigurationProperty, aws_cdk_lib_aws_rds_CfnOptionGroup_OptionSettingProperty, aws_cdk_lib_aws_redshift_CfnClusterProps, aws_cdk_lib_aws_redshift_CfnCluster, aws_cdk_lib_aws_redshift_CfnCluster_EndpointProperty, aws_cdk_lib_aws_redshift_CfnCluster_LoggingPropertiesProperty, aws_cdk_lib_aws_redshift_CfnClusterParameterGroupProps, aws_cdk_lib_aws_redshift_CfnClusterParameterGroup, aws_cdk_lib_aws_redshift_CfnClusterParameterGroup_ParameterProperty, aws_cdk_lib_aws_redshift_CfnClusterSecurityGroupProps, aws_cdk_lib_aws_redshift_CfnClusterSecurityGroup, aws_cdk_lib_aws_redshift_CfnClusterSecurityGroupIngressProps, aws_cdk_lib_aws_redshift_CfnClusterSecurityGroupIngress, aws_cdk_lib_aws_redshift_CfnClusterSubnetGroupProps, aws_cdk_lib_aws_redshift_CfnClusterSubnetGroup, aws_cdk_lib_aws_redshift_CfnEndpointAccessProps, aws_cdk_lib_aws_redshift_CfnEndpointAccess, aws_cdk_lib_aws_redshift_CfnEndpointAccess_NetworkInterfaceProperty, aws_cdk_lib_aws_redshift_CfnEndpointAccess_VpcEndpointProperty, aws_cdk_lib_aws_redshift_CfnEndpointAccess_VpcSecurityGroupProperty, aws_cdk_lib_aws_redshift_CfnEndpointAuthorizationProps, aws_cdk_lib_aws_redshift_CfnEndpointAuthorization, aws_cdk_lib_aws_redshift_CfnEventSubscriptionProps, aws_cdk_lib_aws_redshift_CfnEventSubscription, aws_cdk_lib_aws_redshift_CfnScheduledActionProps, aws_cdk_lib_aws_redshift_CfnScheduledAction, aws_cdk_lib_aws_redshift_CfnScheduledAction_PauseClusterMessageProperty, aws_cdk_lib_aws_redshift_CfnScheduledAction_ResizeClusterMessageProperty, aws_cdk_lib_aws_redshift_CfnScheduledAction_ResumeClusterMessageProperty, aws_cdk_lib_aws_redshift_CfnScheduledAction_ScheduledActionTypeProperty, aws_cdk_lib_aws_redshiftserverless_CfnNamespaceProps, aws_cdk_lib_aws_redshiftserverless_CfnNamespace, aws_cdk_lib_aws_redshiftserverless_CfnNamespace_NamespaceProperty, aws_cdk_lib_aws_redshiftserverless_CfnWorkgroupProps, aws_cdk_lib_aws_redshiftserverless_CfnWorkgroup, aws_cdk_lib_aws_redshiftserverless_CfnWorkgroup_ConfigParameterProperty, aws_cdk_lib_aws_redshiftserverless_CfnWorkgroup_EndpointProperty, aws_cdk_lib_aws_redshiftserverless_CfnWorkgroup_NetworkInterfaceProperty, aws_cdk_lib_aws_redshiftserverless_CfnWorkgroup_VpcEndpointProperty, aws_cdk_lib_aws_redshiftserverless_CfnWorkgroup_WorkgroupProperty, aws_cdk_lib_aws_refactorspaces_CfnApplicationProps, aws_cdk_lib_aws_refactorspaces_CfnApplication, aws_cdk_lib_aws_refactorspaces_CfnApplication_ApiGatewayProxyInputProperty, aws_cdk_lib_aws_refactorspaces_CfnEnvironmentProps, aws_cdk_lib_aws_refactorspaces_CfnEnvironment, aws_cdk_lib_aws_refactorspaces_CfnRouteProps, aws_cdk_lib_aws_refactorspaces_CfnRoute, aws_cdk_lib_aws_refactorspaces_CfnRoute_DefaultRouteInputProperty, aws_cdk_lib_aws_refactorspaces_CfnRoute_UriPathRouteInputProperty, aws_cdk_lib_aws_refactorspaces_CfnServiceProps, aws_cdk_lib_aws_refactorspaces_CfnService, aws_cdk_lib_aws_refactorspaces_CfnService_LambdaEndpointInputProperty, aws_cdk_lib_aws_refactorspaces_CfnService_UrlEndpointInputProperty, aws_cdk_lib_aws_rekognition_CfnCollectionProps, aws_cdk_lib_aws_rekognition_CfnCollection, aws_cdk_lib_aws_rekognition_CfnProjectProps, aws_cdk_lib_aws_rekognition_CfnProject, aws_cdk_lib_aws_rekognition_CfnStreamProcessorProps, aws_cdk_lib_aws_rekognition_CfnStreamProcessor, aws_cdk_lib_aws_rekognition_CfnStreamProcessor_BoundingBoxProperty, aws_cdk_lib_aws_rekognition_CfnStreamProcessor_ConnectedHomeSettingsProperty, aws_cdk_lib_aws_rekognition_CfnStreamProcessor_DataSharingPreferenceProperty, aws_cdk_lib_aws_rekognition_CfnStreamProcessor_FaceSearchSettingsProperty, aws_cdk_lib_aws_rekognition_CfnStreamProcessor_KinesisDataStreamProperty, aws_cdk_lib_aws_rekognition_CfnStreamProcessor_KinesisVideoStreamProperty, aws_cdk_lib_aws_rekognition_CfnStreamProcessor_NotificationChannelProperty, aws_cdk_lib_aws_rekognition_CfnStreamProcessor_S3DestinationProperty, aws_cdk_lib_aws_resiliencehub_CfnAppProps, aws_cdk_lib_aws_resiliencehub_CfnApp, aws_cdk_lib_aws_resiliencehub_CfnApp_PhysicalResourceIdProperty, aws_cdk_lib_aws_resiliencehub_CfnApp_ResourceMappingProperty, aws_cdk_lib_aws_resiliencehub_CfnResiliencyPolicyProps, aws_cdk_lib_aws_resiliencehub_CfnResiliencyPolicy, aws_cdk_lib_aws_resiliencehub_CfnResiliencyPolicy_FailurePolicyProperty, aws_cdk_lib_aws_resourceexplorer2_CfnDefaultViewAssociationProps, aws_cdk_lib_aws_resourceexplorer2_CfnDefaultViewAssociation, aws_cdk_lib_aws_resourceexplorer2_CfnIndexProps, aws_cdk_lib_aws_resourceexplorer2_CfnIndex, aws_cdk_lib_aws_resourceexplorer2_CfnViewProps, aws_cdk_lib_aws_resourceexplorer2_CfnView, aws_cdk_lib_aws_resourceexplorer2_CfnView_FiltersProperty, aws_cdk_lib_aws_resourceexplorer2_CfnView_IncludedPropertyProperty, aws_cdk_lib_aws_resourcegroups_CfnGroupProps, aws_cdk_lib_aws_resourcegroups_CfnGroup, aws_cdk_lib_aws_resourcegroups_CfnGroup_ConfigurationItemProperty, aws_cdk_lib_aws_resourcegroups_CfnGroup_ConfigurationParameterProperty, aws_cdk_lib_aws_resourcegroups_CfnGroup_QueryProperty, aws_cdk_lib_aws_resourcegroups_CfnGroup_ResourceQueryProperty, aws_cdk_lib_aws_resourcegroups_CfnGroup_TagFilterProperty, aws_cdk_lib_aws_robomaker_CfnFleetProps, aws_cdk_lib_aws_robomaker_CfnFleet, aws_cdk_lib_aws_robomaker_CfnRobotProps, aws_cdk_lib_aws_robomaker_CfnRobot, aws_cdk_lib_aws_robomaker_CfnRobotApplicationProps, aws_cdk_lib_aws_robomaker_CfnRobotApplication, aws_cdk_lib_aws_robomaker_CfnRobotApplication_RobotSoftwareSuiteProperty, aws_cdk_lib_aws_robomaker_CfnRobotApplication_SourceConfigProperty, aws_cdk_lib_aws_robomaker_CfnRobotApplicationVersionProps, aws_cdk_lib_aws_robomaker_CfnRobotApplicationVersion, aws_cdk_lib_aws_robomaker_CfnSimulationApplicationProps, aws_cdk_lib_aws_robomaker_CfnSimulationApplication, aws_cdk_lib_aws_robomaker_CfnSimulationApplication_RenderingEngineProperty, aws_cdk_lib_aws_robomaker_CfnSimulationApplication_RobotSoftwareSuiteProperty, aws_cdk_lib_aws_robomaker_CfnSimulationApplication_SimulationSoftwareSuiteProperty, aws_cdk_lib_aws_robomaker_CfnSimulationApplication_SourceConfigProperty, aws_cdk_lib_aws_robomaker_CfnSimulationApplicationVersionProps, aws_cdk_lib_aws_robomaker_CfnSimulationApplicationVersion, aws_cdk_lib_aws_rolesanywhere_CfnCRLProps, aws_cdk_lib_aws_rolesanywhere_CfnCRL, aws_cdk_lib_aws_rolesanywhere_CfnProfileProps, aws_cdk_lib_aws_rolesanywhere_CfnProfile, aws_cdk_lib_aws_rolesanywhere_CfnTrustAnchorProps, aws_cdk_lib_aws_rolesanywhere_CfnTrustAnchor, aws_cdk_lib_aws_rolesanywhere_CfnTrustAnchor_SourceProperty, aws_cdk_lib_aws_rolesanywhere_CfnTrustAnchor_SourceDataProperty, aws_cdk_lib_aws_route53_IAliasRecordTarget, aws_cdk_lib_aws_route53_AliasRecordTargetConfig, aws_cdk_lib_aws_route53_CommonHostedZoneProps, aws_cdk_lib_aws_route53_HostedZoneProps, aws_cdk_lib_aws_route53_HostedZone, aws_cdk_lib_aws_route53_PublicHostedZoneProps, aws_cdk_lib_aws_route53_IPublicHostedZone, aws_cdk_lib_aws_route53_PublicHostedZone, aws_cdk_lib_aws_route53_ZoneDelegationOptions, aws_cdk_lib_aws_route53_PrivateHostedZoneProps, aws_cdk_lib_aws_route53_IPrivateHostedZone, aws_cdk_lib_aws_route53_PrivateHostedZone, aws_cdk_lib_aws_route53_HostedZoneProviderProps, aws_cdk_lib_aws_route53_IHostedZone, aws_cdk_lib_aws_route53_HostedZoneAttributes, aws_cdk_lib_aws_route53_PublicHostedZoneAttributes, aws_cdk_lib_aws_route53_IRecordSet, aws_cdk_lib_aws_route53_RecordType, aws_cdk_lib_aws_route53_RecordSetOptions, aws_cdk_lib_aws_route53_RecordTarget, aws_cdk_lib_aws_route53_RecordSetProps, aws_cdk_lib_aws_route53_RecordSet, aws_cdk_lib_aws_route53_ARecordProps, aws_cdk_lib_aws_route53_ARecord, aws_cdk_lib_aws_route53_AaaaRecordProps, aws_cdk_lib_aws_route53_AaaaRecord, aws_cdk_lib_aws_route53_CnameRecordProps, aws_cdk_lib_aws_route53_CnameRecord, aws_cdk_lib_aws_route53_TxtRecordProps, aws_cdk_lib_aws_route53_TxtRecord, aws_cdk_lib_aws_route53_SrvRecordValue, aws_cdk_lib_aws_route53_SrvRecordProps, aws_cdk_lib_aws_route53_SrvRecord, aws_cdk_lib_aws_route53_CaaTag, aws_cdk_lib_aws_route53_CaaRecordValue, aws_cdk_lib_aws_route53_CaaRecordProps, aws_cdk_lib_aws_route53_CaaRecord, aws_cdk_lib_aws_route53_CaaAmazonRecordProps, aws_cdk_lib_aws_route53_CaaAmazonRecord, aws_cdk_lib_aws_route53_MxRecordValue, aws_cdk_lib_aws_route53_MxRecordProps, aws_cdk_lib_aws_route53_MxRecord, aws_cdk_lib_aws_route53_NsRecordProps, aws_cdk_lib_aws_route53_NsRecord, aws_cdk_lib_aws_route53_DsRecordProps, aws_cdk_lib_aws_route53_DsRecord, aws_cdk_lib_aws_route53_ZoneDelegationRecordProps, aws_cdk_lib_aws_route53_ZoneDelegationRecord, aws_cdk_lib_aws_route53_CrossAccountZoneDelegationRecordProps, aws_cdk_lib_aws_route53_CrossAccountZoneDelegationRecord, aws_cdk_lib_aws_route53_VpcEndpointServiceDomainNameProps, aws_cdk_lib_aws_route53_VpcEndpointServiceDomainName, aws_cdk_lib_aws_route53_CfnCidrCollectionProps, aws_cdk_lib_aws_route53_CfnCidrCollection, aws_cdk_lib_aws_route53_CfnCidrCollection_LocationProperty, aws_cdk_lib_aws_route53_CfnDNSSECProps, aws_cdk_lib_aws_route53_CfnDNSSEC, aws_cdk_lib_aws_route53_CfnHealthCheckProps, aws_cdk_lib_aws_route53_CfnHealthCheck, aws_cdk_lib_aws_route53_CfnHealthCheck_AlarmIdentifierProperty, aws_cdk_lib_aws_route53_CfnHealthCheck_HealthCheckConfigProperty, aws_cdk_lib_aws_route53_CfnHealthCheck_HealthCheckTagProperty, aws_cdk_lib_aws_route53_CfnHostedZoneProps, aws_cdk_lib_aws_route53_CfnHostedZone, aws_cdk_lib_aws_route53_CfnHostedZone_HostedZoneConfigProperty, aws_cdk_lib_aws_route53_CfnHostedZone_HostedZoneTagProperty, aws_cdk_lib_aws_route53_CfnHostedZone_QueryLoggingConfigProperty, aws_cdk_lib_aws_route53_CfnHostedZone_VPCProperty, aws_cdk_lib_aws_route53_CfnKeySigningKeyProps, aws_cdk_lib_aws_route53_CfnKeySigningKey, aws_cdk_lib_aws_route53_CfnRecordSetProps, aws_cdk_lib_aws_route53_CfnRecordSet, aws_cdk_lib_aws_route53_CfnRecordSet_AliasTargetProperty, aws_cdk_lib_aws_route53_CfnRecordSet_CidrRoutingConfigProperty, aws_cdk_lib_aws_route53_CfnRecordSet_GeoLocationProperty, aws_cdk_lib_aws_route53_CfnRecordSetGroupProps, aws_cdk_lib_aws_route53_CfnRecordSetGroup, aws_cdk_lib_aws_route53_CfnRecordSetGroup_AliasTargetProperty, aws_cdk_lib_aws_route53_CfnRecordSetGroup_CidrRoutingConfigProperty, aws_cdk_lib_aws_route53_CfnRecordSetGroup_GeoLocationProperty, aws_cdk_lib_aws_route53_CfnRecordSetGroup_RecordSetProperty, aws_cdk_lib_aws_route53_patterns_HttpsRedirectProps, aws_cdk_lib_aws_route53_patterns_HttpsRedirect, aws_cdk_lib_aws_route53_targets_ApiGatewayDomain, aws_cdk_lib_aws_route53_targets_ApiGateway, aws_cdk_lib_aws_route53_targets_ApiGatewayv2DomainProperties, aws_cdk_lib_aws_route53_targets_BucketWebsiteTarget, aws_cdk_lib_aws_route53_targets_ElasticBeanstalkEnvironmentEndpointTarget, aws_cdk_lib_aws_route53_targets_ClassicLoadBalancerTarget, aws_cdk_lib_aws_route53_targets_CloudFrontTarget, aws_cdk_lib_aws_route53_targets_LoadBalancerTarget, aws_cdk_lib_aws_route53_targets_InterfaceVpcEndpointTarget, aws_cdk_lib_aws_route53_targets_UserPoolDomainTarget, aws_cdk_lib_aws_route53_targets_GlobalAcceleratorDomainTarget, aws_cdk_lib_aws_route53_targets_GlobalAcceleratorTarget, aws_cdk_lib_aws_route53_targets_Route53RecordTarget, aws_cdk_lib_aws_route53recoverycontrol_CfnClusterProps, aws_cdk_lib_aws_route53recoverycontrol_CfnCluster, aws_cdk_lib_aws_route53recoverycontrol_CfnCluster_ClusterEndpointProperty, aws_cdk_lib_aws_route53recoverycontrol_CfnControlPanelProps, aws_cdk_lib_aws_route53recoverycontrol_CfnControlPanel, aws_cdk_lib_aws_route53recoverycontrol_CfnRoutingControlProps, aws_cdk_lib_aws_route53recoverycontrol_CfnRoutingControl, aws_cdk_lib_aws_route53recoverycontrol_CfnSafetyRuleProps, aws_cdk_lib_aws_route53recoverycontrol_CfnSafetyRule, aws_cdk_lib_aws_route53recoverycontrol_CfnSafetyRule_AssertionRuleProperty, aws_cdk_lib_aws_route53recoverycontrol_CfnSafetyRule_GatingRuleProperty, aws_cdk_lib_aws_route53recoverycontrol_CfnSafetyRule_RuleConfigProperty, aws_cdk_lib_aws_route53recoveryreadiness_CfnCellProps, aws_cdk_lib_aws_route53recoveryreadiness_CfnCell, aws_cdk_lib_aws_route53recoveryreadiness_CfnReadinessCheckProps, aws_cdk_lib_aws_route53recoveryreadiness_CfnReadinessCheck, aws_cdk_lib_aws_route53recoveryreadiness_CfnRecoveryGroupProps, aws_cdk_lib_aws_route53recoveryreadiness_CfnRecoveryGroup, aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSetProps, aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSet, aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSet_DNSTargetResourceProperty, aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSet_NLBResourceProperty, aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSet_R53ResourceRecordProperty, aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSet_ResourceProperty, aws_cdk_lib_aws_route53recoveryreadiness_CfnResourceSet_TargetResourceProperty, aws_cdk_lib_aws_route53resolver_CfnFirewallDomainListProps, aws_cdk_lib_aws_route53resolver_CfnFirewallDomainList, aws_cdk_lib_aws_route53resolver_CfnFirewallRuleGroupProps, aws_cdk_lib_aws_route53resolver_CfnFirewallRuleGroup, aws_cdk_lib_aws_route53resolver_CfnFirewallRuleGroup_FirewallRuleProperty, aws_cdk_lib_aws_route53resolver_CfnFirewallRuleGroupAssociationProps, aws_cdk_lib_aws_route53resolver_CfnFirewallRuleGroupAssociation, aws_cdk_lib_aws_route53resolver_CfnResolverConfigProps, aws_cdk_lib_aws_route53resolver_CfnResolverConfig, aws_cdk_lib_aws_route53resolver_CfnResolverDNSSECConfigProps, aws_cdk_lib_aws_route53resolver_CfnResolverDNSSECConfig, aws_cdk_lib_aws_route53resolver_CfnResolverEndpointProps, aws_cdk_lib_aws_route53resolver_CfnResolverEndpoint, aws_cdk_lib_aws_route53resolver_CfnResolverEndpoint_IpAddressRequestProperty, aws_cdk_lib_aws_route53resolver_CfnResolverQueryLoggingConfigProps, aws_cdk_lib_aws_route53resolver_CfnResolverQueryLoggingConfig, aws_cdk_lib_aws_route53resolver_CfnResolverQueryLoggingConfigAssociationProps, aws_cdk_lib_aws_route53resolver_CfnResolverQueryLoggingConfigAssociation, aws_cdk_lib_aws_route53resolver_CfnResolverRuleProps, aws_cdk_lib_aws_route53resolver_CfnResolverRule, aws_cdk_lib_aws_route53resolver_CfnResolverRule_TargetAddressProperty, aws_cdk_lib_aws_route53resolver_CfnResolverRuleAssociationProps, aws_cdk_lib_aws_route53resolver_CfnResolverRuleAssociation, aws_cdk_lib_aws_rum_CfnAppMonitorProps, aws_cdk_lib_aws_rum_CfnAppMonitor, aws_cdk_lib_aws_rum_CfnAppMonitor_AppMonitorConfigurationProperty, aws_cdk_lib_aws_rum_CfnAppMonitor_CustomEventsProperty, aws_cdk_lib_aws_rum_CfnAppMonitor_MetricDefinitionProperty, aws_cdk_lib_aws_rum_CfnAppMonitor_MetricDestinationProperty, aws_cdk_lib_aws_s3_IBucket, aws_cdk_lib_aws_s3_BucketAttributes, aws_cdk_lib_aws_s3_BucketBase, aws_cdk_lib_aws_s3_BlockPublicAccessOptions, aws_cdk_lib_aws_s3_BlockPublicAccess, aws_cdk_lib_aws_s3_BucketMetrics, aws_cdk_lib_aws_s3_HttpMethods, aws_cdk_lib_aws_s3_CorsRule, aws_cdk_lib_aws_s3_RedirectProtocol, aws_cdk_lib_aws_s3_RedirectTarget, aws_cdk_lib_aws_s3_InventoryFormat, aws_cdk_lib_aws_s3_InventoryFrequency, aws_cdk_lib_aws_s3_InventoryObjectVersion, aws_cdk_lib_aws_s3_InventoryDestination, aws_cdk_lib_aws_s3_Inventory, aws_cdk_lib_aws_s3_ObjectOwnership, aws_cdk_lib_aws_s3_IntelligentTieringConfiguration, aws_cdk_lib_aws_s3_BucketProps, aws_cdk_lib_aws_s3_Tag, aws_cdk_lib_aws_s3_Bucket, aws_cdk_lib_aws_s3_BucketEncryption, aws_cdk_lib_aws_s3_EventType, aws_cdk_lib_aws_s3_NotificationKeyFilter, aws_cdk_lib_aws_s3_OnCloudTrailBucketEventOptions, aws_cdk_lib_aws_s3_BucketAccessControl, aws_cdk_lib_aws_s3_RoutingRuleCondition, aws_cdk_lib_aws_s3_ReplaceKey, aws_cdk_lib_aws_s3_RoutingRule, aws_cdk_lib_aws_s3_ObjectLockMode, aws_cdk_lib_aws_s3_ObjectLockRetention, aws_cdk_lib_aws_s3_VirtualHostedStyleUrlOptions, aws_cdk_lib_aws_s3_TransferAccelerationUrlOptions, aws_cdk_lib_aws_s3_BucketPolicyProps, aws_cdk_lib_aws_s3_BucketPolicy, aws_cdk_lib_aws_s3_IBucketNotificationDestination, aws_cdk_lib_aws_s3_BucketNotificationDestinationConfig, aws_cdk_lib_aws_s3_BucketNotificationDestinationType, aws_cdk_lib_aws_s3_Location, aws_cdk_lib_aws_s3_LifecycleRule, aws_cdk_lib_aws_s3_Transition, aws_cdk_lib_aws_s3_NoncurrentVersionTransition, aws_cdk_lib_aws_s3_StorageClass, aws_cdk_lib_aws_s3_CfnAccessPointProps, aws_cdk_lib_aws_s3_CfnAccessPoint, aws_cdk_lib_aws_s3_CfnAccessPoint_PolicyStatusProperty, aws_cdk_lib_aws_s3_CfnAccessPoint_PublicAccessBlockConfigurationProperty, aws_cdk_lib_aws_s3_CfnAccessPoint_VpcConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucketProps, aws_cdk_lib_aws_s3_CfnBucket, aws_cdk_lib_aws_s3_CfnBucket_AbortIncompleteMultipartUploadProperty, aws_cdk_lib_aws_s3_CfnBucket_AccelerateConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_AccessControlTranslationProperty, aws_cdk_lib_aws_s3_CfnBucket_AnalyticsConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_BucketEncryptionProperty, aws_cdk_lib_aws_s3_CfnBucket_CorsConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_CorsRuleProperty, aws_cdk_lib_aws_s3_CfnBucket_DataExportProperty, aws_cdk_lib_aws_s3_CfnBucket_DefaultRetentionProperty, aws_cdk_lib_aws_s3_CfnBucket_DeleteMarkerReplicationProperty, aws_cdk_lib_aws_s3_CfnBucket_DestinationProperty, aws_cdk_lib_aws_s3_CfnBucket_EncryptionConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_EventBridgeConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_FilterRuleProperty, aws_cdk_lib_aws_s3_CfnBucket_IntelligentTieringConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_InventoryConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_LambdaConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_LifecycleConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_LoggingConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_MetricsProperty, aws_cdk_lib_aws_s3_CfnBucket_MetricsConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_NoncurrentVersionExpirationProperty, aws_cdk_lib_aws_s3_CfnBucket_NoncurrentVersionTransitionProperty, aws_cdk_lib_aws_s3_CfnBucket_NotificationConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_NotificationFilterProperty, aws_cdk_lib_aws_s3_CfnBucket_ObjectLockConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_ObjectLockRuleProperty, aws_cdk_lib_aws_s3_CfnBucket_OwnershipControlsProperty, aws_cdk_lib_aws_s3_CfnBucket_OwnershipControlsRuleProperty, aws_cdk_lib_aws_s3_CfnBucket_PublicAccessBlockConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_QueueConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_RedirectAllRequestsToProperty, aws_cdk_lib_aws_s3_CfnBucket_RedirectRuleProperty, aws_cdk_lib_aws_s3_CfnBucket_ReplicaModificationsProperty, aws_cdk_lib_aws_s3_CfnBucket_ReplicationConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_ReplicationDestinationProperty, aws_cdk_lib_aws_s3_CfnBucket_ReplicationRuleProperty, aws_cdk_lib_aws_s3_CfnBucket_ReplicationRuleAndOperatorProperty, aws_cdk_lib_aws_s3_CfnBucket_ReplicationRuleFilterProperty, aws_cdk_lib_aws_s3_CfnBucket_ReplicationTimeProperty, aws_cdk_lib_aws_s3_CfnBucket_ReplicationTimeValueProperty, aws_cdk_lib_aws_s3_CfnBucket_RoutingRuleProperty, aws_cdk_lib_aws_s3_CfnBucket_RoutingRuleConditionProperty, aws_cdk_lib_aws_s3_CfnBucket_RuleProperty, aws_cdk_lib_aws_s3_CfnBucket_S3KeyFilterProperty, aws_cdk_lib_aws_s3_CfnBucket_ServerSideEncryptionByDefaultProperty, aws_cdk_lib_aws_s3_CfnBucket_ServerSideEncryptionRuleProperty, aws_cdk_lib_aws_s3_CfnBucket_SourceSelectionCriteriaProperty, aws_cdk_lib_aws_s3_CfnBucket_SseKmsEncryptedObjectsProperty, aws_cdk_lib_aws_s3_CfnBucket_StorageClassAnalysisProperty, aws_cdk_lib_aws_s3_CfnBucket_TagFilterProperty, aws_cdk_lib_aws_s3_CfnBucket_TieringProperty, aws_cdk_lib_aws_s3_CfnBucket_TopicConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_TransitionProperty, aws_cdk_lib_aws_s3_CfnBucket_VersioningConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucket_WebsiteConfigurationProperty, aws_cdk_lib_aws_s3_CfnBucketPolicyProps, aws_cdk_lib_aws_s3_CfnBucketPolicy, aws_cdk_lib_aws_s3_CfnMultiRegionAccessPointProps, aws_cdk_lib_aws_s3_CfnMultiRegionAccessPoint, aws_cdk_lib_aws_s3_CfnMultiRegionAccessPoint_PublicAccessBlockConfigurationProperty, aws_cdk_lib_aws_s3_CfnMultiRegionAccessPoint_RegionProperty, aws_cdk_lib_aws_s3_CfnMultiRegionAccessPointPolicyProps, aws_cdk_lib_aws_s3_CfnMultiRegionAccessPointPolicy, aws_cdk_lib_aws_s3_CfnMultiRegionAccessPointPolicy_PolicyStatusProperty, aws_cdk_lib_aws_s3_CfnStorageLensProps, aws_cdk_lib_aws_s3_CfnStorageLens, aws_cdk_lib_aws_s3_CfnStorageLens_AccountLevelProperty, aws_cdk_lib_aws_s3_CfnStorageLens_ActivityMetricsProperty, aws_cdk_lib_aws_s3_CfnStorageLens_AdvancedCostOptimizationMetricsProperty, aws_cdk_lib_aws_s3_CfnStorageLens_AdvancedDataProtectionMetricsProperty, aws_cdk_lib_aws_s3_CfnStorageLens_AwsOrgProperty, aws_cdk_lib_aws_s3_CfnStorageLens_BucketLevelProperty, aws_cdk_lib_aws_s3_CfnStorageLens_BucketsAndRegionsProperty, aws_cdk_lib_aws_s3_CfnStorageLens_CloudWatchMetricsProperty, aws_cdk_lib_aws_s3_CfnStorageLens_DataExportProperty, aws_cdk_lib_aws_s3_CfnStorageLens_DetailedStatusCodesMetricsProperty, aws_cdk_lib_aws_s3_CfnStorageLens_EncryptionProperty, aws_cdk_lib_aws_s3_CfnStorageLens_PrefixLevelProperty, aws_cdk_lib_aws_s3_CfnStorageLens_PrefixLevelStorageMetricsProperty, aws_cdk_lib_aws_s3_CfnStorageLens_S3BucketDestinationProperty, aws_cdk_lib_aws_s3_CfnStorageLens_SSEKMSProperty, aws_cdk_lib_aws_s3_CfnStorageLens_SelectionCriteriaProperty, aws_cdk_lib_aws_s3_CfnStorageLens_StorageLensConfigurationProperty, aws_cdk_lib_aws_s3_assets_AssetOptions, aws_cdk_lib_aws_s3_assets_AssetProps, aws_cdk_lib_aws_s3_assets_Asset, aws_cdk_lib_aws_s3_deployment_BucketDeploymentProps, aws_cdk_lib_aws_s3_deployment_BucketDeployment, aws_cdk_lib_aws_s3_deployment_CacheControl, aws_cdk_lib_aws_s3_deployment_ServerSideEncryption, aws_cdk_lib_aws_s3_deployment_StorageClass, aws_cdk_lib_aws_s3_deployment_UserDefinedObjectMetadata, aws_cdk_lib_aws_s3_deployment_SourceConfig, aws_cdk_lib_aws_s3_deployment_DeploymentSourceContext, aws_cdk_lib_aws_s3_deployment_ISource, aws_cdk_lib_aws_s3_deployment_Source, aws_cdk_lib_aws_s3_notifications_SqsDestination, aws_cdk_lib_aws_s3_notifications_SnsDestination, aws_cdk_lib_aws_s3_notifications_LambdaDestination, aws_cdk_lib_aws_s3objectlambda_CfnAccessPointProps, aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint, aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_AliasProperty, aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_AwsLambdaProperty, aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_ContentTransformationProperty, aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_ObjectLambdaConfigurationProperty, aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_PolicyStatusProperty, aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_PublicAccessBlockConfigurationProperty, aws_cdk_lib_aws_s3objectlambda_CfnAccessPoint_TransformationConfigurationProperty, aws_cdk_lib_aws_s3objectlambda_CfnAccessPointPolicyProps, aws_cdk_lib_aws_s3objectlambda_CfnAccessPointPolicy, aws_cdk_lib_aws_s3outposts_CfnAccessPointProps, aws_cdk_lib_aws_s3outposts_CfnAccessPoint, aws_cdk_lib_aws_s3outposts_CfnAccessPoint_VpcConfigurationProperty, aws_cdk_lib_aws_s3outposts_CfnBucketProps, aws_cdk_lib_aws_s3outposts_CfnBucket, aws_cdk_lib_aws_s3outposts_CfnBucket_AbortIncompleteMultipartUploadProperty, aws_cdk_lib_aws_s3outposts_CfnBucket_FilterProperty, aws_cdk_lib_aws_s3outposts_CfnBucket_FilterAndOperatorProperty, aws_cdk_lib_aws_s3outposts_CfnBucket_FilterTagProperty, aws_cdk_lib_aws_s3outposts_CfnBucket_LifecycleConfigurationProperty, aws_cdk_lib_aws_s3outposts_CfnBucket_RuleProperty, aws_cdk_lib_aws_s3outposts_CfnBucketPolicyProps, aws_cdk_lib_aws_s3outposts_CfnBucketPolicy, aws_cdk_lib_aws_s3outposts_CfnEndpointProps, aws_cdk_lib_aws_s3outposts_CfnEndpoint, aws_cdk_lib_aws_s3outposts_CfnEndpoint_NetworkInterfaceProperty, aws_cdk_lib_aws_sagemaker_CfnAppProps, aws_cdk_lib_aws_sagemaker_CfnApp, aws_cdk_lib_aws_sagemaker_CfnApp_ResourceSpecProperty, aws_cdk_lib_aws_sagemaker_CfnAppImageConfigProps, aws_cdk_lib_aws_sagemaker_CfnAppImageConfig, aws_cdk_lib_aws_sagemaker_CfnAppImageConfig_FileSystemConfigProperty, aws_cdk_lib_aws_sagemaker_CfnAppImageConfig_KernelGatewayImageConfigProperty, aws_cdk_lib_aws_sagemaker_CfnAppImageConfig_KernelSpecProperty, aws_cdk_lib_aws_sagemaker_CfnCodeRepositoryProps, aws_cdk_lib_aws_sagemaker_CfnCodeRepository, aws_cdk_lib_aws_sagemaker_CfnCodeRepository_GitConfigProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinitionProps, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_BatchTransformInputProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_ClusterConfigProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_ConstraintsResourceProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_CsvProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_DataQualityAppSpecificationProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_DataQualityBaselineConfigProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_DataQualityJobInputProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_DatasetFormatProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_EndpointInputProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_JsonProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_MonitoringOutputProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_MonitoringOutputConfigProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_MonitoringResourcesProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_NetworkConfigProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_S3OutputProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_StatisticsResourceProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_StoppingConditionProperty, aws_cdk_lib_aws_sagemaker_CfnDataQualityJobDefinition_VpcConfigProperty, aws_cdk_lib_aws_sagemaker_CfnDeviceProps, aws_cdk_lib_aws_sagemaker_CfnDevice, aws_cdk_lib_aws_sagemaker_CfnDevice_DeviceProperty, aws_cdk_lib_aws_sagemaker_CfnDeviceFleetProps, aws_cdk_lib_aws_sagemaker_CfnDeviceFleet, aws_cdk_lib_aws_sagemaker_CfnDeviceFleet_EdgeOutputConfigProperty, aws_cdk_lib_aws_sagemaker_CfnDomainProps, aws_cdk_lib_aws_sagemaker_CfnDomain, aws_cdk_lib_aws_sagemaker_CfnDomain_CustomImageProperty, aws_cdk_lib_aws_sagemaker_CfnDomain_DefaultSpaceSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnDomain_DomainSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnDomain_JupyterServerAppSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnDomain_KernelGatewayAppSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnDomain_RSessionAppSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnDomain_RStudioServerProAppSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnDomain_RStudioServerProDomainSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnDomain_ResourceSpecProperty, aws_cdk_lib_aws_sagemaker_CfnDomain_SharingSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnDomain_UserSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointProps, aws_cdk_lib_aws_sagemaker_CfnEndpoint, aws_cdk_lib_aws_sagemaker_CfnEndpoint_AlarmProperty, aws_cdk_lib_aws_sagemaker_CfnEndpoint_AutoRollbackConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpoint_BlueGreenUpdatePolicyProperty, aws_cdk_lib_aws_sagemaker_CfnEndpoint_CapacitySizeProperty, aws_cdk_lib_aws_sagemaker_CfnEndpoint_DeploymentConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpoint_TrafficRoutingConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpoint_VariantPropertyProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfigProps, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_AsyncInferenceClientConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_AsyncInferenceConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_AsyncInferenceNotificationConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_AsyncInferenceOutputConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_CaptureContentTypeHeaderProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_CaptureOptionProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ClarifyExplainerConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ClarifyInferenceConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ClarifyShapBaselineConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ClarifyShapConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ClarifyTextConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_DataCaptureConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ExplainerConfigProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ProductionVariantProperty, aws_cdk_lib_aws_sagemaker_CfnEndpointConfig_ServerlessConfigProperty, aws_cdk_lib_aws_sagemaker_CfnFeatureGroupProps, aws_cdk_lib_aws_sagemaker_CfnFeatureGroup, aws_cdk_lib_aws_sagemaker_CfnFeatureGroup_DataCatalogConfigProperty, aws_cdk_lib_aws_sagemaker_CfnFeatureGroup_FeatureDefinitionProperty, aws_cdk_lib_aws_sagemaker_CfnFeatureGroup_OfflineStoreConfigProperty, aws_cdk_lib_aws_sagemaker_CfnFeatureGroup_OnlineStoreConfigProperty, aws_cdk_lib_aws_sagemaker_CfnFeatureGroup_OnlineStoreSecurityConfigProperty, aws_cdk_lib_aws_sagemaker_CfnFeatureGroup_S3StorageConfigProperty, aws_cdk_lib_aws_sagemaker_CfnImageProps, aws_cdk_lib_aws_sagemaker_CfnImage, aws_cdk_lib_aws_sagemaker_CfnImageVersionProps, aws_cdk_lib_aws_sagemaker_CfnImageVersion, aws_cdk_lib_aws_sagemaker_CfnInferenceExperimentProps, aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment, aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_CaptureContentTypeHeaderProperty, aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_DataStorageConfigProperty, aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_EndpointMetadataProperty, aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_InferenceExperimentScheduleProperty, aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_ModelInfrastructureConfigProperty, aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_ModelVariantConfigProperty, aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_RealTimeInferenceConfigProperty, aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_ShadowModeConfigProperty, aws_cdk_lib_aws_sagemaker_CfnInferenceExperiment_ShadowModelVariantConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelProps, aws_cdk_lib_aws_sagemaker_CfnModel, aws_cdk_lib_aws_sagemaker_CfnModel_ContainerDefinitionProperty, aws_cdk_lib_aws_sagemaker_CfnModel_ImageConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModel_InferenceExecutionConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModel_MultiModelConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModel_RepositoryAuthConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModel_VpcConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinitionProps, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_BatchTransformInputProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_ClusterConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_ConstraintsResourceProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_CsvProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_DatasetFormatProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_EndpointInputProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_JsonProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_ModelBiasAppSpecificationProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_ModelBiasBaselineConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_ModelBiasJobInputProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_MonitoringGroundTruthS3InputProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_MonitoringOutputProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_MonitoringOutputConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_MonitoringResourcesProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_NetworkConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_S3OutputProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_StoppingConditionProperty, aws_cdk_lib_aws_sagemaker_CfnModelBiasJobDefinition_VpcConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelCardProps, aws_cdk_lib_aws_sagemaker_CfnModelCard, aws_cdk_lib_aws_sagemaker_CfnModelCard_AdditionalInformationProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_BusinessDetailsProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_ContentProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_EvaluationDetailProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_FunctionProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_InferenceEnvironmentProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_IntendedUsesProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_MetricDataItemsProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_MetricGroupProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_ModelOverviewProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_ObjectiveFunctionProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_SecurityConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_TrainingDetailsProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_TrainingEnvironmentProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_TrainingHyperParameterProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_TrainingJobDetailsProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_TrainingMetricProperty, aws_cdk_lib_aws_sagemaker_CfnModelCard_UserContextProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinitionProps, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_BatchTransformInputProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_ClusterConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_ConstraintsResourceProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_CsvProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_DatasetFormatProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_EndpointInputProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_JsonProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_ModelExplainabilityAppSpecificationProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_ModelExplainabilityBaselineConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_ModelExplainabilityJobInputProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_MonitoringOutputProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_MonitoringOutputConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_MonitoringResourcesProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_NetworkConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_S3OutputProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_StoppingConditionProperty, aws_cdk_lib_aws_sagemaker_CfnModelExplainabilityJobDefinition_VpcConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackageProps, aws_cdk_lib_aws_sagemaker_CfnModelPackage, aws_cdk_lib_aws_sagemaker_CfnModelPackage_AdditionalInferenceSpecificationDefinitionProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_BiasProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_DataSourceProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_DriftCheckBaselinesProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_DriftCheckBiasProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_DriftCheckExplainabilityProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_DriftCheckModelDataQualityProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_DriftCheckModelQualityProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_ExplainabilityProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_FileSourceProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_InferenceSpecificationProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_MetadataPropertiesProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_MetricsSourceProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelDataQualityProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelInputProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelMetricsProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelPackageContainerDefinitionProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelPackageStatusDetailsProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelPackageStatusItemProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_ModelQualityProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_S3DataSourceProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_SourceAlgorithmProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_SourceAlgorithmSpecificationProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_TransformInputProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_TransformJobDefinitionProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_TransformOutputProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_TransformResourcesProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_UserContextProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_ValidationProfileProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackage_ValidationSpecificationProperty, aws_cdk_lib_aws_sagemaker_CfnModelPackageGroupProps, aws_cdk_lib_aws_sagemaker_CfnModelPackageGroup, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinitionProps, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_BatchTransformInputProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_ClusterConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_ConstraintsResourceProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_CsvProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_DatasetFormatProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_EndpointInputProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_JsonProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_ModelQualityAppSpecificationProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_ModelQualityBaselineConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_ModelQualityJobInputProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_MonitoringGroundTruthS3InputProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_MonitoringOutputProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_MonitoringOutputConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_MonitoringResourcesProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_NetworkConfigProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_S3OutputProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_StoppingConditionProperty, aws_cdk_lib_aws_sagemaker_CfnModelQualityJobDefinition_VpcConfigProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringScheduleProps, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_BaselineConfigProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_BatchTransformInputProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_ClusterConfigProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_ConstraintsResourceProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_CsvProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_DatasetFormatProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_EndpointInputProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_JsonProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringAppSpecificationProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringExecutionSummaryProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringInputProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringJobDefinitionProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringOutputProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringOutputConfigProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringResourcesProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_MonitoringScheduleConfigProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_NetworkConfigProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_S3OutputProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_ScheduleConfigProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_StatisticsResourceProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_StoppingConditionProperty, aws_cdk_lib_aws_sagemaker_CfnMonitoringSchedule_VpcConfigProperty, aws_cdk_lib_aws_sagemaker_CfnNotebookInstanceProps, aws_cdk_lib_aws_sagemaker_CfnNotebookInstance, aws_cdk_lib_aws_sagemaker_CfnNotebookInstance_InstanceMetadataServiceConfigurationProperty, aws_cdk_lib_aws_sagemaker_CfnNotebookInstanceLifecycleConfigProps, aws_cdk_lib_aws_sagemaker_CfnNotebookInstanceLifecycleConfig, aws_cdk_lib_aws_sagemaker_CfnNotebookInstanceLifecycleConfig_NotebookInstanceLifecycleHookProperty, aws_cdk_lib_aws_sagemaker_CfnPipelineProps, aws_cdk_lib_aws_sagemaker_CfnPipeline, aws_cdk_lib_aws_sagemaker_CfnPipeline_ParallelismConfigurationProperty, aws_cdk_lib_aws_sagemaker_CfnPipeline_PipelineDefinitionProperty, aws_cdk_lib_aws_sagemaker_CfnPipeline_S3LocationProperty, aws_cdk_lib_aws_sagemaker_CfnProjectProps, aws_cdk_lib_aws_sagemaker_CfnProject, aws_cdk_lib_aws_sagemaker_CfnProject_ProvisioningParameterProperty, aws_cdk_lib_aws_sagemaker_CfnProject_ServiceCatalogProvisionedProductDetailsProperty, aws_cdk_lib_aws_sagemaker_CfnProject_ServiceCatalogProvisioningDetailsProperty, aws_cdk_lib_aws_sagemaker_CfnSpaceProps, aws_cdk_lib_aws_sagemaker_CfnSpace, aws_cdk_lib_aws_sagemaker_CfnSpace_CustomImageProperty, aws_cdk_lib_aws_sagemaker_CfnSpace_JupyterServerAppSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnSpace_KernelGatewayAppSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnSpace_ResourceSpecProperty, aws_cdk_lib_aws_sagemaker_CfnSpace_SpaceSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnUserProfileProps, aws_cdk_lib_aws_sagemaker_CfnUserProfile, aws_cdk_lib_aws_sagemaker_CfnUserProfile_CustomImageProperty, aws_cdk_lib_aws_sagemaker_CfnUserProfile_JupyterServerAppSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnUserProfile_KernelGatewayAppSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnUserProfile_RStudioServerProAppSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnUserProfile_ResourceSpecProperty, aws_cdk_lib_aws_sagemaker_CfnUserProfile_SharingSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnUserProfile_UserSettingsProperty, aws_cdk_lib_aws_sagemaker_CfnWorkteamProps, aws_cdk_lib_aws_sagemaker_CfnWorkteam, aws_cdk_lib_aws_sagemaker_CfnWorkteam_CognitoMemberDefinitionProperty, aws_cdk_lib_aws_sagemaker_CfnWorkteam_MemberDefinitionProperty, aws_cdk_lib_aws_sagemaker_CfnWorkteam_NotificationConfigurationProperty, aws_cdk_lib_aws_sagemaker_CfnWorkteam_OidcMemberDefinitionProperty, aws_cdk_lib_aws_sam_CfnApiProps, aws_cdk_lib_aws_sam_CfnApi, aws_cdk_lib_aws_sam_CfnApi_AccessLogSettingProperty, aws_cdk_lib_aws_sam_CfnApi_AuthProperty, aws_cdk_lib_aws_sam_CfnApi_CanarySettingProperty, aws_cdk_lib_aws_sam_CfnApi_CorsConfigurationProperty, aws_cdk_lib_aws_sam_CfnApi_DomainConfigurationProperty, aws_cdk_lib_aws_sam_CfnApi_EndpointConfigurationProperty, aws_cdk_lib_aws_sam_CfnApi_MutualTlsAuthenticationProperty, aws_cdk_lib_aws_sam_CfnApi_Route53ConfigurationProperty, aws_cdk_lib_aws_sam_CfnApi_S3LocationProperty, aws_cdk_lib_aws_sam_CfnApplicationProps, aws_cdk_lib_aws_sam_CfnApplication, aws_cdk_lib_aws_sam_CfnApplication_ApplicationLocationProperty, aws_cdk_lib_aws_sam_CfnFunctionProps, aws_cdk_lib_aws_sam_CfnFunction, aws_cdk_lib_aws_sam_CfnFunction_AlexaSkillEventProperty, aws_cdk_lib_aws_sam_CfnFunction_ApiEventProperty, aws_cdk_lib_aws_sam_CfnFunction_AuthProperty, aws_cdk_lib_aws_sam_CfnFunction_AuthResourcePolicyProperty, aws_cdk_lib_aws_sam_CfnFunction_BucketSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_CloudWatchEventEventProperty, aws_cdk_lib_aws_sam_CfnFunction_CloudWatchLogsEventProperty, aws_cdk_lib_aws_sam_CfnFunction_CollectionSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_DeadLetterQueueProperty, aws_cdk_lib_aws_sam_CfnFunction_DeploymentPreferenceProperty, aws_cdk_lib_aws_sam_CfnFunction_DestinationProperty, aws_cdk_lib_aws_sam_CfnFunction_DestinationConfigProperty, aws_cdk_lib_aws_sam_CfnFunction_DomainSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_DynamoDBEventProperty, aws_cdk_lib_aws_sam_CfnFunction_EmptySAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_EventBridgeRuleEventProperty, aws_cdk_lib_aws_sam_CfnFunction_EventInvokeConfigProperty, aws_cdk_lib_aws_sam_CfnFunction_EventInvokeDestinationConfigProperty, aws_cdk_lib_aws_sam_CfnFunction_EventSourceProperty, aws_cdk_lib_aws_sam_CfnFunction_FileSystemConfigProperty, aws_cdk_lib_aws_sam_CfnFunction_FunctionEnvironmentProperty, aws_cdk_lib_aws_sam_CfnFunction_FunctionSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_HooksProperty, aws_cdk_lib_aws_sam_CfnFunction_HttpApiEventProperty, aws_cdk_lib_aws_sam_CfnFunction_HttpApiFunctionAuthProperty, aws_cdk_lib_aws_sam_CfnFunction_IAMPolicyDocumentProperty, aws_cdk_lib_aws_sam_CfnFunction_IdentitySAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_ImageConfigProperty, aws_cdk_lib_aws_sam_CfnFunction_IoTRuleEventProperty, aws_cdk_lib_aws_sam_CfnFunction_KeySAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_KinesisEventProperty, aws_cdk_lib_aws_sam_CfnFunction_LogGroupSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_ParameterNameSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_ProvisionedConcurrencyConfigProperty, aws_cdk_lib_aws_sam_CfnFunction_QueueSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_RequestModelProperty, aws_cdk_lib_aws_sam_CfnFunction_RequestParameterProperty, aws_cdk_lib_aws_sam_CfnFunction_RouteSettingsProperty, aws_cdk_lib_aws_sam_CfnFunction_S3EventProperty, aws_cdk_lib_aws_sam_CfnFunction_S3KeyFilterProperty, aws_cdk_lib_aws_sam_CfnFunction_S3KeyFilterRuleProperty, aws_cdk_lib_aws_sam_CfnFunction_S3LocationProperty, aws_cdk_lib_aws_sam_CfnFunction_S3NotificationFilterProperty, aws_cdk_lib_aws_sam_CfnFunction_SAMPolicyTemplateProperty, aws_cdk_lib_aws_sam_CfnFunction_SNSEventProperty, aws_cdk_lib_aws_sam_CfnFunction_SQSEventProperty, aws_cdk_lib_aws_sam_CfnFunction_ScheduleEventProperty, aws_cdk_lib_aws_sam_CfnFunction_SecretArnSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_StateMachineSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_StreamSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_TableSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_TableStreamSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_TopicSAMPTProperty, aws_cdk_lib_aws_sam_CfnFunction_VpcConfigProperty, aws_cdk_lib_aws_sam_CfnHttpApiProps, aws_cdk_lib_aws_sam_CfnHttpApi, aws_cdk_lib_aws_sam_CfnHttpApi_AccessLogSettingProperty, aws_cdk_lib_aws_sam_CfnHttpApi_CorsConfigurationObjectProperty, aws_cdk_lib_aws_sam_CfnHttpApi_HttpApiAuthProperty, aws_cdk_lib_aws_sam_CfnHttpApi_HttpApiDomainConfigurationProperty, aws_cdk_lib_aws_sam_CfnHttpApi_MutualTlsAuthenticationProperty, aws_cdk_lib_aws_sam_CfnHttpApi_Route53ConfigurationProperty, aws_cdk_lib_aws_sam_CfnHttpApi_RouteSettingsProperty, aws_cdk_lib_aws_sam_CfnHttpApi_S3LocationProperty, aws_cdk_lib_aws_sam_CfnLayerVersionProps, aws_cdk_lib_aws_sam_CfnLayerVersion, aws_cdk_lib_aws_sam_CfnLayerVersion_S3LocationProperty, aws_cdk_lib_aws_sam_CfnSimpleTableProps, aws_cdk_lib_aws_sam_CfnSimpleTable, aws_cdk_lib_aws_sam_CfnSimpleTable_PrimaryKeyProperty, aws_cdk_lib_aws_sam_CfnSimpleTable_ProvisionedThroughputProperty, aws_cdk_lib_aws_sam_CfnSimpleTable_SSESpecificationProperty, aws_cdk_lib_aws_sam_CfnStateMachineProps, aws_cdk_lib_aws_sam_CfnStateMachine, aws_cdk_lib_aws_sam_CfnStateMachine_ApiEventProperty, aws_cdk_lib_aws_sam_CfnStateMachine_CloudWatchEventEventProperty, aws_cdk_lib_aws_sam_CfnStateMachine_CloudWatchLogsLogGroupProperty, aws_cdk_lib_aws_sam_CfnStateMachine_EventBridgeRuleEventProperty, aws_cdk_lib_aws_sam_CfnStateMachine_EventSourceProperty, aws_cdk_lib_aws_sam_CfnStateMachine_FunctionSAMPTProperty, aws_cdk_lib_aws_sam_CfnStateMachine_IAMPolicyDocumentProperty, aws_cdk_lib_aws_sam_CfnStateMachine_LogDestinationProperty, aws_cdk_lib_aws_sam_CfnStateMachine_LoggingConfigurationProperty, aws_cdk_lib_aws_sam_CfnStateMachine_S3LocationProperty, aws_cdk_lib_aws_sam_CfnStateMachine_SAMPolicyTemplateProperty, aws_cdk_lib_aws_sam_CfnStateMachine_ScheduleEventProperty, aws_cdk_lib_aws_sam_CfnStateMachine_StateMachineSAMPTProperty, aws_cdk_lib_aws_sam_CfnStateMachine_TracingConfigurationProperty, aws_cdk_lib_aws_scheduler_CfnScheduleProps, aws_cdk_lib_aws_scheduler_CfnSchedule, aws_cdk_lib_aws_scheduler_CfnSchedule_AwsVpcConfigurationProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_CapacityProviderStrategyItemProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_DeadLetterConfigProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_EcsParametersProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_EventBridgeParametersProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_FlexibleTimeWindowProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_KinesisParametersProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_NetworkConfigurationProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_PlacementConstraintProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_PlacementStrategyProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_RetryPolicyProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_SageMakerPipelineParameterProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_SageMakerPipelineParametersProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_SqsParametersProperty, aws_cdk_lib_aws_scheduler_CfnSchedule_TargetProperty, aws_cdk_lib_aws_scheduler_CfnScheduleGroupProps, aws_cdk_lib_aws_scheduler_CfnScheduleGroup, aws_cdk_lib_aws_sdb_CfnDomainProps, aws_cdk_lib_aws_sdb_CfnDomain, aws_cdk_lib_aws_secretsmanager_ISecret, aws_cdk_lib_aws_secretsmanager_SecretProps, aws_cdk_lib_aws_secretsmanager_ReplicaRegion, aws_cdk_lib_aws_secretsmanager_SecretStringValueBeta1, aws_cdk_lib_aws_secretsmanager_SecretAttributes, aws_cdk_lib_aws_secretsmanager_Secret, aws_cdk_lib_aws_secretsmanager_ISecretAttachmentTarget, aws_cdk_lib_aws_secretsmanager_AttachmentTargetType, aws_cdk_lib_aws_secretsmanager_SecretAttachmentTargetProps, aws_cdk_lib_aws_secretsmanager_AttachedSecretOptions, aws_cdk_lib_aws_secretsmanager_SecretTargetAttachmentProps, aws_cdk_lib_aws_secretsmanager_ISecretTargetAttachment, aws_cdk_lib_aws_secretsmanager_SecretTargetAttachment, aws_cdk_lib_aws_secretsmanager_SecretStringGenerator, aws_cdk_lib_aws_secretsmanager_RotationScheduleOptions, aws_cdk_lib_aws_secretsmanager_RotationScheduleProps, aws_cdk_lib_aws_secretsmanager_RotationSchedule, aws_cdk_lib_aws_secretsmanager_SingleUserHostedRotationOptions, aws_cdk_lib_aws_secretsmanager_MultiUserHostedRotationOptions, aws_cdk_lib_aws_secretsmanager_HostedRotation, aws_cdk_lib_aws_secretsmanager_HostedRotationType, aws_cdk_lib_aws_secretsmanager_ResourcePolicyProps, aws_cdk_lib_aws_secretsmanager_ResourcePolicy, aws_cdk_lib_aws_secretsmanager_SecretRotationApplicationOptions, aws_cdk_lib_aws_secretsmanager_SecretRotationApplication, aws_cdk_lib_aws_secretsmanager_SecretRotationProps, aws_cdk_lib_aws_secretsmanager_SecretRotation, aws_cdk_lib_aws_secretsmanager_CfnResourcePolicyProps, aws_cdk_lib_aws_secretsmanager_CfnResourcePolicy, aws_cdk_lib_aws_secretsmanager_CfnRotationScheduleProps, aws_cdk_lib_aws_secretsmanager_CfnRotationSchedule, aws_cdk_lib_aws_secretsmanager_CfnRotationSchedule_HostedRotationLambdaProperty, aws_cdk_lib_aws_secretsmanager_CfnRotationSchedule_RotationRulesProperty, aws_cdk_lib_aws_secretsmanager_CfnSecretProps, aws_cdk_lib_aws_secretsmanager_CfnSecret, aws_cdk_lib_aws_secretsmanager_CfnSecret_GenerateSecretStringProperty, aws_cdk_lib_aws_secretsmanager_CfnSecret_ReplicaRegionProperty, aws_cdk_lib_aws_secretsmanager_CfnSecretTargetAttachmentProps, aws_cdk_lib_aws_secretsmanager_CfnSecretTargetAttachment, aws_cdk_lib_aws_securityhub_CfnHubProps, aws_cdk_lib_aws_securityhub_CfnHub, aws_cdk_lib_aws_servicecatalog_MessageLanguage, aws_cdk_lib_aws_servicecatalog_CommonConstraintOptions, aws_cdk_lib_aws_servicecatalog_StackSetsConstraintOptions, aws_cdk_lib_aws_servicecatalog_TagUpdateConstraintOptions, aws_cdk_lib_aws_servicecatalog_TemplateRuleAssertion, aws_cdk_lib_aws_servicecatalog_TemplateRule, aws_cdk_lib_aws_servicecatalog_CloudFormationRuleConstraintOptions, aws_cdk_lib_aws_servicecatalog_CloudFormationTemplate, aws_cdk_lib_aws_servicecatalog_CloudFormationTemplateConfig, aws_cdk_lib_aws_servicecatalog_PortfolioShareOptions, aws_cdk_lib_aws_servicecatalog_IPortfolio, aws_cdk_lib_aws_servicecatalog_PortfolioProps, aws_cdk_lib_aws_servicecatalog_Portfolio, aws_cdk_lib_aws_servicecatalog_IProduct, aws_cdk_lib_aws_servicecatalog_CloudFormationProductVersion, aws_cdk_lib_aws_servicecatalog_CloudFormationProductProps, aws_cdk_lib_aws_servicecatalog_Product, aws_cdk_lib_aws_servicecatalog_CloudFormationProduct, aws_cdk_lib_aws_servicecatalog_ProductStackProps, aws_cdk_lib_aws_servicecatalog_ProductStack, aws_cdk_lib_aws_servicecatalog_ProductStackHistoryProps, aws_cdk_lib_aws_servicecatalog_ProductStackHistory, aws_cdk_lib_aws_servicecatalog_TagOptionsProps, aws_cdk_lib_aws_servicecatalog_TagOptions, aws_cdk_lib_aws_servicecatalog_CfnAcceptedPortfolioShareProps, aws_cdk_lib_aws_servicecatalog_CfnAcceptedPortfolioShare, aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProductProps, aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProduct, aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProduct_CodeStarParametersProperty, aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProduct_ConnectionParametersProperty, aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProduct_ProvisioningArtifactPropertiesProperty, aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProduct_SourceConnectionProperty, aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProvisionedProductProps, aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProvisionedProduct, aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProvisionedProduct_ProvisioningParameterProperty, aws_cdk_lib_aws_servicecatalog_CfnCloudFormationProvisionedProduct_ProvisioningPreferencesProperty, aws_cdk_lib_aws_servicecatalog_CfnLaunchNotificationConstraintProps, aws_cdk_lib_aws_servicecatalog_CfnLaunchNotificationConstraint, aws_cdk_lib_aws_servicecatalog_CfnLaunchRoleConstraintProps, aws_cdk_lib_aws_servicecatalog_CfnLaunchRoleConstraint, aws_cdk_lib_aws_servicecatalog_CfnLaunchTemplateConstraintProps, aws_cdk_lib_aws_servicecatalog_CfnLaunchTemplateConstraint, aws_cdk_lib_aws_servicecatalog_CfnPortfolioProps, aws_cdk_lib_aws_servicecatalog_CfnPortfolio, aws_cdk_lib_aws_servicecatalog_CfnPortfolioPrincipalAssociationProps, aws_cdk_lib_aws_servicecatalog_CfnPortfolioPrincipalAssociation, aws_cdk_lib_aws_servicecatalog_CfnPortfolioProductAssociationProps, aws_cdk_lib_aws_servicecatalog_CfnPortfolioProductAssociation, aws_cdk_lib_aws_servicecatalog_CfnPortfolioShareProps, aws_cdk_lib_aws_servicecatalog_CfnPortfolioShare, aws_cdk_lib_aws_servicecatalog_CfnResourceUpdateConstraintProps, aws_cdk_lib_aws_servicecatalog_CfnResourceUpdateConstraint, aws_cdk_lib_aws_servicecatalog_CfnServiceActionProps, aws_cdk_lib_aws_servicecatalog_CfnServiceAction, aws_cdk_lib_aws_servicecatalog_CfnServiceAction_DefinitionParameterProperty, aws_cdk_lib_aws_servicecatalog_CfnServiceActionAssociationProps, aws_cdk_lib_aws_servicecatalog_CfnServiceActionAssociation, aws_cdk_lib_aws_servicecatalog_CfnStackSetConstraintProps, aws_cdk_lib_aws_servicecatalog_CfnStackSetConstraint, aws_cdk_lib_aws_servicecatalog_CfnTagOptionProps, aws_cdk_lib_aws_servicecatalog_CfnTagOption, aws_cdk_lib_aws_servicecatalog_CfnTagOptionAssociationProps, aws_cdk_lib_aws_servicecatalog_CfnTagOptionAssociation, aws_cdk_lib_aws_servicecatalogappregistry_CfnApplicationProps, aws_cdk_lib_aws_servicecatalogappregistry_CfnApplication, aws_cdk_lib_aws_servicecatalogappregistry_CfnAttributeGroupProps, aws_cdk_lib_aws_servicecatalogappregistry_CfnAttributeGroup, aws_cdk_lib_aws_servicecatalogappregistry_CfnAttributeGroupAssociationProps, aws_cdk_lib_aws_servicecatalogappregistry_CfnAttributeGroupAssociation, aws_cdk_lib_aws_servicecatalogappregistry_CfnResourceAssociationProps, aws_cdk_lib_aws_servicecatalogappregistry_CfnResourceAssociation, aws_cdk_lib_aws_servicediscovery_IInstance, aws_cdk_lib_aws_servicediscovery_BaseInstanceProps, aws_cdk_lib_aws_servicediscovery_InstanceBase, aws_cdk_lib_aws_servicediscovery_AliasTargetInstanceProps, aws_cdk_lib_aws_servicediscovery_AliasTargetInstance, aws_cdk_lib_aws_servicediscovery_CnameInstanceBaseProps, aws_cdk_lib_aws_servicediscovery_CnameInstanceProps, aws_cdk_lib_aws_servicediscovery_CnameInstance, aws_cdk_lib_aws_servicediscovery_IpInstanceBaseProps, aws_cdk_lib_aws_servicediscovery_IpInstanceProps, aws_cdk_lib_aws_servicediscovery_IpInstance, aws_cdk_lib_aws_servicediscovery_NonIpInstanceBaseProps, aws_cdk_lib_aws_servicediscovery_NonIpInstanceProps, aws_cdk_lib_aws_servicediscovery_NonIpInstance, aws_cdk_lib_aws_servicediscovery_INamespace, aws_cdk_lib_aws_servicediscovery_BaseNamespaceProps, aws_cdk_lib_aws_servicediscovery_NamespaceType, aws_cdk_lib_aws_servicediscovery_HttpNamespaceProps, aws_cdk_lib_aws_servicediscovery_IHttpNamespace, aws_cdk_lib_aws_servicediscovery_HttpNamespaceAttributes, aws_cdk_lib_aws_servicediscovery_HttpNamespace, aws_cdk_lib_aws_servicediscovery_PrivateDnsNamespaceProps, aws_cdk_lib_aws_servicediscovery_IPrivateDnsNamespace, aws_cdk_lib_aws_servicediscovery_PrivateDnsNamespaceAttributes, aws_cdk_lib_aws_servicediscovery_PrivateDnsNamespace, aws_cdk_lib_aws_servicediscovery_PublicDnsNamespaceProps, aws_cdk_lib_aws_servicediscovery_IPublicDnsNamespace, aws_cdk_lib_aws_servicediscovery_PublicDnsNamespaceAttributes, aws_cdk_lib_aws_servicediscovery_PublicDnsNamespace, aws_cdk_lib_aws_servicediscovery_IService, aws_cdk_lib_aws_servicediscovery_BaseServiceProps, aws_cdk_lib_aws_servicediscovery_DnsServiceProps, aws_cdk_lib_aws_servicediscovery_ServiceProps, aws_cdk_lib_aws_servicediscovery_ServiceAttributes, aws_cdk_lib_aws_servicediscovery_Service, aws_cdk_lib_aws_servicediscovery_HealthCheckConfig, aws_cdk_lib_aws_servicediscovery_HealthCheckCustomConfig, aws_cdk_lib_aws_servicediscovery_DiscoveryType, aws_cdk_lib_aws_servicediscovery_DnsRecordType, aws_cdk_lib_aws_servicediscovery_RoutingPolicy, aws_cdk_lib_aws_servicediscovery_HealthCheckType, aws_cdk_lib_aws_servicediscovery_CfnHttpNamespaceProps, aws_cdk_lib_aws_servicediscovery_CfnHttpNamespace, aws_cdk_lib_aws_servicediscovery_CfnInstanceProps, aws_cdk_lib_aws_servicediscovery_CfnInstance, aws_cdk_lib_aws_servicediscovery_CfnPrivateDnsNamespaceProps, aws_cdk_lib_aws_servicediscovery_CfnPrivateDnsNamespace, aws_cdk_lib_aws_servicediscovery_CfnPrivateDnsNamespace_PrivateDnsPropertiesMutableProperty, aws_cdk_lib_aws_servicediscovery_CfnPrivateDnsNamespace_PropertiesProperty, aws_cdk_lib_aws_servicediscovery_CfnPrivateDnsNamespace_SOAProperty, aws_cdk_lib_aws_servicediscovery_CfnPublicDnsNamespaceProps, aws_cdk_lib_aws_servicediscovery_CfnPublicDnsNamespace, aws_cdk_lib_aws_servicediscovery_CfnPublicDnsNamespace_PropertiesProperty, aws_cdk_lib_aws_servicediscovery_CfnPublicDnsNamespace_PublicDnsPropertiesMutableProperty, aws_cdk_lib_aws_servicediscovery_CfnPublicDnsNamespace_SOAProperty, aws_cdk_lib_aws_servicediscovery_CfnServiceProps, aws_cdk_lib_aws_servicediscovery_CfnService, aws_cdk_lib_aws_servicediscovery_CfnService_DnsConfigProperty, aws_cdk_lib_aws_servicediscovery_CfnService_DnsRecordProperty, aws_cdk_lib_aws_servicediscovery_CfnService_HealthCheckConfigProperty, aws_cdk_lib_aws_servicediscovery_CfnService_HealthCheckCustomConfigProperty, aws_cdk_lib_aws_ses_IReceiptRuleSet, aws_cdk_lib_aws_ses_ReceiptRuleSetProps, aws_cdk_lib_aws_ses_ReceiptRuleSet, aws_cdk_lib_aws_ses_IReceiptRule, aws_cdk_lib_aws_ses_TlsPolicy, aws_cdk_lib_aws_ses_ReceiptRuleOptions, aws_cdk_lib_aws_ses_ReceiptRuleProps, aws_cdk_lib_aws_ses_ReceiptRule, aws_cdk_lib_aws_ses_DropSpamReceiptRuleProps, aws_cdk_lib_aws_ses_DropSpamReceiptRule, aws_cdk_lib_aws_ses_IReceiptRuleAction, aws_cdk_lib_aws_ses_AddHeaderActionConfig, aws_cdk_lib_aws_ses_BounceActionConfig, aws_cdk_lib_aws_ses_LambdaActionConfig, aws_cdk_lib_aws_ses_S3ActionConfig, aws_cdk_lib_aws_ses_SNSActionConfig, aws_cdk_lib_aws_ses_StopActionConfig, aws_cdk_lib_aws_ses_WorkmailActionConfig, aws_cdk_lib_aws_ses_ReceiptRuleActionConfig, aws_cdk_lib_aws_ses_ReceiptFilterPolicy, aws_cdk_lib_aws_ses_ReceiptFilterProps, aws_cdk_lib_aws_ses_ReceiptFilter, aws_cdk_lib_aws_ses_AllowListReceiptFilterProps, aws_cdk_lib_aws_ses_AllowListReceiptFilter, aws_cdk_lib_aws_ses_IDedicatedIpPool, aws_cdk_lib_aws_ses_DedicatedIpPoolProps, aws_cdk_lib_aws_ses_DedicatedIpPool, aws_cdk_lib_aws_ses_IConfigurationSet, aws_cdk_lib_aws_ses_ConfigurationSetProps, aws_cdk_lib_aws_ses_ConfigurationSetTlsPolicy, aws_cdk_lib_aws_ses_SuppressionReasons, aws_cdk_lib_aws_ses_ConfigurationSet, aws_cdk_lib_aws_ses_IEmailIdentity, aws_cdk_lib_aws_ses_EmailIdentityProps, aws_cdk_lib_aws_ses_Identity, aws_cdk_lib_aws_ses_MailFromBehaviorOnMxFailure, aws_cdk_lib_aws_ses_DkimIdentityConfig, aws_cdk_lib_aws_ses_DkimIdentity, aws_cdk_lib_aws_ses_ByoDkimOptions, aws_cdk_lib_aws_ses_EasyDkimSigningKeyLength, aws_cdk_lib_aws_ses_EmailIdentity, aws_cdk_lib_aws_ses_DkimRecord, aws_cdk_lib_aws_ses_IVdmAttributes, aws_cdk_lib_aws_ses_VdmAttributesProps, aws_cdk_lib_aws_ses_VdmAttributes, aws_cdk_lib_aws_ses_IConfigurationSetEventDestination, aws_cdk_lib_aws_ses_ConfigurationSetEventDestinationOptions, aws_cdk_lib_aws_ses_EventDestination, aws_cdk_lib_aws_ses_ConfigurationSetEventDestinationProps, aws_cdk_lib_aws_ses_EmailSendingEvent, aws_cdk_lib_aws_ses_CloudWatchDimension, aws_cdk_lib_aws_ses_CloudWatchDimensionSource, aws_cdk_lib_aws_ses_ConfigurationSetEventDestination, aws_cdk_lib_aws_ses_CfnConfigurationSetProps, aws_cdk_lib_aws_ses_CfnConfigurationSet, aws_cdk_lib_aws_ses_CfnConfigurationSet_DashboardOptionsProperty, aws_cdk_lib_aws_ses_CfnConfigurationSet_DeliveryOptionsProperty, aws_cdk_lib_aws_ses_CfnConfigurationSet_GuardianOptionsProperty, aws_cdk_lib_aws_ses_CfnConfigurationSet_ReputationOptionsProperty, aws_cdk_lib_aws_ses_CfnConfigurationSet_SendingOptionsProperty, aws_cdk_lib_aws_ses_CfnConfigurationSet_SuppressionOptionsProperty, aws_cdk_lib_aws_ses_CfnConfigurationSet_TrackingOptionsProperty, aws_cdk_lib_aws_ses_CfnConfigurationSet_VdmOptionsProperty, aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestinationProps, aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestination, aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestination_CloudWatchDestinationProperty, aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestination_DimensionConfigurationProperty, aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestination_EventDestinationProperty, aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestination_KinesisFirehoseDestinationProperty, aws_cdk_lib_aws_ses_CfnConfigurationSetEventDestination_SnsDestinationProperty, aws_cdk_lib_aws_ses_CfnContactListProps, aws_cdk_lib_aws_ses_CfnContactList, aws_cdk_lib_aws_ses_CfnContactList_TopicProperty, aws_cdk_lib_aws_ses_CfnDedicatedIpPoolProps, aws_cdk_lib_aws_ses_CfnDedicatedIpPool, aws_cdk_lib_aws_ses_CfnEmailIdentityProps, aws_cdk_lib_aws_ses_CfnEmailIdentity, aws_cdk_lib_aws_ses_CfnEmailIdentity_ConfigurationSetAttributesProperty, aws_cdk_lib_aws_ses_CfnEmailIdentity_DkimAttributesProperty, aws_cdk_lib_aws_ses_CfnEmailIdentity_DkimSigningAttributesProperty, aws_cdk_lib_aws_ses_CfnEmailIdentity_FeedbackAttributesProperty, aws_cdk_lib_aws_ses_CfnEmailIdentity_MailFromAttributesProperty, aws_cdk_lib_aws_ses_CfnReceiptFilterProps, aws_cdk_lib_aws_ses_CfnReceiptFilter, aws_cdk_lib_aws_ses_CfnReceiptFilter_FilterProperty, aws_cdk_lib_aws_ses_CfnReceiptFilter_IpFilterProperty, aws_cdk_lib_aws_ses_CfnReceiptRuleProps, aws_cdk_lib_aws_ses_CfnReceiptRule, aws_cdk_lib_aws_ses_CfnReceiptRule_ActionProperty, aws_cdk_lib_aws_ses_CfnReceiptRule_AddHeaderActionProperty, aws_cdk_lib_aws_ses_CfnReceiptRule_BounceActionProperty, aws_cdk_lib_aws_ses_CfnReceiptRule_LambdaActionProperty, aws_cdk_lib_aws_ses_CfnReceiptRule_RuleProperty, aws_cdk_lib_aws_ses_CfnReceiptRule_S3ActionProperty, aws_cdk_lib_aws_ses_CfnReceiptRule_SNSActionProperty, aws_cdk_lib_aws_ses_CfnReceiptRule_StopActionProperty, aws_cdk_lib_aws_ses_CfnReceiptRule_WorkmailActionProperty, aws_cdk_lib_aws_ses_CfnReceiptRuleSetProps, aws_cdk_lib_aws_ses_CfnReceiptRuleSet, aws_cdk_lib_aws_ses_CfnTemplateProps, aws_cdk_lib_aws_ses_CfnTemplate, aws_cdk_lib_aws_ses_CfnTemplate_TemplateProperty, aws_cdk_lib_aws_ses_CfnVdmAttributesProps, aws_cdk_lib_aws_ses_CfnVdmAttributes, aws_cdk_lib_aws_ses_CfnVdmAttributes_DashboardAttributesProperty, aws_cdk_lib_aws_ses_CfnVdmAttributes_GuardianAttributesProperty, aws_cdk_lib_aws_ses_actions_AddHeaderProps, aws_cdk_lib_aws_ses_actions_AddHeader, aws_cdk_lib_aws_ses_actions_BounceTemplateProps, aws_cdk_lib_aws_ses_actions_BounceTemplate, aws_cdk_lib_aws_ses_actions_BounceProps, aws_cdk_lib_aws_ses_actions_Bounce, aws_cdk_lib_aws_ses_actions_LambdaInvocationType, aws_cdk_lib_aws_ses_actions_LambdaProps, aws_cdk_lib_aws_ses_actions_Lambda, aws_cdk_lib_aws_ses_actions_S3Props, aws_cdk_lib_aws_ses_actions_S3, aws_cdk_lib_aws_ses_actions_EmailEncoding, aws_cdk_lib_aws_ses_actions_SnsProps, aws_cdk_lib_aws_ses_actions_Sns, aws_cdk_lib_aws_ses_actions_StopProps, aws_cdk_lib_aws_ses_actions_Stop, aws_cdk_lib_aws_signer_CfnProfilePermissionProps, aws_cdk_lib_aws_signer_CfnProfilePermission, aws_cdk_lib_aws_signer_CfnSigningProfileProps, aws_cdk_lib_aws_signer_CfnSigningProfile, aws_cdk_lib_aws_signer_CfnSigningProfile_SignatureValidityPeriodProperty, aws_cdk_lib_aws_signer_Platform, aws_cdk_lib_aws_signer_ISigningProfile, aws_cdk_lib_aws_signer_SigningProfileProps, aws_cdk_lib_aws_signer_SigningProfileAttributes, aws_cdk_lib_aws_signer_SigningProfile, aws_cdk_lib_aws_simspaceweaver_CfnSimulationProps, aws_cdk_lib_aws_simspaceweaver_CfnSimulation, aws_cdk_lib_aws_simspaceweaver_CfnSimulation_S3LocationProperty, aws_cdk_lib_aws_sns_TopicPolicyProps, aws_cdk_lib_aws_sns_TopicPolicy, aws_cdk_lib_aws_sns_TopicProps, aws_cdk_lib_aws_sns_Topic, aws_cdk_lib_aws_sns_ITopic, aws_cdk_lib_aws_sns_TopicBase, aws_cdk_lib_aws_sns_SubscriptionOptions, aws_cdk_lib_aws_sns_SubscriptionProps, aws_cdk_lib_aws_sns_Subscription, aws_cdk_lib_aws_sns_SubscriptionProtocol, aws_cdk_lib_aws_sns_FilterOrPolicyType, aws_cdk_lib_aws_sns_FilterOrPolicy, aws_cdk_lib_aws_sns_Filter, aws_cdk_lib_aws_sns_Policy, aws_cdk_lib_aws_sns_TopicSubscriptionConfig, aws_cdk_lib_aws_sns_ITopicSubscription, aws_cdk_lib_aws_sns_StringConditions, aws_cdk_lib_aws_sns_BetweenCondition, aws_cdk_lib_aws_sns_NumericConditions, aws_cdk_lib_aws_sns_SubscriptionFilter, aws_cdk_lib_aws_sns_CfnSubscriptionProps, aws_cdk_lib_aws_sns_CfnSubscription, aws_cdk_lib_aws_sns_CfnTopicProps, aws_cdk_lib_aws_sns_CfnTopic, aws_cdk_lib_aws_sns_CfnTopic_SubscriptionProperty, aws_cdk_lib_aws_sns_CfnTopicPolicyProps, aws_cdk_lib_aws_sns_CfnTopicPolicy, aws_cdk_lib_aws_sns_subscriptions_SubscriptionProps, aws_cdk_lib_aws_sns_subscriptions_EmailSubscriptionProps, aws_cdk_lib_aws_sns_subscriptions_EmailSubscription, aws_cdk_lib_aws_sns_subscriptions_LambdaSubscriptionProps, aws_cdk_lib_aws_sns_subscriptions_LambdaSubscription, aws_cdk_lib_aws_sns_subscriptions_SqsSubscriptionProps, aws_cdk_lib_aws_sns_subscriptions_SqsSubscription, aws_cdk_lib_aws_sns_subscriptions_UrlSubscriptionProps, aws_cdk_lib_aws_sns_subscriptions_UrlSubscription, aws_cdk_lib_aws_sns_subscriptions_SmsSubscriptionProps, aws_cdk_lib_aws_sns_subscriptions_SmsSubscription, aws_cdk_lib_aws_sqs_QueuePolicyProps, aws_cdk_lib_aws_sqs_QueuePolicy, aws_cdk_lib_aws_sqs_QueueProps, aws_cdk_lib_aws_sqs_DeadLetterQueue, aws_cdk_lib_aws_sqs_QueueEncryption, aws_cdk_lib_aws_sqs_DeduplicationScope, aws_cdk_lib_aws_sqs_FifoThroughputLimit, aws_cdk_lib_aws_sqs_Queue, aws_cdk_lib_aws_sqs_IQueue, aws_cdk_lib_aws_sqs_QueueBase, aws_cdk_lib_aws_sqs_QueueAttributes, aws_cdk_lib_aws_sqs_CfnQueueProps, aws_cdk_lib_aws_sqs_CfnQueue, aws_cdk_lib_aws_sqs_CfnQueuePolicyProps, aws_cdk_lib_aws_sqs_CfnQueuePolicy, aws_cdk_lib_aws_ssm_IParameter, aws_cdk_lib_aws_ssm_IStringParameter, aws_cdk_lib_aws_ssm_IStringListParameter, aws_cdk_lib_aws_ssm_ParameterOptions, aws_cdk_lib_aws_ssm_StringParameterProps, aws_cdk_lib_aws_ssm_StringListParameterProps, aws_cdk_lib_aws_ssm_ParameterValueType, aws_cdk_lib_aws_ssm_ParameterType, aws_cdk_lib_aws_ssm_ParameterDataType, aws_cdk_lib_aws_ssm_ParameterTier, aws_cdk_lib_aws_ssm_CommonStringParameterAttributes, aws_cdk_lib_aws_ssm_StringParameterAttributes, aws_cdk_lib_aws_ssm_ListParameterAttributes, aws_cdk_lib_aws_ssm_SecureStringParameterAttributes, aws_cdk_lib_aws_ssm_StringParameter, aws_cdk_lib_aws_ssm_StringListParameter, aws_cdk_lib_aws_ssm_CfnAssociationProps, aws_cdk_lib_aws_ssm_CfnAssociation, aws_cdk_lib_aws_ssm_CfnAssociation_InstanceAssociationOutputLocationProperty, aws_cdk_lib_aws_ssm_CfnAssociation_S3OutputLocationProperty, aws_cdk_lib_aws_ssm_CfnAssociation_TargetProperty, aws_cdk_lib_aws_ssm_CfnDocumentProps, aws_cdk_lib_aws_ssm_CfnDocument, aws_cdk_lib_aws_ssm_CfnDocument_AttachmentsSourceProperty, aws_cdk_lib_aws_ssm_CfnDocument_DocumentRequiresProperty, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowProps, aws_cdk_lib_aws_ssm_CfnMaintenanceWindow, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTargetProps, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTarget, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTarget_TargetsProperty, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTaskProps, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_CloudWatchOutputConfigProperty, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_LoggingInfoProperty, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_MaintenanceWindowAutomationParametersProperty, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_MaintenanceWindowLambdaParametersProperty, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_MaintenanceWindowRunCommandParametersProperty, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_MaintenanceWindowStepFunctionsParametersProperty, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_NotificationConfigProperty, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_TargetProperty, aws_cdk_lib_aws_ssm_CfnMaintenanceWindowTask_TaskInvocationParametersProperty, aws_cdk_lib_aws_ssm_CfnParameterProps, aws_cdk_lib_aws_ssm_CfnParameter, aws_cdk_lib_aws_ssm_CfnPatchBaselineProps, aws_cdk_lib_aws_ssm_CfnPatchBaseline, aws_cdk_lib_aws_ssm_CfnPatchBaseline_PatchFilterProperty, aws_cdk_lib_aws_ssm_CfnPatchBaseline_PatchFilterGroupProperty, aws_cdk_lib_aws_ssm_CfnPatchBaseline_PatchSourceProperty, aws_cdk_lib_aws_ssm_CfnPatchBaseline_RuleProperty, aws_cdk_lib_aws_ssm_CfnPatchBaseline_RuleGroupProperty, aws_cdk_lib_aws_ssm_CfnResourceDataSyncProps, aws_cdk_lib_aws_ssm_CfnResourceDataSync, aws_cdk_lib_aws_ssm_CfnResourceDataSync_AwsOrganizationsSourceProperty, aws_cdk_lib_aws_ssm_CfnResourceDataSync_S3DestinationProperty, aws_cdk_lib_aws_ssm_CfnResourceDataSync_SyncSourceProperty, aws_cdk_lib_aws_ssm_CfnResourcePolicyProps, aws_cdk_lib_aws_ssm_CfnResourcePolicy, aws_cdk_lib_aws_ssmcontacts_CfnContactProps, aws_cdk_lib_aws_ssmcontacts_CfnContact, aws_cdk_lib_aws_ssmcontacts_CfnContact_ChannelTargetInfoProperty, aws_cdk_lib_aws_ssmcontacts_CfnContact_ContactTargetInfoProperty, aws_cdk_lib_aws_ssmcontacts_CfnContact_StageProperty, aws_cdk_lib_aws_ssmcontacts_CfnContact_TargetsProperty, aws_cdk_lib_aws_ssmcontacts_CfnContactChannelProps, aws_cdk_lib_aws_ssmcontacts_CfnContactChannel, aws_cdk_lib_aws_ssmincidents_CfnReplicationSetProps, aws_cdk_lib_aws_ssmincidents_CfnReplicationSet, aws_cdk_lib_aws_ssmincidents_CfnReplicationSet_RegionConfigurationProperty, aws_cdk_lib_aws_ssmincidents_CfnReplicationSet_ReplicationRegionProperty, aws_cdk_lib_aws_ssmincidents_CfnResponsePlanProps, aws_cdk_lib_aws_ssmincidents_CfnResponsePlan, aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_ActionProperty, aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_ChatChannelProperty, aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_DynamicSsmParameterProperty, aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_DynamicSsmParameterValueProperty, aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_IncidentTemplateProperty, aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_IntegrationProperty, aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_NotificationTargetItemProperty, aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_PagerDutyConfigurationProperty, aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_PagerDutyIncidentConfigurationProperty, aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_SsmAutomationProperty, aws_cdk_lib_aws_ssmincidents_CfnResponsePlan_SsmParameterProperty, aws_cdk_lib_aws_sso_CfnAssignmentProps, aws_cdk_lib_aws_sso_CfnAssignment, aws_cdk_lib_aws_sso_CfnInstanceAccessControlAttributeConfigurationProps, aws_cdk_lib_aws_sso_CfnInstanceAccessControlAttributeConfiguration, aws_cdk_lib_aws_sso_CfnInstanceAccessControlAttributeConfiguration_AccessControlAttributeProperty, aws_cdk_lib_aws_sso_CfnInstanceAccessControlAttributeConfiguration_AccessControlAttributeValueProperty, aws_cdk_lib_aws_sso_CfnPermissionSetProps, aws_cdk_lib_aws_sso_CfnPermissionSet, aws_cdk_lib_aws_sso_CfnPermissionSet_CustomerManagedPolicyReferenceProperty, aws_cdk_lib_aws_sso_CfnPermissionSet_PermissionsBoundaryProperty, aws_cdk_lib_aws_stepfunctions_JsonPath, aws_cdk_lib_aws_stepfunctions_FieldUtils, aws_cdk_lib_aws_stepfunctions_ActivityProps, aws_cdk_lib_aws_stepfunctions_Activity, aws_cdk_lib_aws_stepfunctions_IActivity, aws_cdk_lib_aws_stepfunctions_TaskInput, aws_cdk_lib_aws_stepfunctions_InputType, aws_cdk_lib_aws_stepfunctions_INextable, aws_cdk_lib_aws_stepfunctions_IChainable, aws_cdk_lib_aws_stepfunctions_Errors, aws_cdk_lib_aws_stepfunctions_RetryProps, aws_cdk_lib_aws_stepfunctions_CatchProps, aws_cdk_lib_aws_stepfunctions_Condition, aws_cdk_lib_aws_stepfunctions_StateMachineType, aws_cdk_lib_aws_stepfunctions_LogLevel, aws_cdk_lib_aws_stepfunctions_LogOptions, aws_cdk_lib_aws_stepfunctions_StateMachineProps, aws_cdk_lib_aws_stepfunctions_StateMachine, aws_cdk_lib_aws_stepfunctions_IStateMachine, aws_cdk_lib_aws_stepfunctions_StateMachineFragment, aws_cdk_lib_aws_stepfunctions_SingleStateOptions, aws_cdk_lib_aws_stepfunctions_StateTransitionMetric, aws_cdk_lib_aws_stepfunctions_Chain, aws_cdk_lib_aws_stepfunctions_StateGraph, aws_cdk_lib_aws_stepfunctions_ServiceIntegrationPattern, aws_cdk_lib_aws_stepfunctions_ChoiceProps, aws_cdk_lib_aws_stepfunctions_Choice, aws_cdk_lib_aws_stepfunctions_AfterwardsOptions, aws_cdk_lib_aws_stepfunctions_FailProps, aws_cdk_lib_aws_stepfunctions_Fail, aws_cdk_lib_aws_stepfunctions_ParallelProps, aws_cdk_lib_aws_stepfunctions_Parallel, aws_cdk_lib_aws_stepfunctions_Result, aws_cdk_lib_aws_stepfunctions_PassProps, aws_cdk_lib_aws_stepfunctions_Pass, aws_cdk_lib_aws_stepfunctions_StateProps, aws_cdk_lib_aws_stepfunctions_State, aws_cdk_lib_aws_stepfunctions_FindStateOptions, aws_cdk_lib_aws_stepfunctions_SucceedProps, aws_cdk_lib_aws_stepfunctions_Succeed, aws_cdk_lib_aws_stepfunctions_WaitTime, aws_cdk_lib_aws_stepfunctions_WaitProps, aws_cdk_lib_aws_stepfunctions_Wait, aws_cdk_lib_aws_stepfunctions_MapProps, aws_cdk_lib_aws_stepfunctions_Map, aws_cdk_lib_aws_stepfunctions_CustomStateProps, aws_cdk_lib_aws_stepfunctions_CustomState, aws_cdk_lib_aws_stepfunctions_TaskStateBaseProps, aws_cdk_lib_aws_stepfunctions_TaskStateBase, aws_cdk_lib_aws_stepfunctions_TaskMetricsConfig, aws_cdk_lib_aws_stepfunctions_IntegrationPattern, aws_cdk_lib_aws_stepfunctions_Timeout, aws_cdk_lib_aws_stepfunctions_Credentials, aws_cdk_lib_aws_stepfunctions_TaskRole, aws_cdk_lib_aws_stepfunctions_CfnActivityProps, aws_cdk_lib_aws_stepfunctions_CfnActivity, aws_cdk_lib_aws_stepfunctions_CfnActivity_TagsEntryProperty, aws_cdk_lib_aws_stepfunctions_CfnStateMachineProps, aws_cdk_lib_aws_stepfunctions_CfnStateMachine, aws_cdk_lib_aws_stepfunctions_CfnStateMachine_CloudWatchLogsLogGroupProperty, aws_cdk_lib_aws_stepfunctions_CfnStateMachine_LogDestinationProperty, aws_cdk_lib_aws_stepfunctions_CfnStateMachine_LoggingConfigurationProperty, aws_cdk_lib_aws_stepfunctions_CfnStateMachine_S3LocationProperty, aws_cdk_lib_aws_stepfunctions_CfnStateMachine_TagsEntryProperty, aws_cdk_lib_aws_stepfunctions_CfnStateMachine_TracingConfigurationProperty, aws_cdk_lib_aws_stepfunctions_tasks_LambdaInvokeProps, aws_cdk_lib_aws_stepfunctions_tasks_LambdaInvoke, aws_cdk_lib_aws_stepfunctions_tasks_LambdaInvocationType, aws_cdk_lib_aws_stepfunctions_tasks_CommonEcsRunTaskProps, aws_cdk_lib_aws_stepfunctions_tasks_ContainerOverride, aws_cdk_lib_aws_stepfunctions_tasks_TaskEnvironmentVariable, aws_cdk_lib_aws_stepfunctions_tasks_MessageAttributeDataType, aws_cdk_lib_aws_stepfunctions_tasks_MessageAttribute, aws_cdk_lib_aws_stepfunctions_tasks_SnsPublishProps, aws_cdk_lib_aws_stepfunctions_tasks_SnsPublish, aws_cdk_lib_aws_stepfunctions_tasks_SqsSendMessageProps, aws_cdk_lib_aws_stepfunctions_tasks_SqsSendMessage, aws_cdk_lib_aws_stepfunctions_tasks_EcsRunTaskProps, aws_cdk_lib_aws_stepfunctions_tasks_IEcsLaunchTarget, aws_cdk_lib_aws_stepfunctions_tasks_LaunchTargetBindOptions, aws_cdk_lib_aws_stepfunctions_tasks_EcsLaunchTargetConfig, aws_cdk_lib_aws_stepfunctions_tasks_EcsFargateLaunchTargetOptions, aws_cdk_lib_aws_stepfunctions_tasks_EcsEc2LaunchTargetOptions, aws_cdk_lib_aws_stepfunctions_tasks_EcsFargateLaunchTarget, aws_cdk_lib_aws_stepfunctions_tasks_EcsEc2LaunchTarget, aws_cdk_lib_aws_stepfunctions_tasks_EcsRunTask, aws_cdk_lib_aws_stepfunctions_tasks_ISageMakerTask, aws_cdk_lib_aws_stepfunctions_tasks_AlgorithmSpecification, aws_cdk_lib_aws_stepfunctions_tasks_Channel, aws_cdk_lib_aws_stepfunctions_tasks_ShuffleConfig, aws_cdk_lib_aws_stepfunctions_tasks_DataSource, aws_cdk_lib_aws_stepfunctions_tasks_S3DataSource, aws_cdk_lib_aws_stepfunctions_tasks_OutputDataConfig, aws_cdk_lib_aws_stepfunctions_tasks_StoppingCondition, aws_cdk_lib_aws_stepfunctions_tasks_ResourceConfig, aws_cdk_lib_aws_stepfunctions_tasks_VpcConfig, aws_cdk_lib_aws_stepfunctions_tasks_MetricDefinition, aws_cdk_lib_aws_stepfunctions_tasks_S3LocationConfig, aws_cdk_lib_aws_stepfunctions_tasks_S3Location, aws_cdk_lib_aws_stepfunctions_tasks_S3LocationBindOptions, aws_cdk_lib_aws_stepfunctions_tasks_DockerImageConfig, aws_cdk_lib_aws_stepfunctions_tasks_DockerImage, aws_cdk_lib_aws_stepfunctions_tasks_S3DataType, aws_cdk_lib_aws_stepfunctions_tasks_S3DataDistributionType, aws_cdk_lib_aws_stepfunctions_tasks_RecordWrapperType, aws_cdk_lib_aws_stepfunctions_tasks_InputMode, aws_cdk_lib_aws_stepfunctions_tasks_CompressionType, aws_cdk_lib_aws_stepfunctions_tasks_ModelClientOptions, aws_cdk_lib_aws_stepfunctions_tasks_TransformInput, aws_cdk_lib_aws_stepfunctions_tasks_TransformDataSource, aws_cdk_lib_aws_stepfunctions_tasks_TransformS3DataSource, aws_cdk_lib_aws_stepfunctions_tasks_TransformOutput, aws_cdk_lib_aws_stepfunctions_tasks_TransformResources, aws_cdk_lib_aws_stepfunctions_tasks_ContainerDefinitionOptions, aws_cdk_lib_aws_stepfunctions_tasks_ContainerDefinition, aws_cdk_lib_aws_stepfunctions_tasks_IContainerDefinition, aws_cdk_lib_aws_stepfunctions_tasks_ContainerDefinitionConfig, aws_cdk_lib_aws_stepfunctions_tasks_Mode, aws_cdk_lib_aws_stepfunctions_tasks_ProductionVariant, aws_cdk_lib_aws_stepfunctions_tasks_AcceleratorClass, aws_cdk_lib_aws_stepfunctions_tasks_AcceleratorType, aws_cdk_lib_aws_stepfunctions_tasks_BatchStrategy, aws_cdk_lib_aws_stepfunctions_tasks_SplitType, aws_cdk_lib_aws_stepfunctions_tasks_AssembleWith, aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateTrainingJobProps, aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateTrainingJob, aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateTransformJobProps, aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateTransformJob, aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateEndpointProps, aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateEndpoint, aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateEndpointConfigProps, aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateEndpointConfig, aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateModelProps, aws_cdk_lib_aws_stepfunctions_tasks_SageMakerCreateModel, aws_cdk_lib_aws_stepfunctions_tasks_SageMakerUpdateEndpointProps, aws_cdk_lib_aws_stepfunctions_tasks_SageMakerUpdateEndpoint, aws_cdk_lib_aws_stepfunctions_tasks_StepFunctionsStartExecutionProps, aws_cdk_lib_aws_stepfunctions_tasks_StepFunctionsStartExecution, aws_cdk_lib_aws_stepfunctions_tasks_StepFunctionsInvokeActivityProps, aws_cdk_lib_aws_stepfunctions_tasks_StepFunctionsInvokeActivity, aws_cdk_lib_aws_stepfunctions_tasks_EvaluateExpressionProps, aws_cdk_lib_aws_stepfunctions_tasks_EvaluateExpression, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateClusterProps, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EmrClusterScaleDownBehavior, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceRoleType, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EbsBlockDeviceVolumeType, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_VolumeSpecificationProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EbsBlockDeviceConfigProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_EbsConfigurationProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceTypeConfigProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_SpotTimeoutAction, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_SpotAllocationStrategy, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_SpotProvisioningSpecificationProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceFleetProvisioningSpecificationsProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceFleetConfigProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_CloudWatchAlarmComparisonOperator, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_CloudWatchAlarmStatistic, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_CloudWatchAlarmUnit, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_MetricDimensionProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_CloudWatchAlarmDefinitionProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingTriggerProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceMarket, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingAdjustmentType, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_SimpleScalingPolicyConfigurationProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingActionProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingRuleProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScalingConstraintsProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_AutoScalingPolicyProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstanceGroupConfigProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_PlacementTypeProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_InstancesConfigProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ApplicationConfigProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ScriptBootstrapActionConfigProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_BootstrapActionConfigProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_ConfigurationProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrCreateCluster_KerberosAttributesProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrSetClusterTerminationProtectionProps, aws_cdk_lib_aws_stepfunctions_tasks_EmrSetClusterTerminationProtection, aws_cdk_lib_aws_stepfunctions_tasks_EmrTerminateClusterProps, aws_cdk_lib_aws_stepfunctions_tasks_EmrTerminateCluster, aws_cdk_lib_aws_stepfunctions_tasks_ActionOnFailure, aws_cdk_lib_aws_stepfunctions_tasks_EmrAddStepProps, aws_cdk_lib_aws_stepfunctions_tasks_EmrAddStep, aws_cdk_lib_aws_stepfunctions_tasks_EmrCancelStepProps, aws_cdk_lib_aws_stepfunctions_tasks_EmrCancelStep, aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceFleetByNameProps, aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceFleetByName, aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByNameProps, aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByName, aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByName_InstanceResizePolicyProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByName_ShrinkPolicyProperty, aws_cdk_lib_aws_stepfunctions_tasks_EmrModifyInstanceGroupByName_InstanceGroupModifyConfigProperty, aws_cdk_lib_aws_stepfunctions_tasks_EksClusterInput, aws_cdk_lib_aws_stepfunctions_tasks_EmrContainersCreateVirtualClusterProps, aws_cdk_lib_aws_stepfunctions_tasks_EmrContainersCreateVirtualCluster, aws_cdk_lib_aws_stepfunctions_tasks_EmrContainersDeleteVirtualClusterProps, aws_cdk_lib_aws_stepfunctions_tasks_EmrContainersDeleteVirtualCluster, aws_cdk_lib_aws_stepfunctions_tasks_EmrContainersStartJobRunProps, aws_cdk_lib_aws_stepfunctions_tasks_EmrContainersStartJobRun, aws_cdk_lib_aws_stepfunctions_tasks_SparkSubmitJobDriver, aws_cdk_lib_aws_stepfunctions_tasks_JobDriver, aws_cdk_lib_aws_stepfunctions_tasks_Classification, aws_cdk_lib_aws_stepfunctions_tasks_ApplicationConfiguration, aws_cdk_lib_aws_stepfunctions_tasks_Monitoring, aws_cdk_lib_aws_stepfunctions_tasks_ReleaseLabel, aws_cdk_lib_aws_stepfunctions_tasks_VirtualClusterInput, aws_cdk_lib_aws_stepfunctions_tasks_GlueStartJobRunProps, aws_cdk_lib_aws_stepfunctions_tasks_GlueStartJobRun, aws_cdk_lib_aws_stepfunctions_tasks_ContainerOverrides, aws_cdk_lib_aws_stepfunctions_tasks_JobDependency, aws_cdk_lib_aws_stepfunctions_tasks_BatchContainerOverrides, aws_cdk_lib_aws_stepfunctions_tasks_BatchJobDependency, aws_cdk_lib_aws_stepfunctions_tasks_BatchSubmitJobProps, aws_cdk_lib_aws_stepfunctions_tasks_BatchSubmitJob, aws_cdk_lib_aws_stepfunctions_tasks_DynamoGetItemProps, aws_cdk_lib_aws_stepfunctions_tasks_DynamoGetItem, aws_cdk_lib_aws_stepfunctions_tasks_DynamoPutItemProps, aws_cdk_lib_aws_stepfunctions_tasks_DynamoPutItem, aws_cdk_lib_aws_stepfunctions_tasks_DynamoUpdateItemProps, aws_cdk_lib_aws_stepfunctions_tasks_DynamoUpdateItem, aws_cdk_lib_aws_stepfunctions_tasks_DynamoDeleteItemProps, aws_cdk_lib_aws_stepfunctions_tasks_DynamoDeleteItem, aws_cdk_lib_aws_stepfunctions_tasks_DynamoConsumedCapacity, aws_cdk_lib_aws_stepfunctions_tasks_DynamoItemCollectionMetrics, aws_cdk_lib_aws_stepfunctions_tasks_DynamoReturnValues, aws_cdk_lib_aws_stepfunctions_tasks_DynamoProjectionExpression, aws_cdk_lib_aws_stepfunctions_tasks_DynamoAttributeValue, aws_cdk_lib_aws_stepfunctions_tasks_CodeBuildStartBuildProps, aws_cdk_lib_aws_stepfunctions_tasks_CodeBuildStartBuild, aws_cdk_lib_aws_stepfunctions_tasks_AthenaStartQueryExecutionProps, aws_cdk_lib_aws_stepfunctions_tasks_AthenaStartQueryExecution, aws_cdk_lib_aws_stepfunctions_tasks_ResultConfiguration, aws_cdk_lib_aws_stepfunctions_tasks_EncryptionConfiguration, aws_cdk_lib_aws_stepfunctions_tasks_EncryptionOption, aws_cdk_lib_aws_stepfunctions_tasks_QueryExecutionContext, aws_cdk_lib_aws_stepfunctions_tasks_AthenaStopQueryExecutionProps, aws_cdk_lib_aws_stepfunctions_tasks_AthenaStopQueryExecution, aws_cdk_lib_aws_stepfunctions_tasks_AthenaGetQueryExecutionProps, aws_cdk_lib_aws_stepfunctions_tasks_AthenaGetQueryExecution, aws_cdk_lib_aws_stepfunctions_tasks_AthenaGetQueryResultsProps, aws_cdk_lib_aws_stepfunctions_tasks_AthenaGetQueryResults, aws_cdk_lib_aws_stepfunctions_tasks_GlueDataBrewStartJobRunProps, aws_cdk_lib_aws_stepfunctions_tasks_GlueDataBrewStartJobRun, aws_cdk_lib_aws_stepfunctions_tasks_EksCallProps, aws_cdk_lib_aws_stepfunctions_tasks_EksCall, aws_cdk_lib_aws_stepfunctions_tasks_HttpMethods, aws_cdk_lib_aws_stepfunctions_tasks_HttpMethod, aws_cdk_lib_aws_stepfunctions_tasks_AuthType, aws_cdk_lib_aws_stepfunctions_tasks_CallApiGatewayEndpointBaseProps, aws_cdk_lib_aws_stepfunctions_tasks_CallApiGatewayRestApiEndpointProps, aws_cdk_lib_aws_stepfunctions_tasks_CallApiGatewayRestApiEndpoint, aws_cdk_lib_aws_stepfunctions_tasks_CallApiGatewayHttpApiEndpointProps, aws_cdk_lib_aws_stepfunctions_tasks_CallApiGatewayHttpApiEndpoint, aws_cdk_lib_aws_stepfunctions_tasks_EventBridgePutEventsEntry, aws_cdk_lib_aws_stepfunctions_tasks_EventBridgePutEventsProps, aws_cdk_lib_aws_stepfunctions_tasks_EventBridgePutEvents, aws_cdk_lib_aws_stepfunctions_tasks_CallAwsServiceProps, aws_cdk_lib_aws_stepfunctions_tasks_CallAwsService, aws_cdk_lib_aws_supportapp_CfnAccountAliasProps, aws_cdk_lib_aws_supportapp_CfnAccountAlias, aws_cdk_lib_aws_supportapp_CfnSlackChannelConfigurationProps, aws_cdk_lib_aws_supportapp_CfnSlackChannelConfiguration, aws_cdk_lib_aws_supportapp_CfnSlackWorkspaceConfigurationProps, aws_cdk_lib_aws_supportapp_CfnSlackWorkspaceConfiguration, aws_cdk_lib_aws_synthetics_CfnCanaryProps, aws_cdk_lib_aws_synthetics_CfnCanary, aws_cdk_lib_aws_synthetics_CfnCanary_ArtifactConfigProperty, aws_cdk_lib_aws_synthetics_CfnCanary_BaseScreenshotProperty, aws_cdk_lib_aws_synthetics_CfnCanary_CodeProperty, aws_cdk_lib_aws_synthetics_CfnCanary_RunConfigProperty, aws_cdk_lib_aws_synthetics_CfnCanary_S3EncryptionProperty, aws_cdk_lib_aws_synthetics_CfnCanary_ScheduleProperty, aws_cdk_lib_aws_synthetics_CfnCanary_VPCConfigProperty, aws_cdk_lib_aws_synthetics_CfnCanary_VisualReferenceProperty, aws_cdk_lib_aws_synthetics_CfnGroupProps, aws_cdk_lib_aws_synthetics_CfnGroup, aws_cdk_lib_aws_systemsmanagersap_CfnApplicationProps, aws_cdk_lib_aws_systemsmanagersap_CfnApplication, aws_cdk_lib_aws_systemsmanagersap_CfnApplication_CredentialProperty, aws_cdk_lib_aws_timestream_CfnDatabaseProps, aws_cdk_lib_aws_timestream_CfnDatabase, aws_cdk_lib_aws_timestream_CfnScheduledQueryProps, aws_cdk_lib_aws_timestream_CfnScheduledQuery, aws_cdk_lib_aws_timestream_CfnScheduledQuery_DimensionMappingProperty, aws_cdk_lib_aws_timestream_CfnScheduledQuery_ErrorReportConfigurationProperty, aws_cdk_lib_aws_timestream_CfnScheduledQuery_MixedMeasureMappingProperty, aws_cdk_lib_aws_timestream_CfnScheduledQuery_MultiMeasureAttributeMappingProperty, aws_cdk_lib_aws_timestream_CfnScheduledQuery_MultiMeasureMappingsProperty, aws_cdk_lib_aws_timestream_CfnScheduledQuery_NotificationConfigurationProperty, aws_cdk_lib_aws_timestream_CfnScheduledQuery_S3ConfigurationProperty, aws_cdk_lib_aws_timestream_CfnScheduledQuery_ScheduleConfigurationProperty, aws_cdk_lib_aws_timestream_CfnScheduledQuery_SnsConfigurationProperty, aws_cdk_lib_aws_timestream_CfnScheduledQuery_TargetConfigurationProperty, aws_cdk_lib_aws_timestream_CfnScheduledQuery_TimestreamConfigurationProperty, aws_cdk_lib_aws_timestream_CfnTableProps, aws_cdk_lib_aws_timestream_CfnTable, aws_cdk_lib_aws_timestream_CfnTable_MagneticStoreRejectedDataLocationProperty, aws_cdk_lib_aws_timestream_CfnTable_MagneticStoreWritePropertiesProperty, aws_cdk_lib_aws_timestream_CfnTable_RetentionPropertiesProperty, aws_cdk_lib_aws_timestream_CfnTable_S3ConfigurationProperty, aws_cdk_lib_aws_transfer_CfnAgreementProps, aws_cdk_lib_aws_transfer_CfnAgreement, aws_cdk_lib_aws_transfer_CfnCertificateProps, aws_cdk_lib_aws_transfer_CfnCertificate, aws_cdk_lib_aws_transfer_CfnConnectorProps, aws_cdk_lib_aws_transfer_CfnConnector, aws_cdk_lib_aws_transfer_CfnConnector_As2ConfigProperty, aws_cdk_lib_aws_transfer_CfnProfileProps, aws_cdk_lib_aws_transfer_CfnProfile, aws_cdk_lib_aws_transfer_CfnServerProps, aws_cdk_lib_aws_transfer_CfnServer, aws_cdk_lib_aws_transfer_CfnServer_EndpointDetailsProperty, aws_cdk_lib_aws_transfer_CfnServer_IdentityProviderDetailsProperty, aws_cdk_lib_aws_transfer_CfnServer_ProtocolDetailsProperty, aws_cdk_lib_aws_transfer_CfnServer_WorkflowDetailProperty, aws_cdk_lib_aws_transfer_CfnServer_WorkflowDetailsProperty, aws_cdk_lib_aws_transfer_CfnUserProps, aws_cdk_lib_aws_transfer_CfnUser, aws_cdk_lib_aws_transfer_CfnUser_HomeDirectoryMapEntryProperty, aws_cdk_lib_aws_transfer_CfnUser_PosixProfileProperty, aws_cdk_lib_aws_transfer_CfnWorkflowProps, aws_cdk_lib_aws_transfer_CfnWorkflow, aws_cdk_lib_aws_transfer_CfnWorkflow_CopyStepDetailsProperty, aws_cdk_lib_aws_transfer_CfnWorkflow_CustomStepDetailsProperty, aws_cdk_lib_aws_transfer_CfnWorkflow_DecryptStepDetailsProperty, aws_cdk_lib_aws_transfer_CfnWorkflow_DeleteStepDetailsProperty, aws_cdk_lib_aws_transfer_CfnWorkflow_EfsInputFileLocationProperty, aws_cdk_lib_aws_transfer_CfnWorkflow_InputFileLocationProperty, aws_cdk_lib_aws_transfer_CfnWorkflow_S3FileLocationProperty, aws_cdk_lib_aws_transfer_CfnWorkflow_S3InputFileLocationProperty, aws_cdk_lib_aws_transfer_CfnWorkflow_S3TagProperty, aws_cdk_lib_aws_transfer_CfnWorkflow_TagStepDetailsProperty, aws_cdk_lib_aws_transfer_CfnWorkflow_WorkflowStepProperty, aws_cdk_lib_aws_voiceid_CfnDomainProps, aws_cdk_lib_aws_voiceid_CfnDomain, aws_cdk_lib_aws_voiceid_CfnDomain_ServerSideEncryptionConfigurationProperty, aws_cdk_lib_aws_vpclattice_CfnAccessLogSubscriptionProps, aws_cdk_lib_aws_vpclattice_CfnAccessLogSubscription, aws_cdk_lib_aws_vpclattice_CfnAuthPolicyProps, aws_cdk_lib_aws_vpclattice_CfnAuthPolicy, aws_cdk_lib_aws_vpclattice_CfnListenerProps, aws_cdk_lib_aws_vpclattice_CfnListener, aws_cdk_lib_aws_vpclattice_CfnListener_DefaultActionProperty, aws_cdk_lib_aws_vpclattice_CfnListener_ForwardProperty, aws_cdk_lib_aws_vpclattice_CfnListener_WeightedTargetGroupProperty, aws_cdk_lib_aws_vpclattice_CfnResourcePolicyProps, aws_cdk_lib_aws_vpclattice_CfnResourcePolicy, aws_cdk_lib_aws_vpclattice_CfnRuleProps, aws_cdk_lib_aws_vpclattice_CfnRule, aws_cdk_lib_aws_vpclattice_CfnRule_ActionProperty, aws_cdk_lib_aws_vpclattice_CfnRule_ForwardProperty, aws_cdk_lib_aws_vpclattice_CfnRule_HeaderMatchProperty, aws_cdk_lib_aws_vpclattice_CfnRule_HeaderMatchTypeProperty, aws_cdk_lib_aws_vpclattice_CfnRule_HttpMatchProperty, aws_cdk_lib_aws_vpclattice_CfnRule_MatchProperty, aws_cdk_lib_aws_vpclattice_CfnRule_PathMatchProperty, aws_cdk_lib_aws_vpclattice_CfnRule_PathMatchTypeProperty, aws_cdk_lib_aws_vpclattice_CfnRule_WeightedTargetGroupProperty, aws_cdk_lib_aws_vpclattice_CfnServiceProps, aws_cdk_lib_aws_vpclattice_CfnService, aws_cdk_lib_aws_vpclattice_CfnService_DnsEntryProperty, aws_cdk_lib_aws_vpclattice_CfnServiceNetworkProps, aws_cdk_lib_aws_vpclattice_CfnServiceNetwork, aws_cdk_lib_aws_vpclattice_CfnServiceNetworkServiceAssociationProps, aws_cdk_lib_aws_vpclattice_CfnServiceNetworkServiceAssociation, aws_cdk_lib_aws_vpclattice_CfnServiceNetworkServiceAssociation_DnsEntryProperty, aws_cdk_lib_aws_vpclattice_CfnServiceNetworkVpcAssociationProps, aws_cdk_lib_aws_vpclattice_CfnServiceNetworkVpcAssociation, aws_cdk_lib_aws_vpclattice_CfnTargetGroupProps, aws_cdk_lib_aws_vpclattice_CfnTargetGroup, aws_cdk_lib_aws_vpclattice_CfnTargetGroup_HealthCheckConfigProperty, aws_cdk_lib_aws_vpclattice_CfnTargetGroup_MatcherProperty, aws_cdk_lib_aws_vpclattice_CfnTargetGroup_TargetProperty, aws_cdk_lib_aws_vpclattice_CfnTargetGroup_TargetGroupConfigProperty, aws_cdk_lib_aws_waf_CfnByteMatchSetProps, aws_cdk_lib_aws_waf_CfnByteMatchSet, aws_cdk_lib_aws_waf_CfnByteMatchSet_ByteMatchTupleProperty, aws_cdk_lib_aws_waf_CfnByteMatchSet_FieldToMatchProperty, aws_cdk_lib_aws_waf_CfnIPSetProps, aws_cdk_lib_aws_waf_CfnIPSet, aws_cdk_lib_aws_waf_CfnIPSet_IPSetDescriptorProperty, aws_cdk_lib_aws_waf_CfnRuleProps, aws_cdk_lib_aws_waf_CfnRule, aws_cdk_lib_aws_waf_CfnRule_PredicateProperty, aws_cdk_lib_aws_waf_CfnSizeConstraintSetProps, aws_cdk_lib_aws_waf_CfnSizeConstraintSet, aws_cdk_lib_aws_waf_CfnSizeConstraintSet_FieldToMatchProperty, aws_cdk_lib_aws_waf_CfnSizeConstraintSet_SizeConstraintProperty, aws_cdk_lib_aws_waf_CfnSqlInjectionMatchSetProps, aws_cdk_lib_aws_waf_CfnSqlInjectionMatchSet, aws_cdk_lib_aws_waf_CfnSqlInjectionMatchSet_FieldToMatchProperty, aws_cdk_lib_aws_waf_CfnSqlInjectionMatchSet_SqlInjectionMatchTupleProperty, aws_cdk_lib_aws_waf_CfnWebACLProps, aws_cdk_lib_aws_waf_CfnWebACL, aws_cdk_lib_aws_waf_CfnWebACL_ActivatedRuleProperty, aws_cdk_lib_aws_waf_CfnWebACL_WafActionProperty, aws_cdk_lib_aws_waf_CfnXssMatchSetProps, aws_cdk_lib_aws_waf_CfnXssMatchSet, aws_cdk_lib_aws_waf_CfnXssMatchSet_FieldToMatchProperty, aws_cdk_lib_aws_waf_CfnXssMatchSet_XssMatchTupleProperty, aws_cdk_lib_aws_wafregional_CfnByteMatchSetProps, aws_cdk_lib_aws_wafregional_CfnByteMatchSet, aws_cdk_lib_aws_wafregional_CfnByteMatchSet_ByteMatchTupleProperty, aws_cdk_lib_aws_wafregional_CfnByteMatchSet_FieldToMatchProperty, aws_cdk_lib_aws_wafregional_CfnGeoMatchSetProps, aws_cdk_lib_aws_wafregional_CfnGeoMatchSet, aws_cdk_lib_aws_wafregional_CfnGeoMatchSet_GeoMatchConstraintProperty, aws_cdk_lib_aws_wafregional_CfnIPSetProps, aws_cdk_lib_aws_wafregional_CfnIPSet, aws_cdk_lib_aws_wafregional_CfnIPSet_IPSetDescriptorProperty, aws_cdk_lib_aws_wafregional_CfnRateBasedRuleProps, aws_cdk_lib_aws_wafregional_CfnRateBasedRule, aws_cdk_lib_aws_wafregional_CfnRateBasedRule_PredicateProperty, aws_cdk_lib_aws_wafregional_CfnRegexPatternSetProps, aws_cdk_lib_aws_wafregional_CfnRegexPatternSet, aws_cdk_lib_aws_wafregional_CfnRuleProps, aws_cdk_lib_aws_wafregional_CfnRule, aws_cdk_lib_aws_wafregional_CfnRule_PredicateProperty, aws_cdk_lib_aws_wafregional_CfnSizeConstraintSetProps, aws_cdk_lib_aws_wafregional_CfnSizeConstraintSet, aws_cdk_lib_aws_wafregional_CfnSizeConstraintSet_FieldToMatchProperty, aws_cdk_lib_aws_wafregional_CfnSizeConstraintSet_SizeConstraintProperty, aws_cdk_lib_aws_wafregional_CfnSqlInjectionMatchSetProps, aws_cdk_lib_aws_wafregional_CfnSqlInjectionMatchSet, aws_cdk_lib_aws_wafregional_CfnSqlInjectionMatchSet_FieldToMatchProperty, aws_cdk_lib_aws_wafregional_CfnSqlInjectionMatchSet_SqlInjectionMatchTupleProperty, aws_cdk_lib_aws_wafregional_CfnWebACLProps, aws_cdk_lib_aws_wafregional_CfnWebACL, aws_cdk_lib_aws_wafregional_CfnWebACL_ActionProperty, aws_cdk_lib_aws_wafregional_CfnWebACL_RuleProperty, aws_cdk_lib_aws_wafregional_CfnWebACLAssociationProps, aws_cdk_lib_aws_wafregional_CfnWebACLAssociation, aws_cdk_lib_aws_wafregional_CfnXssMatchSetProps, aws_cdk_lib_aws_wafregional_CfnXssMatchSet, aws_cdk_lib_aws_wafregional_CfnXssMatchSet_FieldToMatchProperty, aws_cdk_lib_aws_wafregional_CfnXssMatchSet_XssMatchTupleProperty, aws_cdk_lib_aws_wafv2_CfnIPSetProps, aws_cdk_lib_aws_wafv2_CfnIPSet, aws_cdk_lib_aws_wafv2_CfnLoggingConfigurationProps, aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration, aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_ActionConditionProperty, aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_ConditionProperty, aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_FieldToMatchProperty, aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_FilterProperty, aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_JsonBodyProperty, aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_LabelNameConditionProperty, aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_LoggingFilterProperty, aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_MatchPatternProperty, aws_cdk_lib_aws_wafv2_CfnLoggingConfiguration_SingleHeaderProperty, aws_cdk_lib_aws_wafv2_CfnRegexPatternSetProps, aws_cdk_lib_aws_wafv2_CfnRegexPatternSet, aws_cdk_lib_aws_wafv2_CfnRuleGroupProps, aws_cdk_lib_aws_wafv2_CfnRuleGroup, aws_cdk_lib_aws_wafv2_CfnRuleGroup_AllowProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_AndStatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_BlockProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_BodyProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_ByteMatchStatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_CaptchaProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_CaptchaConfigProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_ChallengeProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_ChallengeConfigProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_CookieMatchPatternProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_CookiesProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_CountProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_CustomHTTPHeaderProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_CustomRequestHandlingProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_CustomResponseProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_CustomResponseBodyProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_FieldToMatchProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_ForwardedIPConfigurationProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_GeoMatchStatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_HeaderMatchPatternProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_HeadersProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_IPSetForwardedIPConfigurationProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_IPSetReferenceStatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_ImmunityTimePropertyProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_JsonBodyProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_JsonMatchPatternProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_LabelProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_LabelMatchStatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_LabelSummaryProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_NotStatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_OrStatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_RateBasedStatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_RegexMatchStatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_RegexPatternSetReferenceStatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_RuleProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_RuleActionProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_SingleHeaderProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_SingleQueryArgumentProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_SizeConstraintStatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_SqliMatchStatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_StatementProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_TextTransformationProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_VisibilityConfigProperty, aws_cdk_lib_aws_wafv2_CfnRuleGroup_XssMatchStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACLProps, aws_cdk_lib_aws_wafv2_CfnWebACL, aws_cdk_lib_aws_wafv2_CfnWebACL_AWSManagedRulesATPRuleSetProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_AWSManagedRulesBotControlRuleSetProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_AllowActionProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_AndStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_BlockActionProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_BodyProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ByteMatchStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_CaptchaActionProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_CaptchaConfigProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ChallengeActionProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ChallengeConfigProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_CookieMatchPatternProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_CookiesProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_CountActionProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_CustomHTTPHeaderProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_CustomRequestHandlingProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_CustomResponseProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_CustomResponseBodyProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_DefaultActionProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ExcludedRuleProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_FieldIdentifierProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_FieldToMatchProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ForwardedIPConfigurationProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_GeoMatchStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_HeaderMatchPatternProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_HeadersProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_IPSetForwardedIPConfigurationProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_IPSetReferenceStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ImmunityTimePropertyProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_JsonBodyProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_JsonMatchPatternProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_LabelProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_LabelMatchStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ManagedRuleGroupConfigProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ManagedRuleGroupStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_NotStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_OrStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_OverrideActionProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_RateBasedStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_RegexMatchStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_RegexPatternSetReferenceStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_RequestInspectionProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ResponseInspectionProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ResponseInspectionBodyContainsProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ResponseInspectionHeaderProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ResponseInspectionJsonProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_ResponseInspectionStatusCodeProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_RuleProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_RuleActionProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_RuleActionOverrideProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_RuleGroupReferenceStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_SingleHeaderProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_SingleQueryArgumentProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_SizeConstraintStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_SqliMatchStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_StatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_TextTransformationProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_VisibilityConfigProperty, aws_cdk_lib_aws_wafv2_CfnWebACL_XssMatchStatementProperty, aws_cdk_lib_aws_wafv2_CfnWebACLAssociationProps, aws_cdk_lib_aws_wafv2_CfnWebACLAssociation, aws_cdk_lib_aws_wisdom_CfnAssistantProps, aws_cdk_lib_aws_wisdom_CfnAssistant, aws_cdk_lib_aws_wisdom_CfnAssistant_ServerSideEncryptionConfigurationProperty, aws_cdk_lib_aws_wisdom_CfnAssistantAssociationProps, aws_cdk_lib_aws_wisdom_CfnAssistantAssociation, aws_cdk_lib_aws_wisdom_CfnAssistantAssociation_AssociationDataProperty, aws_cdk_lib_aws_wisdom_CfnKnowledgeBaseProps, aws_cdk_lib_aws_wisdom_CfnKnowledgeBase, aws_cdk_lib_aws_wisdom_CfnKnowledgeBase_AppIntegrationsConfigurationProperty, aws_cdk_lib_aws_wisdom_CfnKnowledgeBase_RenderingConfigurationProperty, aws_cdk_lib_aws_wisdom_CfnKnowledgeBase_ServerSideEncryptionConfigurationProperty, aws_cdk_lib_aws_wisdom_CfnKnowledgeBase_SourceConfigurationProperty, aws_cdk_lib_aws_workspaces_CfnConnectionAliasProps, aws_cdk_lib_aws_workspaces_CfnConnectionAlias, aws_cdk_lib_aws_workspaces_CfnConnectionAlias_ConnectionAliasAssociationProperty, aws_cdk_lib_aws_workspaces_CfnWorkspaceProps, aws_cdk_lib_aws_workspaces_CfnWorkspace, aws_cdk_lib_aws_workspaces_CfnWorkspace_WorkspacePropertiesProperty, aws_cdk_lib_aws_xray_CfnGroupProps, aws_cdk_lib_aws_xray_CfnGroup, aws_cdk_lib_aws_xray_CfnGroup_InsightsConfigurationProperty, aws_cdk_lib_aws_xray_CfnGroup_TagsItemsProperty, aws_cdk_lib_aws_xray_CfnResourcePolicyProps, aws_cdk_lib_aws_xray_CfnResourcePolicy, aws_cdk_lib_aws_xray_CfnSamplingRuleProps, aws_cdk_lib_aws_xray_CfnSamplingRule, aws_cdk_lib_aws_xray_CfnSamplingRule_SamplingRuleProperty, aws_cdk_lib_aws_xray_CfnSamplingRule_SamplingRuleRecordProperty, aws_cdk_lib_aws_xray_CfnSamplingRule_SamplingRuleUpdateProperty, aws_cdk_lib_aws_xray_CfnSamplingRule_TagsItemsProperty, aws_cdk_lib_cloud_assembly_schema_ArtifactType, aws_cdk_lib_cloud_assembly_schema_RuntimeInfo, aws_cdk_lib_cloud_assembly_schema_MissingContext, aws_cdk_lib_cloud_assembly_schema_ArtifactManifest, aws_cdk_lib_cloud_assembly_schema_AssemblyManifest, aws_cdk_lib_cloud_assembly_schema_FileAssetMetadataEntry, aws_cdk_lib_cloud_assembly_schema_Tag, aws_cdk_lib_cloud_assembly_schema_ContainerImageAssetCacheOption, aws_cdk_lib_cloud_assembly_schema_ContainerImageAssetMetadataEntry, aws_cdk_lib_cloud_assembly_schema_ArtifactMetadataEntryType, aws_cdk_lib_cloud_assembly_schema_MetadataEntry, aws_cdk_lib_cloud_assembly_schema_BootstrapRole, aws_cdk_lib_cloud_assembly_schema_AwsCloudFormationStackProperties, aws_cdk_lib_cloud_assembly_schema_AssetManifestOptions, aws_cdk_lib_cloud_assembly_schema_AssetManifestProperties, aws_cdk_lib_cloud_assembly_schema_TreeArtifactProperties, aws_cdk_lib_cloud_assembly_schema_NestedCloudAssemblyProperties, aws_cdk_lib_cloud_assembly_schema_ContextProvider, aws_cdk_lib_cloud_assembly_schema_AmiContextQuery, aws_cdk_lib_cloud_assembly_schema_AvailabilityZonesContextQuery, aws_cdk_lib_cloud_assembly_schema_HostedZoneContextQuery, aws_cdk_lib_cloud_assembly_schema_SSMParameterContextQuery, aws_cdk_lib_cloud_assembly_schema_VpcContextQuery, aws_cdk_lib_cloud_assembly_schema_EndpointServiceAvailabilityZonesContextQuery, aws_cdk_lib_cloud_assembly_schema_LoadBalancerType, aws_cdk_lib_cloud_assembly_schema_LoadBalancerFilter, aws_cdk_lib_cloud_assembly_schema_LoadBalancerContextQuery, aws_cdk_lib_cloud_assembly_schema_LoadBalancerListenerProtocol, aws_cdk_lib_cloud_assembly_schema_LoadBalancerListenerContextQuery, aws_cdk_lib_cloud_assembly_schema_SecurityGroupContextQuery, aws_cdk_lib_cloud_assembly_schema_KeyContextQuery, aws_cdk_lib_cloud_assembly_schema_PluginContextQuery, aws_cdk_lib_cloud_assembly_schema_AssetManifest, aws_cdk_lib_cloud_assembly_schema_DockerImageAsset, aws_cdk_lib_cloud_assembly_schema_DockerImageSource, aws_cdk_lib_cloud_assembly_schema_DockerImageDestination, aws_cdk_lib_cloud_assembly_schema_DockerCacheOption, aws_cdk_lib_cloud_assembly_schema_FileAsset, aws_cdk_lib_cloud_assembly_schema_FileAssetPackaging, aws_cdk_lib_cloud_assembly_schema_FileSource, aws_cdk_lib_cloud_assembly_schema_FileDestination, aws_cdk_lib_cloud_assembly_schema_AwsDestination, aws_cdk_lib_cloud_assembly_schema_LoadManifestOptions, aws_cdk_lib_cloud_assembly_schema_Manifest, aws_cdk_lib_cloud_assembly_schema_IntegManifest, aws_cdk_lib_cloud_assembly_schema_RequireApproval, aws_cdk_lib_cloud_assembly_schema_DefaultCdkOptions, aws_cdk_lib_cloud_assembly_schema_DeployOptions, aws_cdk_lib_cloud_assembly_schema_DestroyOptions, aws_cdk_lib_cloud_assembly_schema_TestOptions, aws_cdk_lib_cloud_assembly_schema_TestCase, aws_cdk_lib_cloud_assembly_schema_Hooks, aws_cdk_lib_cloud_assembly_schema_CdkCommand, aws_cdk_lib_cloud_assembly_schema_DeployCommand, aws_cdk_lib_cloud_assembly_schema_DestroyCommand, aws_cdk_lib_cloud_assembly_schema_CdkCommands, aws_cdk_lib_cloudformation_include_CfnIncludeProps, aws_cdk_lib_cloudformation_include_IncludedNestedStack, aws_cdk_lib_cloudformation_include_CfnInclude, aws_cdk_lib_custom_resources_PhysicalResourceIdReference, aws_cdk_lib_custom_resources_PhysicalResourceId, aws_cdk_lib_custom_resources_AwsSdkCall, aws_cdk_lib_custom_resources_SdkCallsPolicyOptions, aws_cdk_lib_custom_resources_AwsCustomResourcePolicy, aws_cdk_lib_custom_resources_AwsCustomResourceProps, aws_cdk_lib_custom_resources_AwsCustomResource, aws_cdk_lib_custom_resources_ProviderProps, aws_cdk_lib_custom_resources_Provider, aws_cdk_lib_cx_api_VpcSubnetGroupType, aws_cdk_lib_cx_api_VpcSubnet, aws_cdk_lib_cx_api_VpcSubnetGroup, aws_cdk_lib_cx_api_VpcContextResponse, aws_cdk_lib_cx_api_LoadBalancerIpAddressType, aws_cdk_lib_cx_api_LoadBalancerContextResponse, aws_cdk_lib_cx_api_LoadBalancerListenerContextResponse, aws_cdk_lib_cx_api_EndpointServiceAvailabilityZonesContextQuery, aws_cdk_lib_cx_api_SecurityGroupContextResponse, aws_cdk_lib_cx_api_KeyContextResponse, aws_cdk_lib_cx_api_AwsCloudFormationStackProperties, aws_cdk_lib_cx_api_CloudArtifact, aws_cdk_lib_cx_api_AssetManifestArtifact, aws_cdk_lib_cx_api_CloudFormationStackArtifact, aws_cdk_lib_cx_api_TreeCloudArtifact, aws_cdk_lib_cx_api_NestedCloudAssemblyArtifact, aws_cdk_lib_cx_api_CloudAssembly, aws_cdk_lib_cx_api_CloudAssemblyBuilderProps, aws_cdk_lib_cx_api_CloudAssemblyBuilder, aws_cdk_lib_cx_api_AssemblyBuildOptions, aws_cdk_lib_cx_api_Environment, aws_cdk_lib_cx_api_EnvironmentUtils, aws_cdk_lib_cx_api_SynthesisMessageLevel, aws_cdk_lib_cx_api_MetadataEntryResult, aws_cdk_lib_cx_api_SynthesisMessage, aws_cdk_lib_cx_api_EnvironmentPlaceholders, aws_cdk_lib_cx_api_EnvironmentPlaceholderValues, aws_cdk_lib_cx_api_IEnvironmentPlaceholderProvider, aws_cdk_lib_lambda_layer_awscli_AwsCliLayer, aws_cdk_lib_lambda_layer_kubectl_KubectlLayer, aws_cdk_lib_lambda_layer_node_proxy_agent_NodeProxyAgentLayer, aws_cdk_lib_pipelines_AssetType, aws_cdk_lib_pipelines_FileSet, aws_cdk_lib_pipelines_IFileSetProducer, aws_cdk_lib_pipelines_ShellStepProps, aws_cdk_lib_pipelines_ShellStep, aws_cdk_lib_pipelines_FileSetLocation, aws_cdk_lib_pipelines_StackOutputReference, aws_cdk_lib_pipelines_StackDeploymentProps, aws_cdk_lib_pipelines_StackDeployment, aws_cdk_lib_pipelines_StackAsset, aws_cdk_lib_pipelines_StageDeploymentProps, aws_cdk_lib_pipelines_StageDeployment, aws_cdk_lib_pipelines_Step, aws_cdk_lib_pipelines_StackSteps, aws_cdk_lib_pipelines_WaveProps, aws_cdk_lib_pipelines_Wave, aws_cdk_lib_pipelines_AddStageOpts, aws_cdk_lib_pipelines_WaveOptions, aws_cdk_lib_pipelines_ManualApprovalStepProps, aws_cdk_lib_pipelines_ManualApprovalStep, aws_cdk_lib_pipelines_ArtifactMap, aws_cdk_lib_pipelines_CodePipelineFileSet, aws_cdk_lib_pipelines_CodeBuildStepProps, aws_cdk_lib_pipelines_CodeBuildStep, aws_cdk_lib_pipelines_PermissionsBroadeningCheckProps, aws_cdk_lib_pipelines_ConfirmPermissionsBroadening, aws_cdk_lib_pipelines_CodePipelineProps, aws_cdk_lib_pipelines_CodeBuildOptions, aws_cdk_lib_pipelines_CodePipeline, aws_cdk_lib_pipelines_ProduceActionOptions, aws_cdk_lib_pipelines_ICodePipelineActionFactory, aws_cdk_lib_pipelines_CodePipelineActionFactoryResult, aws_cdk_lib_pipelines_CodePipelineSource, aws_cdk_lib_pipelines_GitHubSourceOptions, aws_cdk_lib_pipelines_S3SourceOptions, aws_cdk_lib_pipelines_ECRSourceOptions, aws_cdk_lib_pipelines_ConnectionSourceOptions, aws_cdk_lib_pipelines_CodeCommitSourceOptions, aws_cdk_lib_pipelines_StackOutputsMap, aws_cdk_lib_pipelines_PipelineBaseProps, aws_cdk_lib_pipelines_PipelineBase, aws_cdk_lib_pipelines_DockerCredential, aws_cdk_lib_pipelines_ExternalDockerCredentialOptions, aws_cdk_lib_pipelines_EcrDockerCredentialOptions, aws_cdk_lib_pipelines_DockerCredentialUsage, aws_cdk_lib_region_info_Default, aws_cdk_lib_region_info_Fact, aws_cdk_lib_region_info_IFact, aws_cdk_lib_region_info_FactName, aws_cdk_lib_region_info_RegionInfo, aws_cdk_lib_triggers_ITrigger, aws_cdk_lib_triggers_TriggerOptions, aws_cdk_lib_triggers_InvocationType, aws_cdk_lib_triggers_TriggerProps, aws_cdk_lib_triggers_Trigger, aws_cdk_lib_triggers_TriggerInvalidation, aws_cdk_lib_triggers_TriggerFunctionProps, aws_cdk_lib_triggers_TriggerFunction, aws_cdk_lib_IAspect, aws_cdk_lib_Aspects, aws_cdk_lib_TagProps, aws_cdk_lib_Tag, aws_cdk_lib_Tags, aws_cdk_lib_RemoveTag, aws_cdk_lib_TokenComparison, aws_cdk_lib_Token, aws_cdk_lib_Tokenization, aws_cdk_lib_JsonNull, aws_cdk_lib_ReverseOptions, aws_cdk_lib_ResolveOptions, aws_cdk_lib_EncodingOptions, aws_cdk_lib_IResolveContext, aws_cdk_lib_ResolveChangeContextOptions, aws_cdk_lib_IResolvable, aws_cdk_lib_IPostProcessor, aws_cdk_lib_ITokenResolver, aws_cdk_lib_IFragmentConcatenator, aws_cdk_lib_StringConcat, aws_cdk_lib_DefaultTokenResolver, aws_cdk_lib_ResolutionTypeHint, aws_cdk_lib_IStringProducer, aws_cdk_lib_IStableStringProducer, aws_cdk_lib_IListProducer, aws_cdk_lib_IStableListProducer, aws_cdk_lib_INumberProducer, aws_cdk_lib_IStableNumberProducer, aws_cdk_lib_IAnyProducer, aws_cdk_lib_IStableAnyProducer, aws_cdk_lib_LazyStringValueOptions, aws_cdk_lib_LazyListValueOptions, aws_cdk_lib_LazyAnyValueOptions, aws_cdk_lib_Lazy, aws_cdk_lib_ITaggable, aws_cdk_lib_TagManagerOptions, aws_cdk_lib_TagManager, aws_cdk_lib_TokenizedStringFragments, aws_cdk_lib_ITokenMapper, aws_cdk_lib_IStackSynthesizer, aws_cdk_lib_IReusableStackSynthesizer, aws_cdk_lib_IBoundStackSynthesizer, aws_cdk_lib_ISynthesisSession, aws_cdk_lib_DefaultStackSynthesizerProps, aws_cdk_lib_DefaultStackSynthesizer, aws_cdk_lib_LegacyStackSynthesizer, aws_cdk_lib_BootstraplessSynthesizerProps, aws_cdk_lib_BootstraplessSynthesizer, aws_cdk_lib_NestedStackSynthesizer, aws_cdk_lib_StackSynthesizer, aws_cdk_lib_SynthesizeStackArtifactOptions, aws_cdk_lib_CliCredentialsStackSynthesizerProps, aws_cdk_lib_CliCredentialsStackSynthesizer, aws_cdk_lib_AssetManifestBuilder, aws_cdk_lib_AssetManifestFileDestination, aws_cdk_lib_AssetManifestDockerImageDestination, aws_cdk_lib_RoleOptions, aws_cdk_lib_Reference, aws_cdk_lib_CfnConditionProps, aws_cdk_lib_CfnCondition, aws_cdk_lib_ICfnConditionExpression, aws_cdk_lib_ICfnRuleConditionExpression, aws_cdk_lib_Fn, aws_cdk_lib_CfnHookProps, aws_cdk_lib_CfnHook, aws_cdk_lib_CfnTrafficRoutingType, aws_cdk_lib_CfnTrafficRoutingTimeBasedCanary, aws_cdk_lib_CfnTrafficRoutingTimeBasedLinear, aws_cdk_lib_CfnTrafficRoutingConfig, aws_cdk_lib_CfnCodeDeployBlueGreenAdditionalOptions, aws_cdk_lib_CfnCodeDeployBlueGreenLifecycleEventHooks, aws_cdk_lib_CfnCodeDeployBlueGreenApplicationTarget, aws_cdk_lib_CfnTrafficRoute, aws_cdk_lib_CfnTrafficRouting, aws_cdk_lib_CfnCodeDeployBlueGreenEcsAttributes, aws_cdk_lib_CfnCodeDeployBlueGreenApplication, aws_cdk_lib_CfnCodeDeployBlueGreenHookProps, aws_cdk_lib_CfnCodeDeployBlueGreenHook, aws_cdk_lib_CfnMappingProps, aws_cdk_lib_CfnMapping, aws_cdk_lib_CfnOutputProps, aws_cdk_lib_CfnOutput, aws_cdk_lib_CfnParameterProps, aws_cdk_lib_CfnParameter, aws_cdk_lib_Aws, aws_cdk_lib_ScopedAws, aws_cdk_lib_CfnResourceProps, aws_cdk_lib_CfnResource, aws_cdk_lib_TagType, aws_cdk_lib_ICfnResourceOptions, aws_cdk_lib_CfnCreationPolicy, aws_cdk_lib_CfnResourceAutoScalingCreationPolicy, aws_cdk_lib_CfnResourceSignal, aws_cdk_lib_CfnDeletionPolicy, aws_cdk_lib_CfnUpdatePolicy, aws_cdk_lib_CfnAutoScalingRollingUpdate, aws_cdk_lib_CfnAutoScalingReplacingUpdate, aws_cdk_lib_CfnAutoScalingScheduledAction, aws_cdk_lib_CfnCodeDeployLambdaAliasUpdate, aws_cdk_lib_CfnRuleProps, aws_cdk_lib_CfnRule, aws_cdk_lib_CfnRuleAssertion, aws_cdk_lib_StackProps, aws_cdk_lib_Stack, aws_cdk_lib_ITemplateOptions, aws_cdk_lib_ExportValueOptions, aws_cdk_lib_StageProps, aws_cdk_lib_Stage, aws_cdk_lib_StageSynthesisOptions, aws_cdk_lib_CfnElement, aws_cdk_lib_CfnRefElement, aws_cdk_lib_CfnDynamicReferenceProps, aws_cdk_lib_CfnDynamicReference, aws_cdk_lib_CfnDynamicReferenceService, aws_cdk_lib_CfnTag, aws_cdk_lib_CfnJsonProps, aws_cdk_lib_CfnJson, aws_cdk_lib_RemovalPolicy, aws_cdk_lib_RemovalPolicyOptions, aws_cdk_lib_ArnFormat, aws_cdk_lib_ArnComponents, aws_cdk_lib_Arn, aws_cdk_lib_Duration, aws_cdk_lib_TimeConversionOptions, aws_cdk_lib_Expiration, aws_cdk_lib_Size, aws_cdk_lib_SizeRoundingBehavior, aws_cdk_lib_SizeConversionOptions, aws_cdk_lib_AppProps, aws_cdk_lib_App, aws_cdk_lib_GetContextKeyOptions, aws_cdk_lib_GetContextValueOptions, aws_cdk_lib_GetContextKeyResult, aws_cdk_lib_GetContextValueResult, aws_cdk_lib_ContextProvider, aws_cdk_lib_Environment, aws_cdk_lib_Annotations, aws_cdk_lib_ValidationResult, aws_cdk_lib_ValidationResults, aws_cdk_lib_SecretValue, aws_cdk_lib_SecretsManagerSecretOptions, aws_cdk_lib_ResourceEnvironment, aws_cdk_lib_IResource, aws_cdk_lib_ResourceProps, aws_cdk_lib_Resource, aws_cdk_lib_PhysicalName, aws_cdk_lib_IAsset, aws_cdk_lib_AssetOptions, aws_cdk_lib_AssetHashType, aws_cdk_lib_FileAssetSource, aws_cdk_lib_DockerImageAssetSource, aws_cdk_lib_FileAssetPackaging, aws_cdk_lib_FileAssetLocation, aws_cdk_lib_DockerImageAssetLocation, aws_cdk_lib_DockerCacheOption, aws_cdk_lib_TreeInspector, aws_cdk_lib_IInspectable, aws_cdk_lib_AssetStagingProps, aws_cdk_lib_AssetStaging, aws_cdk_lib_DockerBuildSecret, aws_cdk_lib_BundlingOptions, aws_cdk_lib_BundlingOutput, aws_cdk_lib_ILocalBundling, aws_cdk_lib_BundlingFileAccess, aws_cdk_lib_DockerImage, aws_cdk_lib_DockerVolume, aws_cdk_lib_DockerVolumeConsistency, aws_cdk_lib_DockerRunOptions, aws_cdk_lib_DockerBuildOptions, aws_cdk_lib_FileSystem, aws_cdk_lib_IgnoreStrategy, aws_cdk_lib_GlobIgnoreStrategy, aws_cdk_lib_GitIgnoreStrategy, aws_cdk_lib_DockerIgnoreStrategy, aws_cdk_lib_SymlinkFollowMode, aws_cdk_lib_IgnoreMode, aws_cdk_lib_CopyOptions, aws_cdk_lib_FileCopyOptions, aws_cdk_lib_FingerprintOptions, aws_cdk_lib_FileFingerprintOptions, aws_cdk_lib_CustomResourceProps, aws_cdk_lib_CustomResource, aws_cdk_lib_NestedStackProps, aws_cdk_lib_NestedStack, aws_cdk_lib_CustomResourceProviderProps, aws_cdk_lib_CustomResourceProviderRuntime, aws_cdk_lib_CustomResourceProvider, aws_cdk_lib_CfnCapabilities, aws_cdk_lib_CfnCustomResourceProps, aws_cdk_lib_CfnCustomResource, aws_cdk_lib_CfnHookDefaultVersionProps, aws_cdk_lib_CfnHookDefaultVersion, aws_cdk_lib_CfnHookTypeConfigProps, aws_cdk_lib_CfnHookTypeConfig, aws_cdk_lib_CfnHookVersionProps, aws_cdk_lib_CfnHookVersion, aws_cdk_lib_CfnHookVersion_LoggingConfigProperty, aws_cdk_lib_CfnMacroProps, aws_cdk_lib_CfnMacro, aws_cdk_lib_CfnModuleDefaultVersionProps, aws_cdk_lib_CfnModuleDefaultVersion, aws_cdk_lib_CfnModuleVersionProps, aws_cdk_lib_CfnModuleVersion, aws_cdk_lib_CfnPublicTypeVersionProps, aws_cdk_lib_CfnPublicTypeVersion, aws_cdk_lib_CfnPublisherProps, aws_cdk_lib_CfnPublisher, aws_cdk_lib_CfnResourceDefaultVersionProps, aws_cdk_lib_CfnResourceDefaultVersion, aws_cdk_lib_CfnResourceVersionProps, aws_cdk_lib_CfnResourceVersion, aws_cdk_lib_CfnResourceVersion_LoggingConfigProperty, aws_cdk_lib_CfnStackProps, aws_cdk_lib_CfnStack, aws_cdk_lib_CfnStackSetProps, aws_cdk_lib_CfnStackSet, aws_cdk_lib_CfnStackSet_AutoDeploymentProperty, aws_cdk_lib_CfnStackSet_DeploymentTargetsProperty, aws_cdk_lib_CfnStackSet_ManagedExecutionProperty, aws_cdk_lib_CfnStackSet_OperationPreferencesProperty, aws_cdk_lib_CfnStackSet_ParameterProperty, aws_cdk_lib_CfnStackSet_StackInstancesProperty, aws_cdk_lib_CfnTypeActivationProps, aws_cdk_lib_CfnTypeActivation, aws_cdk_lib_CfnTypeActivation_LoggingConfigProperty, aws_cdk_lib_CfnWaitConditionProps, aws_cdk_lib_CfnWaitCondition, aws_cdk_lib_CfnWaitConditionHandle, aws_cdk_lib_FeatureFlags, aws_cdk_lib_PermissionsBoundaryBindOptions, aws_cdk_lib_PermissionsBoundary, aws_cdk_lib_IPolicyValidationPluginBeta1, aws_cdk_lib_IPolicyValidationContextBeta1, aws_cdk_lib_PolicyViolationBeta1, aws_cdk_lib_PolicyViolatingResourceBeta1, aws_cdk_lib_PolicyValidationReportStatusBeta1, aws_cdk_lib_PolicyValidationPluginReportBeta1, aws_cdk_lib_IntrinsicProps, aws_cdk_lib_Intrinsic, aws_cdk_lib_UniqueResourceNameOptions, aws_cdk_lib_Names, aws_cdk_lib_TimeZone };
