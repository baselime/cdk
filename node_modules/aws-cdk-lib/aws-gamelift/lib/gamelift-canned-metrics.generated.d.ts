export declare class GameLiftMetrics {
    static activeInstancesAverage(dimensions: {
        FleetId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FleetId: string;
        };
        statistic: string;
    };
    static percentIdleInstancesAverage(dimensions: {
        FleetId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FleetId: string;
        };
        statistic: string;
    };
    static desiredInstancesAverage(dimensions: {
        FleetId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FleetId: string;
        };
        statistic: string;
    };
    static idleInstancesAverage(dimensions: {
        FleetId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FleetId: string;
        };
        statistic: string;
    };
    static maxInstancesAverage(dimensions: {
        FleetId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FleetId: string;
        };
        statistic: string;
    };
    static minInstancesAverage(dimensions: {
        FleetId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FleetId: string;
        };
        statistic: string;
    };
    static instanceInterruptionsSum(dimensions: {
        FleetId: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            FleetId: string;
        };
        statistic: string;
    };
}
